<?php

function grn420_remote_main()
{
    //////////////////////////////
    // resource update
    //////////////////////////////
    cb_export_log('Started grn420_remote_main. ', false);

    global $G_config_common;

    if ( ! defined('USE_INSTALLED_MYSQL')) {
        $is_win = (strncasecmp(php_uname('s'), 'WIN', 3) == 0);

        cb_export_log("Start update my.ini.", false);
        $mysqli_default_socket = ini_get("mysqli.default_socket");
        $mysql_dir = dirname(dirname($mysqli_default_socket));
        $mysql_etc_dir = $mysql_dir . '/etc';
        $my_ini = $mysql_etc_dir . '/my.ini';
        $data = file_get_contents($my_ini);

        if ($data !== false) {
            //Setting my.ini
            cb_export_log("Start update innodb_log_file_size.", false);
            $data = preg_replace("/innodb_log_file_size\\s*=\\s*10M.*/",
                "innodb_log_file_size = 100M", $data); //GTM-1896
            if ( ! strpos($data, "innodb_log_file_size = 100M")) {
                cb_export_log("Because value of innodb_log_file_size is not 10M, so do not update its value.",
                    false);
            }
            cb_export_log("End update innodb_log_file_size.", false);

            $new_line = "\n";
            if ($is_win) {
                $new_line = "\r\n";
            }

            $fp = fopen($my_ini, 'w');
            if ( ! $fp) {
                cb_export_log("Can not update my.ini file.", true);
            } else {
                fwrite($fp, $data);
                fclose($fp);
            }
            unset($data);
        } else {
            cb_export_log("Can not read my.ini file.", true);
        }

        cb_export_log("End update my.ini.", false);
        //end
    }

    //Start common.ini file
    cb_export_log("Start update common.ini.", false);

    cb_export_log("Start set API section.", false);
    $G_config_common->set('API', 'version', '1.6.0');
    cb_export_log("End set API section.", false);

    //start GTM-1601
    cb_export_log("Start set Logging section.", false);
    $retention_period = (int)$G_config_common->get('Logging',
        'retention_period');
    if (empty($retention_period) || $retention_period < 1) {
        //Default value
        $retention_period = 90;
    } else {
        $retention_period = $retention_period * 30;
    }
    $G_config_common->set('Logging', 'retention_period', $retention_period);
    cb_export_log("End set Logging section.", false);
    //end GTM-1601

    //start GTM-1783
    cb_export_log("Start remove COM_API section.", false);
    $G_config_common->unsetsection('COM_API');
    cb_export_log("End remove COM_API section.", false);
    //end GTM-1783

    $G_config_common->save();
    cb_export_log("End update common.ini.", false);
    //End common.ini file

    //Start garoon.ini file
    global $G_config_grn;
    cb_export_log("Start update garoon.ini.", false);

    $version = '4.2.0';
    cb_export_log("Start set Locale section.", false);
    $G_config_grn->set('System', 'version', $version);
    $G_config_grn->set('Locale', 'ja_version', $version);
    $G_config_grn->set('Locale', 'en_version', $version);
    $G_config_grn->set('Locale', 'zh_version', $version);
    cb_export_log("End set Locale section.", false);
    $G_config_grn->save();
    //end

    cb_export_log("End update garoon.ini.", false);
    //End garoon.ini file

    $grn_ini = cb_basedir() . '/grn/';
    cb_export_log("Start update 11space.ini.", false);
    $space_ini = $grn_ini . '11space.ini';
    write_ini_item($space_ini, 'version', '4.2.0');
    cb_export_log("End update 11space.ini.", false);

    cb_export_log("Start update 24mail.ini.", false);
    $mail_ini = $grn_ini . '24mail.ini';
    write_ini_item($mail_ini, 'max_auto_receive_size', '524288000');
    cb_export_log("End update 24mail.ini.", false);

    cb_export_log('Finished grn420_remote_main. ', false);
}

grn420_remote_main();
