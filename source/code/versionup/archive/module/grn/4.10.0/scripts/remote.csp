<?php
declare(strict_types=1);

function grn4_10_0_remote_main()
{
    //////////////////////////////
    // resource update
    //////////////////////////////
    cb_export_log('Started ' . __FUNCTION__ . '. ', false);

    // Start garoon.ini file
    global $G_config_grn;
    cb_export_log("Start update garoon.ini.", false);

    $version = '4.10.0';
    cb_export_log("Start set System version.", false);
    $G_config_grn->set('System', 'version', $version);
    cb_export_log("End set System version.", false);

    $G_config_grn->save();
    cb_export_log("End update garoon.ini.", false);
    // End garoon.ini file

    // Start applications ini file
    $grn_ini_dir = cb_basedir() . '/grn/';
    cb_export_log("Start update 11space.ini.", false);
    $space_ini = $grn_ini_dir . '11space.ini';
    write_ini_item($space_ini, 'version', $version);
    cb_export_log("End update 11space.ini.", false);

    if ( ! defined('USE_INSTALLED_MYSQL')) {
        $is_win = (strncasecmp(php_uname('s'), 'WIN', 3) == 0);
        $new_line = "\n";
        if ($is_win) {
            $new_line = "\r\n";
        }

        cb_export_log('Start update my.ini.', false);
        $mysqli_default_socket = ini_get('mysqli.default_socket');
        $mysql_dir = dirname(dirname($mysqli_default_socket));
        $mysql_etc_dir = $mysql_dir . '/etc';
        $my_ini = $mysql_etc_dir . '/my.ini';
        $data = file_get_contents($my_ini);
        if ($data !== false) {
            cb_export_log('Start update ssl.', false);
            $ssl_config = preg_match("/^\s*ssl*/m", $data);
            $ssl_skip_option = preg_match("/^\s*skip-ssl*/m", $data);
            $ssl_disable_option = preg_match("/^\s*disable-ssl*/m", $data);
            if ( ! $ssl_config && ! $ssl_skip_option && ! $ssl_disable_option) {
                $data = str_replace('[mysqld]', '[mysqld]' . $new_line . 'skip-ssl = true', $data);
            } else {
                cb_export_log("Because ssl is enabled or skipped, so do not need add skip-ssl option.", false);
            }

            cb_export_log('Start update table_open_cache_instances.', false);
            $has_table_open_cache_instances = preg_match("/^\s*table_open_cache_instances/m", $data);
            if ( ! $has_table_open_cache_instances) {
                $data = str_replace('[mysqld]', '[mysqld]' . $new_line . 'table_open_cache_instances = 1', $data);
            }
            cb_export_log("End update table_open_cache_instances.", false);

            cb_export_log('Start add innodb_adaptive_hash_index_parts.', false);
            $data = str_replace('[mysqld]', '[mysqld]' . $new_line . 'innodb_adaptive_hash_index_parts = 16', $data);
            cb_export_log("End add innodb_adaptive_hash_index_parts.", false);

            cb_export_log("End update ssl.", false);
            $fp = fopen($my_ini, 'w');
            if ( ! $fp) {
                cb_export_log('Can not update my.ini file.', true);
            } else {
                fwrite($fp, $data);
                fclose($fp);
            }

            unset($data);
        } else {
            cb_export_log('Can not read my.ini file.', true);
        }

        cb_export_log('End update my.ini.', false);
    }

    // Start common.ini file
    global $G_config_common;
    $default_timezone = $G_config_common->get('I18N', 'default_timezone');
    if ($default_timezone == 'Asia/Rangoon') {
        cb_export_log("Start update common.ini.", false);

        cb_export_log("Start update timezone name.", false);
        $G_config_common->set('I18N', 'default_timezone', 'Asia/Yangon');
        cb_export_log("End update timezone name.", false);

        $G_config_common->save();
        cb_export_log("End update common.ini.", false);
    }
    // End common.ini file

    cb_export_log('Finished ' . __FUNCTION__ . '. ', false);
    // End applications ini file
}

grn4_10_0_remote_main();
