<?php

error_reporting(E_ALL);
assert_options(ASSERT_ACTIVE, 1);
assert_options(ASSERT_CALLBACK,
    create_function('$file, $line, $expr',
        'cb_throw_error(E_PHP_ASSERTION, null, null, null,
array("file"=>$file, "line"=>$line, "expr"=>$expr));'));

cb_require_role('CommandLine');
cb_export_log('Started updating after installation.');

// run update after with host installed scheduling service
if (isset($argv[1])) {
    $exec_update_after = true;
} else {
    $exec_update_after = false;
}

// only execute update after script after run the local.csp script to update DB
if ($exec_update_after === true) {
    $extract_dir = cb_tmpdir() . '/update';
    $file = $extract_dir . '/update_after.ini';
    $module_base_dir = $extract_dir . '/archive/module';

    require_once('_update_after.csp');
    $updater = new CB_ModuleUpdaterAfterInstall($file);
    $updater->doUpdate($module_base_dir);
}

// remove all files of smarty cache directory
require_once('grn/smarty.csp');
$smarty = new GRN_Smarty();
$smarty->clear_compiled_tpl();
$smarty->clear_all_cache();
cb_export_log('Remove all files of smarty cache directory.');

global $G_config_common;
$save_path = $G_config_common->get('Session', 'save_path');
_removeSessionData($save_path);
cb_export_log('Remove all the session data.');

cb_export_log('Finished updating after installation.');
cb_safe_exit(0);

/////////////////////////////////////////////////////////////////////

function cb_export_log($msg, $errflg = false)
{
    // flush output 
    /*while ( ob_get_level() > 0 )
    {
        ob_end_flush();
    }
    */
    $outmsg = date("Ymd H:i:s");

    if ($errflg == true) {
        $outmsg .= ' [ERROR] ';
    } else {
        $outmsg .= ' [INFO] ';
    }

    $outmsg .= $msg . "\n";

    echo $outmsg;
    if (ob_get_level() > 0) {
        ob_flush();
    }
}

function _removeSessionData($src, $empty_only = false, $remove_src = false)
{
    $dh = @opendir($src);
    if ( ! $dh) {
        return;
    }

    while (($r = @readdir($dh)) !== false) {
        if (($r != '.') && ($r != '..')) {
            $src_child = "$src/$r";

            if (is_dir($src_child)) {
                _removeSessionData($src_child, $empty_only, true);
            } else {
                if ($empty_only === false) {
                    @unlink($src_child);
                }
            }
        }
    }

    @closedir($dh);

    if ($remove_src) {
        @rmdir($src);
    }

    return;
}


