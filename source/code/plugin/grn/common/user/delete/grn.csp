<?php
function plugin_grn_common_user_delete_grn($user_info)
{
    /*
     *  DELETE するテーブル名とカラム名を定義する。
     *  いずれも重複する可能性があるため、
     *  両者を含む連想配列を要素とする配列の構造をとる。
     *
     *
     *  tab_grn_userinfo の col_user は tab_cb_user に CASCADE で
     *  リレーションを張っているが、 GRN_Uum の deleteActualUserData
     *  の中でユーザーの画像を削除する際に必要なので、ここでは削除しない。
     */
    $cascade_tables = [
        [
            'table'  => 'access_abstractdata_prtl_myportal_user',
            'column' => 'target'
        ],
        ['table' => 'group_privilege', 'column' => 'user'],
        ['table' => 'itemuserrelation', 'column' => 'user'],
        ['table' => 'mygroup', 'column' => 'owner'],
        ['table' => 'mygroupuserrelation', 'column' => 'user'],
        ['table' => 'usercalendar', 'column' => 'user'],
    ];

    /*
     *  SET NULL するテーブル名とカラム名を定義する。
     *  いずれも重複する可能性があるため、
     *  両者を含む連想配列を要素とする配列の構造をとる。
     */
    $setnull_tables = [
        ['table' => 'file', 'column' => 'creator'],
        ['table' => 'file', 'column' => 'modifier'],
        ['table' => 'filelock', 'column' => 'lock_owner'],
        ['table' => 'filelog', 'column' => 'recorder'],
        ['table' => 'groupinfo', 'column' => 'creator'],
        ['table' => 'groupinfo', 'column' => 'modifier'],
        ['table' => 'mygroup', 'column' => 'creator'],
        ['table' => 'mygroup', 'column' => 'modifier'],
        ['table' => 'roleinfo', 'column' => 'creator'],
        ['table' => 'roleinfo', 'column' => 'modifier'],
        ['table' => 'userinfo', 'column' => 'creator'],
        ['table' => 'userinfo', 'column' => 'modifier'],
    ];

    global $G_container_base;
    $manager = $G_container_base->getInstance('table_manager');
    $table_prefix = 'grn_';

    $uid = $user_info['uid'];

    require_once('portal/access_logic.csp');
    require_once('grn/file.csp');
    require_once('grn/org_privilege.csp');
    require_once('grn/calendar.csp');
    require_once('grn/notification.csp');
    foreach ($cascade_tables as $t) {
        $table = $manager->getTableInfo($table_prefix . $t['table']);
        $table->deleteMatchedRows($t['column'], $uid);
    }

    foreach ($setnull_tables as $t) {
        $table = $manager->getTableInfo($table_prefix . $t['table']);
        $table->setNullMatchedColumns($t['column'], $uid);
    }

    $db = $manager->getDBConnection();
    $db->commit();

    require_once('grn/delete_user_logger.csp');
    $logger = GRN_DeleteUserLogger::getInstance();
    $logger->log('Deleted grn data of user "' . $user_info['login_name'] . '"');
}

