<?php
/**
 * This license is obsolete and not available to be registered to latest Garoon
 * The information for the information which had been registered can be browsed.
 */

require_once('grn/error_code.csp');
require_once('grn/license.csp');

// 新規ユーザーライセンス
class plugin_grn_common_license_51common extends GRN_LicenseLogicBase
{
    function addLicense($license_info)
    {
        cb_throw_error(E_GRN_LICENSE_DONT_REGISTER);
    }

    /**
     * ライセンス情報を取得する。
     *
     * @param array $license_info ライセンス情報
     *
     * @return array
     */
    function getPropertiesArray($license_info)
    {
        require_once('fw/date.csp');
        ///////////////////
        // ライセンス種別
        // 発行ID
        // お客様番号
        // ユーザー数
        // サービス終了日
        // サイボウズNET連携サービスユーザー数
        // サイボウズNET連携サービス終了日
        ///////////////////
        $info = [
            [
                'title' => cb_msg('grn.common.license', 'type'),
                'value' => $this->getMessage('new_license')
            ],
            [
                'title' => cb_msg('grn.common.license', 'issue'),
                'value' => $license_info['issue']
            ],
            [
                'title' => cb_msg('grn.common.license', 'customer'),
                'value' => sprintf('%06d', (int)$license_info['customer'])
            ],
            [
                'title' => cb_msg('grn.common.license', 'users'),
                'value' => $license_info['users']
            ],
            [
                'title' => $this->getMessage('service_limit'),
                'value' => cb_date_format('DateFull_YMD',
                    $license_info['limit'])
            ],
        ];

        return $info;
    }

    function getName()
    {
        return $this->getMessage('new_license');
    }
}


