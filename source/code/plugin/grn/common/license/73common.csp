<?php
/**
 * License to expand the terms that this Garoon is available .
 *
 */

require_once('grn/error_code.csp');
require_once('grn/license.csp');

// サービスライセンス
class plugin_grn_common_license_73common extends GRN_LicenseLogicBase
{
    function addLicense($license_info)
    {
        $lm = GRN_LicenseManager::getInstance();
        $l = $lm->getLicense(GRN_LICENSE_BASESYSTEM);
        $newuser_exist = $lm->findLicense(GRN_LICENSE_TYPE_NEWUSER_GR4);

        if (is_array($l) && isset($l['type'])
            && $l['type'] != GRN_LICENSE_TYPE_DEMO_GR4
            && $newuser_exist
            && $l['customer'] == $license_info['customer']
        ) {
            $license_info['service_limit'] = $license_info['limit'];
            unset($license_info['limit']);
            unset($license_info['users']);

            parent::addLicense($license_info);
        } else {
            cb_throw_error(E_GRN_LICENSE_DONT_REGISTER);
        }
    }

    /**
     * ライセンス情報を取得する。
     *
     * @param array $license_info ライセンス情報
     *
     * @return array
     */
    function getPropertiesArray($license_info)
    {
        require_once('fw/date.csp');
        ///////////////////
        // ライセンス種別
        // 発行ID
        // サービス終了日
        // サイボウズNET連携サービスユーザー数
        // サイボウズNET連携サービス終了日
        ///////////////////
        $info = [
            [
                'title' => cb_msg('grn.common.license', 'type'),
                'value' => $this->getMessage('service_license')
            ],
            [
                'title' => cb_msg('grn.common.license', 'issue'),
                'value' => $license_info['issue']
            ],
            [
                'title' => $this->getMessage('service_limit'),
                'value' => cb_date_format('DateFull_YMD',
                    $license_info['limit'])
            ],
        ];

        return $info;
    }

    function getName()
    {
        return $this->getMessage('service_license');
    }
}


