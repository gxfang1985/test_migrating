<?php

use grn\grn\CalendarExtensionPluginInterface;

require_once('grn/calendar.csp');
require_once('cbwebsrv/common.csp');
require_once('cbwebsrv/tool_define.csp');

class plugin_grn_common_calendar_six_kinds_of_day
    implements CalendarExtensionPluginInterface
{
    /**
     * @return bool
     */
    public function isAvailable(): bool
    {
        if ( ! grn_cbwebsrv_is_available_service(GRN_CBWEBSRV_SERVICE_SIXKINDSOFDAY)) {
            return false;
        }
        require_once("cbwebsrv/six_kinds_of_day.csp");
        $web_srv = new GRN_CBWebSrv_SixKindsOfDayService();

        return $web_srv->isExistEventProperties(GRN_CBWEBSRV_EVENT_SIX_KINDS_OF_DAY);
    }

    /**
     * @param CB_Date $start
     * @param CB_Date $end
     * @param array   $config
     *
     * @return array
     */
    function &getDaysInfo($start, $end, $config)
    {
        if ( ! grn_cbwebsrv_is_available_service(GRN_CBWEBSRV_SERVICE_SIXKINDSOFDAY)) {
            $ret = [];

            return $ret;
        }
        if ( ! isset($config['visible'])) {
            $ret = [];

            return $ret;
        }

        // get user config
        require_once('fw/date.csp');
        $endx = new CB_DateEx($end);
        $interval = $endx->getInterval($start);
        $days = (int)$interval->toDays();

        require_once('cbwebsrv/six_kinds_of_day.csp');
        $s = GRN_CBWebSrv_SixKindsOfDayService::getInstance();
        $ret = $this->_format($s->getSixKindsOfDay($start, $days));

        return $ret;
    }

    /**
     * format six-kinds-of-day data for UI
     *
     * @access   private
     *
     * @param    $six_kinds_of_day   array   six-kinds-of-day information
     *
     * @return   array
     *
     * $six_kinds_of_day[date] => array    key: yyyy-mm-dd
     *
     * return_array[date]           => array    key: yyyy-mm-dd
     *                   []         => array
     *                     ['data'] => string   formatted six-kinds-of-day data
     *                     ['type'] => string   calendar type
     */
    function _format($six_kinds_of_day)
    {
        // temporary
        $daysinfo = [];
        if (is_array($six_kinds_of_day)) {
            foreach ($six_kinds_of_day as $date => $name) {
                $skod = [];
                $skod['data'] = $name;
                $skod['type'] = 'six_kinds_of_day';

                $_date = [];
                $_date[] = $skod;

                $daysinfo[$date] = $_date;
            }
        }

        return $daysinfo;
    }

    /**
     * @param array $current_info
     *
     * @return array
     */
    function getDisplayItemInfo($current_info)
    {
        if ( ! grn_cbwebsrv_is_available_service(GRN_CBWEBSRV_SERVICE_SIXKINDSOFDAY)) {
            $current_info['disable'] = true;

            return $current_info;
        }

        require_once('cbwebsrv/six_kinds_of_day.csp');
        $s = GRN_CBWebSrv_SixKindsOfDayService::getInstance();
        $days = $s->getSixKindsOfDay();
        if (count($days) !== 0) {
            $current_info['is_event_receive'] = true;
        }

        return $current_info;
    }
}


