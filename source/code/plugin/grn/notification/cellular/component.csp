<?php

/**
 * @author  Y.Tanaka        2005/01
 * @package grn.notification
 */

require_once('cellular/component.csp');

class plugin_grn_notification_cellular_component
    extends GRN_Cellular_ComponentBase
{

    function __construct()
    {
        parent::__construct('notification');
    }

    function isSupported($key)
    {
        if ($key == 'icon') {
            return true;
        }
        if ($key == 'top') {
            return true;
        }
        if ($key == 'config') {
            return true;
        }

        return false;
    }

    function getContent($key)
    {
        if ($key == 'icon') {
            return $this->getIcon();
        }
        if ($key == 'top') {
            return $this->getTop();
        }
        if ($key == 'config') {
            return $this->getConfig();
        }

        return false;
    }

    function getIcon()
    {
        return 'notification';
    }

    function getTop()
    {
        global $G_container_app;
        $uum =& $G_container_app->getInstance('uum');

        $login =& $uum->getLoginUser();

        $profile =& $this->getUserProfile($login);

        // 通知アプリ取得
        require_once("notification/application.csp");

        // 通知サービス取得
        $service = GRN_Notification_Service::getInstance();

        $locator = GRN_ApplicationLocator::instance();
        /** @var \GRN_Notification_App $app */
        $app =& $locator->getInstance(GRN_NOTIFICATION_APP_ID);
        if (is_null($app)) {
            return false;
            //cb_throw_error( E_GRN_NTFC_NOT_AVAILABLE );
        }

        // 通知更新処理対応アプリケーションの更新処理呼び出し
        $app->updateApplications($login, true);

        // 通知対応アプリ列挙
        $app_list = $app->getApplicationList(true);

        $notifications = [];

        foreach (array_keys($app_list) as $app_id) {
            $app_instance =& $app_list[$app_id];

            if (method_exists($app_instance, 'isAvailableFor_cellular')) {
                if ( ! $app_instance->isAvailableFor_cellular($login)) {
                    continue;
                }
            }

            $page_info = null;
            // ケータイ用通知APIをチェック
            if ( ! method_exists($app_instance,
                'getNotificationIndexPageInfo_cellular')
            ) {
                continue;
            }

            $page_info
                = $app_instance->getNotificationIndexPageInfo_cellular($login,
                $app_id);

            // 通知表示設定をチェック
            $hide = false;
            $profile->getAttribute('hide_' . $app_id, $hide);

            if ($hide) {
                continue;
            }

            // トップページ通知に追加
            $module_id = $app_instance->getModuleId();

            $ignore_sub_module_ids
                = $app->getExcludeSubModuleIdsOnCellular($module_id);

            $c = $app->getDataCount('whatsnew', $login, $module_id, null, null,
                $ignore_sub_module_ids);

            $notifications[$app_id] = [
                'app_id'    => $app_id,
                'name'      => $app_instance->getName(),
                'module'    => $module_id,
                'count'     => $c,
                'page_info' => $page_info,
            ];
        }

        return [
            'order'  => 20,
            'type'   => 'file',
            'file'   => 'notification/cellular/index',
            'params' => $notifications,
        ];
    }

    function getConfig()
    {
        return [
            'type' => 'link',
            'page' => 'notification/cellular/conf',
            //'caption_module'=>'grn.notification.cellular.conf',
            //'caption_key'=>'title',
        ];
    }
}


