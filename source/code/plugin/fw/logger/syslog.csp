<?php

/**
 * syslogにログを書き出すクラス
 */

require_once('fw/logger.csp');

/**
 * syslogにログを書き出すプラグインのクラス.
 *
 * Format: (remote_host|remote_add):(user(account)):(module_id):(priority):(msg)
 */
class plugin_fw_logger_syslog extends CB_LogTarget
{
    /**
     * コミット
     *
     * @return  boolean     DBにコミットしていないので常にTRUE
     */
    function commit()
    {
        return true;
    }

    /**
     * イベントログの書き出し
     *
     * @param object CB_LogEvent $event
     */
    function processEvent($event)
    {
        global $G_container_grn;
        if ( ! isset($G_container_grn)) {
            return;
        }
        $syslog = $G_container_grn->getInstance('syslog');

        $is_win = (strncasecmp(php_uname('s'), 'WIN', 3) == 0);

        if ($is_win) {
            ////////////////////////////////////////////
            // イベントビューアでLOG_ERRが警告扱い?
            ////////////////////////////////////////////
            $pri_map = [
                CB_LOGGER_DEBUG    => [LOG_DEBUG, 'debug'],
                CB_LOGGER_INFO     => [LOG_INFO, 'info'],
                CB_LOGGER_NOTICE   => [LOG_NOTICE, 'notice'],
                CB_LOGGER_WARNING  => [LOG_WARNING, 'warning'],
                CB_LOGGER_ERROR    => [LOG_CRIT, 'error'],
                CB_LOGGER_CRITICAL => [LOG_CRIT, 'critical'],
            ];
        } else {
            $pri_map = [
                CB_LOGGER_DEBUG    => [LOG_DEBUG, 'debug'],
                CB_LOGGER_INFO     => [LOG_INFO, 'info'],
                CB_LOGGER_NOTICE   => [LOG_NOTICE, 'notice'],
                CB_LOGGER_WARNING  => [LOG_WARNING, 'warning'],
                CB_LOGGER_ERROR    => [LOG_ERR, 'error'],
                CB_LOGGER_CRITICAL => [LOG_CRIT, 'critical'],
            ];
        }

        $az_pri = $event->get('priority');
        $priority = LOG_ERR;
        $priority_msg = 'error';
        if (array_key_exists($az_pri, $pri_map)) {
            $priority = $pri_map[$az_pri][0];
            $priority_msg = $pri_map[$az_pri][1];
        }

        $remote = $event->get('remote_addr');
        if ($event->get('remote_host')) {
            $remote = $event->get('remote_host');
        }
        $user_name = $event->get('user');

        if (strlen($user_name) > 0) {
            $log_format = "%s:%s(%s):%s:%s:%s";
            $msg = sprintf($log_format, $remote, $event->get('user'),
                $event->get('account'), $event->get('category'),
                $priority_msg, $event->get('msg'));
        } else {
            $log_format = "%s:(not logged-in):%s:%s:%s";
            $msg = sprintf($log_format, $remote, $event->get('category'),
                $priority_msg, $event->get('msg'));
        }

        $is_win = (strncasecmp(php_uname('s'), 'WIN', 3) == 0);
        global $G_config_common;
        $syslog_encoding = $G_config_common->get('I18N', 'syslog_encoding');
        if ($syslog_encoding !== false) {
            $to_encoding = $syslog_encoding;
        } elseif ($is_win) {
            $to_encoding = 'SJIS-win';
        } else {
            $to_encoding = 'EUC-JP';
        }

        $msg = cb_encode($msg, $to_encoding);

        $syslog->log($priority, $msg);
    }
}


