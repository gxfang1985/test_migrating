<?php

require_once("fw/error_code.csp");
require_once("grn/logger.csp");

/**
 * エラーログフック
 *
 * @param array $error_info
 *
 * @return null
 */
function plugin_fw_error_hook_log($error_info)
{
    global $G_config_common;

    $logic = GRN_LoggingLogic::getInstance();
    $error_code = $error_info['ErrorNumber'];

    $prefix_len = strlen($error_code) - 5;
    $prefix = substr($error_code, 0, $prefix_len);
    $errno = substr($error_code, $prefix_len);

    // DB接続エラー
    /* DBエラーについては、すべてログに書かない
    if( $prefix === 'DB' && intval( $errno ) >= 2000 ) return null;
    */

    //if( $prefix === 'DB' ) return null;
    /*
        DBエラーの場合 dberror.log に書き出す
    */

    if ($prefix === 'DB') {
        if ( ! $G_config_common->get('Global', 'errorlog')) {
            return null;
        } else {
            $date = date("Y-m-d H:i:s", time());
            if ($G_config_common->get('Global', 'errorlog_dir')) {
                $datadir = $G_config_common->get('Global', 'errorlog_dir');
                $fl = fopen("$datadir/dberror.log", 'a');
            } else {
                $tmpdir = $G_config_common->get('Global', 'tmp_dir');
                $appname = $G_config_common->get('Global', 'app_name');
                $fl = fopen("$tmpdir/dberror_$appname.log", 'a');
            }
            if ($fl !== false) {
                fwrite($fl, "$prefix" . "$errno" . ' ' . "$date" . "\n");
                fclose($fl);
            }

            return null;
        }
    }

    switch ($error_code) {
        //////////////////////////////////////////
        // パスワードが間違え
        // 無効になっているアカウントでアクセス
        //////////////////////////////////////////
        case E_COMMON_AUTHENTICATION_FAILED:
        case E_COMMON_ACCOUNT_INVALIDATED:
            global $G_INPUT, $G_container_base;

            $user = false;
            $uum = $G_container_base->getInstance('uum');

            if (array_key_exists('_account', $G_INPUT)) {
                $user = $uum->getUserByForeignKey($G_INPUT['_account']);
            } elseif (array_key_exists('_uid', $G_INPUT)) {
                $user = $uum->getUser($G_INPUT['_uid']);
            }

            if ($user) {
                $msg
                    = sprintf('[%ld] %s [login] Failed (id:%s, name:%s, account:%s)',
                    getmypid(),
                    $error_code,
                    $user->getOID(),
                    $user->get('display_name'),
                    $user->get('foreign_key'));
            } else {
                $msg = sprintf('[%ld] %s [login] Failed (account:%s)',
                    getmypid(),
                    $error_code,
                    @$G_INPUT['_account']);
            }

            $log_category = $logic->getLogCategory('common');
            $lm = CB_LoggerManager::getInstance();
            $logger = $lm->getLogger($log_category);
            $logger->error($msg, $error_code);
            break;

        //////////////////////////////////////////
        // デフォルト エラーコードのみロギング
        //////////////////////////////////////////
        default:

            global $G_config_grn;

            // プレフィックスからモジュールの取得
            $log_category = $logic->getLogCategory('common');

            // フレームワークの前処理で失敗していない場合
            if ($G_config_grn) {
                require_once('grn/application.csp');
                $locator = GRN_ApplicationLocator::instance();
                $apps = $locator->getActiveApplicationIds();
                foreach ($apps as $app_id) {
                    $pp = $locator->getErrorPrefix($app_id);
                    if ($prefix === $pp) {
                        $log_category = $logic->getLogCategory($app_id);
                        break;
                    }
                }
            }

            require_once('fw/logger.csp');
            $lm = CB_LoggerManager::getInstance();
            $l = $lm->getLogger($log_category);
            $msg = sprintf('[%ld] %s', getmypid(), $error_code);
            if ($prefix === 'GRN_MAIL_') {
                $error_code_includes_cause = [
                    'GRN_MAIL_24151',
                    'GRN_MAIL_24171',
                    'GRN_MAIL_24201',
                    'GRN_MAIL_24204'
                ];
                if (in_array($error_code, $error_code_includes_cause)) {
                    $error_cause = $error_info['ErrorCause'];
                    $msg = sprintf('[%ld] %s, Cause: %s', getmypid(),
                        $error_code, $error_cause);
                }
            }
            $l->error($msg, $error_code);

            break;
    }

    return null;
}


