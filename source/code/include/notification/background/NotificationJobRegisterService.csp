<?php

namespace grn\notification\background;

use grn\grn\background\IBackgroundJobDAO;
use grn\notification\background\JobMessageConverter;
use grn\grn\background\BackgroundJobDTO;
use grn\grn\background\BackgroundJobDAO;

/**
 *
 */
class NotificationJobRegisterService
{
    private $converter;
    private $dao;

    /**
     * @return NotificationJobRegisterService
     */
    public static function create()
    {
        return new NotificationJobRegisterService(new BackgroundJobDAO(cb_get_app_db("job")),
            new JobMessageConverter());
    }

    /**
     * @param \grn\grn\background\IBackgroundJobDAO $dao
     * @param JobMessageConverter                   $converter
     */
    public function __construct(
        IBackgroundJobDAO $dao,
        JobMessageConverter $converter
    ) {
        $this->converter = $converter;
        $this->dao = $dao;
    }

    /**
     * @param                        $jobName
     * @param \GRN_Notification_Data $data
     * @param \CB_User               $operationUser
     * @param array                  $notifyList
     */
    public function register(
        $jobName,
        \GRN_Notification_Data $data,
        \CB_User $operationUser,
        array $notifyList
    ) {
        $dtoData = [];

        foreach (array_chunk($notifyList, 1000) as $eachNotifyList) {
            $message = $this->converter->convertToJSON($data,
                $operationUser->getOID(), $eachNotifyList);
            $dtoData[] = new BackgroundJobDTO($jobName, $message, time(),
                time());
        }
        $this->dao->addJobs($dtoData);
    }

}
