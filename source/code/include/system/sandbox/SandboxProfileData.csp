<?php

namespace grn\system\sandbox;

class SandboxProfileData
{
    const PROFILE_KEY_APPLY_RESULT = 'apply_result';
    const PROFILE_KEY_SANDBOX_CREATED = 'sandbox_created';

    private static $instance;

    /** @var \CB_Profile */
    private $profile;

    private function __construct()
    {
        $profile = cb_get_system_profile("grn.system.user.sandbox");
        $this->profile = $profile;
    }

    /**
     * @return SandboxProfileData
     */
    public static function getInstance()
    {
        if ( ! self::$instance) {
            self::$instance = new self();
        }

        return self::$instance;
    }

    /**
     * @param string $key
     *
     * @return mixed
     */
    private function getAttribute($key)
    {
        $value = null;
        $this->profile->getAttribute($key, $value);

        return $value;
    }

    /**
     * @param string $key
     * @param mixed  $value
     */
    private function setAttribute($key, $value)
    {
        $val = $this->getAttribute($key);
        if (is_null($val)) {
            $this->profile->createAttribute($key, $value);
        } else {
            $this->profile->updateAttribute($key, $value);
        }
    }

    /**
     * @param bool          $result
     * @param \CB_TimeStamp $timestamp
     */
    public function setApplyResult($result, \CB_TimeStamp $timestamp)
    {
        $data = ['result' => (bool)$result, 'timestamp' => $timestamp->unix_ts];
        $this->setAttribute(self::PROFILE_KEY_APPLY_RESULT, $data);
    }

    public function deleteApplyResult()
    {
        $this->profile->removeAttribute(self::PROFILE_KEY_APPLY_RESULT);
    }

    /**
     * @return null|array
     */
    public function getApplyResult()
    {
        return $this->getAttribute(self::PROFILE_KEY_APPLY_RESULT);
    }

    /**
     * @param bool $created
     */
    public function setSandboxCreated($created)
    {
        $this->setAttribute(self::PROFILE_KEY_SANDBOX_CREATED, $created);
    }

    /**
     * @return null|bool
     */
    public function getSandboxCreated()
    {
        return $this->getAttribute(self::PROFILE_KEY_SANDBOX_CREATED);
    }
} 
