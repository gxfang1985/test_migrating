<?php

require_once('fw/i18n.csp');
require_once('fw/string_util.csp');
require_once('grn/application.csp');

/**
 * システムアプリケーションロジック
 */
class SystemApplicationLogic
{
    /**
     * コンストラクタ
     */
    public function __construct()
    {

    }

    public function modifyApplicationName($inAppId, $inLocalNameArray)
    {
        $i18n = CB_I18N::getInstance();
        $availableLanguageArray = $i18n->getAvailableLanguages();

        $locator = GRN_ApplicationLocator::instance();
        $app = $locator->getInstance($inAppId);

        foreach ($availableLanguageArray as $languageKey) {
            if ((array_key_exists($languageKey, $inLocalNameArray))
                && (strlen($inLocalNameArray[$languageKey]) > 0)
            ) {
                $localName = $inLocalNameArray[$languageKey];
                cb_trim_check($localName);
                $app->setName($languageKey, $localName);
            }
        }

        return true;
    }

    public function createMultiLanguageValuesArray($inAppId)
    {
        $resultArray = [];

        $i18n = CB_I18N::getInstance();
        $defaultLang
            = $i18n->getCurrentLanguage();
        $locator
            = GRN_ApplicationLocator::instance();
        $resultArray[CB_I18N_DEFUALT_LANGUAGE_CODE]
            = $locator->getDefaultName($inAppId, $defaultLang);

        $app = $locator->getInstance($inAppId);
        foreach (
            CB_LanguageManager::getAllowedLanguagesByConfigurationFile() as
            $langCode
        ) {
            $resultArray[$langCode] = $app->getName($langCode);
        }

        return $resultArray;
    }
}


