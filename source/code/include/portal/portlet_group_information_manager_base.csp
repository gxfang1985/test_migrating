<?php
/**
 * Portal Application Portlet Group Information Manager Base Class
 *
 * @author  Yuichi, Nakamura 2005/7
 * @version 1.0
 * @package grn.portal
 */

/** Portal Application **/
require_once('portal/resources.csp');
require_once('grn/application.csp');

/**
 * Portlet Group Information Manager Base Class
 *
 * @package grn.portal
 */
class GRN_Portal_Portlet_Group_Information_Manager_Base
{
    /** Table Name **/
    var $_table_name = null;

    /** Portlet Group List **/
    var $_list = [];

    /**
     * Constructor
     */
    function __construct()
    {
        $this->_table_name = 'tab_grn_portal_portletgroup';
    }

    /** @var self */
    private static $_instance = null;

    /**
     * @return GRN_Portal_Portlet_Group_Information_Manager_Base
     */
    public static function getInstance()
    {
        if ( ! isset(self::$_instance)) {
            $c = __CLASS__;
            self::$_instance = new $c;
        }

        return self::$_instance;
    }

    /**
     * Get Database
     *
     * @return CB_DatabaseConnection
     */
    function _getDatabase()
    {
        static $database = null;
        if (is_null($database)) {
            $app_locator = GRN_ApplicationLocator::instance();
            $database = $app_locator->getConnection('portal');
        }

        return $database;
    }
}

;

/**
 * System Portlet Group Information Manager Base Class
 *
 * @package grn.portal
 */
class GRN_Portal_System_Portlet_Group_Information_Manager_Base
    extends GRN_Portal_Portlet_Group_Information_Manager_Base
{
    /**
     * Constructor
     */
    function __construct()
    {
        parent::__construct();
    }


    /** @var self */
    private static $_instance = null;

    /**
     * @return GRN_Portal_System_Portlet_Group_Information_Manager_Base
     */
    public static function getInstance()
    {
        if ( ! isset(self::$_instance)) {
            $c = __CLASS__;
            self::$_instance = new $c;
        }

        return self::$_instance;
    }

    /**
     * Get Portlet Group Information
     *
     * @access  public
     *
     * @param  int  $portlet_group_id //Portlet Group ID
     * @param  int  $lock_mode        //Lock Mode
     * @param  bool $refresh          //Refresh Cache
     *
     * @return object $portlet group             //Portlet Grpup Object
     */
    function &get(
        $portlet_group_id,
        $lock_mode = CB_DATABASE_DEFAULT_LOCK,
        $refresh = false
    ) {
        //Get Portlet Group List
        $portlet_group_list =& $this->getList($lock_mode, $refresh);

        //Get Portlet Group
        if ( ! array_key_exists($portlet_group_id, $portlet_group_list)) {
            $ret = false;

            return $ret;
        }

        //Return Portlet Group Information
        return $portlet_group_list[$portlet_group_id];
    }

    /**
     * Get Portlet Group List
     *
     * @access  public
     *
     * @param  int  $lock_mode //Lock Mode
     * @param  bool $refresh   //Refresh Cache
     *
     * @return array $portlet_group_list         //Portlet Group List
     */
    function &getList($lock_mode = CB_DATABASE_DEFAULT_LOCK, $refresh = false)
    {
        $portlet_group_list = [];

        //Get Portlet Group List From Cache
        $cached = false;
        if ( ! $refresh) {
            if (array_key_exists('0', $this->_list)) {
                $portlet_group_list =& $this->_list['0'];
                $cached = true;
            }
        }

        //Get Portlet Group List From Database
        if ( ! $cached || $refresh) {
            require_once('portal/PortalFacade.csp');
            require_once('fw/i18n.csp');
            $i18n = CB_I18N::getInstance();

            $portalDAO = new PortalFacade();
            $dataObj = [];
            $dataObj['offset'] = 0;
            $dataObj['limit'] = -1;
            $dataObj['lock'] = $lock_mode;
            $dataObj['language'] = $i18n->getCurrentLanguage();

            $portletGroupList = $portalDAO->getPortletGroupList($dataObj);

            //Update Portlet Group List
            foreach ($portletGroupList as $portletGroup) {
                $portletGroupArray = $portletGroup->convertArray();
                $object_id = $portletGroupArray['_id'];
                $this->_list['0'][$object_id] = $portletGroupArray;
            }

            if (count($portletGroupList) > 0) {
                $portlet_group_list =& $this->_list['0'];
            }
        }

        //Return Portlet Group List
        return $portlet_group_list;
    }
}

;

/**
 * Personal Portlet Group Information Manager Base Class
 *
 * @package grn.portal
 */
class GRN_Portal_Personal_Portlet_Group_Information_Manager_Base
    extends GRN_Portal_Portlet_Group_Information_Manager_Base
{
    /**
     * Constructor
     */
    function __construct()
    {
        parent::__construct();
    }

    /** @var self */
    private static $_instance = null;

    /**
     * @return GRN_Portal_Personal_Portlet_Group_Information_Manager_Base
     */
    public static function getInstance()
    {
        if ( ! isset(self::$_instance)) {
            $c = __CLASS__;
            self::$_instance = new $c;
        }

        return self::$_instance;
    }

    /**
     * Get Portlet Group Information
     *
     * @access  public
     *
     * @param  int  $portlet_group_id //Portlet Group ID
     * @param  int  $user_id          //User ID
     * @param  int  $lock_mode        //Lock Mode
     * @param  bool $refresh          //Refresh Cache
     *
     * @return array  $portlet group             //Portlet Grpup Information
     */
    function &get(
        $portlet_group_id,
        $user_id,
        $lock_mode = CB_DATABASE_DEFAULT_LOCK,
        $refresh = false
    ) {
        //Get Portlet Group List
        $portlet_group_list =& $this->getList($user_id, $lock_mode, $refresh);

        //Get Portlet Group
        if ( ! array_key_exists($portlet_group_id, $portlet_group_list)) {
            $ret = false;

            return $ret;
        }

        //Return Portlet Group Information
        return $portlet_group_list[$portlet_group_id];
    }

    /**
     * Get Portlet Group List
     *
     * @access  public
     *
     * @param  int  $user_id   //User ID
     * @param  int  $lock_mode //Lock Mode
     * @param  bool $refresh   //Refresh Cache
     *
     * @return array $portlet_group_list         //Portlet Group List
     */
    function &getList(
        $user_id,
        $lock_mode = CB_DATABASE_DEFAULT_LOCK,
        $refresh = false
    ) {
        $portlet_group_list = [];

        //Get Portal List From Cache
        $cached = false;
        if ( ! $refresh) {
            if (array_key_exists($user_id, $this->_list)) {
                $portlet_group_list =& $this->_list[$user_id];
                $cached = true;
            }
        }

        //Get Portlet Group List From Database
        if ( ! $cached || $refresh) {
            require_once('portal/PortalFacade.csp');
            require_once('fw/i18n.csp');
            $i18n = CB_I18N::getInstance();

            $portalDAO = new PortalFacade();
            $dataObj = [];
            $dataObj['offset'] = 0;
            $dataObj['limit'] = -1;
            $dataObj['lock'] = $lock_mode;
            $dataObj['language'] = $i18n->getCurrentLanguage();
            $dataObj['userId'] = $user_id;

            $portletGroupList = $portalDAO->getPortletGroupList($dataObj);

            //Update Portlet Group List
            foreach ($portletGroupList as $portletGroup) {
                $portletGroupArray = $portletGroup->convertArray();
                $object_id = $portletGroupArray['_id'];
                $this->_list[$user_id][$object_id] = $portletGroupArray;
            }

            if (count($portletGroupList) > 0) {
                $portlet_group_list =& $this->_list[$user_id];
            }
        }

        //Return Portlet Group List
        return $portlet_group_list;
    }
}

;


