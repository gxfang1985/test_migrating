<?php

/**
 * ポータルシステムロジック
 *
 * @author  Yuichi, Nakamura 2004/11
 * @version 1.0
 * @package grn.portal
 */

/**
 * ポータルシステムロジッククラス
 *
 * @package grn.portal
 */
class GRN_Portal_SystemLogic
{
    /*** ポータルアプリケーション ***/
    var $_portal_application = null;

    /*** ポータル設定（システムプロファイル）***/
    var $_portal_system_profile = null;

    /** Portal Utility Instance **/
    var $_portal_utility = null;

    /** Portal Manager Instance **/
    var $_portal_manager = null;

    /*** 全社/組織ログインポータル（テーブルインフォ）***/
    var $_login_portal_table = null;

    /**
     * コンストラクタ
     *
     * @access private
     */
    function __construct()
    {

    }

    /**
     * インスタンスの取得
     *
     * @return $_instance GRN_Portal_SystemLogic
     *          ポータルシステムロジックのインスタンス
     */
    private static $_instance = null;

    /**
     * @return GRN_Portal_SystemLogic
     */
    public static function getInstance()
    {
        if ( ! isset(self::$_instance)) {
            $c = __CLASS__;
            self::$_instance = new $c;
        }

        return self::$_instance;
    }

    /**
     * ポータルアプリケーションを取得
     *
     * @return GRN_Portal_Application
     */
    function _getPortalApplication()
    {
        //システムプロファイルからポータル設定を取得
        if (is_null($this->_portal_application)) {
            require_once('portal/application.csp');
            $this->_portal_application = GRN_Portal_Application::getInstance();
        }

        return $this->_portal_application;
    }

    /**
     * システムプロファイルからポータル設定を取得
     *
     * @return \CB_Profile
     */
    function _getPortalSystemProfile()
    {
        //システムプロファイルからポータル設定を取得
        if (is_null($this->_portal_system_profile)) {
            $portal_application = $this->_getPortalApplication();
            $this->_portal_system_profile
                = $portal_application->getSystemProfile();
        }

        return $this->_portal_system_profile;
    }

    /**
     * Get Portal Utility Instance
     *
     * @return \CB_TableManager
     */
    function _getPortalUtility()
    {
        if (is_null($this->_portal_utility)) {
            $app_locator = GRN_ApplicationLocator::instance();
            $this->_portal_utility = $app_locator->getTableManager('portal');
        }

        return $this->_portal_utility;
    }

    /**
     * 全社/組織ログインポータルテーブルの取得
     *
     * @return \CB_TableInfo
     */
    function _getLoginPortalTable()
    {
        require_once('portal/table.csp');
        if (is_null($this->_login_portal_table)) {
            $portal_utility = $this->_getPortalUtility();
            $this->_login_portal_table
                = $portal_utility->getTableInfo('grn_portal_loginportal');
        }

        return $this->_login_portal_table;
    }

    /**
     * ポータルマネージャーの取得
     *
     * @return GRN_Portal_AgentManagerTemplate
     */
    function _getPortalManager()
    {
        if (is_null($this->_portal_manager)) {
            global $G_container_app;
            $this->_portal_manager
                = $G_container_app->getInstance(GRN_PRTL_LWC_ID_PORTAL_MANAGER);
        }

        return $this->_portal_manager;
    }

    /**
     * Myポータル雛形の初期化
     *
     * @return boolean
     *          TRUEのときは、正常終了，FALSEのときは、失敗
     */
    function initializeMyPortalTemplate()
    {
        //システムプロファイルからポータル設定を取得
        $portal_profile =& $this->_getPortalSystemProfile();

        //Myポータル雛形を初期化
        if ($portal_profile->getAttribute(GRN_PRTL_SYSTEM_MY_PORATL_TEMPLATE,
            $dummy)
        ) {
            if ( ! $portal_profile->removeAttribute(GRN_PRTL_SYSTEM_MY_PORATL_TEMPLATE)) {
                return false;
            }
        }

        return true;
    }

    /**
     * Myポータル雛形の設定
     *
     * @param $portal_id int
     *                   Myポータル雛形に設定するポータルID
     *
     * @return boolean
     *          TRUEのときは、正常終了，FALSEのときは、失敗
     */
    function setMyPortalTemplate($portal_id)
    {
        //引数を検査
        if (strlen($portal_id) <= 0) {
            return false;
        }

        //システムプロファイルからポータル設定を取得
        $portal_profile =& $this->_getPortalSystemProfile();

        //Myポータル雛形に設定
        if ( ! $portal_profile->getAttribute(GRN_PRTL_SYSTEM_MY_PORATL_TEMPLATE,
            $dummy)
        ) {
            //Myポータル雛形設定を新規作成
            if ( ! $portal_profile->createAttribute(GRN_PRTL_SYSTEM_MY_PORATL_TEMPLATE,
                $portal_id)
            ) {
                return false;
            }
        } else {
            //Myポータル雛形設定を更新
            if ( ! $portal_profile->updateAttribute(GRN_PRTL_SYSTEM_MY_PORATL_TEMPLATE,
                $portal_id)
            ) {
                return false;
            }
        }

        return true;
    }

    /**
     * Myポータル雛形の取得
     *
     * @return int|false $portal_id
     *          Myポータル雛形に設定されているポータルID
     */
    function getMyPortalTemplate()
    {
        //システムプロファイルからポータル設定を取得
        $portal_profile = $this->_getPortalSystemProfile();

        //Myポータル雛形の取得
        if ( ! $portal_profile->getAttribute(GRN_PRTL_SYSTEM_MY_PORATL_TEMPLATE,
            $portal_id)
        ) {
            return false;
        }

        return $portal_id;
    }

    /**
     * 組織ログインポータルの設定
     *
     * @param $organization_id int
     *                         組織ログインポータルを設定する組織ID
     * @param $portal_id       int
     *                         組織ログインポータルに設定するポータルID
     *
     * @return boolean
     *          TRUEのときは、正常終了，FALSEのときは、失敗
     */
    function setOrganizationLoginPortal($organization_id, $portal_id)
    {
        //引数を検査
        if (strlen($organization_id) <= 0) {
            return false;
        }

        //全社/組織ログインポータルテーブルの取得
        $login_portal_table =& $this->_getLoginPortalTable();

        //組織ログインポータル設定の取得
        $rowset = new CB_RowSet($login_portal_table);
        if ($organization_id !== '0') {
            //$rowset->addCondition('col_organization =' . $organization_id);
            $rowset->addCondition($rowset->queryf("col_organization = '@S'",
                $organization_id));
        } else {
            $rowset->addCondition('col_organization is null');
        }
        $organization_login_portal =& $rowset->iterate();
        if ( ! $organization_login_portal) {
            //組織ログインポータル設定の新規作成
            $organization_login_portal =& $login_portal_table->newRow();
            if ( ! $organization_login_portal) {
                return false;
            }
        }

        //組織オブジェクトの取得
        global $G_container_base;
        $grn_uum =& $G_container_base->getInstance('uum');
        $organization =& $grn_uum->getGroup($organization_id);
        if ( ! is_object($organization)) {
            $organization = null;
        }

        //ポータルオブジェクトの取得
        $user = null;
        $portal_manager =& $this->_getPortalManager();
        $portal_list = $portal_manager->getList($user);
        if ( ! array_key_exists($portal_id, $portal_list)) {
            $portal = null;
        } else {
            $portal =& $portal_list[$portal_id]->getRow();
        }

        //組織ログインポータルの設定
        $organization_login_portal->set(GRN_PRTL_PROPERTY_ORGANIZATION,
            $organization);
        $organization_login_portal->set(GRN_PRTL_PROPERTY_PORTAL, $portal);

        return true;
    }

    /**
     * 組織ログインポータルの取得
     *
     * @param int $organization_id 組織ログインポータルを取得する組織ID
     *
     * @return int|null 組織ログインポータルに設定されているポータルID
     */
    function getOrganizationLoginPortal($organization_id = 0)
    {
        //全社/組織ログインポータルテーブルの取得
        $login_portal_table = $this->_getLoginPortalTable();

        //組織ログインポータル設定の取得
        $rowset = new CB_RowSet($login_portal_table);
        if ($organization_id != '0') {
            //$rowset->addCondition('col_organization =' . $organization_id);
            //escape
            $rowset->addCondition($rowset->queryf("col_organization = '@S'",
                $organization_id));
        } else {
            $rowset->addCondition('col_organization is null');
        }
        $organization_login_portal = $rowset->iterate();
        if ( ! $organization_login_portal) {
            return 0;
        }

        //組織ログインポータルの取得
        $portal_id = 0;
        $portal =& $organization_login_portal->get(GRN_PRTL_PROPERTY_PORTAL);
        if (is_object($portal)) {
            $portal_id = $portal->getOID();
        }

        return $portal_id;
    }

    /**
     * 組織ログインポータルリストの取得
     *
     * @param array $organization_list 組織ログインポータルを取得する組織IDリスト
     *
     * @return array 組織ログインポータルに設定されているポータルIDリスト
     */
    function getOrganizationLoginPortalList($organization_list = [])
    {
        require_once('grn/application.csp');
        $app_locator = GRN_ApplicationLocator::instance();
        $dbconn = $app_locator->getConnection('portal');

        $organization_array = [];
        foreach ($organization_list as $organization_id) {
            $organization_array[] = cb_queryf($dbconn, "'@S'",
                $organization_id);
        }

        if (count($organization_array) > 0) {
            $condition = 'col_organization IN (' . implode(', ',
                    $organization_array) . ') ';
        } else {
            $condition = 'col_organization is null';
        }
        $query
            = "SELECT _id, col_organization, col_portal FROM tab_grn_portal_loginportal WHERE "
              . $condition;
        $query = $dbconn->select_format($query);
        $result = $dbconn->query($query);

        //組織ログインポータルの取得
        $portal_list = [];
        if ($result !== false) {
            while ($organization_login_portal = $dbconn->fetch_assoc($result)) {
                if ( ! is_null($organization_login_portal['col_portal'])) {
                    $portal_list[$organization_login_portal['col_organization']]
                        = $organization_login_portal['col_portal'];
                }
            }
        }
        $dbconn->free_result($result);

        return $portal_list;
    }

    /**
     * Set Genaral Configuration
     *
     * @param array $config_list //Configuration (config_name=>config_value)
     *
     * @return bool
     */
    function setGeneralConfig($config_list)
    {
        //Check Argument
        if ( ! is_array($config_list)) {
            return false;
        }

        //Get System Profile
        $profile =& $this->_getPortalSystemProfile();
        if ( ! $profile) {
            return false;
        }

        //Set General Config
        foreach ($config_list as $config_name => $config_value) {
            $dummy = null;
            if ( ! $profile->getAttribute($config_name, $dummy)) {
                //Create Attribute
                $profile->createAttribute($config_name, $config_value);
            } else {
                //Update Attribute
                $profile->updateAttribute($config_name, $config_value);
            }
        }

        return true;
    }


    /**
     * Get Genaral Configuration
     *
     * @return array|bool
     */
    function getGeneralConfig()
    {
        //Get System Profile
        $profile =& $this->_getPortalSystemProfile();
        if ( ! $profile) {
            return false;
        }

        //Get General Config
        return $profile->getAttributes();
    }
}


