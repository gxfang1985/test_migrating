<?php

namespace grn\portal\ajax\system;

use grn\grn\JSONResponse;
use grn\portal\ajax\PortalAjaxCommandInterface;

require_once('portal/inspection.csp');
require_once('portal/portal_logic.csp');
require_once('portal/error_code.csp');

class AjaxPortalOpen implements PortalAjaxCommandInterface
{
    /** @var array */
    private $input;
    /** @var JSONResponse */
    private $jsonResponse;

    /**
     * @param array        $input
     * @param JSONResponse $jsonResponse
     */
    public function __construct(array $input, JSONResponse $jsonResponse)
    {
        $this->input = $input;
        $this->jsonResponse = $jsonResponse;
    }

    /**
     */
    public function execute()
    {
        $this->jsonResponse->validateAjaxAccess();

        $portalId = cb_at($this->input, 'portal_id');
        if (is_null($portalId)) {
            cb_throw_error(E_COMMON_MISSING_MANDATORY);
        }

        //Change System Portal Open Status
        $systemPortalLogic = \GRN_Portal_SystemPortalLogic::getInstance();
        $portal = $systemPortalLogic->changeOpenStatus($portalId);

        //Check Inspection Message Enabled
        $inspection = \GRN_Portal_System_Portal_Inspection::getInstance();
        if ($inspection->isEnabled()) {
            //Write Inspection Message
            $message_type = 'portal_open';
            $message_args = [
                'pid'         => $portal->getOID(),
                'portal_name' => $portal->get('name'),
                'open_status' => ($portal->get('is_open') == 1) ? 'open'
                    : 'close',
            ];
            $inspection->record($message_type, $message_args);
        }
    }
}
