<?php

namespace grn\portal\ajax\operation;


use grn\grn\JSONResponse;
use grn\portal\ajax\PortalAjaxCommandInterface;

require_once('fw/i18n.csp');
require_once('portal/error_code.csp');

class AjaxPostPortletTitleModify implements PortalAjaxCommandInterface
{
    /** @var array */
    private $input;
    /** @var JSONResponse */
    private $jsonResponse;

    /**
     * @param array        $input
     * @param JSONResponse $jsonResponse
     */
    public function __construct(array $input, JSONResponse $jsonResponse)
    {
        $this->input = $input;
        $this->jsonResponse = $jsonResponse;
    }


    /**
     */
    public function execute()
    {
        $portalId = cb_at($this->input, "portal_id");
        $layoutId = cb_at($this->input, "layout_id");
        $portletId = cb_at($this->input, "portlet_id");
        if (is_null($portalId) || is_null($layoutId) || is_null($portletId)) {
            cb_throw_error(E_COMMON_MISSING_MANDATORY);
        }

        //Get Portal
        require_once('portal/portal_logic.csp');
        $systemPortalLogic = \GRN_Portal_SystemPortalLogic::getInstance();
        $portal = $systemPortalLogic->get($portalId);

        //Evaluate Access Right of Portal
        require_once('portal/access_logic.csp');
        $accessLogic = \GRN_Portal_SystemPortalAccessLogic::getInstance();
        $accessLogic->evaluateAccess($portal);

        //Evaluate Manage Right of Portal
        require_once('portal/manage_logic.csp');
        $manageLogic = \GRN_Portal_SystemPortalManageLogic::getInstance();
        $manageLogic->evaluateManage($portal, true);

        //Get language values
        $inputLocalNameArray
            = getMultiLanguageText(GRN_PRTL_ELEMENT_NAME_PORTLET_LAYOUT,
            $this->input);

        require_once('portal/portlet_layout_logic.csp');
        $layoutLogic = \GRN_Portal_PortletLayoutLogic::getInstance();
        $layout = $layoutLogic->get($layoutId);
        $portlet = $layout->get(GRN_PRTL_PROPERTY_PORTLET);

        require_once('portal/portlet_util.csp');
        if (\GRN_Portal_PortletUtil::isNoDisplayNamePortlet($portlet)) {
            cb_throw_error('FW00043');
        }

        //Get display name mode
        $displayNameMode = cb_at($this->input, "display_name_mode");
        if ( ! \GRN_Portal_PortletUtil::isCategoryTypePortlet($portlet)
             || ($displayNameMode != GRN_PRTL_DISPLAY_NAME_MODE_DEFAULT
                 && $displayNameMode != GRN_PRTL_DISPLAY_NAME_MODE_CATEGORY)
        ) {
            $displayNameMode = GRN_PRTL_DISPLAY_NAME_MODE_DEFAULT;
        }

        //Change portlet name and display name mode
        $layoutLogic->modifyPortletLayoutNameAndMode($portalId, $portletId,
            $layoutId, $inputLocalNameArray, $displayNameMode);

        //Return display name
        $i18n = \CB_I18N::getInstance();
        $currentLanguage = $i18n->getCurrentLanguage();
        $portletTitle = (isset($inputLocalNameArray[$currentLanguage])
                         && strlen(cb_trim($inputLocalNameArray[$currentLanguage]))
                            > 0)
            ? cb_trim($inputLocalNameArray[$currentLanguage])
            : $inputLocalNameArray[CB_I18N_DEFUALT_LANGUAGE_CODE];

        if (strlen($portletTitle) === 0) {
            $portletTitle = \GRN_Portal_PortletUtil::getPortletName($portlet,
                $layout);
        }
        $this->jsonResponse->response([
            'title'             => $portletTitle,
            'display_name_mode' => $displayNameMode
        ]);
    }
}
