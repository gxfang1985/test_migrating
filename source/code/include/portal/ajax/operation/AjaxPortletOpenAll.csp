<?php

namespace grn\portal\ajax\operation;


use grn\grn\JSONResponse;
use grn\portal\ajax\PortalAjaxCommandInterface;

require_once('portal/portal_logic.csp');
require_once('portal/access_logic.csp');
require_once('portal/manage_logic.csp');
require_once('portal/system_portlet_logic.csp');
require_once('portal/inspection.csp');
require_once('portal/error_code.csp');

class AjaxPortletOpenAll implements PortalAjaxCommandInterface
{
    /** @var array */
    private $input;
    /** @var JSONResponse */
    private $jsonResponse;

    /**
     * @param array        $input
     * @param JSONResponse $jsonResponse
     */
    public function __construct(array $input, JSONResponse $jsonResponse)
    {
        $this->input = $input;
        $this->jsonResponse = $jsonResponse;
    }

    /**
     */
    public function execute()
    {
        $this->jsonResponse->validateAjaxAccess();

        $portalId = cb_at($this->input, "portal_id");
        if (is_null($portalId)) {
            cb_throw_error(E_COMMON_MISSING_MANDATORY);
        }

        //Get Portal
        $systemPortalLogic = \GRN_Portal_SystemPortalLogic::getInstance();
        $portal = $systemPortalLogic->get($portalId);

        //Evaluate Access Right of Portal
        $accessLogic = \GRN_Portal_SystemPortalAccessLogic::getInstance();
        $accessLogic->evaluateAccess($portal);

        //Evaluate Manage Right for Portal
        $manageLogic = \GRN_Portal_SystemPortalManageLogic::getInstance();
        $manageLogic->evaluateManage($portal, true);

        //Get Portal Column Items
        $columnItems = $systemPortalLogic->getColumnItems($portalId);

        $changeLayoutItems = [];
        //Change Open Status All
        foreach (array_keys($columnItems) as $columnKey) {
            /** @var \GRN_Portal_PortletLayout[] $layoutItems */
            $layoutItems = $columnItems[$columnKey];
            foreach ($layoutItems as $layout) {
                if ($layout->get(GRN_PRTL_PROPERTY_IS_OPEN) != '1') {
                    $layout->set(GRN_PRTL_PROPERTY_IS_OPEN, '1');
                    $changeLayoutItems[] = $layout;
                }
            }
        }

        //Check Inspection Message Enabled
        $inspection = \GRN_Portal_System_Portal_Inspection::getInstance();
        if ($inspection->isEnabled()) {
            //Get Portal Name
            $portalName = $portal->get('name');

            /** @var \GRN_Portal_PortletLayout $layout */
            foreach ($changeLayoutItems as $layout) {
                //Get Portlet Display Name
                $portlet = $layout->get(GRN_PRTL_PROPERTY_PORTLET);
                require_once('portal/portlet_util.csp');
                $portletName = \GRN_Portal_PortletUtil::getPortletName($portlet,
                    $layout);

                //Write Inspection Message
                $message_type = 'portal_portlet_open';
                $message_args = [
                    'pid'          => $portalId,
                    'plid'         => $layout->getOID(),
                    'ppid'         => $portlet->getOID(),
                    'portal_name'  => $portalName,
                    'portlet_name' => $portletName,
                    'open_status'  => 'open',
                ];
                $inspection->record($message_type, $message_args);
            }
        }
    }
}
