<?php

namespace grn\portal\ajax\operation;


use grn\grn\JSONResponse;
use grn\portal\ajax\PortalAjaxCommandInterface;

require_once('portal/portal_logic.csp');
require_once('portal/access_logic.csp');
require_once('portal/manage_logic.csp');
require_once('portal/system_portlet_logic.csp');
require_once('portal/inspection.csp');
require_once('portal/error_code.csp');

class AjaxPortletOpen implements PortalAjaxCommandInterface
{
    /** @var array */
    private $input;
    /** @var JSONResponse */
    private $jsonResponse;

    /**
     * @param array        $input
     * @param JSONResponse $jsonResponse
     */
    public function __construct(array $input, JSONResponse $jsonResponse)
    {
        $this->input = $input;
        $this->jsonResponse = $jsonResponse;
    }

    /**
     */
    public function execute()
    {
        $this->jsonResponse->validateAjaxAccess();

        $portalId = cb_at($this->input, "portal_id");
        $layoutId = cb_at($this->input, "layout_id");
        if (is_null($portalId) || is_null($layoutId)) {
            cb_throw_error(E_COMMON_MISSING_MANDATORY);
        }

        //Get Portal
        $systemPortalLogic = \GRN_Portal_SystemPortalLogic::getInstance();
        $portal = $systemPortalLogic->get($portalId);

        //Evaluate Access Right of Portal
        $accessLogic = \GRN_Portal_SystemPortalAccessLogic::getInstance();
        $accessLogic->evaluateAccess($portal);

        //Evaluate Manage Right of Portal
        $manageLogic = \GRN_Portal_SystemPortalManageLogic::getInstance();
        $manageLogic->evaluateManage($portal, true);

        // Change System Portlet Open Status
        $systemPortletLogic = \GRN_Portal_SystemPortletLogicBase::getInstance();
        $layout = $systemPortletLogic->changeOpenStatus($layoutId);

        //Check Inspection Message Enabled
        $inspection = \GRN_Portal_System_Portal_Inspection::getInstance();
        if ($inspection->isEnabled()) {
            //Get Portal Name
            require_once('portal/portal_logic.csp');
            $systemPortalLogic = \GRN_Portal_SystemPortalLogic::getInstance();
            $systemPortal = $systemPortalLogic->get($portalId);
            $portalName = $systemPortal->get('name');

            //Get Portlet Display Name
            /** @var \GRN_Portal_Portlet $portlet */
            $portlet = $layout->get(GRN_PRTL_PROPERTY_PORTLET);
            require_once('portal/portlet_util.csp');
            $portletName = \GRN_Portal_PortletUtil::getPortletName($portlet,
                $layout);

            //Write Inspection Message
            $message_type = 'portal_portlet_open';
            $message_args = [
                'pid'          => $portalId,
                'plid'         => $layoutId,
                'ppid'         => $portlet->getOID(),
                'portal_name'  => $portalName,
                'portlet_name' => $portletName,
                'open_status'  => $layout->get(GRN_PRTL_PROPERTY_IS_OPEN)
                    ? 'open' : 'close',
            ];
            $inspection->record($message_type, $message_args);
        }
    }
}
