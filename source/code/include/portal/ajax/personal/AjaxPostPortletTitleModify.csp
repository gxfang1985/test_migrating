<?php

namespace grn\portal\ajax\personal;


use grn\grn\JSONResponse;
use grn\portal\ajax\PortalAjaxCommandInterface;

require_once('portal/error_code.csp');

class AjaxPostPortletTitleModify implements PortalAjaxCommandInterface
{
    /** @var array */
    private $input;
    /** @var JSONResponse */
    private $jsonResponse;

    /**
     * @param array        $input
     * @param JSONResponse $jsonResponse
     */
    public function __construct(array $input, JSONResponse $jsonResponse)
    {
        $this->input = $input;
        $this->jsonResponse = $jsonResponse;
    }

    /**
     */
    public function execute()
    {
        $portalId = cb_at($this->input, "portal_id");
        $layoutId = cb_at($this->input, "layout_id");
        $portletId = cb_at($this->input, "portlet_id");
        $title = cb_at($this->input, "title");
        if (is_null($portalId) || is_null($layoutId) || is_null($portletId)
            || is_null($title)
        ) {
            cb_throw_error(E_COMMON_MISSING_MANDATORY);
        }

        // Evaluate Access
        require_once('portal/access_logic.csp');
        $myPortalAccessLogic = \GRN_Portal_MyPortalAccessLogic::getInstance();
        $myPortalAccessLogic->evaluateAccess();

        //Get Portlet Display Name
        require_once('portal/portlet_layout_logic.csp');
        $layoutLogic = \GRN_Portal_PortletLayoutLogic::getInstance();
        $layout = $layoutLogic->get($layoutId);
        if ( ! $layout) {
            cb_throw_error(E_GRN_PRTL_PORTLET_LAYOUT_NOT_FOUND);
        }
        /** @var \GRN_Portal_Portlet $portlet */
        $portlet = $layout->get(GRN_PRTL_PROPERTY_PORTLET);
        if ( ! $portlet) {
            cb_throw_error(E_GRN_PRTL_PORTLET_NOT_FOUND);
        }
        require_once('portal/portlet_util.csp');
        if (\GRN_Portal_PortletUtil::isNoDisplayNamePortlet($portlet)) {
            cb_throw_error('FW00043');
        }

        $prevName = \GRN_Portal_PortletUtil::getPortletName($portlet, $layout);

        //Change Portlet layout Oprn Status
        $layout->set(GRN_PRTL_PROPERTY_DISPLAY_NAME, $title);

        //Get display name mode
        $displayNameMode = cb_at($this->input, "display_name_mode");
        if ( ! \GRN_Portal_PortletUtil::isCategoryTypePortlet($portlet)
             || ($displayNameMode != GRN_PRTL_DISPLAY_NAME_MODE_DEFAULT
                 && $displayNameMode != GRN_PRTL_DISPLAY_NAME_MODE_CATEGORY)
        ) {
            $displayNameMode = GRN_PRTL_DISPLAY_NAME_MODE_DEFAULT;
        }

        //Change Portlet layout display name mode
        $layout->set(GRN_PRTL_PROPERTY_DISPLAY_NAME_MODE, $displayNameMode);

        //Check Inspection Message Enabled
        require_once('portal/inspection.csp');
        $inspection = \GRN_Portal_My_Portal_Inspection::getInstance();

        //Check Inspection Message Enabled
        if ($inspection->isEnabled()) {
            //Get Portal Name
            require_once('portal/portal_logic.csp');
            $myPortalLogic = \GRN_Portal_MyPortalLogic::getInstance();
            $portal = $myPortalLogic->get($portalId);
            $portalName = $portal->get('name');

            //Write Inspection Message
            $message_type = 'my_portal_portlet_modify';
            $message_args = [
                'pid'               => $portalId,
                'plid'              => $layoutId,
                'ppid'              => $portletId,
                'portal_name'       => $portalName,
                'display_name_mode' => $displayNameMode,
                'prev_portlet_name' => $prevName,
                'next_portlet_name' => $title,
            ];
            $inspection->record($message_type, $message_args);
        }

        if (strlen($title) === 0) {
            require_once('portal/portlet_util.csp');
            $title = \GRN_Portal_PortletUtil::getPortletName($portlet, $layout);
        }
        $this->jsonResponse->response([
            'title'             => $title,
            'display_name_mode' => $displayNameMode
        ]);
    }
}
