<?php

use grn\portal\dao\GrnPortalPortalLayoutDAO;

require_once('grn/application.csp');
require_once('grn/CBException.csp');
require_once('grn/DAOFactory.csp');
require_once('portal/error_code.csp');
require_once('portal/inspection.csp');
require_once('portal/dao/GrnPortalPortletGroupDAO.csp');
require_once('portal/dao/GrnPortalPortletDAO.csp');
require_once('portal/dao/GrnPortalPortalDAO.csp');
require_once('portal/bean/GrnPortalPortletGroup.csp');
require_once('portal/bean/GrnPortalPortlet.csp');
require_once('portal/bean/GrnPortalPortal.csp');

define('CB_PORTAL_FACADE_DB_STATUS_INSERT', 1);
define('CB_PORTAL_FACADE_DB_STATUS_UPDATE', 2);
define('CB_PORTAL_FACADE_DB_STATUS_DELETE', 3);

class PortalFacade
{
    public static $PORTAL = 1;
    public static $PORTLET = 2;
    public static $PORTLET_GROUP = 3;
    public static $PORTLET_LAYOUT = 4;
    /** @var \CB_DatabaseConnection */
    private $_db = null;

    function __construct()
    {
        $app_locator = GRN_ApplicationLocator::instance();
        $this->_db = $app_locator->getConnection('portal');
    }

    /** ***************************************************** */
    /** -----            GrnPortalPortal           --------- */
    /** ***************************************************** */
    /**
     * @param $inDataObj
     * @param $inId
     *
     * @return bool|GrnPortalPortal
     */
    public function referPortalById($inDataObj, $inId)
    {
        try {
            $inDataObj['db'] = $this->_db;
            $dao = DAOFactory::getDAOFactory(DAOFactory::$MYSQL);
            $ptldao = $dao->getGrnPortalPortalDAO();

            $inLanguage = (array_key_exists('language', $inDataObj))
                ? $inDataObj['language'] : null;
            if (is_null($inLanguage)) {
                $result = $ptldao->selectDefaultById($inDataObj, $inId);
            } else {
                $result = $ptldao->selectLocalById($inDataObj, $inId);
            }

            if ($result === false) {
                throw new CBException();
            }

            return $result;
        } catch (CBException $cbe) {
            cb_throw_error(E_GRN_PRTL_PORTAL_NOT_FOUND);
        }
    }


    /**
     * @param $inDataObj
     *
     * @return GrnPortalPortal[]
     */
    public function getPortalList($inDataObj)
    {
        try {
            $inDataObj['db'] = $this->_db;
            $dao = DAOFactory::getDAOFactory(DAOFactory::$MYSQL);
            $ptldao = $dao->getGrnPortalPortalDAO();
            /** @var CB_User $inUser */
            $inUser = (array_key_exists('user', $inDataObj))
                ? $inDataObj['user'] : null;
            $inUserId = (array_key_exists('userId', $inDataObj))
                ? $inDataObj['userId'] : null;
            $inUserId = (is_null($inUser)) ? $inUserId : $inUser->getOID();

            if (is_null($inUserId)) {
                $resultList = $ptldao->getPortalList($inDataObj);
            } else {
                $resultList = $ptldao->getPortalListByUserId($inDataObj,
                    $inUserId);
            }

            return $resultList;
        } catch (CBException $cbe) {

        }
    }

    /**
     * @param $inDataObj
     *
     * @return GrnPortalPortal[]
     */
    public function getPortalListWithNonLocal($inDataObj)
    {
        try {
            $inDataObj['db'] = $this->_db;
            $dao = DAOFactory::getDAOFactory(DAOFactory::$MYSQL);
            $ptldao = $dao->getGrnPortalPortalDAO();
            /** @var  CB_User $inUser */
            $inUser = (array_key_exists('user', $inDataObj))
                ? $inDataObj['user'] : null;
            $inUserId = (array_key_exists('userId', $inDataObj))
                ? $inDataObj['userId'] : null;
            $inUserId = (is_null($inUser)) ? $inUserId : $inUser->getOID();

            if (is_null($inUserId)) {
                $resultList = $ptldao->getPortalListWithNonLocal($inDataObj);
            } else {
                $resultList
                    = $ptldao->getPortalListWithNonLocalByUserId($inDataObj,
                    $inUserId);
            }

            return $resultList;
        } catch (CBException $cbe) {

        }
    }

    /** ***************************************************** */
    /** -----            GrnPortalPortlet           --------- */
    /** ***************************************************** */
    /**
     * @param $inDataObj
     * @param $inId
     *
     * @return bool|GrnPortalPortlet
     */
    public function referPortletById($inDataObj, $inId)
    {
        try {
            $inDataObj['db'] = $this->_db;
            $dao = DAOFactory::getDAOFactory(DAOFactory::$MYSQL);
            $pltdao = $dao->getGrnPortalPortletDAO();

            $inLanguage = (array_key_exists('language', $inDataObj))
                ? $inDataObj['language'] : null;
            if (is_null($inLanguage)) {
                $result = $pltdao->selectDefaultById($inDataObj, $inId);
            } else {
                $result = $pltdao->selectLocalById($inDataObj, $inId);
            }

            if ($result === false) {
                throw new CBException();
            }

            return $result;
        } catch (CBException $cbe) {
            cb_throw_error(E_GRN_PRTL_PORTLET_NOT_FOUND);
        }
    }

    /**
     * @param $inDataObj
     *
     * @return GrnPortalPortlet[]
     */
    public function getPortletList($inDataObj)
    {
        try {
            $inDataObj['db'] = $this->_db;
            $dao = DAOFactory::getDAOFactory(DAOFactory::$MYSQL);
            $pltdao = $dao->getGrnPortalPortletDAO();
            /** @var CB_User $inUser */
            $inUser = (array_key_exists('user', $inDataObj))
                ? $inDataObj['user'] : null;
            $inUserId = (array_key_exists('userId', $inDataObj))
                ? $inDataObj['userId'] : null;
            $inUserId = (is_null($inUser)) ? $inUserId : $inUser->getOID();

            if (is_null($inUserId)) {
                $resultList = $pltdao->getPortletList($inDataObj);
            } else {
                $resultList = $pltdao->getPortletListByUserId($inDataObj,
                    $inUserId);
            }

            return $resultList;
        } catch (CBException $cbe) {

        }
    }

    /**
     * @param $inDataObj
     *
     * @return GrnPortalPortlet[]
     */
    public function getPortletListWithNonLocal($inDataObj)
    {
        try {
            $inDataObj['db'] = $this->_db;
            $dao = DAOFactory::getDAOFactory(DAOFactory::$MYSQL);
            $pltdao = $dao->getGrnPortalPortletDAO();
            /** @var CB_User $inUser */
            $inUser = (array_key_exists('user', $inDataObj))
                ? $inDataObj['user'] : null;
            $inUserId = (array_key_exists('userId', $inDataObj))
                ? $inDataObj['userId'] : null;
            $inUserId = (is_null($inUser)) ? $inUserId : $inUser->getOID();

            if (is_null($inUserId)) {
                $resultList = $pltdao->getPortletListWithNonLocal($inDataObj);
            } else {
                $resultList
                    = $pltdao->getPortletListWithNonLocalByUserId($inDataObj,
                    $inUserId);
            }

            return $resultList;
        } catch (CBException $cbe) {

        }
    }

    /**
     * @param $inDataObj
     * @param $inType
     *
     * @return GrnPortalPortlet[]
     */
    public function getPortletListByType($inDataObj, $inType)
    {
        try {
            $inDataObj['db'] = $this->_db;
            $dao = DAOFactory::getDAOFactory(DAOFactory::$MYSQL);
            $pltdao = $dao->getGrnPortalPortletDAO();
            /** @var CB_User $inUser */
            $inUser = (array_key_exists('user', $inDataObj))
                ? $inDataObj['user'] : null;
            $inUserId = (array_key_exists('userId', $inDataObj))
                ? $inDataObj['userId'] : null;
            $inUserId = (is_null($inUser)) ? $inUserId : $inUser->getOID();

            if (is_null($inUserId)) {
                $resultList = $pltdao->getPortletListByType($inDataObj,
                    $inType);
            } else {
                $resultList = $pltdao->getPortletListByType_UserId($inDataObj,
                    $inType, $inUserId);
            }

            return $resultList;
        } catch (CBException $cbe) {

        }
    }

    /**
     * @param $inDataObj
     * @param $inNotTypeList
     *
     * @return GrnPortalPortlet[]
     */
    public function getPortletListByNotTypes($inDataObj, $inNotTypeList)
    {
        try {
            $inDataObj['db'] = $this->_db;
            $dao = DAOFactory::getDAOFactory(DAOFactory::$MYSQL);
            $pltdao = $dao->getGrnPortalPortletDAO();

            $resultList = $pltdao->getPortletListByNotTypes($inDataObj,
                $inNotTypeList);

            return $resultList;
        } catch (CBException $cbe) {

        }
    }

    /**
     * @param $inDataObj
     * @param $inGroupId
     *
     * @return GrnPortalPortlet[]
     */
    public function getPortletListByGroupId($inDataObj, $inGroupId)
    {
        try {
            $inDataObj['db'] = $this->_db;
            $dao = DAOFactory::getDAOFactory(DAOFactory::$MYSQL);
            $pltdao = $dao->getGrnPortalPortletDAO();
            /** @var CB_User $inUser */
            $inUser = (array_key_exists('user', $inDataObj))
                ? $inDataObj['user'] : null;
            $inUserId = (array_key_exists('userId', $inDataObj))
                ? $inDataObj['userId'] : null;
            $inUserId = (is_null($inUser)) ? $inUserId : $inUser->getOID();

            if (is_null($inUserId)) {
                $resultList = $pltdao->getSystemPortletListByGroupId($inDataObj,
                    $inGroupId);
            } else {
                $resultList
                    = $pltdao->getPersonalPortletListByGroupId($inDataObj,
                    $inGroupId);
            }

            return $resultList;
        } catch (CBException $cbe) {

        }
    }


    /** ***************************************************** */
    /** -----         GrnPortalPortletLayout        --------- */
    /** ***************************************************** */
    /**
     * @param $inDataObj
     * @param $inId
     *
     * @return bool|GrnPortalPortletLayout
     */
    public function referPortletLayoutById($inDataObj, $inId)
    {
        try {
            $inDataObj['db'] = $this->_db;
            $dao = DAOFactory::getDAOFactory(DAOFactory::$MYSQL);
            $pltlayoutdao = $dao->getGrnPortalPortletLayoutDAO();

            $inLanguage = (array_key_exists('language', $inDataObj))
                ? $inDataObj['language'] : null;
            if (is_null($inLanguage)) {
                $result = $pltlayoutdao->selectDefaultById($inDataObj, $inId);
            } else {
                $result = $pltlayoutdao->selectLocalById($inDataObj, $inId);
            }

            if ($result === false) {
                throw new CBException();
            }

            return $result;
        } catch (CBException $cbe) {
            cb_throw_error(E_GRN_PRTL_PORTLET_LAYOUT_NOT_FOUND);
        }
    }

    /**
     * @param $inDataObj
     * @param $inPortalId
     *
     * @return GrnPortalPortletLayout[]
     */
    public function getPortletLayoutListByPortalId($inDataObj, $inPortalId)
    {
        try {
            $inDataObj['db'] = $this->_db;
            $dao = DAOFactory::getDAOFactory(DAOFactory::$MYSQL);
            $pltlayoutdao = $dao->getGrnPortalPortletLayoutDAO();

            $resultList
                = $pltlayoutdao->getPortletLayoutListByPortalId($inDataObj,
                $inPortalId);

            return $resultList;
        } catch (CBException $cbe) {

        }
    }

    /**
     * @param $inDataObj
     * @param $inPortletId
     *
     * @return GrnPortalPortletLayout[]
     */
    public function getPortletLayoutListByPortletId($inDataObj, $inPortletId)
    {
        try {
            $inDataObj['db'] = $this->_db;
            $dao = DAOFactory::getDAOFactory(DAOFactory::$MYSQL);
            $pltlayoutdao = $dao->getGrnPortalPortletLayoutDAO();

            $resultList
                = $pltlayoutdao->getPortletLayoutListByPortletId($inDataObj,
                $inPortletId);

            return $resultList;
        } catch (CBException $cbe) {

        }
    }


    /** ***************************************************** */
    /** -----          GrnPortalPortletGroup        --------- */
    /** ***************************************************** */
    /**
     * @param $inDataObj
     * @param $inId
     *
     * @return bool|GrnPortalPortletGroup
     */
    public function referPortletGroupById($inDataObj, $inId)
    {
        try {
            $inDataObj['db'] = $this->_db;
            $dao = DAOFactory::getDAOFactory(DAOFactory::$MYSQL);
            $pltgdao = $dao->getGrnPortalPortletGroupDAO();

            $inLanguage = (array_key_exists('language', $inDataObj))
                ? $inDataObj['language'] : null;
            if (is_null($inLanguage)) {
                $result = $pltgdao->selectDefaultById($inDataObj, $inId);
            } else {
                $result = $pltgdao->selectLocalById($inDataObj, $inId);
            }

            if ($result === false) {
                throw new CBException();
            }

            return $result;
        } catch (CBException $cbe) {
            cb_throw_error(E_GRN_PRTL_PORTLET_GROUP_NOT_FOUND);
        }
    }

    /**
     * @param $inDataObj
     *
     * @return GrnPortalPortletGroup[]
     */
    public function getPortletGroupList($inDataObj)
    {
        try {
            $inDataObj['db'] = $this->_db;
            $dao = DAOFactory::getDAOFactory(DAOFactory::$MYSQL);
            $pltdao = $dao->getGrnPortalPortletGroupDAO();
            /** @var CB_User $inUser */
            $inUser = (array_key_exists('user', $inDataObj))
                ? $inDataObj['user'] : null;
            $inUserId = (array_key_exists('userId', $inDataObj))
                ? $inDataObj['userId'] : null;
            $inUserId = (is_null($inUser)) ? $inUserId : $inUser->getOID();

            if (is_null($inUserId)) {
                $resultList = $pltdao->getPortletGroupList($inDataObj);
            } else {
                $resultList = $pltdao->getPortletGroupListByUserId($inDataObj,
                    $inUserId);
            }

            return $resultList;
        } catch (CBException $cbe) {

        }
    }

    /**
     * @param $inDataObj
     *
     * @return GrnPortalPortletGroup[]
     */
    public function getPortletGroupListWithNonLocal($inDataObj)
    {
        try {
            $inDataObj['db'] = $this->_db;
            $dao = DAOFactory::getDAOFactory(DAOFactory::$MYSQL);
            $pltdao = $dao->getGrnPortalPortletGroupDAO();
            /** @var CB_User $inUser */
            $inUser = (array_key_exists('user', $inDataObj))
                ? $inDataObj['user'] : null;
            $inUserId = (array_key_exists('userId', $inDataObj))
                ? $inDataObj['userId'] : null;
            $inUserId = (is_null($inUser)) ? $inUserId : $inUser->getOID();

            if (is_null($inUserId)) {
                $resultList
                    = $pltdao->getPortletGroupListWithNonLocal($inDataObj);
            } else {
                $resultList
                    = $pltdao->getPortletGroupListWithNonLocalByUserId($inDataObj,
                    $inUserId);
            }

            return $resultList;
        } catch (CBException $cbe) {

        }
    }


    /** ***************************************************** */
    /** -----            GrnPortalLocal            --------- */
    /** ***************************************************** */
    /**
     * @param                      $inDataObj
     * @param GrnPortalPortalLocal $inPortalLocalObj
     *
     * @return bool|int
     */
    public function insertPortalLocal($inDataObj, $inPortalLocalObj)
    {
        try {
            $inDataObj['db'] = $this->_db;
            $dao = DAOFactory::getDAOFactory(DAOFactory::$MYSQL);
            $ptlLcldao = $dao->getGrnPortalPortalLocalDAO();
            $inspection = GRN_Portal_Local_Inspection::getInstance();

            $insertCount = $ptlLcldao->insert($inDataObj, $inPortalLocalObj);

            if (($insertCount > 0) && ($inspection->isEnabled())) {
                $messageType = 'portal_local_add';
                $message_args = [
                    'pid'           => $inPortalLocalObj->getParentId(),
                    'language_code' => $inPortalLocalObj->getLanguageCode(),
                    'portal_name'   => $inPortalLocalObj->getName(),
                ];

                $inspection->record($messageType, $message_args);
            }

            return $insertCount;
        } catch (CBException $cbe) {

        }
    }

    /**
     * @param                      $inDataObj
     * @param GrnPortalPortalLocal $inPortalLocalObj
     *
     * @return int
     */
    public function updatePortalLocal($inDataObj, $inPortalLocalObj)
    {
        try {
            $inDataObj['db'] = $this->_db;
            $dao = DAOFactory::getDAOFactory(DAOFactory::$MYSQL);
            $ptlLcldao = $dao->getGrnPortalPortalLocalDAO();

            $messageTypeAdd = 'portal_local_add';
            $messageTypeModify = 'portal_local_modify';
            $inspection = GRN_Portal_Local_Inspection::getInstance();

            $beforPortalLocal
                = $ptlLcldao->selectByPortalId_LanguageCode($inDataObj,
                $inPortalLocalObj);
            if ($beforPortalLocal === false) {
                $insertCount = $ptlLcldao->insert($inDataObj,
                    $inPortalLocalObj);

                if (($insertCount > 0) && ($inspection->isEnabled())) {
                    $message_args = [
                        'pid'           => $inPortalLocalObj->getParentId(),
                        'language_code' => $inPortalLocalObj->getLanguageCode(),
                        'portal_name'   => $inPortalLocalObj->getName(),
                    ];

                    $inspection->record($messageTypeAdd, $message_args);
                }

                return CB_PORTAL_FACADE_DB_STATUS_INSERT;
            } else {
                $updateCount = $ptlLcldao->update($inDataObj,
                    $inPortalLocalObj);

                //MySQLは変化が無い場合UPDATE結果が0件になる。しかし、現在のGaroonのログ仕様は変化が無くても変更ログを出力しているので、更新件数が0でもログ出力して
                if (($updateCount >= 0) && ($inspection->isEnabled())) {
                    $message_args = [
                        'pid'              => $inPortalLocalObj->getParentId(),
                        'language_code'    => $inPortalLocalObj->getLanguageCode(),
                        'prev_portal_name' => $beforPortalLocal->getName(),
                        'next_portal_name' => $inPortalLocalObj->getName(),
                    ];

                    $inspection->record($messageTypeModify, $message_args);
                }

                return CB_PORTAL_FACADE_DB_STATUS_UPDATE;
            }
        } catch (CBException $cbe) {

        }
    }

    /**
     * @param                      $inDataObj
     * @param GrnPortalPortalLocal $inPortalLocalObj
     *
     * @return int
     */
    public function deletePortalLocal($inDataObj, $inPortalLocalObj)
    {
        try {
            $inDataObj['db'] = $this->_db;
            $dao = DAOFactory::getDAOFactory(DAOFactory::$MYSQL);
            /** @var GrnPortalPortalLocalDAO $ptlLcldao */
            $ptlLcldao = $dao->getGrnPortalPortalLocalDAO();

            $messageTypeDelete = 'portal_local_delete';
            $inspection = GRN_Portal_Local_Inspection::getInstance();

            $deleteCount = 0;
            $beforPortalLocal
                = $ptlLcldao->selectByPortalId_LanguageCode($inDataObj,
                $inPortalLocalObj);
            if ($beforPortalLocal !== false) {
                $deleteCount
                    = $ptlLcldao->deleteByParentId_LanguageCode($inDataObj,
                    $inPortalLocalObj);
                if (($deleteCount > 0) && ($inspection->isEnabled())) {
                    $message_args = [
                        'pid'           => $inPortalLocalObj->getParentId(),
                        'language_code' => $inPortalLocalObj->getLanguageCode(),
                        'portal_name'   => $beforPortalLocal->getName(),
                    ];

                    $inspection->record($messageTypeDelete, $message_args);
                }
            }

            return $deleteCount;
        } catch (CBException $cbe) {

        }
    }

    /**
     * @param $inDataObj
     * @param $inPortalId
     *
     * @return GrnPortalPortalLocal[]
     */
    public function getPortalLocalListByPortalId($inDataObj, $inPortalId)
    {
        try {
            $inDataObj['db'] = $this->_db;
            $dao = DAOFactory::getDAOFactory(DAOFactory::$MYSQL);
            /** @var GrnPortalPortalLocalDAO $pltdao */
            $pltdao = $dao->getGrnPortalPortalLocalDAO();
            $resultList = $pltdao->getPortalLocalListByPortalId($inDataObj,
                $inPortalId);

            return $resultList;
        } catch (CBException $cbe) {

        }
    }


    /** ***************************************************** */
    /** -----            GrnPortletLocal           --------- */
    /** ***************************************************** */
    /**
     * @param                       $inDataObj
     * @param GrnPortalPortletLocal $inPortletLocalObj
     *
     * @return bool
     */
    public function insertPortletLocal($inDataObj, $inPortletLocalObj)
    {
        try {
            $inMessageTypeAdd = (array_key_exists('messageTypeAdd', $inDataObj))
                ? $inDataObj['messageTypeAdd'] : 'portlet_local_add';

            $inDataObj['db'] = $this->_db;
            $dao = DAOFactory::getDAOFactory(DAOFactory::$MYSQL);
            $ptlLcldao = $dao->getGrnPortalPortletLocalDAO();
            $inspection = GRN_Portal_Local_Inspection::getInstance();

            $insertCount = $ptlLcldao->insert($inDataObj, $inPortletLocalObj);

            if (($insertCount > 0) && ($inspection->isEnabled())) {
                $message_args = [
                    'ppid'          => $inPortletLocalObj->getParentId(),
                    'language_code' => $inPortletLocalObj->getLanguageCode(),
                    'portlet_name'  => $inPortletLocalObj->getName(),
                ];

                $inspection->record($inMessageTypeAdd, $message_args);
            }

            return $insertCount;
        } catch (CBException $cbe) {

        }
    }

    /**
     * @param                       $inDataObj
     * @param GrnPortalPortletLocal $inPortletLocalObj
     *
     * @return int
     */
    public function updatePortletLocal($inDataObj, $inPortletLocalObj)
    {
        try {
            $inMessageTypeAdd = (array_key_exists('messageTypeAdd',
                $inDataObj)) ? $inDataObj['messageTypeAdd']
                : 'portlet_local_add';
            $inMessageTypeModify = (array_key_exists('messageTypeModify',
                $inDataObj)) ? $inDataObj['messageTypeModify']
                : 'portlet_local_modify';

            $inDataObj['db'] = $this->_db;
            $dao = DAOFactory::getDAOFactory(DAOFactory::$MYSQL);
            $ptlLcldao = $dao->getGrnPortalPortletLocalDAO();
            $inspection = GRN_Portal_Local_Inspection::getInstance();

            $beforPortletLocal
                = $ptlLcldao->selectByPortletId_LanguageCode($inDataObj,
                $inPortletLocalObj);
            if ($beforPortletLocal === false) {
                $insertCount = $ptlLcldao->insert($inDataObj,
                    $inPortletLocalObj);

                if (($insertCount > 0) && ($inspection->isEnabled())) {
                    $message_args = [
                        'ppid'          => $inPortletLocalObj->getParentId(),
                        'language_code' => $inPortletLocalObj->getLanguageCode(),
                        'portlet_name'  => $inPortletLocalObj->getName(),
                    ];

                    $inspection->record($inMessageTypeAdd, $message_args);
                }

                return CB_PORTAL_FACADE_DB_STATUS_INSERT;
            } else {
                $updateCount = $ptlLcldao->update($inDataObj,
                    $inPortletLocalObj);

                //MySQLは変化が無い場合UPDATE結果が0件になる。しかし、現在のGaroonのログ仕様は変化が無くても変更ログを出力しているので、更新件数が0でもログ出力して
                if (($updateCount >= 0) && ($inspection->isEnabled())) {
                    $message_args = [
                        'ppid'              => $inPortletLocalObj->getParentId(),
                        'language_code'     => $inPortletLocalObj->getLanguageCode(),
                        'prev_portlet_name' => $beforPortletLocal->getName(),
                        'next_portlet_name' => $inPortletLocalObj->getName(),
                    ];

                    $inspection->record($inMessageTypeModify, $message_args);
                }

                return CB_PORTAL_FACADE_DB_STATUS_UPDATE;
            }
        } catch (CBException $cbe) {

        }
    }

    /**
     * @param                       $inDataObj
     * @param GrnPortalPortletLocal $inPortletLocalObj
     *
     * @return bool|int
     */
    public function deletePortletLocal($inDataObj, $inPortletLocalObj)
    {
        try {
            $inMessageType = (array_key_exists('messageTypeDelete', $inDataObj))
                ? $inDataObj['messageTypeDelete'] : 'portlet_local_delete';

            $inDataObj['db'] = $this->_db;
            $dao = DAOFactory::getDAOFactory(DAOFactory::$MYSQL);
            $ptlLcldao = $dao->getGrnPortalPortletLocalDAO();
            $inspection = GRN_Portal_Local_Inspection::getInstance();

            $deleteCount = 0;
            $beforPortletLocal
                = $ptlLcldao->selectByPortletId_LanguageCode($inDataObj,
                $inPortletLocalObj);
            if ($beforPortletLocal !== false) {
                $deleteCount
                    = $ptlLcldao->deleteByParentId_LanguageCode($inDataObj,
                    $inPortletLocalObj);
                if (($deleteCount > 0) && ($inspection->isEnabled())) {
                    $message_args = [
                        'ppid'          => $inPortletLocalObj->getParentId(),
                        'language_code' => $inPortletLocalObj->getLanguageCode(),
                        'portlet_name'  => $beforPortletLocal->getName(),
                    ];

                    $inspection->record($inMessageType, $message_args);
                }
            }

            return $deleteCount;
        } catch (CBException $cbe) {

        }
    }

    /**
     * @param      $inDataObj
     * @param      $inType
     * @param null $inExportLanguageCodeArray
     *
     * @return GrnPortalPortletLocal[]
     */
    public function getPortletLocalListByType_LanguageCodes(
        $inDataObj,
        $inType,
        $inExportLanguageCodeArray = null
    ) {
        try {
            $inDataObj['db'] = $this->_db;
            $dao = DAOFactory::getDAOFactory(DAOFactory::$MYSQL);
            $pltlcldao = $dao->getGrnPortalPortletLocalDAO();

            if (is_null($inExportLanguageCodeArray)) {
                $resultList = $pltlcldao->getPortletLocalListByType($inDataObj,
                    $inType);
            } else {
                $resultList
                    = $pltlcldao->getPortletLocalListByType_LanguageCodes($inDataObj,
                    $inType, $inExportLanguageCodeArray);
            }

            return $resultList;
        } catch (CBException $cbe) {

        }
    }

    /**
     * @param      $inDataObj
     * @param      $inType
     * @param      $inAllowPortletGroupIdArray
     * @param null $inExportLanguageCodeArray
     *
     * @return GrnPortalPortletLocal[]
     */
    public function getPortletLocalListByType_GroupIds_LanguageCodes(
        $inDataObj,
        $inType,
        $inAllowPortletGroupIdArray,
        $inExportLanguageCodeArray = null
    ) {
        try {
            $inDataObj['db'] = $this->_db;
            $dao = DAOFactory::getDAOFactory(DAOFactory::$MYSQL);
            $pltlcldao = $dao->getGrnPortalPortletLocalDAO();

            if (is_null($inExportLanguageCodeArray)) {
                $resultList
                    = $pltlcldao->getPortletLocalListByType_GroupIds($inDataObj,
                    $inType, $inAllowPortletGroupIdArray);
            } else {
                $resultList
                    = $pltlcldao->getPortletLocalListByType_GroupIds_LanguageCodes($inDataObj,
                    $inType, $inAllowPortletGroupIdArray,
                    $inExportLanguageCodeArray);
            }

            return $resultList;
        } catch (CBException $cbe) {

        }
    }

    /**
     * @param $inDataObj
     * @param $inPortletId
     *
     * @return GrnPortalPortletLocal[]
     */
    public function getPortletLocalListByPortletId($inDataObj, $inPortletId)
    {
        try {
            $inDataObj['db'] = $this->_db;
            $dao = DAOFactory::getDAOFactory(DAOFactory::$MYSQL);
            $pltlcldao = $dao->getGrnPortalPortletLocalDAO();
            $resultList
                = $pltlcldao->getPortletLocalListByPortletId($inDataObj,
                $inPortletId);

            return $resultList;
        } catch (CBException $cbe) {

        }
    }

    /** ***************************************************** */
    /** -----         GrnPortletLayoutLocal        --------- */
    /** ***************************************************** */
    /**
     * @param                       $inDataObj
     * @param GrnPortalPortletLocal $inPortletLayoutLocalObj
     *
     * @return int
     */
    public function updatePortletLayoutLocal(
        $inDataObj,
        $inPortletLayoutLocalObj
    ) {
        try {
            $inDataObj['db'] = $this->_db;
            $dao = DAOFactory::getDAOFactory(DAOFactory::$MYSQL);
            $ptlLcldao = $dao->getGrnPortalPortletLayoutLocalDAO();

            $inMessageTypeAdd = (array_key_exists('messageTypeAdd',
                $inDataObj)) ? $inDataObj['messageTypeAdd']
                : 'portlet_layout_local_add';
            $inMessageTypeModify = (array_key_exists('messageTypeModify',
                $inDataObj)) ? $inDataObj['messageTypeModify']
                : 'portlet_layout_local_modify';
            $inspection = GRN_Portal_Local_Inspection::getInstance();

            $beforPortletLayoutLocal
                = $ptlLcldao->selectByPortletLayoutId_LanguageCode($inDataObj,
                $inPortletLayoutLocalObj);
            if ($beforPortletLayoutLocal === false) {
                $insertCount = $ptlLcldao->insert($inDataObj,
                    $inPortletLayoutLocalObj);

                if (($insertCount > 0) && ($inspection->isEnabled())) {
                    $message_args = [
                        'plid'                => $inPortletLayoutLocalObj->getParentId(),
                        'language_code'       => $inPortletLayoutLocalObj->getLanguageCode(),
                        'portlet_layout_name' => $inPortletLayoutLocalObj->getName(),
                    ];

                    $inspection->record($inMessageTypeAdd, $message_args);
                }

                return CB_PORTAL_FACADE_DB_STATUS_INSERT;
            } else {
                $updateCount = $ptlLcldao->update($inDataObj,
                    $inPortletLayoutLocalObj);

                //MySQLは変化が無い場合UPDATE結果が0件になる。しかし、現在のGaroonのログ仕様は変化が無くても変更ログを出力しているので、更新件数が0でもログ出力して
                if (($updateCount >= 0) && ($inspection->isEnabled())) {
                    $message_args = [
                        'plid'                     => $inPortletLayoutLocalObj->getParentId(),
                        'language_code'            => $inPortletLayoutLocalObj->getLanguageCode(),
                        'prev_portlet_layout_name' => $beforPortletLayoutLocal->getName(),
                        'next_portlet_layout_name' => $inPortletLayoutLocalObj->getName(),
                    ];

                    $inspection->record($inMessageTypeModify, $message_args);
                }

                return CB_PORTAL_FACADE_DB_STATUS_UPDATE;
            }
        } catch (CBException $cbe) {

        }
    }

    /**
     * @param                       $inDataObj
     * @param GrnPortalPortletLocal $inPortletLayoutLocalObj
     *
     * @return bool|int
     */
    public function deletePortletLayoutLocal(
        $inDataObj,
        $inPortletLayoutLocalObj
    ) {
        try {
            $inDataObj['db'] = $this->_db;
            $dao = DAOFactory::getDAOFactory(DAOFactory::$MYSQL);
            $ptlLcldao = $dao->getGrnPortalPortletLayoutLocalDAO();

            $inMessageTypeDelete = (array_key_exists('messageTypeDelete',
                $inDataObj)) ? $inDataObj['messageTypeDelete']
                : 'portlet_layout_local_delete';
            $inspection = GRN_Portal_Local_Inspection::getInstance();

            $deleteCount = 0;
            $beforPortletLayoutLocal
                = $ptlLcldao->selectByPortletLayoutId_LanguageCode($inDataObj,
                $inPortletLayoutLocalObj);
            if ($beforPortletLayoutLocal !== false) {
                $deleteCount
                    = $ptlLcldao->deleteByParentId_LanguageCode($inDataObj,
                    $inPortletLayoutLocalObj);
                if (($deleteCount > 0) && ($inspection->isEnabled())) {
                    $message_args = [
                        'plid'                => $inPortletLayoutLocalObj->getParentId(),
                        'language_code'       => $inPortletLayoutLocalObj->getLanguageCode(),
                        'portlet_layout_name' => $beforPortletLayoutLocal->getName(),
                    ];

                    $inspection->record($inMessageTypeDelete, $message_args);
                }
            }

            return $deleteCount;
        } catch (CBException $cbe) {

        }
    }

    /**
     * @param $inDataObj
     * @param $inPortletLayoutId
     *
     * @return GrnPortalPortletLayoutLocal[]
     */
    public function getPortletLayoutLocalListByPortletLayoutId(
        $inDataObj,
        $inPortletLayoutId
    ) {
        try {
            $inDataObj['db'] = $this->_db;
            $dao = DAOFactory::getDAOFactory(DAOFactory::$MYSQL);
            $pltlytdao = $dao->getGrnPortalPortletLayoutLocalDAO();
            $resultList
                = $pltlytdao->getPortletLayoutLocalListByPortletLayoutId($inDataObj,
                $inPortletLayoutId);

            return $resultList;
        } catch (CBException $cbe) {

        }
    }

    /** ***************************************************** */
    /** -----          GrnPortletGroupLocal        --------- */
    /** ***************************************************** */
    /**
     * @param                       $inDataObj
     * @param GrnPortalPortletLocal $inPortletGroupLocalObj
     *
     * @return bool
     */
    public function insertPortletGroupLocal($inDataObj, $inPortletGroupLocalObj)
    {
        try {
            $inDataObj['db'] = $this->_db;
            $dao = DAOFactory::getDAOFactory(DAOFactory::$MYSQL);
            $ptltgpLcldao = $dao->getGrnPortalPortletGroupLocalDAO();
            $inspection = GRN_Portal_Local_Inspection::getInstance();

            $insertCount = $ptltgpLcldao->insert($inDataObj,
                $inPortletGroupLocalObj);

            if (($insertCount > 0) && ($inspection->isEnabled())) {
                $messageType = 'portlet_group_local_add';
                $message_args = [
                    'pgid'               => $inPortletGroupLocalObj->getParentId(),
                    'language_code'      => $inPortletGroupLocalObj->getLanguageCode(),
                    'portlet_group_name' => $inPortletGroupLocalObj->getName(),
                ];

                $inspection->record($messageType, $message_args);
            }

            return $insertCount;
        } catch (CBException $cbe) {

        }
    }

    /**
     * @param                       $inDataObj
     * @param GrnPortalPortletLocal $inPortletGroupLocalObj
     *
     * @return int
     */
    public function updatePortletGroupLocal($inDataObj, $inPortletGroupLocalObj)
    {
        try {
            $inDataObj['db'] = $this->_db;
            $dao = DAOFactory::getDAOFactory(DAOFactory::$MYSQL);
            $ptltgpLcldao = $dao->getGrnPortalPortletGroupLocalDAO();

            $messageTypeAdd = 'portlet_group_local_add';
            $messageTypeModify = 'portlet_group_local_modify';
            $inspection = GRN_Portal_Local_Inspection::getInstance();

            $beforPortletGroupLocal
                = $ptltgpLcldao->selectByPortletGroupId_LanguageCode($inDataObj,
                $inPortletGroupLocalObj);
            if ($beforPortletGroupLocal === false) {
                $insertCount = $ptltgpLcldao->insert($inDataObj,
                    $inPortletGroupLocalObj);

                if (($insertCount > 0) && ($inspection->isEnabled())) {
                    $message_args = [
                        'pgid'               => $inPortletGroupLocalObj->getParentId(),
                        'language_code'      => $inPortletGroupLocalObj->getLanguageCode(),
                        'portlet_group_name' => $inPortletGroupLocalObj->getName(),
                    ];

                    $inspection->record($messageTypeAdd, $message_args);
                }

                return CB_PORTAL_FACADE_DB_STATUS_INSERT;
            } else {
                $updateCount = $ptltgpLcldao->update($inDataObj,
                    $inPortletGroupLocalObj);

                //MySQLは変化が無い場合UPDATE結果が0件になる。しかし、現在のGaroonのログ仕様は変化が無くても変更ログを出力しているので、更新件数が0でもログ出力して
                if (($updateCount >= 0) && ($inspection->isEnabled())) {
                    $message_args = [
                        'pgid'                    => $inPortletGroupLocalObj->getParentId(),
                        'language_code'           => $inPortletGroupLocalObj->getLanguageCode(),
                        'prev_portlet_group_name' => $beforPortletGroupLocal->getName(),
                        'next_portlet_group_name' => $inPortletGroupLocalObj->getName(),
                    ];

                    $inspection->record($messageTypeModify, $message_args);
                }

                return CB_PORTAL_FACADE_DB_STATUS_UPDATE;
            }
        } catch (CBException $cbe) {

        }
    }

    /**
     * @param                       $inDataObj
     * @param GrnPortalPortletLocal $inPortletGroupLocalObj
     *
     * @return bool|int
     */
    public function deletePortletGroupLocal($inDataObj, $inPortletGroupLocalObj)
    {
        try {
            $inDataObj['db'] = $this->_db;
            $dao = DAOFactory::getDAOFactory(DAOFactory::$MYSQL);
            $ptltgpLcldao = $dao->getGrnPortalPortletGroupLocalDAO();
            $inspection = GRN_Portal_Local_Inspection::getInstance();

            $deleteCount = 0;
            $beforPortletGroupLocal
                = $ptltgpLcldao->selectByPortletGroupId_LanguageCode($inDataObj,
                $inPortletGroupLocalObj);
            if ($beforPortletGroupLocal !== false) {
                $deleteCount
                    = $ptltgpLcldao->deleteByParentId_LanguageCode($inDataObj,
                    $inPortletGroupLocalObj);
                if (($deleteCount > 0) && ($inspection->isEnabled())) {
                    $messageType = 'portlet_group_local_delete';
                    $message_args = [
                        'pgid'               => $inPortletGroupLocalObj->getParentId(),
                        'language_code'      => $inPortletGroupLocalObj->getLanguageCode(),
                        'portlet_group_name' => $beforPortletGroupLocal->getName(),
                    ];

                    $inspection->record($messageType, $message_args);
                }
            }

            return $deleteCount;
        } catch (CBException $cbe) {

        }
    }

    /**
     * @param                       $inDataObj
     * @param GrnPortalPortletLocal $inPortletGroupId
     *
     * @return GrnPortalPortletGroupLocal[]
     */
    public function getPortletGroupLocalListByPortletGroupId(
        $inDataObj,
        $inPortletGroupId
    ) {
        try {
            $inDataObj['db'] = $this->_db;
            $dao = DAOFactory::getDAOFactory(DAOFactory::$MYSQL);
            $ptltgpLcldao = $dao->getGrnPortalPortletGroupLocalDAO();
            $resultList
                = $ptltgpLcldao->getPortletGroupLocalListByPortletGroupId($inDataObj,
                $inPortletGroupId);

            return $resultList;
        } catch (CBException $cbe) {

        }
    }

    /**
     * @param string $portalId
     *
     * @return bool
     */
    public function isPortalLayoutFixedWidth($portalId)
    {
        $dao = new GrnPortalPortalLayoutDAO($this->_db);

        return $dao->isFixedWidth($portalId);
    }

    /**
     * @param string $portalId
     *
     * @return array
     */
    public function getPortalLayoutSettings($portalId)
    {
        try {
            $dao = new GrnPortalPortalLayoutDAO($this->_db);

            return $dao->getPortalLayoutSettings($portalId);
        } catch (CBException $e) {
            return [];
        }
    }

    /**
     * @param string $portalId
     * @param array  $settings
     *
     * @return bool
     */
    public function setPortalLayoutSettings($portalId, $settings)
    {
        try {
            $dao = new GrnPortalPortalLayoutDAO($this->_db);

            return $dao->setPortalLayoutSettings($portalId, $settings);
        } catch (CBException $e) {
            return false;
        }
    }

    /**
     * @param $portalId
     *
     * @return bool
     */
    public function deletePortalLayoutSettings($portalId)
    {
        try {
            $dao = new GrnPortalPortalLayoutDAO($this->_db);

            return $dao->deletePortalLayoutSettings($portalId);
        } catch (CBException $e) {
            return false;
        }
    }
}

