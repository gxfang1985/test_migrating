<?php

/**
 * ポータルアプリケーションベース
 *
 * @author  Yuichi, Nakamura 2004/11
 * @version 1.0
 * @package grn.portal
 */

/*** Garoon Base Service ***/
require_once('grn/application.csp');

/*** Portal Application ***/
require_once('portal/resources.csp');
require_once('portal/table.csp');

/**
 * ポータルアプリケーションベースクラス
 *
 * @package grn.portal
 */
class GRN_Portal_Application extends GRN_ApplicationBase
{
    /**
     * コンストラクタ
     */
    function __construct()
    {
        parent::__construct(GRN_PRTL_ID);
    }


    /** @var self */
    private static $_instance = null;

    /**
     * インスタンスの取得
     *
     * @return GRN_Portal_Application
     */
    public static function getInstance()
    {
        if ( ! isset(self::$_instance)) {
            $c = __CLASS__;
            self::$_instance = new $c;
        }

        return self::$_instance;
    }

    /**
     * 設定値の取得
     *
     * @param string $name
     *
     * @return mixed
     */
    function getConfig($name = null)
    {
        return parent::getConfig($name);
    }

    /**
     * ポートレットの設定
     *
     * @param int   $layout_id        配置情報ID
     * @param array $portlet_settings ポートレット設定
     *
     * @return bool 設定結果
     */
    function setPortletSettings($layout_id, $portlet_settings)
    {
        //ポートレット設定のシリアライズ
        $serialized_portlet_settings = serialize($portlet_settings);

        //配置情報の取得
        $app_locator = GRN_ApplicationLocator::instance();
        $portal_util = $app_locator->getTableManager('portal');

        $layout_table = $portal_util->getTableInfo('GRN_Portal_PortletLayout');
        $layout = $layout_table->getRow($layout_id);
        if ( ! $layout) {
            return false;
        }

        //ポートレット設定の格納
        $layout->set('settings', $serialized_portlet_settings);

        return true;
    }

    /**
     * アプリケーションポートレットリストの取得
     *
     * @return array $portlet_list
     *          このアプリケーションが持つ
     *          アプリケーションポートレット情報を返します
     */
    function &getPortletList()
    {
        //アプリケーションポートレットリストの生成
        $portlet_list = [];

        //アプリケーションメニューポートレットの定義
        $portlet = [
            'name'             => 'アプリケーションメニュー',
            //名前
            'type'             => 'grn.portal.application_menu',
            //種別
            'version'          => '1.0',
            //バージョン
            'set_template'     => 'portal/portlet/set_application_menu.csp',
            //設定用テンプレート名
            'command_template' => 'portal/portlet/command_set_application_menu.csp',
            //設定用テンプレート名
            'view_template'    => 'portal/portlet/view_application_menu.csp'
            //表示用テンプレート名
        ];
        $portlet_list[] = $portlet;

        //お知らせポートレットの定義
        $portlet = [
            'name'             => 'お知らせ',
            //名前
            'type'             => 'grn.portal.information',
            //種別
            'version'          => '1.0',
            //バージョン
            'set_template'     => 'portal/portlet/set_information.csp',
            //設定用テンプレート名
            'command_template' => 'portal/portlet/command_set_information.csp',
            //設定用テンプレート名
            'view_template'    => 'portal/portlet/view_information.csp'
            //表示用テンプレート名
        ];
        $portlet_list[] = $portlet;

        // カレンダーポートレットの定義
        $portlet = [
            'name'             => 'カレンダー',
            // 名前
            'type'             => 'grn.portal.calendar',
            // 種別
            'version'          => '1.0',
            // バージョン
            'set_template'     => 'portal/portlet/set_calendar.csp',
            // 設定用テンプレート名
            'command_template' => 'portal/portlet/command_set_calendar.csp',
            //設定用テンプレート名
            'view_template'    => 'portal/portlet/view_calendar.csp'
            // 表示用テンプレート名
        ];
        $portlet_list[] = $portlet;

        // 送るポートレット
        $portlet = [
            'name'             => '送信リンク',                           // 名前
            'type'             => 'grn.portal.send',                      // 種別
            'version'          => '1.0',                               // バージョン
            'set_template'     => null,                           // 設定用テンプレート名
            'command_template' => null,   //設定用テンプレート名
            'view_template'    => 'portal/portlet/send.csp'      // 表示用テンプレート名
        ];
        $portlet_list[] = $portlet;

        return $portlet_list;
    }

    /**
     * システムポータルの検出
     *
     * @param  $portal_id int         ポータルID
     *
     * @return bool $result    BOOL          検出結果
     */
    function isSystemPortal($portal_id)
    {
        //Get System Portal
        require_once('portal/portal_information_manager_base.csp');
        $system_portal_information_manager_base
            = GRN_Portal_System_Portal_Information_Manager_Base::getInstance();
        $portal =& $system_portal_information_manager_base->get($portal_id,
            CB_DATABASE_NO_LOCK);

        //Check System Portal
        if ( ! $portal) {
            return false;
        }

        return true;
    }

    /**
     * システムポートレットの検出
     *
     * @param  $portlet_id int          ポートレットID
     *
     * @return bool $result    BOOL          検出結果
     */
    function isSystemPortlet($portlet_id)
    {
        //Get System Portlet
        require_once('portal/portal_information_manager_base.csp');
        $system_portlet_information_manager_base
            = GRN_Portal_System_Portlet_Information_Manager_Base::getInstance();
        $portlet =& $system_portlet_information_manager_base->get($portlet_id,
            CB_DATABASE_NO_LOCK);

        //Check System Portlet
        if ( ! $portlet) {
            return false;
        }

        return true;
    }

    /**
     * システムポートレットグループの検出
     *
     * @param  $portlet_group_id int          ポートレットグループID
     *
     * @return bool $result           BOOL          検出結果
     */
    function isSystemPortletGroup($portlet_group_id)
    {
        //Get System Portlet Group
        require_once('portal/portal_information_manager_base.csp');
        $system_portlet_group_information_manager_base
            = GRN_Portal_System_Portlet_Group_Information_Manager_Base::getInstance();
        $portlet_group
            =& $system_portlet_group_information_manager_base->get($portlet_group_id,
            CB_DATABASE_NO_LOCK);

        //Check System Portlet Group
        if ( ! $portlet_group) {
            return false;
        }

        return true;
    }

    /**
     * システム設定
     */
    function getSystemConfigArray()
    {
        // Register Application Portlet
        require_once('portal/portlet_information_logic_base.csp');
        $system_embedded_portlet_information_logic_base
            = GRN_Portal_System_Embedded_Portlet_Information_Logic_Base::getInstance();
        $system_embedded_portlet_information_logic_base->register();

        $ret = [
            'portal_config'  =>
                [
                    [
                        'page' => 'portal/system/list',
                        'icon' => 'portal32'
                    ],
                    [
                        'page' => 'portal/system/first_portal_list',
                        'icon' => 'display32'
                    ],
                    [
                        'page' => 'portal/system/order',
                        'icon' => 'portal_order32'
                    ],
                    [
                        'page' => 'portal/system/base_view',
                        'icon' => 'myportal_template32'
                    ],
                    [
                        'page' => 'portal/system/availability_list',
                        'icon' => 'useradmin32'
                    ],
                    [
                        'page' => 'portal/system/privilege_index',
                        'icon' => 'manager32'
                    ],
                ],
            'portlet_config' =>
                [
                    [
                        'page' => 'portal/system/portlet_group_list',
                        'icon' => 'portlet_group32'
                    ],
                    [
                        'page' => 'portal/system/html_portlet_list',
                        'icon' => 'portlet_html32'
                    ],
                    [
                        'page' => 'portal/system/php_portlet_list',
                        'icon' => 'portlet_php32'
                    ],
                    [
                        'page' => 'portal/system/portlet_group_privilege_index',
                        'icon' => 'manager32'
                    ],
                    [
                        'page' => 'portal/system/portlet_import_index',
                        'icon' => 'import32'
                    ],
                    [
                        'page' => 'portal/system/portlet_export_index',
                        'icon' => 'export32'
                    ],
                ],
        ];

        if (defined('ON_FOREST')) {
            // unset php_portlet_list
            unset($ret['portlet_config'][2]);
        }

        return $ret;
    }

    /**
     * 個人設定
     */
    function getPersonalConfigArray()
    {

        // Evaluate right of My portal function access.
        require_once('portal/access_information_logic_base.csp');
        $personal_portal_access_information_logic_base_logic
            = GRN_Portal_Personal_Portal_Access_Information_Logic_Base::getInstance();

        if ($personal_portal_access_information_logic_base_logic->evaluatePersonalPortal()) {
            return [
                'my_portal_config'  =>
                    [
                        [
                            'page' => 'portal/personal/list',
                            'icon' => 'portal32'
                        ],
                        [
                            'page' => 'portal/personal/order',
                            'icon' => 'portal_order32'
                        ],
                    ],
                'my_portlet_config' =>
                    [
                        [
                            'page' => 'portal/personal/portlet_group_list',
                            'icon' => 'portlet_group32'
                        ],
                        [
                            'page' => 'portal/personal/html_portlet_list',
                            'icon' => 'portlet_html32'
                        ],
                        [
                            'page' => 'portal/personal/html_portlet_import',
                            'icon' => 'import32'
                        ],
                        [
                            'page' => 'portal/personal/html_portlet_export1',
                            'icon' => 'export32'
                        ],
                    ],
            ];
        }

        return false;
    }

    /**
     * get settings of portlet
     *
     * @param $portlet_id    id of portlet
     *
     * @return  array
     */
    function getSettingsOfPortlet($portlet_id)
    {
        require_once('portal/portlet_layout_logic.csp');
        $portlet_layout_logic = GRN_Portal_PortletLayoutLogic::getInstance();
        $portlet = $portlet_layout_logic->get($portlet_id);
        $serialized_settings = $portlet->get('settings');
        $portlet_settings = [];
        if ($serialized_settings) {
            $portlet_settings = cb_unserialize($serialized_settings,
                ["allowed_classes" => false]);
        }

        return $portlet_settings;
    }
}


