<?php

namespace grn\portal\screen;

use grn\portal\PortalLayout;
use grn\portal\PortalLayoutValidator;

require_once('portal/portal_logic.csp');
require_once('portal/error_code.csp');
require_once('fw/error_code.csp');

class CommandView
{
    /** @var array */
    private $input;
    /** @var \GRN_Portal_PortalLogicBase */
    private $logic;
    /** @var PortalLayoutValidator */
    private $validator;

    /**
     * @param array  $input
     * @param string $page
     */
    public function __construct(array $input, $page = "")
    {
        $this->input = $input;
        switch ($page) {
            case "personal":
                $this->logic = \GRN_Portal_MyPortalLogic::getInstance();
                break;
            case "operation":
                $this->logic = \GRN_Portal_OperationPortalLogic::getInstance();
                break;
            case "system":
                $this->logic = \GRN_Portal_SystemPortalLogic::getInstance();
                break;
            default:
                $this->logic = \GRN_Portal_PortalLogicBase::getInstance();
                break;
        }
        $this->validator = new PortalLayoutValidator();
    }

    /**
     * @return bool|string
     */
    public function post()
    {
        if ( ! $this->isPost()) {
            return false;
        }
        $portalId = cb_at($this->input, 'pid');
        $layoutValue = cb_at($this->input, 'portal_layout', '0');
        if (is_null($portalId)) {
            cb_throw_error(E_COMMON_MISSING_MANDATORY);
        }

        if ( ! $this->validator->validateInputString($layoutValue)) {
            // Todo : implement suitable error
            cb_throw_error();
        }

        $values = [];
        if ($layoutValue !== '0') {
            $tmpArray = explode('_', $layoutValue);
            assert('is_array($tmpArray)');
            $values = array_merge(['100'], $tmpArray);
        }

        $portalLayout = new PortalLayout($portalId);
        if ($layoutValue === '0') {
            $portalLayout->deleteLayoutSettings();
        } else {
            if ( ! $this->validator->validateColumnHasPortlet($this->logic,
                $portalId, $values)
            ) {
                cb_throw_error(E_GRN_PRTL_PORTAL_CANNOT_SET_LAYOUT);
            }

            $portalLayout->setLayoutSettings($values);
        }

        return $portalId;
    }

    /**
     * @return bool
     */
    private function isPost()
    {
        return 0 == strcasecmp(cb_at($_SERVER, 'REQUEST_METHOD'), 'POST');
    }
}
