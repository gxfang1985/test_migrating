<?php

class GRN_Portal_PortletUtil
{
    /**
     * Get portlet layout.
     *
     * @param int $layout_id
     *
     * @return GRN_Portal_PortletLayout or FALSE
     */
    public static function getPortletLayout($layout_id)
    {
        require_once('portal/portlet_layout_logic.csp');
        $portlet_layout_logic = GRN_Portal_PortletLayoutLogic::getInstance();
        $layout = $portlet_layout_logic->get($layout_id);
        if (defined('ON_FOREST')) {
            $portlet = $layout->get('portlet');
            require_once('portal/portal_logic.csp');
            $logic = GRN_Portal_PortalLogicBase::getInstance();
            if ( ! $logic->checkAvailablePortlet($portlet->get('type'),
                $portlet->get('version'))
            ) {
                return false;
            }
        }

        return $layout;
    }

    /**
     * @param \GRN_Portal_Portlet            $portlet
     * @param \GRN_Portal_PortletLayout|null $layout
     *
     * @return string
     */
    public static function getPortletName(\GRN_Portal_Portlet $portlet, $layout)
    {
        $type = $portlet->get('type');
        if ($type === GRN_PRTL_PORTLET_TYPE_HTML
            || $type === GRN_PRTL_PORTLET_TYPE_PHP
        ) {
            $user = $portlet->get(GRN_PRTL_PROPERTY_USER);
            if ($user) {
                require_once('portal/my_portlet_logic.csp');
                $portletLogic = \GRN_Portal_MyPortletLogicBase::getInstance();
            } else {
                require_once('portal/system_portlet_logic.csp');
                $portletLogic
                    = \GRN_Portal_SystemPortletLogicBase::getInstance();
            }
        } else {
            require_once('portal/system_portlet_logic.csp');
            $portletLogic
                = \GRN_Portal_SystemEmbeddedPortletLogic::getInstance();
        }

        return $portletLogic->getDisplayName($portlet, $layout);
    }

    /**
     * @param GRN_Portal_Portlet $portlet
     *
     * @return string
     */
    public static function getPortletTitle(\GRN_Portal_Portlet $portlet)
    {
        $type = $portlet->get('type');
        if ($type === GRN_PRTL_PORTLET_TYPE_HTML
            || $type === GRN_PRTL_PORTLET_TYPE_PHP
        ) {
            return $portlet->get('name');
        } else {
            require_once('portal/system_portlet_logic.csp');
            $dummy = null;
            $embeddedPortletLogic
                = GRN_Portal_SystemEmbeddedPortletLogic::getInstance();

            return $embeddedPortletLogic->getDisplayName($portlet, $dummy);
        }
    }

    /**
     * @param $portlet
     * @param $layout
     *
     * @return bool
     */
    public static function existTargetPortlet($portlet, $layout)
    {
        return ! is_null($portlet) && ! is_null($layout);
    }

    /**
     * @param string $file_name
     *
     * @return boolean
     */
    public static function isExecutableFile($file_name)
    {
        $file_name = realpath($file_name);
        if ( ! $file_name) {
            return false;
        }

        $base_dir = realpath(cb_basedir() . '/code/doc_root/');
        if (0 != strncmp($file_name, $base_dir, strlen($base_dir))) {
            return false;
        }

        if (substr(dirname($file_name), -7) !== 'portlet') {
            return false;
        }

        return true;
    }

    /**
     * @param GRN_Portal_Portlet $portlet
     *
     * @return boolean
     */
    public static function isCategoryTypePortlet(\GRN_Portal_Portlet $portlet)
    {
        //Get portlet type
        $portletType = $portlet->get('type');
        $portletArray = [
            GRN_PRTL_PORTLET_TYPE_BULLETIN,
            GRN_PRTL_PORTLET_TYPE_CABINET,
            GRN_PRTL_PORTLET_TYPE_MAIL,
            GRN_PRTL_PORTLET_TYPE_WORKFLOW,
            GRN_PRTL_PORTLET_TYPE_REPORT,
            GRN_PRTL_PORTLET_TYPE_MESSAGE,
            GRN_PRTL_PORTLET_TYPE_LINK,
            GRN_PRTL_PORTLET_TYPE_RSS
        ];

        return in_array($portletType, $portletArray);
    }

    /**
     * @param GRN_Portal_Portlet $portlet
     *
     * @return boolean
     */
    public static function isNoDisplayNamePortlet(\GRN_Portal_Portlet $portlet)
    {
        //Get portlet type
        $portletType = $portlet->get('type');
        $portletArray = [
            GRN_PRTL_PORTLET_TYPE_HTML,
            GRN_PRTL_PORTLET_TYPE_PHP,
            GRN_PRTL_PORTLET_TYPE_SEND_LINK,
            GRN_PRTL_PORTLET_TYPE_APP_MENU,
            GRN_PRTL_PORTLET_TYPE_INFORMATION,
            GRN_PRTL_PORTLET_TYPE_CALENDAR
        ];

        return in_array($portletType, $portletArray);
    }
}
