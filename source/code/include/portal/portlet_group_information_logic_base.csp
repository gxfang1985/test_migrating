<?php
/**
 * Portal Application Portlet Group Information Logic Base Class
 *
 * @author  Yuichi, Nakamura 2005/8
 * @version 1.0
 * @package grn.portal
 */

/** Portal Application **/
require_once('portal/resources.csp');

/**
 * Portlet Group Information Logic Base Class
 *
 * @package grn.portal
 */
class GRN_Portal_Portlet_Group_Information_Logic_Base
{
    //Portlet Group Information Manager Instance
    var $_portlet_group_information_manager_base = null;

    /**
     * Constructor
     */
    function __construct()
    {

    }

    /**
     * get Login User
     *
     * @access private
     * @return CB_User
     */
    function _getLoginUser()
    {
        //Get UUM Instance
        global $G_container_base;
        $grn_uum = $G_container_base->getInstance('uum');

        //Get Login User
        $login_user = $grn_uum->getLoginUser();
        if ( ! $login_user) {
            $ret = false;

            return $ret;
        }

        //Return Login User
        return $login_user;
    }
}

/**
 * System Portlet Group Information Logic Base Class
 *
 * @package grn.portal
 */
class GRN_Portal_System_Portlet_Group_Information_Logic_Base
    extends GRN_Portal_Portlet_Group_Information_Logic_Base
{
    /**
     * Constructor
     */
    function __construct()
    {

    }

    /** @var self */
    private static $_instance = null;

    /**
     * @return GRN_Portal_System_Portlet_Group_Information_Logic_Base
     */
    public static function getInstance()
    {
        if ( ! isset(self::$_instance)) {
            $c = __CLASS__;
            self::$_instance = new $c;
        }

        return self::$_instance;
    }

    /**
     * Get Portlet Group Information Manager Base
     *
     * @return GRN_Portal_System_Portlet_Group_Information_Manager_Base
     */
    function _getPortletGroupInformationManagerBase()
    {
        if (is_null($this->_portlet_group_information_manager_base)) {
            require_once('portal/portlet_group_information_manager_base.csp');
            $this->_portlet_group_information_manager_base
                = GRN_Portal_System_Portlet_Group_Information_Manager_Base::getInstance();
        }

        return $this->_portlet_group_information_manager_base;
    }

    /**
     * Get Portlet Group Information
     *
     * @param  int $portlet_group_id //Portlet Group ID
     * @param int  $lock_mode
     * @param bool $refresh
     *
     * @return int $portlet_group             //Portlet Group Information
     */
    function &get(
        $portlet_group_id,
        $lock_mode = CB_DATABASE_DEFAULT_LOCK,
        $refresh = false
    ) {
        //Check Argument
        require_once('fw/string_util.csp');
        require_once('portal/error_code.csp');
        cb_trim_check($portlet_group_id,
            E_GRN_PRTL_PORTLET_GROUP_INVALID_ID);    //Portlet Group ID

        //Get Portal Information
        $portlet_group_information_manager_base
            =& $this->_getPortletGroupInformationManagerBase();
        $portlet_group
            =& $portlet_group_information_manager_base->get($portlet_group_id,
            $lock_mode, $refresh);

        if ( ! $portlet_group) {
            //Portlet Group Not Found
            require_once('portal/error_code.csp');
            cb_throw_error(E_GRN_PRTL_PORTLET_GROUP_NOT_FOUND);
        }

        //Return Portlet Group Information
        return $portlet_group;
    }

    /**
     * Get Portlet Group Information List
     *
     * @param int  $lock_mode
     * @param bool $refresh
     *
     * @return int $portlet_group_list        //Portlet Group Information List
     */
    function &getList($lock_mode = CB_DATABASE_DEFAULT_LOCK, $refresh = false)
    {
        //Get Portlet Group Information List
        $portlet_group_information_manager_base
            = $this->_getPortletGroupInformationManagerBase();
        $portlet_group_list
            =& $portlet_group_information_manager_base->getList($lock_mode,
            $refresh);

        //Return Portal Information List
        return $portlet_group_list;
    }
}

/**
 * Personal Portlet Group Logic Base Class
 *
 * @package grn.portal
 */
class GRN_Portal_Personal_Portlet_Group_Information_Logic_Base
    extends GRN_Portal_Portlet_Group_Information_Logic_Base
{
    /**
     * Constructor
     */
    function __construct()
    {

    }

    /** @var self */
    private static $_instance = null;

    /**
     * @return GRN_Portal_Personal_Portlet_Group_Information_Logic_Base
     */
    public static function getInstance()
    {
        if ( ! isset(self::$_instance)) {
            $c = __CLASS__;
            self::$_instance = new $c;
        }

        return self::$_instance;
    }

    /**
     * Get Portlet Group Information Manager Base
     *
     * @return GRN_Portal_Personal_Portlet_Group_Information_Manager_base
     */
    function _getPortletGroupInformationManagerBase()
    {
        if (is_null($this->_portlet_group_information_manager_base)) {
            require_once('portal/portal_information_manager_base.csp');
            $this->_portlet_group_information_manager_base
                = GRN_Portal_Personal_Portlet_Group_Information_Manager_base::getInstance();
        }

        return $this->_portlet_group_information_manager_base;
    }

    /**
     * Get Portlet Group Information
     *
     * @param  int $portlet_group_id //Portlet Group ID
     * @param int  $lock_mode
     * @param bool $refresh
     *
     * @return int $portlet_group             //Portlet Group Information
     */
    function &get(
        $portlet_group_id,
        $lock_mode = CB_DATABASE_DEFAULT_LOCK,
        $refresh = false
    ) {
        //Check Argument
        require_once('fw/string_util.csp');
        require_once('portal/error_code.csp');
        cb_trim_check($portlet_group_id,
            E_GRN_PRTL_PORTLET_GROUP_INVALID_ID);   //Portlet Group ID

        //Get Login User
        $login_user = $this->_getLoginUser();
        $login_user_id = $login_user->getOID();

        //Get Portlet Group Information
        $portlet_group_information_manager_base
            = $this->_getPortletGroupInformationManagerBase();
        $portlet_group
            =& $portlet_group_information_manager_base->get($portlet_group_id,
            $login_user_id, $lock_mode, $refresh);
        if ( ! $portlet_group) {
            //Portal Not Found
            require_once('portal/error_code.csp');
            cb_throw_error(E_GRN_PRTL_PORTLET_GROUP_NOT_FOUND);
        }

        //Return Portlet Group Object
        return $portlet_group;
    }

    /**
     * Get Portlet Group Information List
     *
     * @param int  $lock_mode
     * @param bool $refresh
     *
     * @return int $portlet_group_list        //Portlet Group Information List
     */
    function &getList($lock_mode = CB_DATABASE_DEFAULT_LOCK, $refresh = false)
    {
        //Get Login User
        $login_user = $this->_getLoginUser();
        $login_user_id = $login_user->getOID();

        //Get Portlet Group Information List
        $portlet_group_information_manager_base
            = $this->_getPortletGroupInformationManagerBase();
        $portlet_group_list
            =& $portlet_group_information_manager_base->getList($login_user_id,
            $lock_mode, $refresh);

        //Return Portlet Group Information List
        return $portlet_group_list;
    }
}


