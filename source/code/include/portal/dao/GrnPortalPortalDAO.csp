<?php

require_once('fw/database.csp');
require_once('portal/bean/GrnPortalPortal.csp');

class GrnPortalPortalDAO
{
    /**
     * @param $inDataObj
     * @param $inId
     *
     * @return bool|GrnPortalPortal
     */
    public function selectDefaultById($inDataObj, $inId)
    {
        /** @var CB_DatabaseConnection $inDb */
        $inDb = $inDataObj['db'];
        $inLock = (array_key_exists('lock', $inDataObj)) ? $inDataObj['lock']
            : null;

        $query
            = "SELECT p._id, p.col_creator, p.col_creator_foreign_key, p.col_creator_name, p.col_ctime, p.col_is_open";
        $query = $query
                 . ", p.col_list_index, p.col_modifier, p.col_modifier_foreign_key, p.col_modifier_name, p.col_mtime";
        $query = $query . ", p.col_name";
        $query = $query
                 . ", p.col_reserve_blob1, p.col_reserve_blob2, p.col_reserve_blob3, p.col_reserve_int1, p.col_reserve_int2";
        $query = $query
                 . ", p.col_reserve_int3, p.col_reserve_text1, p.col_reserve_text2, p.col_reserve_text3, p.col_security_model";
        $query = $query . ", p.col_theme, p.col_user";
        $query = $query . " FROM tab_grn_portal_portal p";
        $query = $query . " WHERE p._id = '" . $inDb->escape($inId) . "'";
        $query = $inDb->select_format($query, 0, -1, $inLock);

        $result = $inDb->query($query);

        if (($result === false) || ($inDb->num_rows($result) != 1)) {
            if ($result) {
                $inDb->free_result($result);
            }

            return false;
        }

        $rawdata = $inDb->fetch_assoc($result);
        $inDb->free_result($result);

        $grnPortal = new GrnPortalPortal($rawdata);

        return $grnPortal;
    }

    /**
     * @param $inDataObj
     * @param $inId
     *
     * @return bool|GrnPortalPortal
     */
    public function selectLocalById($inDataObj, $inId)
    {
        /** @var CB_DatabaseConnection $inDb */
        $inDb = $inDataObj['db'];
        $inLock = (array_key_exists('lock', $inDataObj))
            ? $inDataObj['lock'] : null;
        $inLanguage = (array_key_exists('language', $inDataObj))
            ? $inDataObj['language'] : null;


        $query
            = "SELECT p._id, p.col_creator, p.col_creator_foreign_key, p.col_creator_name, p.col_ctime, p.col_is_open";
        $query = $query
                 . ", p.col_list_index, p.col_modifier, p.col_modifier_foreign_key, p.col_modifier_name, p.col_mtime";
        $query = $query . ", IFNULL(pl.col_name, p.col_name) AS col_name";
        $query = $query
                 . ", p.col_reserve_blob1, p.col_reserve_blob2, p.col_reserve_blob3, p.col_reserve_int1, p.col_reserve_int2";
        $query = $query
                 . ", p.col_reserve_int3, p.col_reserve_text1, p.col_reserve_text2, p.col_reserve_text3, p.col_security_model";
        $query = $query . ", p.col_theme, p.col_user";
        $query = $query
                 . " FROM tab_grn_portal_portal p LEFT JOIN (tab_grn_portal_portal_local pl INNER JOIN tab_cb_language_status l ON pl.language_id = l._id AND l.col_language = '"
                 . $inDb->escape($inLanguage) . "') ON p._id = pl.parent_id";
        $query = $query . " WHERE p._id = '" . $inDb->escape($inId) . "'";
        $query = $inDb->select_format($query, 0, -1, $inLock);

        $result = $inDb->query($query);

        if (($result === false) || ($inDb->num_rows($result) != 1)) {
            if ($result) {
                $inDb->free_result($result);
            }

            return false;
        }

        $rawdata = $inDb->fetch_assoc($result);
        $inDb->free_result($result);

        $grnPortal = new GrnPortalPortal($rawdata);

        return $grnPortal;
    }

    /**
     * @param $inDataObj
     *
     * @return array
     */
    public function getPortalList($inDataObj)
    {
        /** @var CB_DatabaseConnection $inDb */
        $inDb = $inDataObj['db'];
        $inLock = (array_key_exists('lock', $inDataObj))
            ? $inDataObj['lock'] : null;
        $inOffset = (array_key_exists('offset', $inDataObj))
            ? $inDataObj['offset'] : null;
        $inLimit = (array_key_exists('limit', $inDataObj))
            ? $inDataObj['limit'] : null;
        $inLanguage = (array_key_exists('language', $inDataObj))
            ? $inDataObj['language'] : null;

        $query
            = "SELECT p._id, p.col_creator, p.col_creator_foreign_key, p.col_creator_name, p.col_ctime, p.col_is_open";
        $query = $query
                 . ", p.col_list_index, p.col_modifier, p.col_modifier_foreign_key, p.col_modifier_name, p.col_mtime";
        $query = $query . ", IFNULL(pl.col_name, p.col_name) AS col_name";
        $query = $query
                 . ", p.col_reserve_blob1, p.col_reserve_blob2, p.col_reserve_blob3, p.col_reserve_int1, p.col_reserve_int2";
        $query = $query
                 . ", p.col_reserve_int3, p.col_reserve_text1, p.col_reserve_text2, p.col_reserve_text3, p.col_security_model";
        $query = $query . ", p.col_theme, p.col_user";
        $query = $query
                 . " FROM (tab_grn_portal_portal p LEFT JOIN (tab_grn_portal_portal_local pl INNER JOIN tab_cb_language_status l ON pl.language_id = l._id AND l.col_language = '"
                 . $inDb->escape($inLanguage) . "') ON p._id = pl.parent_id)";
        $query = $query . " WHERE p.col_user is null";
        $query = $query . " ORDER BY p.col_list_index";
        if ( ! is_null($inOffset)) {
            $query = $inDb->select_format($query, $inOffset, $inLimit, $inLock);
        }

        $result = $inDb->query($query);

        if ($result === false) {
            //Throw Query Error
            $inDb->throwError(['query' => 'query failed: ' . $query]);
        }

        $grnPortalArray = [];
        while ($rawdata = $inDb->fetch_assoc($result)) {
            $grnPortal = new GrnPortalPortal($rawdata);
            $grnPortalArray[] = $grnPortal;
        }
        $inDb->free_result($result);
        $result = false;

        return $grnPortalArray;
    }

    /**
     * @param $inDataObj
     *
     * @return array
     */
    public function getPortalListWithNonLocal($inDataObj)
    {
        /** @var CB_DatabaseConnection $inDb */
        $inDb = $inDataObj['db'];
        $inLock = (array_key_exists('lock', $inDataObj)) ? $inDataObj['lock']
            : null;
        $inOffset = (array_key_exists('offset', $inDataObj))
            ? $inDataObj['offset'] : null;
        $inLimit = (array_key_exists('limit', $inDataObj))
            ? $inDataObj['limit'] : null;

        $query
            = "SELECT p._id, p.col_creator, p.col_creator_foreign_key, p.col_creator_name, p.col_ctime, p.col_is_open";
        $query = $query
                 . ", p.col_list_index, p.col_modifier, p.col_modifier_foreign_key, p.col_modifier_name, p.col_mtime";
        $query = $query . ", p.col_name";
        $query = $query
                 . ", p.col_reserve_blob1, p.col_reserve_blob2, p.col_reserve_blob3, p.col_reserve_int1, p.col_reserve_int2";
        $query = $query
                 . ", p.col_reserve_int3, p.col_reserve_text1, p.col_reserve_text2, p.col_reserve_text3, p.col_security_model";
        $query = $query . ", p.col_theme, p.col_user";
        $query = $query . " FROM tab_grn_portal_portal p";
        $query = $query . " WHERE p.col_user is null";
        $query = $query . " ORDER BY p.col_list_index";
        if ( ! is_null($inOffset)) {
            $query = $inDb->select_format($query, $inOffset, $inLimit, $inLock);
        }

        $result = $inDb->query($query);

        if ($result === false) {
            //Throw Query Error
            $inDb->throwError(['query' => 'query failed: ' . $query]);
        }

        $grnPortalArray = [];
        while ($rawdata = $inDb->fetch_assoc($result)) {
            $grnPortal = new GrnPortalPortal($rawdata);
            $grnPortalArray[] = $grnPortal;
        }
        $inDb->free_result($result);
        $result = false;

        return $grnPortalArray;
    }

    /**
     * @param $inDataObj
     * @param $inUserId
     *
     * @return GrnPortalPortal[]
     */
    public function getPortalListByUserId($inDataObj, $inUserId)
    {
        /** @var CB_DatabaseConnection $inDb */
        $inDb = $inDataObj['db'];
        $inLock = (array_key_exists('lock', $inDataObj))
            ? $inDataObj['lock'] : null;
        $inOffset = (array_key_exists('offset', $inDataObj))
            ? $inDataObj['offset'] : null;
        $inLimit = (array_key_exists('limit', $inDataObj))
            ? $inDataObj['limit'] : null;
        $inLanguage = (array_key_exists('language', $inDataObj))
            ? $inDataObj['language'] : null;

        $query
            = "SELECT p._id, p.col_creator, p.col_creator_foreign_key, p.col_creator_name, p.col_ctime, p.col_is_open";
        $query = $query
                 . ", p.col_list_index, p.col_modifier, p.col_modifier_foreign_key, p.col_modifier_name, p.col_mtime";
        $query = $query . ", IFNULL(pl.col_name, p.col_name) AS col_name";
        $query = $query
                 . ", p.col_reserve_blob1, p.col_reserve_blob2, p.col_reserve_blob3, p.col_reserve_int1, p.col_reserve_int2";
        $query = $query
                 . ", p.col_reserve_int3, p.col_reserve_text1, p.col_reserve_text2, p.col_reserve_text3, p.col_security_model";
        $query = $query . ", p.col_theme, p.col_user";
        $query = $query
                 . " FROM (tab_grn_portal_portal p LEFT JOIN (tab_grn_portal_portal_local pl INNER JOIN tab_cb_language_status l ON pl.language_id = l._id AND l.col_language = '"
                 . $inDb->escape($inLanguage) . "') ON p._id = pl.parent_id)";
        $query = $query
                 . " INNER JOIN tab_cb_user u ON p.col_user = u._id AND u.col_deleted IS NULL";
        $query = $query . " WHERE p.col_user= '" . $inDb->escape($inUserId)
                 . "'";
        $query = $query . " ORDER BY p.col_list_index";
        if ( ! is_null($inOffset)) {
            $query = $inDb->select_format($query, $inOffset, $inLimit, $inLock);
        }

        $result = $inDb->query($query);

        if ($result === false) {
            //Throw Query Error
            $inDb->throwError(['query' => 'query failed: ' . $query]);
        }

        $grnPortalArray = [];
        while ($rawdata = $inDb->fetch_assoc($result)) {
            $grnPortal = new GrnPortalPortal($rawdata);
            $grnPortalArray[] = $grnPortal;
        }
        $inDb->free_result($result);
        $result = false;

        return $grnPortalArray;
    }

    /**
     * @param $inDataObj
     * @param $inUserId
     *
     * @return GrnPortalPortal[]
     */
    public function getPortalListWithNonLocalByUserId($inDataObj, $inUserId)
    {
        /** @var CB_DatabaseConnection $inDb */
        $inDb = $inDataObj['db'];
        $inLock = (array_key_exists('lock', $inDataObj)) ? $inDataObj['lock']
            : null;
        $inOffset = (array_key_exists('offset', $inDataObj))
            ? $inDataObj['offset'] : null;
        $inLimit = (array_key_exists('limit', $inDataObj))
            ? $inDataObj['limit'] : null;

        $query
            = "SELECT p._id, p.col_creator, p.col_creator_foreign_key, p.col_creator_name, p.col_ctime, p.col_is_open";
        $query = $query
                 . ", p.col_list_index, p.col_modifier, p.col_modifier_foreign_key, p.col_modifier_name, p.col_mtime";
        $query = $query . ", p.col_name";
        $query = $query
                 . ", p.col_reserve_blob1, p.col_reserve_blob2, p.col_reserve_blob3, p.col_reserve_int1, p.col_reserve_int2";
        $query = $query
                 . ", p.col_reserve_int3, p.col_reserve_text1, p.col_reserve_text2, p.col_reserve_text3, p.col_security_model";
        $query = $query . ", p.col_theme, p.col_user";
        $query = $query . " FROM tab_grn_portal_portal p";
        $query = $query
                 . " INNER JOIN tab_cb_user u ON p.col_user = u._id AND u.col_deleted IS NULL";
        $query = $query . " WHERE p.col_user= '" . $inDb->escape($inUserId)
                 . "'";
        $query = $query . " ORDER BY p.col_list_index";
        if ( ! is_null($inOffset)) {
            $query = $inDb->select_format($query, $inOffset, $inLimit, $inLock);
        }

        $result = $inDb->query($query);

        if ($result === false) {
            //Throw Query Error
            $inDb->throwError(['query' => 'query failed: ' . $query]);
        }

        $grnPortalArray = [];
        while ($rawdata = $inDb->fetch_assoc($result)) {
            $grnPortal = new GrnPortalPortal($rawdata);
            $grnPortalArray[] = $grnPortal;
        }
        $inDb->free_result($result);
        $result = false;

        return $grnPortalArray;
    }
}
