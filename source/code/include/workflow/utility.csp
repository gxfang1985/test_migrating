<?php

/**
 * ユーティリティ関数
 *
 * @author  Hideyasu, YOSHIDA 2004/11
 * @package grn.workflow
 * @version 1.0
 */

/**
 * N件ナビゲーションUIデータを生成する
 *
 * @param $total_count int  一覧の総数
 *
 * @reutrn array
 */
function grn_make_n_navigation($total_count, $params = null, $limit = 5)
{
    require_once('grn/controller.csp');
    $utility = new GRN_ControllerUtil();

    global $G_INPUT;

    $offset = grn_workflow_get_offset();

    //Update Start Position
    $utility->setNaviStartPosition($offset);

    //Return Navigation Infomation
    return $utility->makeNaviInformation($offset, $limit, $total_count,
        $params);
}

function grn_workflow_get_offset()
{
    global $G_INPUT;

    $offset = 0;
    if (array_key_exists('sp', $G_INPUT)) {
        //Get Start Position from SP Value
        $offset = intval($G_INPUT['sp']);
    } elseif (array_key_exists('sf', $G_INPUT)) {
        if ($G_INPUT['sf'] === '1') {
            //Get Start Position from Session
            require_once('grn/controller.csp');
            $utility = new GRN_ControllerUtil();
            $offset = $utility->getNaviStartPosition();
        }
    }

    return $offset;
}

function grn_workflow_get_item_attribute_from_translation_map($map, $input)
{

    if (defined('ON_FOREST') === true
        && isset($input['export_data']) === true
    ) {
        cb_throw_error(E_GRN_WRKF_ITEM_INVALID_INPUT_DATA);
    }

    $attribute = [];

    foreach ($map as $view => $model) {
        $attribute[$model] = isset($input[$view]) === true ? $input[$view]
            : null;
    }

    $attribute['br']
        = (isset($input['reverse_br']) === true && $input['reverse_br'] == 1)
        ? 0 : 1;

    return $attribute;
}

function grn_workflow_get_item_attribute($input, $need_required = false)
{
    $attribute = [];
    if (defined('ON_FOREST') === true
        && isset($input['export_data']) === true
    ) {
        cb_throw_error(E_GRN_WRKF_ITEM_INVALID_INPUT_DATA);
    }

    if ($need_required === false
        && isset($input['required']) === true
    ) {
        cb_throw_error(E_GRN_WRKF_ITEM_INVALID_INPUT_DATA);
    }

    foreach (
        [
            'fid',
            'iid',
            'foreign_key',
            'display_name',
            'code',
            'option_string',
            'option_string_type',
            'description',
            'description_type',
            'reverse_br',
            'separator',
            'required',
            'type',
            'export_data'
        ] as $key
    ) {
        $attribute[$key]
            = isset($input[$key]) === true ? $input[$key] : null;
    }

    $attribute['br']
        = isset($input['reverse_br']) === true && $input['reverse_br'] == 1 ? 0
        : 1;

    $attribute['description_editor'] = isset($input['editor'])
        ? $input['editor'] : null;

    return $attribute;
}
