<?php
require_once("workflow/bean/GrnWorkflowSearchCondition.csp");

/**
 *
 */
class GrnWorkflowSearchCondition_Status extends GrnWorkflowSearchCondition
{
    // Database Status choice
    const GRN_WORKFLOW_STATUS_TEMPORARY = -1; // 下書き保存
    const GRN_WORKFLOW_STATUS_UNPROCESSING = 0; // 未処理
    const GRN_WORKFLOW_STATUS_IN_PROCESS = 1; // 進行中
    const GRN_WORKFLOW_STATUS_ACCEPTANCE = 2; // 承認
    const GRN_WORKFLOW_STATUS_REJECTION = 3; // 却下
    const GRN_WORKFLOW_STATUS_REMAND = 4; // 差し戻し
    const GRN_WORKFLOW_STATUS_UNPROCESSING_CANCEL = 5; // 取り戻し
    const GRN_WORKFLOW_STATUS_IN_PROCESS_CANCEL = 6; // 取り消し
    const GRN_WORKFLOW_STATUS_FINISHED = 7; // 完了

    // External Status choice
    const EXTERNAL_STATUS_IN_PROGRESS = 0;
    const EXTERNAL_STATUS_COMPLETE = 1;
    const EXTERNAL_STATUS_REJECT = 2;
    const EXTERNAL_STATUS_APPROVED = 3;
    const EXTERNAL_STATUS_CANCEL = 4;

    private $statusMap
        = [
            self::EXTERNAL_STATUS_IN_PROGRESS => [
                self::GRN_WORKFLOW_STATUS_UNPROCESSING,
                self::GRN_WORKFLOW_STATUS_IN_PROCESS,
                self::GRN_WORKFLOW_STATUS_REMAND,
            ],
            self::EXTERNAL_STATUS_COMPLETE    => [
                self::GRN_WORKFLOW_STATUS_FINISHED,
            ],
            self::EXTERNAL_STATUS_REJECT      => [
                self::GRN_WORKFLOW_STATUS_REJECTION
            ],
            self::EXTERNAL_STATUS_APPROVED    => [
                self::GRN_WORKFLOW_STATUS_ACCEPTANCE
            ],
            self::EXTERNAL_STATUS_CANCEL      => [
                self::GRN_WORKFLOW_STATUS_IN_PROCESS_CANCEL
            ]
        ];

    private $validOperator
        = [
            parent::GRN_WORKFLOW_SEARCH_OPERATOR_EQUAL,
            parent::GRN_WORKFLOW_SEARCH_OPERATOR_NOT_EQUAL
        ];

    /**
     * @see GrnWorkflowSearchCondition::hasValidValue
     * @see @see GrnWorkflowSearchCondition::getConditionSQL
     * @return bool
     */
    public function hasValidValue()
    {
        return
            isset($this->statusMap[$this->getValue()])
            && in_array($this->getOperator(), $this->validOperator);

    }

    /**
     * @return int
     */
    public function getType()
    {
        return parent::GRN_WORKFLOW_SEARCH_ITEM_STATUS;
    }

    /**
     * @return mixed
     */
    private function getDatabaseStatus()
    {
        return $this->convertToDatabaseStatus($this->getValue());
    }

    /**
     * @return string
     */
    private function getDatabaseStatusCsv()
    {
        return implode(",", $this->getDatabaseStatus());
    }

    /**
     * @see GrnWorkflowSearchCondition::getConditionSQL
     *
     * @param CB_DatabaseConnection $db
     *
     * @return string
     */
    protected function equals(CB_DatabaseConnection $db)
    {
        return "({$this->getColumnName()} IN ({$this->getDatabaseStatusCsv()}) )";
    }

    /**
     * @see GrnWorkflowSearchCondition::getConditionSQL
     *
     * @param CB_DatabaseConnection $db
     *
     * @return string
     */
    protected function notEquals(CB_DatabaseConnection $db)
    {
        return sprintf("({$this->getColumnName()} NOT IN ({$this->getDatabaseStatusCsv()}) AND {$this->getColumnName()} <> %s)",
            self::GRN_WORKFLOW_STATUS_UNPROCESSING_CANCEL);
    }

    /**
     * @param $externalStatus
     *
     * @return mixed
     */
    protected function convertToDatabaseStatus($externalStatus)
    {
        return $this->statusMap[$externalStatus];
    }

    /**
     * @return string
     */
    protected function getColumnName()
    {
        return 'p.col_status';
    }
}
