<?php
require_once("workflow/bean/GrnWorkflowSearchCondition.csp");

/**
 *
 */
class GrnWorkflowSearchCondition_Priority extends GrnWorkflowSearchCondition
{
    // Database Priority choice
    const GRN_WORKFLOW_PRIORITY_NULL = 'null'; // 古いデータで tab_grn_workflow_petition.col_priority = null なレコードがあるのかも。今はないはず。
    const GRN_WORKFLOW_PRIORITY_NONE = 0;
    const GRN_WORKFLOW_PRIORITY_URGENT = 1;
    const GRN_WORKFLOW_PRIORITY_MAYBE_DEPRECATED = 2;

    // External Priority choice
    const EXTERNAL_PRIORITY_NONE = 0;
    const EXTERNAL_PRIORITY_URGENT = 1;

    private $priorityMap
        = [
            self::EXTERNAL_PRIORITY_NONE   => [
                self::GRN_WORKFLOW_PRIORITY_NULL,
                self::GRN_WORKFLOW_PRIORITY_NONE,
            ],
            self::EXTERNAL_PRIORITY_URGENT => [
                self::GRN_WORKFLOW_PRIORITY_URGENT
            ]
        ];

    private $validOperator
        = [
            parent::GRN_WORKFLOW_SEARCH_OPERATOR_EQUAL,
            parent::GRN_WORKFLOW_SEARCH_OPERATOR_NOT_EQUAL
        ];

    /**
     * @see GrnWorkflowSearchCondition::hasValidValue
     * @return bool|void
     * @see http://issues.dev.cybozu.co.jp/browse/GRN2-7097
     */
    public function hasValidValue()
    {
        return in_array($this->getOperator(), $this->validOperator)
               && isset($this->priorityMap[$this->getValue()]);
    }

    /**
     * @return int
     */
    public function getType()
    {
        return parent::GRN_WORKFLOW_SEARCH_ITEM_PRIORITY;
    }

    /**
     * @return mixed
     */
    private function getDatabasePriority()
    {
        return $this->convertToDatabasePriority($this->getValue());
    }

    /**
     * @return string
     */
    private function getDatabasePriorityCsv()
    {
        return implode(",", $this->getDatabasePriority());
    }

    /**
     * @see GrnWorkflowSearchCondition::getConditionSQL
     *
     * @param CB_DatabaseConnection $db
     *
     * @return string
     */
    protected function equals(CB_DatabaseConnection $db)
    {
        return "({$this->getColumnName()} IN ({$this->getDatabasePriorityCsv()}))";
    }

    /**
     * @see GrnWorkflowSearchCondition::getConditionSQL
     *
     * @param CB_DatabaseConnection $db
     *
     * @return string
     */
    protected function notEquals(CB_DatabaseConnection $db)
    {
        $priorities = $this->getDatabasePriority();
        $conditions = [];
        foreach ($priorities as $priority) {
            if ($priority === "null") {
                $conditions[] = "{$this->getColumnName()} is not null ";
            } else {
                $conditions[] = "{$this->getColumnName()} <> " . $priority;
            }
        }

        return implode(" AND ", $conditions);

    }

    /**
     * @param $externalPriority
     *
     * @return mixed
     */
    protected function convertToDatabasePriority($externalPriority)
    {
        return $this->priorityMap[$externalPriority];
    }

    /**
     * @return string
     */
    protected function getColumnName()
    {
        return "p.col_priority";
    }
}
