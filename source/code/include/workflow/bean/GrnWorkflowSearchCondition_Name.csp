<?php
require_once("workflow/bean/GrnWorkflowSearchCondition.csp");

/**
 * @see GrnWorkflowSearchCondition
 */
class GrnWorkflowSearchCondition_Name extends GrnWorkflowSearchCondition
{
    /**
     * @return int
     */
    public function getType()
    {
        return parent::GRN_WORKFLOW_SEARCH_ITEM_NAME;
    }

    /**
     * @see GrnWorkflowSearchCondition::getConditionSQL
     *
     * @param CB_DatabaseConnection $db
     *
     * @return string
     */
    protected function like(CB_DatabaseConnection $db)
    {
        return "({$this->getColumnName()} LIKE BINARY '%{$db->escapeLike($this->getValue())}%')";
    }

    /**
     * @see GrnWorkflowSearchCondition::getConditionSQL
     *
     * @param CB_DatabaseConnection $db
     *
     * @return string
     */
    protected function notLike(CB_DatabaseConnection $db)
    {
        return "({$this->getColumnName()} NOT LIKE BINARY '%{$db->escapeLike($this->getValue())}%')";
    }

    /**
     * @see GrnWorkflowSearchCondition::getConditionSQL
     *
     * @param CB_DatabaseConnection $db
     *
     * @return string
     */
    protected function equals(CB_DatabaseConnection $db)
    {
        return "({$this->getColumnName()} = '{$db->escape($this->getValue())}')";
    }

    /**
     * @see GrnWorkflowSearchCondition::getConditionSQL
     *
     * @param CB_DatabaseConnection $db
     *
     * @return string
     */
    protected function notEquals(CB_DatabaseConnection $db)
    {
        return "({$this->getColumnName()} <> '{$db->escape($this->getValue())}')";
    }

    /**
     * @return string
     */
    protected function getColumnName()
    {
        return 'p.col_name';
    }
}
