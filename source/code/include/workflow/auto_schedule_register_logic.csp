<?php
require_once('workflow/resources.csp');
require_once('workflow/WorkflowFacade.csp');
require_once('workflow/bean/GrnAutoScheduleRegister.csp');

/**
 * Class GRN_Workflow_Auto_Schedule_Register_Logic
 */
class GRN_Workflow_Auto_Schedule_Register_Logic
{
    /**
     * @return GRN_Workflow_Auto_Schedule_Register_Logic
     */
    public static function getInstance()
    {
        static $_instance = null;
        if (is_null($_instance)) {
            $_instance = new GRN_Workflow_Auto_Schedule_Register_Logic();
        }

        return $_instance;
    }

    /**
     * @param $inDataArray
     *
     * @return bool|int
     */
    public function insert($inDataArray)
    {
        $dao = new WorkflowFacade();
        $dataObj = [];
        $insertObj = new GrnAutoScheduleRegister($inDataArray);

        return $dao->insertAutoScheduleRegister($dataObj, $insertObj);
    }

    /**
     * @param $inDataArray
     *
     * @return mixed
     */
    public function update($inDataArray)
    {
        $dao = new WorkflowFacade();
        $dataObj = [];

        $upObj = new GrnAutoScheduleRegister($inDataArray);
        $column_list = array_keys($inDataArray);

        return $dao->updateAutoScheduleRegister($dataObj, $column_list, $upObj);
    }

    /**
     * @param $petition_id
     *
     * @return bool|int
     */
    public function delete($petition_id)
    {
        $dao = new WorkflowFacade();
        $dataObj = [];
        $delObj
            = new GrnAutoScheduleRegister(['col_petition_id' => $petition_id]);

        if ($this->getByPetitionId($petition_id)) {
            return $dao->deleteAutoScheduleRegister($dataObj, $delObj);
        }

        return true;
    }

    /**
     * @param array $petition_ids
     *
     * @return bool|int
     */
    public function multiDelete(Array $petition_ids)
    {
        $dao = new WorkflowFacade();
        $dataObj = [];

        return $dao->multiDeleteAutoScheduleRegister($dataObj, $petition_ids);
    }

    /**
     * @param $petition_id
     *
     * @return bool|GrnAutoScheduleSetting
     */
    public function getByPetitionId($petition_id)
    {
        $dao = new WorkflowFacade();
        $dataObj = [];
        $getObj
            = new GrnAutoScheduleRegister(['col_petition_id' => $petition_id]);

        return $dao->getAutoScheduleRegister($dataObj, $getObj);
    }
}


