<?php

require_once('fw/database.csp');
require_once('workflow/bean/GrnWorkflowCategory.csp');

class GrnWorkflowCategoryDAO
{
    /**
     * @param $inDataObj
     * @param $inFolderKey
     *
     * @return bool|GrnWorkflowCategory
     */
    public function selectByForeignKey($inDataObj, $inFolderKey)
    {
        /** @var CB_DatabaseConnection $inDb */
        $inDb = $inDataObj['db'];
        $inLock = (array_key_exists('lock', $inDataObj))
            ? $inDataObj['lock'] : null;
        $inLanguage = (array_key_exists('language', $inDataObj))
            ? $inDataObj['language'] : null;
        $inIsThrowError = (array_key_exists('isThrowError', $inDataObj))
            ? $inDataObj['isThrowError'] : false;

        $query
            = "SELECT f._id, f.col_creator_foreign_key, f.col_creator_name, f.col_ctime";
        $query = $query
                 . ", CASE WHEN uc.col_deleted IS NULL THEN f.col_creator END AS col_creator";
        $query = $query . ", f.col_foreign_key, f.col_list_index, f.col_memo";
        $query = $query
                 . ", CASE WHEN um.col_deleted IS NULL THEN f.col_modifier END AS col_modifier";
        $query = $query
                 . ", f.col_modifier_foreign_key, f.col_modifier_name, f.col_mtime";
        $query = $query . ", IFNULL(fl.col_name, f.col_name) AS col_name";
        $query = $query . ", f.col_parent";
        $query = $query . ", f.col_public_security_model, f.col_security_model";
        $query = $query
                 . " FROM tab_grn_workflow_category f LEFT JOIN (tab_grn_workflow_category_local fl INNER JOIN tab_cb_language_status l ON fl.language_id = l._id AND l.col_language = '"
                 . $inDb->escape($inLanguage) . "') ON f._id = fl.parent_id";
        $query = $query
                 . " LEFT JOIN tab_cb_user AS uc ON f.col_creator=uc._id LEFT JOIN tab_cb_user AS um ON f.col_modifier=um._id ";
        $query = $query . " WHERE f.col_foreign_key = '"
                 . $inDb->escape($inFolderKey) . "'";
        $query = $inDb->select_format($query, 0, -1, $inLock);

        $result = $inDb->query($query);

        if (($result === false) || ($inDb->num_rows($result) != 1)) {
            if ($result === false) {
                //Throw Query Error
                $inDb->throwError(['query' => 'query failed: ' . $query]);
            }

            if ($result) {
                $inDb->free_result($result);
            }

            return false;
        }

        $rawdata = $inDb->fetch_assoc($result);
        $inDb->free_result($result);

        $grnFolder = new GrnWorkflowCategory($rawdata);

        return $grnFolder;
    }

    /**
     * @param $inDataObj
     * @param $inId
     *
     * @return bool|GrnWorkflowCategory
     */
    public function selectDefaultById($inDataObj, $inId)
    {
        /** @var CB_DatabaseConnection $inDb */
        $inDb = $inDataObj['db'];
        $inLock = (array_key_exists('lock', $inDataObj)) ? $inDataObj['lock']
            : null;

        $query
            = "SELECT f._id, f.col_creator, f.col_creator_foreign_key, f.col_creator_name, f.col_ctime";
        $query = $query
                 . ", f.col_foreign_key, f.col_list_index, f.col_memo, f.col_modifier";
        $query = $query
                 . ", f.col_modifier_foreign_key, f.col_modifier_name, f.col_mtime";
        $query = $query . ", f.col_name";
        $query = $query . ", f.col_parent";
        $query = $query . ", f.col_public_security_model, f.col_security_model";
        $query = $query . " FROM tab_grn_workflow_category f";
        $query = $query . " WHERE f._id = '" . $inDb->escape($inId) . "'";
        $query = $inDb->select_format($query, 0, -1, $inLock);

        $result = $inDb->query($query);

        if (($result === false) || ($inDb->num_rows($result) != 1)) {
            if ($result) {
                $inDb->free_result($result);
            }

            return false;
        }

        $rawdata = $inDb->fetch_assoc($result);
        $inDb->free_result($result);

        $grnFolder = new GrnWorkflowCategory($rawdata);

        return $grnFolder;
    }

    /**
     * @param $inDataObj
     * @param $inId
     *
     * @return bool|GrnWorkflowCategory
     */
    public function selectLocalById($inDataObj, $inId)
    {
        /** @var CB_DatabaseConnection $inDb */
        $inDb = $inDataObj['db'];
        $inLock = (array_key_exists('lock', $inDataObj))
            ? $inDataObj['lock'] : null;
        $inLanguage = (array_key_exists('language', $inDataObj))
            ? $inDataObj['language'] : null;


        $query
            = "SELECT f._id, f.col_creator, f.col_creator_foreign_key, f.col_creator_name, f.col_ctime";
        $query = $query
                 . ", f.col_foreign_key, f.col_list_index, f.col_memo, f.col_modifier";
        $query = $query
                 . ", f.col_modifier_foreign_key, f.col_modifier_name, f.col_mtime";
        $query = $query . ", IFNULL(fl.col_name, f.col_name) AS col_name";
        $query = $query . ", f.col_parent";
        $query = $query . ", f.col_public_security_model, f.col_security_model";
        $query = $query
                 . " FROM tab_grn_workflow_category f LEFT JOIN (tab_grn_workflow_category_local fl INNER JOIN tab_cb_language_status l ON fl.language_id = l._id AND l.col_language = '"
                 . $inDb->escape($inLanguage) . "') ON f._id = fl.parent_id";
        $query = $query . " WHERE f._id = '" . $inDb->escape($inId) . "'";
        $query = $inDb->select_format($query, 0, -1, $inLock);

        $result = $inDb->query($query);

        if (($result === false) || ($inDb->num_rows($result) != 1)) {
            if ($result) {
                $inDb->free_result($result);
            }

            return false;
        }

        $rawdata = $inDb->fetch_assoc($result);
        $inDb->free_result($result);

        $grnFolder = new GrnWorkflowCategory($rawdata);

        return $grnFolder;
    }

    /**
     * @param $inDataObj
     *
     * @return GrnWorkflowCategory[]
     */
    public function getWorkflowCategoryList($inDataObj)
    {
        /** @var CB_DatabaseConnection $inDb */
        $inDb = $inDataObj['db'];
        $inLock = (array_key_exists('lock', $inDataObj))
            ? $inDataObj['lock'] : null;
        $inOffset = (array_key_exists('offset', $inDataObj))
            ? $inDataObj['offset'] : null;
        $inLimit = (array_key_exists('limit', $inDataObj))
            ? $inDataObj['limit'] : null;
        $inLanguage = (array_key_exists('language', $inDataObj))
            ? $inDataObj['language'] : null;

        $query
            = "SELECT f._id, f.col_creator_foreign_key, f.col_creator_name, f.col_ctime";
        $query = $query
                 . ", CASE WHEN uc.col_deleted IS NULL THEN f.col_creator END AS col_creator";
        $query = $query . ", f.col_foreign_key, f.col_list_index, f.col_memo";
        $query = $query
                 . ", CASE WHEN um.col_deleted IS NULL THEN f.col_modifier END AS col_modifier";
        $query = $query
                 . ", f.col_modifier_foreign_key, f.col_modifier_name, f.col_mtime";
        $query = $query . ", IFNULL(fl.col_name, f.col_name) AS col_name";
        $query = $query . ", f.col_parent";
        $query = $query . ", f.col_public_security_model, f.col_security_model";
        $query = $query
                 . " FROM (tab_grn_workflow_category f LEFT JOIN (tab_grn_workflow_category_local fl INNER JOIN tab_cb_language_status l ON fl.language_id = l._id AND l.col_language = '"
                 . $inDb->escape($inLanguage) . "') ON f._id = fl.parent_id)";
        $query = $query
                 . " LEFT JOIN tab_cb_user AS uc ON f.col_creator=uc._id LEFT JOIN tab_cb_user AS um ON f.col_modifier=um._id ";
        $query = $query . " ORDER BY f.col_list_index, f._id";
        if ( ! is_null($inOffset)) {
            $query = $inDb->select_format($query, $inOffset, $inLimit, $inLock);
        }

        $result = $inDb->query($query);

        if ($result === false) {
            //Throw Query Error
            $inDb->throwError(['query' => 'query failed: ' . $query]);
        }

        $grnFolderArray = [];
        while ($rawdata = $inDb->fetch_assoc($result)) {
            $grnFolder = new GrnWorkflowCategory($rawdata);
            $grnFolderArray[] = $grnFolder;
        }
        $inDb->free_result($result);
        $result = false;

        return $grnFolderArray;
    }

    /**
     * @param $inDataObj
     *
     * @return GrnWorkflowCategory[]
     */
    public function getWorkflowCategoryListWithNonLocal($inDataObj)
    {
        /** @var CB_DatabaseConnection $inDb */
        $inDb = $inDataObj['db'];
        $inLock = (array_key_exists('lock', $inDataObj)) ? $inDataObj['lock']
            : null;
        $inOffset = (array_key_exists('offset', $inDataObj))
            ? $inDataObj['offset'] : null;
        $inLimit = (array_key_exists('limit', $inDataObj))
            ? $inDataObj['limit'] : null;

        $query
            = "SELECT f._id, f.col_creator_foreign_key, f.col_creator_name, f.col_ctime";
        $query = $query
                 . ", CASE WHEN uc.col_deleted IS NULL THEN f.col_creator END AS col_creator";
        $query = $query . ", f.col_foreign_key, f.col_list_index, f.col_memo";
        $query = $query
                 . ", CASE WHEN um.col_deleted IS NULL THEN f.col_modifier END AS col_modifier";
        $query = $query
                 . ", f.col_modifier_foreign_key, f.col_modifier_name, f.col_mtime";
        $query = $query . ", f.col_name, f.col_parent";
        $query = $query . ", f.col_public_security_model, f.col_security_model";
        $query = $query
                 . " FROM tab_grn_workflow_category f LEFT JOIN tab_cb_user AS uc ON f.col_creator=uc._id LEFT JOIN tab_cb_user AS um ON f.col_modifier=um._id ";
        $query = $query . " ORDER BY f.col_list_index, f._id";
        if ( ! is_null($inOffset)) {
            $query = $inDb->select_format($query, $inOffset, $inLimit, $inLock);
        }

        $result = $inDb->query($query);

        if ($result === false) {
            //Throw Query Error
            $inDb->throwError(['query' => 'query failed: ' . $query]);
        }

        $grnFolderArray = [];
        while ($rawdata = $inDb->fetch_assoc($result)) {
            $grnFolder = new GrnWorkflowCategory($rawdata);
            $grnFolderArray[] = $grnFolder;
        }
        $inDb->free_result($result);
        $result = false;

        return $grnFolderArray;
    }

    /**
     * @param $inDataObj
     * @param $inParentId
     *
     * @return GrnWorkflowCategory[]
     */
    public function getWorkflowCategoryListByParentId($inDataObj, $inParentId)
    {
        /** @var CB_DatabaseConnection $inDb */
        $inDb = $inDataObj['db'];
        $inLock = (array_key_exists('lock', $inDataObj))
            ? $inDataObj['lock'] : null;
        $inOffset = (array_key_exists('offset', $inDataObj))
            ? $inDataObj['offset'] : null;
        $inLimit = (array_key_exists('limit', $inDataObj))
            ? $inDataObj['limit'] : null;
        $inLanguage = (array_key_exists('language', $inDataObj))
            ? $inDataObj['language'] : null;

        $query
            = "SELECT f._id, f.col_creator_foreign_key, f.col_creator_name, f.col_ctime";
        $query = $query
                 . ", CASE WHEN uc.col_deleted IS NULL THEN f.col_creator END AS col_creator";
        $query = $query . ", f.col_foreign_key, f.col_list_index, f.col_memo";
        $query = $query
                 . ", CASE WHEN um.col_deleted IS NULL THEN f.col_modifier END AS col_modifier";
        $query = $query
                 . ", f.col_modifier_foreign_key, f.col_modifier_name, f.col_mtime";
        $query = $query . ", IFNULL(fl.col_name, f.col_name) AS col_name";
        $query = $query . ", f.col_parent";
        $query = $query . ", f.col_public_security_model, f.col_security_model";
        $query = $query
                 . " FROM (tab_grn_workflow_category f LEFT JOIN (tab_grn_workflow_category_local fl INNER JOIN tab_cb_language_status l ON fl.language_id = l._id AND l.col_language = '"
                 . $inDb->escape($inLanguage) . "') ON f._id = fl.parent_id)";
        $query = $query
                 . " LEFT JOIN tab_cb_user AS uc ON f.col_creator=uc._id LEFT JOIN tab_cb_user AS um ON f.col_modifier=um._id ";
        $query = $query . " WHERE f.col_parent= '" . $inDb->escape($inParentId)
                 . "'";
        $query = $query . " ORDER BY f.col_list_index, f._id";
        if ( ! is_null($inOffset)) {
            $query = $inDb->select_format($query, $inOffset, $inLimit, $inLock);
        }

        $result = $inDb->query($query);

        if ($result === false) {
            //Throw Query Error
            $inDb->throwError(['query' => 'query failed: ' . $query]);
        }

        $grnFolderArray = [];
        while ($rawdata = $inDb->fetch_assoc($result)) {
            $grnFolder = new GrnWorkflowCategory($rawdata);
            $grnFolderArray[] = $grnFolder;
        }
        $inDb->free_result($result);
        $result = false;

        return $grnFolderArray;
    }

    /**
     * @param $inDataObj
     * @param $inParentId
     *
     * @return GrnWorkflowCategory[]
     */
    public function getWorkflowCategoryListByParentIdWithNonLocal(
        $inDataObj,
        $inParentId
    ) {
        /** @var CB_DatabaseConnection $inDb */
        $inDb = $inDataObj['db'];
        $inLock = (array_key_exists('lock', $inDataObj)) ? $inDataObj['lock']
            : null;
        $inOffset = (array_key_exists('offset', $inDataObj))
            ? $inDataObj['offset'] : null;
        $inLimit = (array_key_exists('limit', $inDataObj))
            ? $inDataObj['limit'] : null;

        $query
            = "SELECT f._id, f.col_creator_foreign_key, f.col_creator_name, f.col_ctime";
        $query = $query
                 . ", CASE WHEN uc.col_deleted IS NULL THEN f.col_creator END AS col_creator";
        $query = $query . ", f.col_foreign_key, f.col_list_index, f.col_memo";
        $query = $query
                 . ", CASE WHEN um.col_deleted IS NULL THEN f.col_modifier END AS col_modifier";
        $query = $query
                 . ", f.col_modifier_foreign_key, f.col_modifier_name, f.col_mtime";
        $query = $query . ", f.col_name, f.col_parent";
        $query = $query . ", f.col_public_security_model, f.col_security_model";
        $query = $query
                 . " FROM tab_grn_workflow_category f LEFT JOIN tab_cb_user AS uc ON f.col_creator=uc._id LEFT JOIN tab_cb_user AS um ON f.col_modifier=um._id ";
        $query = $query . " WHERE f.col_parent= '" . $inDb->escape($inParentId)
                 . "'";
        $query = $query . " ORDER BY f.col_list_index, f._id";
        if ( ! is_null($inOffset)) {
            $query = $inDb->select_format($query, $inOffset, $inLimit, $inLock);
        }

        $result = $inDb->query($query);

        if ($result === false) {
            //Throw Query Error
            $inDb->throwError(['query' => 'query failed: ' . $query]);
        }

        $grnFolderArray = [];
        while ($rawdata = $inDb->fetch_assoc($result)) {
            $grnFolder = new GrnWorkflowCategory($rawdata);
            $grnFolderArray[] = $grnFolder;
        }
        $inDb->free_result($result);
        $result = false;

        return $grnFolderArray;
    }

    /**
     * @param $inDataObj
     * @param $inFolderArray
     *
     * @return GrnWorkflowCategory[]
     */
    public function getWorkflowCategoryListByIds($inDataObj, $inFolderArray)
    {
        /** @var CB_DatabaseConnection $inDb */
        $inDb = $inDataObj['db'];
        $inLock = (array_key_exists('lock', $inDataObj))
            ? $inDataObj['lock'] : null;
        $inOffset = (array_key_exists('offset', $inDataObj))
            ? $inDataObj['offset'] : null;
        $inLimit = (array_key_exists('limit', $inDataObj))
            ? $inDataObj['limit'] : null;
        $inLanguage = (array_key_exists('language', $inDataObj))
            ? $inDataObj['language'] : null;

        $inEscapeFolderArray = [];
        foreach ($inFolderArray as $id) {
            $inEscapeFolderArray[] = $inDb->escape($id);
        }
        $inCategoryIds = implode("','", $inEscapeFolderArray);

        $query
            = "SELECT f._id, f.col_creator_foreign_key, f.col_creator_name, f.col_ctime";
        $query = $query
                 . ", CASE WHEN uc.col_deleted IS NULL THEN f.col_creator END AS col_creator";
        $query = $query . ", f.col_foreign_key, f.col_list_index, f.col_memo";
        $query = $query
                 . ", CASE WHEN um.col_deleted IS NULL THEN f.col_modifier END AS col_modifier";
        $query = $query
                 . ", f.col_modifier_foreign_key, f.col_modifier_name, f.col_mtime";
        $query = $query . ", IFNULL(fl.col_name, f.col_name) AS col_name";
        $query = $query . ", f.col_parent";
        $query = $query . ", f.col_public_security_model, f.col_security_model";
        $query = $query
                 . " FROM (tab_grn_workflow_category f LEFT JOIN (tab_grn_workflow_category_local fl INNER JOIN tab_cb_language_status l ON fl.language_id = l._id AND l.col_language = '"
                 . $inDb->escape($inLanguage) . "') ON f._id = fl.parent_id)";
        $query = $query
                 . " LEFT JOIN tab_cb_user AS uc ON f.col_creator=uc._id LEFT JOIN tab_cb_user AS um ON f.col_modifier=um._id ";
        $query = $query . " WHERE f._id IN ('${inCategoryIds}')";
        $query = $query . " ORDER BY f.col_list_index, f._id";
        if ( ! is_null($inOffset)) {
            $query = $inDb->select_format($query, $inOffset, $inLimit, $inLock);
        }

        $result = $inDb->query($query);

        if ($result === false) {
            //Throw Query Error
            $inDb->throwError(['query' => 'query failed: ' . $query]);
        }

        $grnFolderArray = [];
        while ($rawdata = $inDb->fetch_assoc($result)) {
            $grnFolder = new GrnWorkflowCategory($rawdata);
            $grnFolderArray[] = $grnFolder;
        }
        $inDb->free_result($result);
        $result = false;

        return $grnFolderArray;
    }

    /**
     * @param $inDataObj
     * @param $inFolderNameArray
     *
     * @return GrnWorkflowCategory[]
     */
    public function getWorkflowCategoryListByNames(
        $inDataObj,
        $inFolderNameArray
    ) {
        /** @var CB_DatabaseConnection $inDb */
        $inDb = $inDataObj['db'];
        $inLock = (array_key_exists('lock', $inDataObj))
            ? $inDataObj['lock'] : null;
        $inOffset = (array_key_exists('offset', $inDataObj))
            ? $inDataObj['offset'] : null;
        $inLimit = (array_key_exists('limit', $inDataObj))
            ? $inDataObj['limit'] : null;
        $inLanguage = (array_key_exists('language', $inDataObj))
            ? $inDataObj['language'] : null;

        $inEscapeFolderNameArray = [];
        foreach ($inFolderNameArray as $name) {
            $inEscapeFolderNameArray[] = cb_queryf($inDb,
                "(main.col_name LIKE '%@L%')", $name);
        }
        $inFolderNames = implode(" AND ", $inEscapeFolderNameArray);

        $query = "SELECT *";
        $query = $query . " FROM (";
        $query = $query
                 . "SELECT f._id, f.col_creator_foreign_key, f.col_creator_name, f.col_ctime";
        $query = $query
                 . ", CASE WHEN uc.col_deleted IS NULL THEN f.col_creator END AS col_creator";
        $query = $query . ", f.col_foreign_key, f.col_list_index, f.col_memo";
        $query = $query
                 . ", CASE WHEN um.col_deleted IS NULL THEN f.col_modifier END AS col_modifier";
        $query = $query
                 . ", f.col_modifier_foreign_key, f.col_modifier_name, f.col_mtime";
        $query = $query . ", IFNULL(fl.col_name, f.col_name) AS col_name";
        $query = $query . ", f.col_parent";
        $query = $query . ", f.col_public_security_model, f.col_security_model";
        $query = $query
                 . " FROM (tab_grn_workflow_category f LEFT JOIN (tab_grn_workflow_category_local fl INNER JOIN tab_cb_language_status l ON fl.language_id = l._id AND l.col_language = '"
                 . $inDb->escape($inLanguage) . "') ON f._id = fl.parent_id)";
        $query = $query
                 . " LEFT JOIN tab_cb_user AS uc ON f.col_creator=uc._id LEFT JOIN tab_cb_user AS um ON f.col_modifier=um._id ";
        $query = $query . ") main";
        $query = $query . " WHERE ${inFolderNames}";
        $query = $query . " ORDER BY main.col_list_index, main._id";
        if ( ! is_null($inOffset)) {
            $query = $inDb->select_format($query, $inOffset, $inLimit, $inLock);
        }

        $result = $inDb->query($query);

        if ($result === false) {
            //Throw Query Error
            $inDb->throwError(['query' => 'query failed: ' . $query]);
        }

        $grnFolderArray = [];
        while ($rawdata = $inDb->fetch_assoc($result)) {
            $grnFolder = new GrnWorkflowCategory($rawdata);
            $grnFolderArray[] = $grnFolder;
        }
        $inDb->free_result($result);
        $result = false;

        return $grnFolderArray;
    }
}
