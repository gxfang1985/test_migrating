<?php
require_once('fw/database.csp');
require_once('workflow/bean/GrnAutoScheduleSetting.csp');

class GrnAutoScheduleSettingDAO
{
    CONST AUTO_SCHEDULE_SETTING_TABLE = "tab_grn_workflow_auto_schedule_setting";

    /**
     * @param                        $inDataObj
     * @param GrnAutoScheduleSetting $autoScheduleObj
     *
     * @return bool|int
     */
    public function insert($inDataObj, GrnAutoScheduleSetting $autoScheduleObj)
    {
        /** @var CB_DatabaseConnection $inDb */
        $inDb = $inDataObj['db'];
        $query = cb_queryf(
            $inDb,
            "INSERT INTO @S( col_active, col_form, col_schedule_type,  col_appointment_type, col_schedule_start_item, col_schedule_end_item, col_creator, col_creator_foreign_key, col_creator_name, col_modifier, col_modifier_foreign_key, col_modifier_name, col_ctime, col_mtime )",
            self::AUTO_SCHEDULE_SETTING_TABLE
        );
        $query .= cb_queryf(
            $inDb,
            " VALUES ( '@S', '@S', '@S', '@S', '@S', '@S','@S', '@S', '@S', '@S', '@S', '@S', '@S', '@S');",
            $autoScheduleObj->getActive(),
            $autoScheduleObj->getFormId(),
            $autoScheduleObj->getScheduleType(),
            $autoScheduleObj->getAppointmentType(),
            $autoScheduleObj->getScheduleStartItem(),
            $autoScheduleObj->getScheduleEndItem(),
            $autoScheduleObj->getCreator(),
            $autoScheduleObj->getCreatorForeignKey(),
            $autoScheduleObj->getCreatorName(),
            $autoScheduleObj->getModifier(),
            $autoScheduleObj->getModifierForeignKey(),
            $autoScheduleObj->getModifierName(),
            $autoScheduleObj->getCtime(),
            $autoScheduleObj->getMtime()
        );

        if ($inDb->query($query) === false) {
            $inDb->throwServerError($query);
        }

        $insertCount = $inDb->affected_rows();

        return $insertCount;
    }

    /**
     * @param                        $inDataObj
     * @param GrnAutoScheduleSetting $autoScheduleObj
     * @param                        $column_list
     *
     * @return bool|int
     */
    public function updateByFormId(
        $inDataObj,
        GrnAutoScheduleSetting $autoScheduleObj,
        $column_list
    ) {
        /** @var CB_DatabaseConnection $inDb */
        $inDb = $inDataObj['db'];

        //Create Column List
        $property_list = $autoScheduleObj->convertArray();
        $form_id = $property_list['col_form'];
        unset($property_list['col_form']);

        //Create Query
        $update_list = [];
        foreach ($column_list as $column) {
            if ($column === '_id') {
                continue;
            }

            if (array_key_exists($column, $property_list)) {
                if (is_null($property_list[$column])) {
                    $update_list[$column] = cb_queryf($inDb, '@S = null',
                        $column);
                } else {
                    $update_list[$column] = cb_queryf($inDb, '@S = "@S"',
                        $column, $property_list[$column]);
                }
            }
        }
        $update_string = implode(', ', $update_list);
        $where_string = cb_queryf($inDb, "col_form = '@S'", $form_id);
        $query = sprintf(
            'UPDATE %s SET %s WHERE %s', self::AUTO_SCHEDULE_SETTING_TABLE,
            $update_string, $where_string
        );

        //Execute Query
        $result = $inDb->query($query);
        if ($result === false) {
            //Throw Query Error
            $inDb->throwError(['query' => 'query failed: ' . $query]);
        }

        $updateCount = $inDb->affected_rows();

        //Return  ID
        return $updateCount;
    }

    /**
     * @param                        $inDataObj
     * @param GrnAutoScheduleSetting $autoScheduleObj
     *
     * @return bool|GrnAutoScheduleSetting
     */
    public function getByFormId(
        $inDataObj,
        GrnAutoScheduleSetting $autoScheduleObj
    ) {
        /** @var CB_DatabaseConnection $inDb */
        $inDb = $inDataObj['db'];
        $inFormId = $autoScheduleObj->getFormId();

        $query = "SELECT ";
        $query .= "col_active, col_schedule_type, col_appointment_type, col_schedule_start_item, col_schedule_start_item, col_schedule_end_item";
        $query .= " FROM " . self::AUTO_SCHEDULE_SETTING_TABLE;
        $query = cb_queryf($inDb, $query . " WHERE  col_form = '@S'",
            $inFormId);

        $result = $inDb->query($query);

        if (($result === false) || ($inDb->num_rows($result) != 1)) {
            if ($result) {
                $inDb->free_result($result);
            }

            return false;
        }

        $row = $inDb->fetch_assoc($result);
        $inDb->free_result($result);
        $grnAutoScheduleSetting = new GrnAutoScheduleSetting($row);

        return $grnAutoScheduleSetting;
    }
}
