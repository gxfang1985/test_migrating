<?php
require_once("workflow/query/GrnWorkflowSearchQuery.csp");

class GrnWorkflowSearchPetitionInProxyApprovalFolderQuery
    extends GrnWorkflowSearchQuery
{
    private $folderIdList = [];

    public function setFolderIdList($folderIdList)
    {
        $this->folderIdList = $folderIdList;
    }

    public function getFolderIdList()
    {
        Return $this->folderIdList;
    }

    private function getFolderIdListCsv()
    {
        return implode(",", $this->getFolderIdList());
    }

    private $removedIdList = [];

    public function setRemovedIdList($removedIdList)
    {
        $this->removedIdList = $removedIdList;
    }

    public function getRemovedIdList()
    {
        return $this->removedIdList;
    }

    private function getRemoveIdListCSV()
    {
        return implode(",", $this->getRemovedIdList());
    }

    /**
     * (non-PHPdoc)
     * @see workflow/GrnWorkflowSearchPetitionQuery::getQuery()
     */
    public function getQuery()
    {
        $conditionsQuery = $this->getConditionQuery();
        $db = $this->getDatabaseConnection();

        $query = "SELECT DISTINCT "
                 . " r.col_petition, r.col_folder "
                 . " FROM "
                 . " (SELECT _id, col_list_index, col_petition, col_folder "
                 . "FROM tab_grn_workflow_folderrelation "
                 . "ORDER BY col_list_index, _id) AS r "
                 . " INNER JOIN tab_grn_workflow_petition p ON p._id = r.col_petition "
                 . " INNER JOIN tab_grn_workflow_itemdata d ON d.col_petition = p._id "
                 . " LEFT JOIN tab_cb_user pu ON p.col_user = pu._id "
                 . " WHERE ";

        $andConditions = [];
        if (count($this->getFolderIdList()) > 0) {
            $andConditions[]
                = " ( r.col_folder IN ({$this->getFolderIdListCsv()}) )";
        }
        if (strlen($conditionsQuery) > 0) {
            $andConditions[] = " ( {$conditionsQuery} ) ";
        }
        $query .= implode("AND", $andConditions);
        if (count($this->getRemovedIdList())) {
            $query .= " AND ( d._id NOT IN ({$this->getRemoveIdListCSV()}))";
        }

        $query = $db->select_format($query, $this->getOffset(),
            $this->getLimit(), CB_DATABASE_NO_LOCK);

        return $query;
    }
}
