<?php
require_once("workflow/query/GrnWorkflowSearchQuery.csp");

class GrnWorkflowSearchPetitionInApprovalPlanFolder
    extends GrnWorkflowSearchQuery
{
    /**
     *
     * @var array<string>
     */
    private $removedIdList = [];

    public function setRemovedIdList($removedIdList)
    {
        $this->removedIdList = $removedIdList;
    }

    public function getRemovedIdList()
    {
        return $this->removedIdList;
    }

    private function getRemoveIdListCSV()
    {
        return implode(",", $this->getRemovedIdList());
    }

    private $userId;

    public function setUserId($userId)
    {
        $this->userId = $userId;
    }

    public function getUserId()
    {
        return $this->userId;
    }

    public function getQuery()
    {
        $conditionsQuery = $this->getConditionQuery();
        $db = $this->getDatabaseConnection();

        $query
            = "SELECT DISTINCT "
              . " p._id id "
              . " FROM "
              . " tab_grn_workflow_petition AS p "
              . " INNER JOIN tab_grn_workflow_pathstepdata AS b ON p._id = b.col_petition "
              . " INNER JOIN tab_grn_workflow_pathstepdatauser AS c ON b._id = c.col_path_step_data "
              . " INNER JOIN tab_grn_workflow_itemdata AS d ON p._id = d.col_petition "
              . " LEFT JOIN tab_cb_user pu ON p.col_user = pu._id "
              . " WHERE "
              . " c.col_user = '{$db->escape($this->getUserId())}' "
              . " AND "
              . " p.col_status IN (" . GRN_WORKFLOW_STATUS_UNPROCESSING . ","
              . GRN_WORKFLOW_STATUS_IN_PROCESS . ","
              . GRN_WORKFLOW_STATUS_REMAND . ")";

        if (strlen($conditionsQuery)) {
            $query .= " AND ( {$conditionsQuery} )";
        }

        $query = $db->select_format($query, $this->getOffset(),
            $this->getLimit(), CB_DATABASE_NO_LOCK);

        return $query;
    }
}
