<?php

namespace grn\workflow\query;

use GrnWorkflowSearchCondition as Condition;

require_once("workflow/bean/GrnWorkflowSearchCondition.csp");

class SearchQueryBuilder
{
    /**
     * @param \GrnWorkflowSearchQuery $query
     * @param \CB_DatabaseConnection  $db
     * @param array                   $search
     *
     * @return \GrnWorkflowSearchQuery
     */
    public function build(
        \GrnWorkflowSearchQuery $query,
        \CB_DatabaseConnection $db,
        array $search
    ) {
        assert(isset($search["condition"]));
        assert(isset($search["condition_item_list"]));

        $query->setConcatinateAND(strcmp("and",
                strtolower($search["condition"])) == 0);
        $query->setDatabaseConnection($db);
        foreach ($search['condition_item_list'] as $conditionArray) {
            if ($this->isValidConditionArray($conditionArray) === false) {
                continue;
            }
            $condition = $this->createSearchCondition($conditionArray["type"]);
            $condition->setOperator($conditionArray["expr"]);
            $condition->setValue($conditionArray["value"]);
            $query->addCondition($condition);
        }

        return $query;

    }


    /**
     * @param array $conditionArray
     *
     * @return bool
     */
    private function isValidConditionArray(array $conditionArray)
    {
        return isset($conditionArray["type"], $conditionArray["expr"], $conditionArray["value"]);
    }

    /**
     * @param $type
     *
     * @return \GrnWorkflowSearchCondition_Date|\GrnWorkflowSearchCondition_FormName|\GrnWorkflowSearchCondition_Name|\GrnWorkflowSearchCondition_NUMBER|\GrnWorkflowSearchCondition_Priority|\GrnWorkflowSearchCondition_Status|\GrnWorkflowSearchCondition_String|\GrnWorkflowSearchCondition_User|null
     */
    public function createSearchCondition($type)
    {
        switch ($type) {
            case Condition::GRN_WORKFLOW_SEARCH_ITEM_NUMBER: //検索項目：番号
                require_once("workflow/bean/GrnWorkflowSearchCondition_Number.csp");

                return new \GrnWorkflowSearchCondition_Number();
                break;
            case Condition::GRN_WORKFLOW_SEARCH_ITEM_FORM_NAME: //検索項目：申請フォーム名
                require_once("workflow/bean/GrnWorkflowSearchCondition_FormName.csp");

                return new \GrnWorkflowSearchCondition_FormName();
                break;
            case Condition::GRN_WORKFLOW_SEARCH_ITEM_NAME: //検索項目：標題
                require_once("workflow/bean/GrnWorkflowSearchCondition_Name.csp");

                return new \GrnWorkflowSearchCondition_Name();
                break;
            case Condition::GRN_WORKFLOW_SEARCH_ITEM_STATUS: //検索項目：状態
                require_once("workflow/bean/GrnWorkflowSearchCondition_Status.csp");

                return new \GrnWorkflowSearchCondition_Status();
                break;
            case Condition::GRN_WORKFLOW_SEARCH_ITEM_DATE: //検索項目：日付
                require_once("workflow/bean/GrnWorkflowSearchCondition_Date.csp");

                return new \GrnWorkflowSearchCondition_Date();
                break;
            case Condition::GRN_WORKFLOW_SEARCH_ITEM_USER: //検索項目：申請者
                require_once("workflow/bean/GrnWorkflowSearchCondition_User.csp");

                return new \GrnWorkflowSearchCondition_User();
                break;
            case Condition::GRN_WORKFLOW_SEARCH_ITEM_STRING: //検索項目：項目（文字列）
                require_once("workflow/bean/GrnWorkflowSearchCondition_String.csp");

                return new \GrnWorkflowSearchCondition_String();
                break;
            case Condition::GRN_WORKFLOW_SEARCH_ITEM_PRIORITY: //検索項目：優先度
                require_once("workflow/bean/GrnWorkflowSearchCondition_Priority.csp");

                return new \GrnWorkflowSearchCondition_Priority();
                break;
            default:
                require_once("workflow/bean/GrnWorkflowSearchCondition_Null.csp");

                return new \GrnWorkflowSearchCondition_Null();
        }
    }

}
