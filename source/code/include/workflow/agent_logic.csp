<?php
/**
 * Workflow Application Access Logic Class
 *
 * @author  SHIMADA Kunihiko 2005/12
 * @version 1.0
 * @package grn.workflow
 */

/** Workflow Application **/
require_once('workflow/table.csp');
require_once('workflow/resources.csp');
require_once('workflow/agent_logic_base.csp');
require_once('workflow/error_code.csp');

/**
 * Workflow Category Access Manager Class
 *
 * @package grn.workflow
 */
class GRN_Workflow_Agent_Logic extends GRN_Workflow_Agent_Logic_Base
{

    /**
     * Constructor
     *
     * @return none
     */
    function __construct()
    {

    }

    /**
     * Get Instance
     *
     * @return GRN_Workflow_Agent_Logic $instance                  //Instance of GRN_Workflow_Catogory_Access_Logic
     */
    public static function getInstance()
    {
        static $_instance = null;
        if (is_null($_instance)) {
            $_instance = new GRN_Workflow_Agent_Logic();
        }

        return $_instance;
    }


    /**
     * Export Item Name
     *
     * @param   object $csv // CSV Writer
     *
     * @return  bool
     */
    function export_item_name($csv, $agent_type)
    {
        // Get Item Name
        require_once('fw/i18n.csp');
        $header = [];
        $header[] = cb_msg('grn.workflow.system', 'user_account');
        if ($agent_type == GRN_WORKFLOW_AGENT_TYPE_PETITION) {
            $header[] = cb_msg('grn.workflow.system',
                'agent_csv_petition_user_account');
        } elseif ($agent_type == GRN_WORKFLOW_AGENT_TYPE_APPROVAL) {
            $header[] = cb_msg('grn.workflow.system',
                'agent_csv_approval_user_account');
        }

        // Write
        $csv->writeLine($header);

        return true;
    }

    /**
     * Export agent Set Information
     *
     */
    function export($csv, $agent_type)
    {
        // Parameter Validation Check
        if ( ! $csv) {
            // CSV Write Handler Not Found
            require_once('workflow/error_code.csp');
            cb_throw_error(E_GRN_WRKF_CSV_WRITER_NOT_FOUND);
        }

        require_once('grn/uum.csp');
        global $G_container_base;
        $uum = $G_container_base->getInstance('uum');

        // Preparation
        require_once('workflow/config.csp');
        $logic = GRN_Workflow_Configs::getInstance();
        $logic = $logic->getSystemConfig();
        $agent_list = $logic->getAgentList($agent_type);

        $csv_list = [];
        foreach ($agent_list as $key => $agent) {
            $uid = $agent['user'];
            $type = $agent['agent_type'];
            $aid = $agent['agent'];
            $line = [];

            if (is_null($aid) || strlen($aid) < 1) {
                continue;
            }

            $user_info = $uum->getUserInfo($uid);
            $user = $user_info['col_foreign_key'];
            $value = $aid;
            $user_info = $uum->getUserInfo($value);
            $value = $user_info['col_foreign_key'];
            if (array_key_exists($uid, $csv_list)) {
                $line = $csv_list[$uid];
                $line[] = $value;
                $csv_list[$uid] = $line;
            } else {
                $line = [$user, $value];
                $csv_list[$uid] = $line;
            }
        }
        foreach ($csv_list as $line) {
            $csv->writeLine($line);
        }
    }

    /**
     * Import agent Set Information
     *
     */
    function import($line, $agent_type)
    {
        // Parameter Validation Check
        if ( ! $line) {
            // CSV Write Handler Not Found
            require_once('workflow/error_code.csp');
            cb_throw_error(E_GRN_WRKF_CSV_WRITER_NOT_FOUND);
        }

        require_once('grn/uum.csp');
        global $G_container_base;
        $uum = $G_container_base->getInstance('uum');

        if (($len = count($line)) < 2) {
            require_once('workflow/error_code.csp');
            cb_throw_error(E_GRN_WRKF_CSV_FILE_INVALID);
        }

        //ユーザー取得
        if ( ! ($user = $uum->getUserByForeignKey(cb_trim($line[0])))) {
            $page = '';
            if ($agent_type == GRN_WORKFLOW_AGENT_TYPE_APPROVAL) {
                $page = 'agent_approval_import1';
            } else {
                $page = 'agent_petition_import1';
            }
            cb_throw_error(E_GRN_WRKF_CSV_USER_NOT_FOUND,
                ['page' => cb_msg('grn.workflow.system', $page)],
                ['user' => cb_trim($line[0])]);
        }

        //代理人取得        
        $agent = cb_trim($line[1]);
        if (strlen($agent) > 0) {
            if ( ! ($agent = $uum->getUserByForeignKey(cb_trim($line[1])))) {
                $page = '';
                if ($agent_type == GRN_WORKFLOW_AGENT_TYPE_APPROVAL) {
                    $page = 'agent_approval_import1';
                } else {
                    $page = 'agent_petition_import1';
                }
                cb_throw_error(E_GRN_WRKF_CSV_USER_NOT_FOUND,
                    ['page' => cb_msg('grn.workflow.system', $page)],
                    ['user' => cb_trim($line[1])]);
            }
        }

        require_once('workflow/config.csp');
        $logic = GRN_Workflow_Configs::getInstance();
        $logic = $logic->getSystemConfig();

        $uid = $user->getOID();
        $aid = null;
        if (is_object($agent)) {
            $aid = $agent->getOID();
        }

        $logic->setAgent($uid, [$aid], $agent_type);

    }

}

