<?php
/**
 * Workflow Application Item Data File Base Class
 *
 * @author  Yuichi, Nakamura 2005/12
 * @version 1.0
 * @package grn.workflow
 */

/** Workflow Application **/
require_once('workflow/resources.csp');

/**
 * Item Data File Logic Base Class
 *
 * @package grn.workflow
 */
class GRN_Workflow_ItemDataFile_Logic_Base
{
    //Item Data File Manager Base Instance
    var $_item_data_file_manager_base = null;

    /**
     * Constructor
     *
     * @return none
     */
    function __construct()
    {

    }

    /**
     * Get Instance
     *
     * @return GRN_Workflow_ItemDataFile_Logic_Base $instance                  //Instance of GRN_Workflow_ItemDataFile_Logic_Base
     */
    public static function getInstance()
    {
        static $_instance = null;
        if (is_null($_instance)) {
            $_instance = new GRN_Workflow_ItemDataFile_Logic_Base();
        }

        return $_instance;
    }

    /**
     * Get Item Data File Manager Base
     *
     * @return GRN_Workflow_ItemDataFile_Manager_Base $item_data_file_manager_base         //Item Data File Manager Base
     */
    function _getItemDataFileManagerBase()
    {
        if (is_null($this->_item_data_file_manager_base)) {
            require_once('workflow/itemdatafile_manager_base.csp');
            $this->_item_data_file_manager_base
                = GRN_Workflow_ItemDataFile_Manager_Base::getInstance();
        }

        return $this->_item_data_file_manager_base;
    }

    /**
     * Get Column List
     *
     * @param  none
     *
     * @return array  $column_name_list          //Column Name List
     */
    function getColumnList()
    {
        //Get Column List
        $item_data_manager_base = $this->_getItemDataFileManagerBase();
        $column_name_list =& $item_data_manager_base->_getColumnlist();

        //Return Column Name List
        return $column_name_list;
    }

    /**
     * Get Item Data File
     *
     * @param  int   $item_data_file_id //Item Data File ID
     * @param  int   $item_data_id      //Item Data ID
     * @param  array $column_list       //Column List
     * @param  bool  $refresh           //Refresh Cache
     * @param  int   $lock_mode         //Lock Mode
     *
     * @return array  $item_data_file            //Item Data File Information Array
     */
    function &get(
        $item_data_file_id,
        $item_data_id = null,
        $column_list = [],
        $refresh = false,
        $lock_mode = CB_DATABASE_DEFAULT_LOCK
    ) {
        //Check Argument
        require_once('fw/string_util.csp');
        require_once('workflow/error_code.csp');
        cb_trim_check($item_data_file_id,
            E_GRN_WRKF_ITEMDATAFILE_INVALID_ID);  //Item Data File ID

        //Get Item Data File 
        $item_data_file_manager_base =& $this->_getItemDataFileManagerBase();
        $item_data_file
            =& $item_data_file_manager_base->get($item_data_file_id,
            $item_data_id, $column_list, $refresh, $lock_mode);
        if ( ! $item_data_file) {
            //Item Data File Not Found
            require_once('workflow/error_code.csp');
            cb_throw_error(E_GRN_WRKF_ITEMDATAFILE_NOT_FOUND);
        }

        //Return Item Data File
        return $item_data_file;
    }

    /**
     * Get Item Data File Direct
     *
     * @param  int   $item_data_file_id //Item Data File ID
     * @param  array $column_list       //Column List
     * @param  int   $lock_mode         //Lock Mode
     *
     * @return array  $item_data_file            //Item Data File Information Array
     */
    function getDirect(
        $item_data_file_id,
        $column_list = [],
        $lock_mode = CB_DATABASE_DEFAULT_LOCK
    ) {
        //Check Argument
        require_once('fw/string_util.csp');
        require_once('workflow/error_code.csp');
        cb_trim_check($item_data_file_id,
            E_GRN_WRKF_ITEMDATAFILE_INVALID_ID);    //Item Data File ID

        //Get Item Data File 
        $item_data_file_manager_base = $this->_getItemDataFileManagerBase();
        $item_data_file
            = $item_data_file_manager_base->getDirect($item_data_file_id,
            $column_list, $lock_mode);
        if ( ! $item_data_file) {
            //Item Data File Not Found
            require_once('workflow/error_code.csp');
            cb_throw_error(E_GRN_WRKF_ITEMDATAFILE_NOT_FOUND);
        }

        //Return Item Data File
        return $item_data_file;
    }

    /**
     * Get Item Data File List
     *
     * @param  int   $item_data_id //Item Data ID
     * @param  array $column_list  //Column List
     * @param  bool  $refresh      //Refresh Cache
     * @param  int   $lock_mode    //Lock Mode
     *
     * @return array  $item_data_file_list       //Item Data File Information List
     */
    function &getList(
        $item_data_id = null,
        $column_list = [],
        $refresh = false,
        $lock_mode = CB_DATABASE_DEFAULT_LOCK
    ) {
        //Get Item Data File List
        $item_data_file_manager_base =& $this->_getItemDataFileManagerBase();
        $item_data_file_list
            =& $item_data_file_manager_base->getList($item_data_id,
            $column_list, $refresh, $lock_mode);

        //Return Item Data File List
        return $item_data_file_list;
    }

    /**
     * Get Item Data File Count
     *
     * @param  int  $item_data_id //Item Data ID
     * @param  bool $refresh      //Refresh Cache
     * @param  int  $lock_mode    //Lock Mode
     *
     * @return int    $item_data_file_count                //Item Data File Count
     */
    function getCount(
        $item_data_id = null,
        $refresh = false,
        $lock_mode = CB_DATABASE_DEFAULT_LOCK
    ) {
        //Get Item Data File List
        $item_data_file_manager_base = $this->_getItemDataFileManagerBase();
        $item_data_file_count
            = $item_data_file_manager_base->getCount($item_data_id,
            $refresh, $lock_mode);

        //Return Item Data File Count
        return $item_data_file_count;
    }
}


