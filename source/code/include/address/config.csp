<?php

/**
 * Configuration for Address.
 *
 * @author  YOSHIDA, Hideyasu 2005/02
 * @version 1.0
 * @package grn.address
 */
require_once('address/resources.csp');

class GRN_Address_ConfigManager extends CB_ModuleBase
{
    private static $_instance = null;

    /**
     * @static
     * @return GRN_Address_ConfigManager
     */
    public static function getInstance()
    {
        if ( ! isset(self::$_instance)) {
            $c = __CLASS__;
            self::$_instance = new $c;
        }

        return self::$_instance;
    }

    function __construct()
    {
        parent::__construct(GRN_ADDRESS_MODULE_ID);
    }

    var $_system_config = null;

    /**
     * @return GRN_Address_Config
     */
    function getSystemConfig()
    {
        if (is_null($this->_system_config)) {
            $profile = $this->getSystemProfile();
            $this->_system_config = new GRN_Address_Config($profile);
        }

        return $this->_system_config;
    }

    var $_personal_config = [];

    function getPersonalConfig($user)
    {
        $user_id = $user->getOID();
        if ( ! array_key_exists($user_id, $this->_personal_config)) {
            $profile = $this->getUserProfile($user);
            $this->_personal_config[$user_id]
                = new GRN_Address_Config($profile);
        }

        return $this->_personal_config[$user_id];
    }
}

class GRN_Address_Config
{
    /** @var CB_Profile $_profile */
    var $_profile;

    function __construct($profile)
    {
        assert('is_object( $profile ) && is_a( $profile, \'CB_Profile\' )');

        $this->_profile = $profile;
    }

    function _updateAttribute($key, $value)
    {
        $temp = null;
        if (false === $this->_profile->getAttribute($key, $temp)) {
            return $this->_profile->createAttribute($key, $value);
        }

        return $this->_profile->updateAttribute($key, $value);
    }

    function listAttendeeItems()
    {
        $value = null;
        $retval = $this->_profile->getAttribute('attendees', $value);

        $attendees = [];
        if ($retval && is_string($value)) {
            $attendees = mb_split("\r\n", $value);
        }

        foreach ($attendees as $key => $attendee) {
            if (mb_strlen($attendee) == 0) {
                unset($attendees[$key]);
            }
        }

        return $attendees;
    }

    function setAttendeeItems($attendees)
    {
        $str_attendees = '';
        if (is_array($attendees)) {
            foreach ($attendees as $attendee) {
                if (0 == mb_strlent($attendee)) {
                    continue;
                }

                if ("\r\n" == $attendee || "\r" == $attendee
                    || "\n" == $attendee
                ) {
                    continue;
                }

                $str_attendees .= $attendee . "\r\n";
            }
        } else {
            $str_attendees = $attendees;
        }

        return $this->_updateAttribute('attendees', $str_attendees);
    }

    var $_builtin_items
        = [
            'subject'                   => [
                'type'       => GRN_ADDRESS_ITEM_STRING,
                'not_modify' => 0,
                'necessary'  => 1,
                'use'        => 1,
                'display'    => 1,
                'sso'        => 0
            ],
            'personal_name'             => [
                'type'       => GRN_ADDRESS_ITEM_STRING,
                'not_modify' => 0,
                'necessary'  => 0,
                'use'        => 1,
                'display'    => 1,
                'sso'        => 0
            ],
            'family_name'               => [
                'type'       => GRN_ADDRESS_ITEM_STRING,
                'not_modify' => 0,
                'necessary'  => 0,
                'use'        => 1,
                'display'    => 1,
                'sso'        => 0
            ],
            'given_name'                => [
                'type'       => GRN_ADDRESS_ITEM_STRING,
                'not_modify' => 0,
                'necessary'  => 0,
                'use'        => 1,
                'display'    => 1,
                'sso'        => 0
            ],
            'personal_sort_key'         => [
                'type'       => GRN_ADDRESS_ITEM_STRING,
                'not_modify' => 0,
                'necessary'  => 0,
                'use'        => 1,
                'display'    => 0,
                'sso'        => 0
            ],
            'family_sort_key'           => [
                'type'       => GRN_ADDRESS_ITEM_STRING,
                'not_modify' => 0,
                'necessary'  => 0,
                'use'        => 1,
                'display'    => 0,
                'sso'        => 0
            ],
            'given_sort_key'            => [
                'type'       => GRN_ADDRESS_ITEM_STRING,
                'not_modify' => 0,
                'necessary'  => 0,
                'use'        => 1,
                'display'    => 0,
                'sso'        => 0
            ],
            'company_name'              => [
                'type'       => GRN_ADDRESS_ITEM_STRING,
                'not_modify' => 0,
                'necessary'  => 0,
                'use'        => 1,
                'display'    => 1,
                'sso'        => 0
            ],
            'company_sort_key'          => [
                'type'       => GRN_ADDRESS_ITEM_STRING,
                'not_modify' => 0,
                'necessary'  => 0,
                'use'        => 1,
                'display'    => 0,
                'sso'        => 0
            ],
            'section_name'              => [
                'type'       => GRN_ADDRESS_ITEM_STRING,
                'not_modify' => 0,
                'necessary'  => 0,
                'use'        => 1,
                'display'    => 1,
                'sso'        => 0
            ],
            'zip_code'                  => [
                'type'       => GRN_ADDRESS_ITEM_STRING,
                'not_modify' => 0,
                'necessary'  => 0,
                'use'        => 1,
                'display'    => 0,
                'sso'        => 0
            ],
            'physical_address'          => [
                'type'       => GRN_ADDRESS_ITEM_STRING,
                'not_modify' => 0,
                'necessary'  => 0,
                'use'        => 1,
                'display'    => 0,
                'sso'        => 0
            ],
            'map'                       => [
                'type'       => GRN_ADDRESS_ITEM_STRING,
                'not_modify' => 0,
                'necessary'  => 0,
                'use'        => 1,
                'display'    => 0,
                'sso'        => 0
            ],
            'route'                     => [
                'type'       => GRN_ADDRESS_ITEM_STRING,
                'not_modify' => 0,
                'necessary'  => 0,
                'use'        => 1,
                'display'    => 0,
                'sso'        => 0
            ],
            'route_detail'              => [
                'type'       => GRN_ADDRESS_ITEM_STRING,
                'not_modify' => 0,
                'necessary'  => 0,
                'use'        => 1,
                'display'    => 0,
                'sso'        => 0
            ],
            'route_time'                => [
                'type'       => GRN_ADDRESS_ITEM_STRING,
                'not_modify' => 0,
                'necessary'  => 0,
                'use'        => 1,
                'display'    => 0,
                'sso'        => 0
            ],
            'route_fare'                => [
                'type'       => GRN_ADDRESS_ITEM_STRING,
                'not_modify' => 0,
                'necessary'  => 0,
                'use'        => 1,
                'display'    => 0,
                'sso'        => 0
            ],
            'company_telephone_number'  => [
                'type'       => GRN_ADDRESS_ITEM_STRING,
                'not_modify' => 0,
                'necessary'  => 0,
                'use'        => 1,
                'display'    => 0,
                'sso'        => 0
            ],
            'facsimile_number'          => [
                'type'       => GRN_ADDRESS_ITEM_STRING,
                'not_modify' => 0,
                'necessary'  => 0,
                'use'        => 1,
                'display'    => 0,
                'sso'        => 0
            ],
            'url'                       => [
                'type'       => GRN_ADDRESS_ITEM_URL,
                'not_modify' => 0,
                'necessary'  => 0,
                'use'        => 1,
                'display'    => 0,
                'sso'        => 0
            ],
            'post_name'                 => [
                'type'       => GRN_ADDRESS_ITEM_STRING,
                'not_modify' => 0,
                'necessary'  => 0,
                'use'        => 1,
                'display'    => 0,
                'sso'        => 0
            ],
            'personal_telephone_number' => [
                'type'       => GRN_ADDRESS_ITEM_STRING,
                'not_modify' => 0,
                'necessary'  => 0,
                'use'        => 1,
                'display'    => 1,
                'sso'        => 0
            ],
            'email_address'             => [
                'type'       => GRN_ADDRESS_ITEM_EMAIL_ADDRESS,
                'not_modify' => 0,
                'necessary'  => 0,
                'use'        => 1,
                'display'    => 1,
                'sso'        => 0
            ],
            'image'                     => [
                'type'       => GRN_ADDRESS_ITEM_FILE,
                'not_modify' => 0,
                'necessary'  => 0,
                'use'        => 1,
                'display'    => 0,
                'sso'        => 0
            ],
            'description'               => [
                'type'       => GRN_ADDRESS_ITEM_MULTIPLE_STRING,
                'not_modify' => 0,
                'necessary'  => 0,
                'use'        => 1,
                'display'    => 0,
                'sso'        => 0
            ]
        ];

    function _getBookId($book)
    {
        switch ($book->getDataType()) {
            case GRN_ADDRESS_DATA_USERLIST:
                return null;
            case GRN_ADDRESS_DATA_PRIVATE:
                return -1;
            case GRN_ADDRESS_DATA_MYADDRESSGROUP:
                return -2;
            case GRN_ADDRESS_DATA_SHARED:
                return $book->getOID();
            default:
                assert('FALSE');
        }
    }

    function listBuiltinItems($book, $without_hidden = true)
    {
        $book_id = $this->_getBookId($book);

        $items = $this->_builtin_items;
        if ( ! $this->_profile->getAttribute('builtin_items:' . $book_id,
            $items)
        ) {
            foreach ($items as $key => $item) {
                $items[$key]['display_name'] = cb_msg('grn/address', $key);
                $items[$key]['id'] = $key;
            }
        }

        if ($without_hidden) {
            unset($items['family_name']);
            unset($items['given_name']);
            unset($items['family_sort_key']);
            unset($items['given_sort_key']);
            unset($items['route_time']);
            unset($items['route_fare']);
        } else {
            $columns = [
                'family_name',
                'given_name',
                'family_sort_key',
                'given_sort_key',
                'route_time',
                'route_fare'
            ];
        }

        $columns[] = 'subject';

        foreach ($columns as $column) {
            $item =& $items[$column];
            $builtin_item =& $this->_builtin_items[$column];

            $item['not_modify'] = $builtin_item['not_modify'];
            $item['necessary'] = $builtin_item['necessary'];
            $item['use'] = $builtin_item['use'];
            $item['display'] = $builtin_item['display'];
        }

        return $items;
    }

    function setBuiltinItems($book, $items, $with_sso = true)
    {
        $book_id = $this->_getBookId($book);

        $old_items = $this->listBuiltinItems($book, false);

        if ($with_sso) {
            foreach (array_keys($old_items) as $key) {
                $item =& $items[$key];
                $old_item =& $old_items[$key];

                $old_item['not_modify'] = @ $item['not_modify'];
                $old_item['necessary'] = @ $item['necessary'];
                $old_item['use'] = @ $item['use'];
                $old_item['display'] = @ $item['display'];
                $old_item['sso'] = @ $item['sso'];
            }
        } else {
            foreach (array_keys($old_items) as $key) {
                $item =& $items[$key];
                $old_item =& $old_items[$key];

                $old_item['not_modify'] = @ $item['not_modify'];
                $old_item['necessary'] = @ $item['necessary'];
                $old_item['use'] = @ $item['use'];
                $old_item['display'] = @ $item['display'];
            }
        }
        unset($old_items['map']); // Not save map item

        return $this->_updateAttribute('builtin_items:' . $book_id, $old_items);
    }

    function getDisplayFlag($book, & $builtin_items, & $extended_items)
    {
        $book_id = $this->_getBookId($book);

        $old_items = [];
        $this->_profile->getAttribute('display_items:' . $book_id, $old_items);

        foreach (array_keys($builtin_items) as $key) {
            if (array_key_exists($key, $old_items)) {
                $builtin_items[$key]['display'] = $old_items[$key];
            }
        }

        foreach (array_keys($extended_items) as $key) {
            if (array_key_exists($key, $old_items)) {
                $extended_items[$key]['display'] = $old_items[$key];
            }
        }
    }

    function setDisplayFlag(
        $book,
        & $items,
        & $builtin_items,
        & $extended_items
    ) {
        if ( ! is_array($items)) {
            $items = [];
        }

        $book_id = $this->_getBookId($book);
        $this->getDisplayFlag($book, $builtin_items, $extended_items);

        if (is_null($book_id)) {
            $items['display_name'] = 1;
        } else {
            $items['subject'] = 1;
        }

        foreach (array_keys($builtin_items) as $item_id) {
            if ( ! array_key_exists($item_id, $items)) {
                $items[$item_id] = 0;
            }
        }

        foreach (array_keys($extended_items) as $item_id) {
            if ( ! array_key_exists($item_id, $items)) {
                $items[$item_id] = 0;
            }
        }

        return $this->_updateAttribute('display_items:' . $book_id, $items);
    }

    function getLastOpenedBook()
    {
        $book_id = null;
        $this->_profile->getAttribute('last_opened_book', $book_id);

        return $book_id;
    }

    function setLastOpenedBook($book)
    {
        $book_id = $this->_getBookId($book);

        return $this->_updateAttribute('last_opened_book', $book_id);
    }
}


