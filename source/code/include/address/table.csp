<?php

/**
 * Database tables for Address.
 *
 * @author  YOSHIDA, Hideyasu 2005/01
 * @version 1.0
 * @package grn.address
 */

require_once('address/resources.csp');
require_once('address/file.csp');
require_once('grn/uum_table.csp');

/**
 * アドレスブック基礎クラス
 *
 * @package grn.address
 */
class GRN_Address_Book extends GRN_InspectionBase
{
    function __construct($row)
    {
        parent::__construct($row, GRN_ADDRESS_MODULE_ID);
    }

    var $_app_id = 'address';

    /** 表示名 */
    var $col_display_name = ['type' => 'char', 'length' => 100];
    /** ブックの種類（cyde, ldap, ...） */
    var $col_type = ['type' => 'char', 'length' => 100];

    // reserved columns 
    var $col_reserve_text1 = ['type' => 'char', 'lazy' => true];
    var $col_reserve_text2 = ['type' => 'char', 'lazy' => true];
    var $col_reserve_text3 = ['type' => 'char', 'lazy' => true];
    var $col_reserve_int1 = ['type' => 'int', 'lazy' => true];
    var $col_reserve_int2 = ['type' => 'int', 'lazy' => true];
    var $col_reserve_int3 = ['type' => 'int', 'lazy' => true];
    var $col_reserve_blob1 = ['type' => 'blob', 'lazy' => true];
    var $col_reserve_blob2 = ['type' => 'blob', 'lazy' => true];
    var $col_reserve_blob3 = ['type' => 'blob', 'lazy' => true];

    function inspect($command, $user)
    {
        $ts = new CB_TimeStamp();
        $ts->unix_ts = time();

        if ('create' == $command) {
            $this->set('creator', $user);
            $this->set('creator_name', $user->get('display_name'));
            $this->set('creator_foreign_key', $user->get('foreign_key'));
            $this->set('ctime', $ts);
        }
        $this->set('modifier', $user);
        $this->set('modifier_name', $user->get('display_name'));
        $this->set('modifier_foreign_key', $user->get('foreign_key'));
        $this->set('mtime', $ts);
    }
}

/**
 * 共有アドレスブッククラス
 *
 * @package grn.address
 */
class GRN_Address_SharedBook extends GRN_Address_Book
{
    function __construct($row)
    {
        parent::__construct($row);
    }

    var $_app_id = 'address';

    /** 識別子 */
    var $col_id = ['type' => 'char', 'length' => 100, 'notnull' => true];
    /** セキュリティ・モデル */
    var $col_security_model = ['type' => 'int'];
    /** 共有アドレスブックの表示順番 */
    var $col_list_index = ['type' => 'list_index'];

    /** インデックス */
    var $idx_i = ['cols' => ['id'], 'unique' => true];
    var $idx_l_pk = ['cols' => ['list_index', null], 'unique' => true];
}

/**
 * 個人アドレスブッククラス
 *
 * @package grn.address
 */
class GRN_Address_PrivateBook extends GRN_Address_Book
{
    function __construct($row)
    {
        parent::__construct($row);
    }

    var $_app_id = 'address';

    /** ユーザーID（所有者） */
    var $col_user = ['type' => 'relation', 'to' => 'CB_User', 'unique' => true];
}

/**
 * アドレスデータ基礎クラス
 *
 * @package grn.address
 */
class GRN_Address_Data extends GRN_InspectionBase
{
    function __construct($row)
    {
        parent::__construct($row, GRN_ADDRESS_MODULE_ID);
    }

    var $_app_id = 'address';

    /** 標題 */
    var $col_subject = ['type' => 'char', 'length' => 255, 'notnull' => true];
    /** 会社名 */
    var $col_company_name = ['type' => 'char', 'length' => 100];
    /** 会社名よみ */
    var $col_company_sort_key = ['type' => 'char', 'length' => 100];
    /** 部課名 */
    var $col_section_name = ['type' => 'char', 'length' => 100];
    /** 郵便番号 */
    var $col_zip_code = ['type' => 'char', 'length' => 100];
    /** 住所 */
    var $col_physical_address = ['type' => 'char', 'length' => 4096];
    /** 地図（ビジネス情報） */
    var $col_map = ['type' => 'char', 'length' => 255];
    /** 路線 経路（ビジネス情報） */
    var $col_route = ['type' => 'char', 'length' => 65535];
    /** 路線 所要時間（ビジネス情報） */
    var $col_route_time = ['type' => 'char', 'length' => 100];
    /** 路線 片道運賃（ビジネス情報） */
    var $col_route_fare = ['type' => 'char', 'length' => 100];
    /** 会社電話番号 */
    var $col_company_telephone_number = ['type' => 'char', 'length' => 100];
    /** 会社Fax番号 */
    var $col_facsimile_number = ['type' => 'char', 'length' => 100];
    /** URL */
    var $col_url = ['type' => 'char', 'length' => 255];
    /** 個人姓 */
    var $col_family_name = ['type' => 'char', 'length' => 100];
    /** 個人名 */
    var $col_given_name = ['type' => 'char', 'length' => 100];
    /** 個人姓よみ */
    var $col_family_sort_key = ['type' => 'char', 'length' => 100];
    /** 個人名よみ */
    var $col_given_sort_key = ['type' => 'char', 'length' => 100];
    /** 役職名 */
    var $col_post_name = ['type' => 'char', 'length' => 100];
    /** 個人電話番号 */
    var $col_personal_telephone_number = ['type' => 'char', 'length' => 100];
    /** E-mailアドレス */
    var $col_email_address = ['type' => 'char', 'length' => 100];
    /** 画像ファイルID */
    var $col_image = ['type' => 'weak_relation', 'to' => 'GRN_Address_File'];
    /** メモ */
    var $col_description = ['type' => 'char', 'length' => 65535];

    // reserved columns 
    var $col_reserve_text1 = ['type' => 'char', 'lazy' => true];
    var $col_reserve_text2 = ['type' => 'char', 'lazy' => true];
    var $col_reserve_text3 = ['type' => 'char', 'lazy' => true];
    var $col_reserve_int1 = ['type' => 'int', 'lazy' => true];
    var $col_reserve_int2 = ['type' => 'int', 'lazy' => true];
    var $col_reserve_int3 = ['type' => 'int', 'lazy' => true];
    var $col_reserve_blob1 = ['type' => 'blob', 'lazy' => true];
    var $col_reserve_blob2 = ['type' => 'blob', 'lazy' => true];
    var $col_reserve_blob3 = ['type' => 'blob', 'lazy' => true];

    function inspect($command, $user)
    {
        $ts = new CB_TimeStamp();
        $ts->unix_ts = time();

        if ('create' == $command) {
            $this->set('creator', $user);
            $this->set('creator_name', $user->get('display_name'));
            $this->set('creator_foreign_key', $user->get('foreign_key'));
            $this->set('ctime', $ts);
        }
        $this->set('modifier', $user);
        $this->set('modifier_name', $user->get('display_name'));
        $this->set('modifier_foreign_key', $user->get('foreign_key'));
        $this->set('mtime', $ts);
    }
}

/**
 * 共有アドレスデータクラス
 *
 * @package grn.address
 */
class GRN_Address_SharedData extends GRN_Address_Data
{
    function __construct($row)
    {
        parent::__construct($row);
    }

    var $_app_id = 'address';

    /** 共有アドレスブックID */
    var $col_book = ['type' => 'relation', 'to' => 'GRN_Address_SharedBook'];

    /** インデックス */
    var $idx_b_s_pk = ['cols' => ['book', 'subject', null]];


    /**
     * @param string $col_name
     *
     * @return CB_Row|mixed
     */
    public function get($col_name)
    {
        $result = false;

        $table_info = $this->getTableInfo();
        $col_info = $table_info->getColumnInfo($col_name);
        if (is_null($col_info)) {
            return $result;
        }

        if ($col_name == 'book') {
            $isKeyExists = array_key_exists(CB_DATABASE_COLUMN_PREFIX
                                            . $col_name,
                $this->__row->_rawdata);
            $id = $isKeyExists
                ? $this->__row->_rawdata[CB_DATABASE_COLUMN_PREFIX . $col_name]
                : null;

            if ( ! is_null($id)) {
                require_once('address/AddressFacade.csp');
                require_once('fw/i18n.csp');

                $i18n = CB_I18N::getInstance();
                $table_info = $this->getTableInfo();
                $tableManager = $table_info->getTableManager();
                $relationTableName = $col_info['to'];
                $relationTableInfo
                    = $tableManager->getTableInfo($relationTableName);
                $relationTableLock = $relationTableInfo->_lock;

                $dao = new AddressFacade();
                $dataObj = [];
                $dataObj['lock'] = $relationTableLock;
                $dataObj['language'] = $i18n->getCurrentLanguage();

                $addressSharedboodData
                    = $dao->referAddressSharedbookById($dataObj, $id);
                $result
                    = $relationTableInfo->getRow($addressSharedboodData->getId(),
                    $addressSharedboodData->convertArray());
            } else {
                $result = parent::get($col_name);
            }
        } else {
            $result = parent::get($col_name);
        }

        return $result;
    }
}

/**
 * 個人アドレスデータクラス
 *
 * @package grn.address
 */
class GRN_Address_PrivateData extends GRN_Address_Data
{
    function __construct($row)
    {
        parent::__construct($row);
    }

    var $_app_id = 'address';

    /** 個人アドレスブックID */
    var $col_book = ['type' => 'relation', 'to' => 'GRN_Address_PrivateBook'];

    /** インデックス */
    var $idx_b_s_pk = ['cols' => ['book', 'subject', null]];
}

/**
 * 共有アドレス拡張項目クラス
 *
 * @package grn.address
 */
class GRN_Address_SharedItem extends GRN_ItemBase
{
    function __construct($row)
    {
        parent::__construct($row);
    }

    var $_app_id = 'address';

    /** 共有アドレスブックID */
    var $col_book = ['type' => 'relation', 'to' => 'GRN_Address_SharedBook'];

    /** インデックス */
    var $idx_i_b = ['cols' => ['id', 'book'], 'unique' => true];

    /**
     * @param string $col_name
     *
     * @return CB_Row|mixed
     */
    public function get($col_name)
    {
        $result = false;

        $table_info = $this->getTableInfo();
        $col_info = $table_info->getColumnInfo($col_name);
        if (is_null($col_info)) {
            return $result;
        }

        if ($col_name == 'book') {
            $isKeyExists = array_key_exists(CB_DATABASE_COLUMN_PREFIX
                                            . $col_name,
                $this->__row->_rawdata);
            $id = $isKeyExists
                ? $this->__row->_rawdata[CB_DATABASE_COLUMN_PREFIX . $col_name]
                : null;

            if ( ! is_null($id)) {
                require_once('address/AddressFacade.csp');
                require_once('fw/i18n.csp');

                $i18n = CB_I18N::getInstance();
                $table_info = $this->getTableInfo();
                $tableManager = $table_info->getTableManager();
                $relationTableName = $col_info['to'];
                $relationTableInfo
                    = $tableManager->getTableInfo($relationTableName);
                $relationTableLock = $relationTableInfo->_lock;

                $dao = new AddressFacade();
                $dataObj = [];
                $dataObj['lock'] = $relationTableLock;
                $dataObj['language'] = $i18n->getCurrentLanguage();

                $addressSharedboodData
                    = $dao->referAddressSharedbookById($dataObj, $id);
                $result
                    = $relationTableInfo->getRow($addressSharedboodData->getId(),
                    $addressSharedboodData->convertArray());
            } else {
                $result = parent::get($col_name);
            }
        } else {
            $result = parent::get($col_name);
        }

        return $result;
    }
}

/**
 * 個人アドレス拡張項目クラス
 *
 * @package grn.address
 */
class GRN_Address_PrivateItem extends GRN_ItemBase
{
    function __construct($row)
    {
        parent::__construct($row);
    }

    var $_app_id = 'address';

    /** インデックス */
    var $idx_i = ['cols' => ['id'], 'unique' => true];
}

/**
 * アドレス拡張項目とアドレスデータの関連付け基礎クラス
 *
 * @package grn.address
 */
class GRN_Address_ItemDataRelation extends CB_PersistentBase
{
    function __construct($row)
    {
        parent::__construct($row);
    }

    var $_app_id = 'address';

    /** 文字列データ */
    var $col_string = ['type' => 'char', 'length' => 65535, 'lazy' => true];
    /** ファイルID */
    var $col_file
        = [
            'type' => 'weak_relation',
            'to'   => 'GRN_Address_File',
            'lazy' => true
        ];

    // reserved columns 
    var $col_reserve_text1 = ['type' => 'char', 'lazy' => true];
    var $col_reserve_text2 = ['type' => 'char', 'lazy' => true];
    var $col_reserve_text3 = ['type' => 'char', 'lazy' => true];
    var $col_reserve_int1 = ['type' => 'int', 'lazy' => true];
    var $col_reserve_int2 = ['type' => 'int', 'lazy' => true];
    var $col_reserve_int3 = ['type' => 'int', 'lazy' => true];
    var $col_reserve_blob1 = ['type' => 'blob', 'lazy' => true];
    var $col_reserve_blob2 = ['type' => 'blob', 'lazy' => true];
    var $col_reserve_blob3 = ['type' => 'blob', 'lazy' => true];
}

/**
 * 共有アドレス拡張項目と共有アドレスデータの関連付けクラス
 *
 * @package grn.address
 */
class GRN_Address_ItemSharedDataRelation extends GRN_Address_ItemDataRelation
{
    function __construct($row)
    {
        parent::__construct($row);
    }

    var $_app_id = 'address';

    /** 共有アドレス拡張項目ID */
    var $col_item = ['type' => 'relation', 'to' => 'GRN_Address_SharedItem'];
    /** 共有アドレスデータID */
    var $col_data = ['type' => 'relation', 'to' => 'GRN_Address_SharedData'];

}

/**
 * 個人アドレス拡張項目と個人アドレスデータの関連付けクラス
 *
 * @package grn.address
 */
class GRN_Address_ItemPrivateDataRelation extends GRN_Address_ItemDataRelation
{
    function __construct($row)
    {
        parent::__construct($row);
    }

    var $_app_id = 'address';

    /** 個人アドレス拡張項目ID */
    var $col_item = ['type' => 'relation', 'to' => 'GRN_Address_PrivateItem'];
    /** 個人アドレスデータID */
    var $col_data = ['type' => 'relation', 'to' => 'GRN_Address_PrivateData'];

}

class GRN_Address_MyGroup extends CB_PersistentBase
{
    var $col_owner
        = [
            'type'    => 'relation',
            'to'      => 'CB_User',
            'notnull' => true
        ];
    var $col_name = ['type' => 'char', 'notnull' => true];
    var $col_description
        = [
            'type'   => 'char',
            'length' => 65535,
            'lazy'   => true
        ];
    var $col_list_index = ['type' => 'list_index'];
    var $col_mtime = ['type' => 'timestamp'];

    var $idx_list_index1 = ['cols' => ['list_index', null]];
    var $idx_list_index2 = ['cols' => ['owner', 'list_index', null]];

    function __construct($row)
    {
        parent::__construct($row);
    }

    var $_app_id = 'address';
}

class GRN_Address_MyGroupData extends CB_PersistentBase
{
    var $col_mygroup
        = [
            'type'    => 'relation',
            'to'      => 'GRN_Address_MyGroup',
            'notnull' => true
        ];
    var $col_shared_address
        = [
            'type' => 'relation',
            'to'   => 'GRN_Address_SharedData'
        ];
    var $col_private_address
        = [
            'type' => 'relation',
            'to'   => 'GRN_Address_PrivateData'
        ];
    var $col_user_address = ['type' => 'relation', 'to' => 'CB_User'];

    /* 
    * 1 : GRN_Address_SharedData
    * 2 : GRN_Address_PrivateData
    * 3 : CB_User
    */
    var $col_type = ['type' => 'int', 'notnull' => true];
    var $col_list_index = ['type' => 'list_index'];

    function __construct($row)
    {
        parent::__construct($row);
    }

    var $_app_id = 'address';
}


