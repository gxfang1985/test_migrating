<?php

namespace grn\space\db\dao;

use grn\space\common\db\dao\DataAccessControlAbstract;
use grn\space\common\exception\ErrorCode;
use grn\space\common\exception\GrnDatabaseException;
use grn\space\common\exception\GrnDataNotFoundException;
use grn\space\data\bean\SpaceMemoOpenStatus;
use grn\space\data\bean\SpaceMemo;

/**
 * Class SpaceMemoOpenStatusDAO
 */
class SpaceMemoOpenStatusDAO extends DataAccessControlAbstract
{
    /**
     * Insert SpaceMemoOpenStatus when the record does not exist
     * otherwise, update col_is_memo_open column of the record.
     *
     * @param SpaceMemoOpenStatus $spaceMemoOpenStatus
     *
     * @return SpaceMemoOpenStatus
     * @throws GrnDatabaseException
     */
    public function insertOnDuplicateKeyUpdate(
        SpaceMemoOpenStatus $spaceMemoOpenStatus
    ) {
        $db = $this->getDatabaseConnection();

        try {
            $db->query(
                "INSERT " .
                "tab_grn_space_space_memo_open_status " .
                "SET " .
                "col_space = '" . $db->escape($spaceMemoOpenStatus->getId())
                . "', " .
                "col_user = '" . $db->escape($spaceMemoOpenStatus->getUserId())
                . "', " .
                "col_is_memo_open = '" . ($spaceMemoOpenStatus->isMemoOpen()
                    ? "1" : "0") . "' " .
                "ON DUPLICATE KEY UPDATE col_is_memo_open = '"
                . ($spaceMemoOpenStatus->isMemoOpen() ? "1" : "0") . "';"
            );
        } catch (GrnDatabaseException $e) {
            throw $e;
        }

        return $spaceMemoOpenStatus;
    }

    /**
     * Delete all the record related to the space whose ID is $spaceId
     *
     * @param string $spaceId
     *
     * @throws GrnDatabaseException
     */
    public function deleteBySpaceId($spaceId)
    {
        try {
            $db = $this->getDatabaseConnection();
            $db->query(
                "DELETE FROM " .
                "tab_grn_space_space_memo_open_status " .
                "WHERE " .
                "col_space = '{$db->escape($spaceId)}';"
            );
        } catch (GrnDatabaseException $e) {
            //将来的にはGrnDatabaseExceptionをキャッチしたい。
            //In the future you want to catch the GrnDatabaseException.
            throw $e;
        }
    }
}
