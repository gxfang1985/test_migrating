<?php

namespace grn\space\db\dao;

use grn\space\data\bean\MemberOpenStatus;

use grn\space\common\db\dao\DataAccessControlAbstract;
use grn\space\common\exception\ErrorCode;
use grn\space\common\exception\GrnDatabaseException;
use grn\space\common\exception\GrnDataNotFoundException;

/**
 * Class MemberOpenStatusDAO
 */
class MemberOpenStatusDAO extends DataAccessControlAbstract
{
    /**
     *
     * @param \grn\space\data\bean\MemberOpenStatus $memberOpenStatus
     *
     * @return boolean
     *
     * @throws GrnDatabaseException
     */
    public function isExistMemberOpenStatus(MemberOpenStatus $memberOpenStatus)
    {
        try {
            $db = $this->getDatabaseConnection();

            $result = $db->query(
                "SELECT " .
                "col_space " .
                "FROM " .
                "tab_grn_space_member_open_status " .
                "WHERE " .
                "col_space = '{$db->escape($memberOpenStatus->getId())}' " .
                "AND " .
                "col_user = '{$db->escape($memberOpenStatus->getUserId())}';"
            );

            $row = $db->fetch_assoc($result);
            $db->free_result($result);

            return is_array($row) ? true : false;
        } catch (GrnDatabaseException $e) {
            throw $e;
        }
    }

    /**
     *
     * @param \grn\space\data\bean\MemberOpenStatus $memberOpenStatus
     *
     * @return \grn\space\data\bean\MemberOpenStatus
     *
     * @throws GrnDatabaseException
     */
    public function insertMemberOpenStatus(MemberOpenStatus $memberOpenStatus)
    {
        try {
            $db = $this->getDatabaseConnection();

            $db->query(
                "INSERT " .
                "tab_grn_space_member_open_status " .
                "SET " .
                "col_space = '" . $db->escape($memberOpenStatus->getId())
                . "', " .
                "col_user = '" . $db->escape($memberOpenStatus->getUserId())
                . "' " .
                "ON DUPLICATE KEY UPDATE col_user = '"
                . $db->escape($memberOpenStatus->getUserId()) . "';"
            );
        } catch (GrnDatabaseException $e) {
            throw $e;
        }

        return $memberOpenStatus;
    }

    /**
     *
     * @param \grn\space\data\bean\MemberOpenStatus $memberOpenStatus
     *
     * @throws GrnDatabaseException
     */
    public function deleteMemberOpenStatus(MemberOpenStatus $memberOpenStatus)
    {
        try {
            $db = $this->getDatabaseConnection();
            $db->query(
                "DELETE FROM " .
                "tab_grn_space_member_open_status " .
                "WHERE " .
                "col_space = '{$db->escape($memberOpenStatus->getId())}' " .
                "AND " .
                "col_user = '{$db->escape($memberOpenStatus->getUserId())}';"
            );
        } catch (GrnDatabaseException $e) {
            //将来的にはGrnDatabaseExceptionをキャッチしたい。
            //In the future you want to catch the GrnDatabaseException.
            throw $e;
        }
    }
}
