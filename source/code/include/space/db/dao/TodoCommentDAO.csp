<?php

namespace grn\space\db\dao;

use grn\space\common\db\dao\DataAccessControlAbstract;
use grn\space\common\exception\GrnDatabaseException;


/**
 * Database Back Layer
 * This layer mediates the database front layer and the DB.
 *
 * TodoComment Data Access Object Class
 * Accept requests from the database front layer for all TodoComment
 **/
class TodoCommentDAO extends DataAccessControlAbstract
{
    /**
     * The insert of todo-comment-relation is executed to the database.
     *
     * @param string $todoId    todo sequence id
     * @param string $commentId comment sequence id
     *
     * @throws GrnDatabaseException     Any error in the database.
     */
    public function insertTodoCommentReletion($todoId, $commentId)
    {
        try {
            $dbConn = $this->getDatabaseConnection();

            $query
                = "INSERT INTO tab_grn_space_todo_comment (col_todo, col_comment) VALUES ";
            $query .= "(";
            $query .= "'" . $dbConn->escape($todoId) . "', ";
            $query .= "'" . $dbConn->escape($commentId) . "'  ";
            $query .= ")";
            $query .= ";";

            $dbConn->query($query);
        } catch (GrnDatabaseException $e) {
            //将来的にはGrnDatabaseExceptionをキャッチしたい。
            //In the future you want to catch the GrnDatabaseException.
            throw $e;
        }
    }

    /**
     * @param int $startId
     * @param int $endId
     * @param int $maxLength
     *
     * @return array
     */
    public function getAllTodoCommentForFtsFullIndexer(
        $startId,
        $endId,
        $maxLength
    ) {
        $db = $this->getDatabaseConnection();
        $result = $db->query(
            "SELECT " .
            "comment._id, " .
            "CASE WHEN CHAR_LENGTH(comment.col_content) > {$db->escape($maxLength)} "
            .
            "THEN 1 ELSE 0 END AS truncated, " .
            "LEFT(comment.col_content, {$db->escape($maxLength)}) AS col_content, "
            . "comment.col_modifier, " .
            "comment.col_modify_timestamp, " .
            "threadtodo.col_todo, " .
            "threadtodo.col_thread, " .
            "a.col_space " .
            "FROM " .
            "tab_grn_space_todo_comment AS tc, " .
            "tab_grn_space_comment AS comment, " .
            "tab_grn_space_todo AS todo, " .
            "tab_grn_space_todo_thread AS threadtodo, " .
            "tab_grn_space_thread as thread, " .
            "tab_grn_space_category_hierarchy as h, " .
            "tab_grn_space_category as c, " .
            "tab_grn_space_space_application as a " .
            "WHERE " .
            "comment._id>={$db->escape($startId)} AND " .
            "{$db->escape($endId)}>=comment._id AND " .
            "tc.col_comment=comment._id AND " .
            "tc.col_todo=todo._id AND " .
            "todo._id=threadtodo.col_todo AND " .
            "threadtodo.col_thread=thread._id AND " .
            "thread.col_category=h.col_category AND " .
            "h.col_ancestor=c._id AND " .
            "c.col_hierarchy_level = 1 AND " .
            "c._id=a.col_root_category " .
            "FOR UPDATE"
        );
        $rows = [];
        while ($row = $db->fetch_assoc($result)) {
            $rows[] = $row;
        }
        $db->free_result($result);

        return $rows;
    }

    /**
     * Get all todo comment id by todo id.
     *
     * @param  array $todoIds
     *
     * @throws GrnDatabaseException    Any error in the database.
     * @return array todo comment id(s)
     */
    public function getTodoCommentIdByTodoId(array $todoIds)
    {
        try {
            if (count($todoIds) <= 0) {
                return [];
            }
            $db = $this->getDatabaseConnection();
            $query
                = "SELECT col_comment FROM tab_grn_space_todo_comment WHERE ";
            foreach ($todoIds as $k => $todoId) {
                $todoIds[$k] = "'" . $db->escape($todoId) . "'";
            }
            $query .= "col_todo IN (" . implode(",", $todoIds) . ");";
            $result = $db->query($query);
            $commentId = [];
            while ($cmt = $db->fetch_assoc($result)) {
                $commentId[] = $cmt['col_comment'];
            }

            return $commentId;
        } catch (GrnDatabaseException $e) {
            throw $e;
        }
    }
}
