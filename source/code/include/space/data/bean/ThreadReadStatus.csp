<?php

namespace grn\space\data\bean;

use grn\space\common\data\bean\BeanAbstract;
use grn\space\common\utility\ValidateUtility;

/**
 * スレッド既読ステータスクラス
 * ひとつのスレッド既読ステータスを表すデータクラス
 **/
class ThreadReadStatus extends BeanAbstract
{


    /**
     * Using a constant array key. 配列のキーに使う定数
     */
    const USER_ID = "col_user";


    /**
     * ユーザーIDの値を保持する
     */
    private $_userId;


    /**
     * コンストラクタ
     * オブジェクト配列を引数で受け取った場合は、受け取った配列でオブジェクトを初期化する
     * 引数がnullの場合は各データクラスのデフォルト値で初期化する
     *
     * @param     array $dataArray initial data
     * @param     bool  $isInputCheck
     */
    public function __construct(
        array $dataArray = null,
        $isInputCheck = self::CHECK_INPUT
    ) {
        parent::__construct($dataArray, $isInputCheck);

        if (is_null($dataArray)) {
            $this->setUserId('');
        } else {
            $this->setUserId((array_key_exists(self::USER_ID, $dataArray))
                ? $dataArray[self::USER_ID] : '');
        }
    }

    /**
     * オプジェクトデータを配列に変換する
     * 配列のキーはconst定数を使用
     *
     * @return    array         key:constant value:string or boolean or number
     */
    public function convertArray()
    {
        $result = parent::convertArray();

        $result[self::USER_ID] = $this->getUserId();

        return $result;
    }

    /**
     * スレッドIDを取得
     *
     * @return    string        thread sequence id
     */
    public function getThreadId()
    {
        return $this->getId();
    }

    /**
     * スレッドIDを設定
     *
     * @param     string $value thread sequence id
     *
     * @throws    \grn\space\common\exception\GrnInvalidArgumentException   It is not number.
     */
    public function setThreadId($value)
    {
        $this->setId($value);
    }

    /**
     * ユーザーIDを取得
     *
     * @return    string        user sequence id
     */
    public function getUserId()
    {
        return $this->_userId;
    }

    /**
     * ユーザーIDを設定
     *
     * @param     string $value role code
     *
     * @throws    \grn\space\common\exception\GrnInvalidArgumentException   It is not number.
     */
    public function setUserId($value)
    {
        $this->isInputNumber($value);

        $this->_userId = $value;
    }


    /**
     * 検査の実行(オーバーライド)
     * Performing Validation is override
     *
     * @param     int $validType VALID_TYPE_CREATE, VALID_TYPE_MODIFY, VALID_TYPE_SELECT
     *
     * @return    boolean       TRUE : valid   FALSE: Invalid
     */
    protected function checkValidate($validType)
    {
        if (parent::checkValidate($validType) === false) {
            return false;
        }

        return true;
    }

}

