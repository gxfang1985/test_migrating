<?php

namespace grn\space\data\bean;

use grn\grn\MemberLogic;
use grn\space\common\data\bean\InspectionAbstract;
use grn\space\common\data\bean\SpaceMember;
use grn\space\common\data\bean\BeanAbstract;
use grn\space\common\utility\SpaceMemberUtility;

/**
 * Class SpaceUser
 */
class SpaceUser extends SpaceMember
{
    const SPACE_ID = "col_space";//bigint(20) NOT NULL
    const USER = "col_user";//bigint(20) DEFAULT NULL
    const GROUP = "col_group";//bigint(20) DEFAULT NULL
    const ROLE = "col_role";//bigint(20) DEFAULT NULL
    const DISPLAY_ORDER = "col_display_order";//int(11) NOT NULL

    /**
     * Space ID
     */
    private $_spaceId;

    /**
     * Space User
     */
    private $_user;

    /**
     * Space Group
     */
    private $_group;

    /**
     * Space Role
     */
    private $_role;

    /**
     * Display Order
     */
    private $_displayOrder;

    /**
     * @param array|null $dataArray
     * @param bool       $isInputCheck
     */
    public function __construct(
        array $dataArray = null,
        $isInputCheck = self::CHECK_INPUT
    ) {
        parent::__construct($dataArray, $isInputCheck);

        if (is_null($dataArray)) {
            $this->setSpaceId(null);
            $this->setUser(null);
            $this->setGroup(null);
            $this->setRole(null);
            $this->setDisplayOrder('1');
        } else {
            $this->setSpaceId(cb_at($dataArray, self::SPACE_ID, null));
            $this->setUser(cb_at($dataArray, self::USER, null));
            $this->setGroup(cb_at($dataArray, self::GROUP, null));
            $this->setRole(cb_at($dataArray, self::ROLE, null));
            $this->setDisplayOrder(cb_at($dataArray, self::DISPLAY_ORDER, '1'));
        }
    }

    /**
     * @return    array         key:constant value:string or boolean or number
     */
    public function convertArray()
    {
        $result = parent::convertArray();

        $result[self::SPACE_ID] = $this->getSpaceId();
        $result[self::USER] = $this->getUser();
        $result[self::GROUP] = $this->getGroup();
        $result[self::ROLE] = $this->getRole();
        $result[self::DISPLAY_ORDER] = $this->getDisplayOrder();

        return $result;
    }

    /**
     * @return string
     */
    public function getSpaceId()
    {
        return $this->_spaceId;
    }

    /**
     * @param $spaceId
     */
    public function setSpaceId($spaceId)
    {
        $this->_spaceId = $spaceId;
    }

    /**
     * @return \CB_User
     */
    public function getUser()
    {
        return $this->_user;
    }

    /**
     * @param $value
     */
    public function setUser($value)
    {
        if ($value) {
            parent::setMemberID($value);
            parent::setMemberType(MemberLogic::TYPE_USER);

            $this->setUniqueId(SpaceMemberUtility::createMemberUniqueId($value,
                MemberLogic::TYPE_USER));
        }
        $this->_user = $value;
    }

    /**
     * @return \CB_Group
     */
    public function getGroup()
    {
        return $this->_group;
    }

    /**
     * @param $value
     */
    public function setGroup($value)
    {
        if ($value) {
            parent::setMemberID($value);
            parent::setMemberType(MemberLogic::TYPE_ORGANIZATION);

            $this->setUniqueId(SpaceMemberUtility::createMemberUniqueId($value,
                MemberLogic::TYPE_ORGANIZATION));
        }
        $this->_group = $value;
    }

    /**
     * @return \CB_Role
     */
    public function getRole()
    {
        return $this->_role;
    }

    public function setRole($value)
    {
        if ($value) {
            parent::setMemberID($value);
            parent::setMemberType(MemberLogic::TYPE_STATIC_ROLE);

            $this->setUniqueId(SpaceMemberUtility::createMemberUniqueId($value,
                MemberLogic::TYPE_STATIC_ROLE));
        }
        $this->_role = $value;
    }

    /**
     * @return string
     */
    public function getDisplayOrder()
    {
        return $this->_displayOrder;
    }

    /**
     * @param $displayOrder
     */
    public function setDisplayOrder($displayOrder)
    {
        $this->_displayOrder = $displayOrder;
    }
}
