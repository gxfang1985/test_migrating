<?php

namespace grn\space\data\bean;

use grn\space\common\data\bean\InspectionAbstract;

/**
 * Class ApplicationTemplate
 */
class ApplicationTemplate extends InspectionAbstract
{
    const APPLICATION_TEMPLATE_CODE = "col_application_template_code";
    const APPLICATION_TEMPLATE_NAME = "col_application_template_name";

    private $_applicationTemplateCode;
    private $_applicationTemplateName;

    /**
     * @param array|null $dataArray
     * @param bool       $isInputCheck
     */
    public function __construct(
        array $dataArray = null,
        $isInputCheck = self::CHECK_INPUT
    ) {
        parent::__construct($dataArray, self::INSPECTION_INIT, $isInputCheck);

        if (is_null($dataArray)) {
            $this->setApplicationTemplateCode('');
            $this->setApplicationTemplateName('');
        } else {
            $this->setApplicationTemplateCode((array_key_exists(self::APPLICATION_TEMPLATE_CODE,
                $dataArray)) ? $dataArray[self::APPLICATION_TEMPLATE_CODE]
                : '');
            $this->setApplicationTemplateName((array_key_exists(self::APPLICATION_TEMPLATE_NAME,
                $dataArray)) ? $dataArray[self::APPLICATION_TEMPLATE_NAME]
                : '');
        }
    }

    /**
     * @return mixed
     */
    public function getApplicationTemplateCode()
    {
        return $this->_applicationTemplateCode;
    }

    /**
     * @param $applicationTemplateCode
     */
    public function setApplicationTemplateCode($applicationTemplateCode)
    {
        $this->_applicationTemplateCode = $applicationTemplateCode;
    }

    /**
     * @return mixed
     */
    public function getApplicationTemplateName()
    {
        return $this->_applicationTemplateName;
    }

    /**
     * @param $applicationTemplateName
     */
    public function setApplicationTemplateName($applicationTemplateName)
    {
        $this->_applicationTemplateName = $applicationTemplateName;
    }
}
