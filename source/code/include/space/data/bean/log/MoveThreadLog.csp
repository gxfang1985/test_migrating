<?php

namespace grn\space\data\bean\log;

use grn\space\common\data\LogInterface;
use grn\space\service\SpaceService;

/**
 * Class MoveThreadLog
 */
class MoveThreadLog implements LogInterface
{

    const ACTION_MOVE = 'move';

    const OBJECT_SPACE = 'thread';

    const LOG_SPACE_ID = 'spid';

    const LOG_SPACE_NAME = 'space_name';

    const LOG_SOURCE_SPACE_ID = 'src_spid';

    const LOG_SOURCE_SPACE_NAME = 'src_space_name';

    const LOG_SOURCE_THREAD_ID = 'tid';

    const LOG_SOURCE_THREAD_NAME = 'thread_name';

    const LOG_SOURCE_FOLDER_ID = 'src_did';

    const LOG_SOURCE_FOLDER_NAME = 'src_folder_name';

    const LOG_DST_SPACE_ID = 'dst_spid';

    const LOG_DST_SPACE_NAME = 'dst_space_name';

    const LOG_DST_FOLDER_ID = 'dst_did';

    const LOG_DST_FOLDER_NAME = 'dst_folder_name';

    const LOG_NOTIFY = 'notify_check';

    const NOT_SET = '';

    /**
     *
     * @var string
     */
    private $_action;

    /**
     *
     * @var string
     */
    private $_object;

    /**
     *
     * @var string
     */
    private $_spaceId;

    /**
     *
     * @var string
     */
    private $_spaceName;

    /**
     *
     * @var string
     */
    private $_threadId;

    /**
     *
     * @var string
     */
    private $_threadName;

    /**
     *
     * @var string
     */
    private $_folderId;

    /**
     *
     * @var string
     */
    private $_folderName;

    /**
     *
     * @var string
     */
    private $_destinationSpaceId;

    /**
     *
     * @var string
     */
    private $_destinationSpaceName;

    /**
     *
     * @var string
     */
    private $_destinationFolderId;

    /**
     *
     * @var string
     */
    private $_destinationFolderName;

    /**
     *
     * @var string
     */
    private $_notifyCheck;

    /**
     * MoveThreadLog constructor.
     */
    public function __construct()
    {
        $this->setAction(self::ACTION_MOVE);
        $this->setObject(self::OBJECT_SPACE);
        $this->setSpaceId(self::NOT_SET);
        $this->setSpaceName(self::NOT_SET);
        $this->setThreadId(self::NOT_SET);
        $this->setThreadName(self::NOT_SET);
        $this->setFolderId(self::NOT_SET);
        $this->setFolderName(self::NOT_SET);
        $this->setDestinationSpaceId(self::NOT_SET);
        $this->setDestinationSpaceName(self::NOT_SET);
        $this->setDestinationFolderId(self::NOT_SET);
        $this->setDestinationFolderName(self::NOT_SET);
        $this->setNotifyCheck(self::NOT_SET);
    }

    /**
     * @param string $action
     */
    public function setAction($action)
    {
        $this->_action = $action;
    }

    /**
     * @return string
     */
    public function getAction()
    {
        return $this->_action;
    }

    /**
     * @param string $object
     */
    public function setObject($object)
    {
        $this->_object = $object;
    }

    /**
     * @return string
     */
    public function getObject()
    {
        return $this->_object;
    }

    /**
     * @return string
     */
    public function getSpaceId()
    {
        return $this->_spaceId;
    }

    /**
     * @param string $spaceId
     */
    public function setSpaceId($spaceId)
    {
        $this->_spaceId = $spaceId;
    }

    /**
     * @return string
     */
    public function getSpaceName()
    {
        return $this->_spaceName;
    }

    /**
     * @param string $spaceName
     */
    public function setSpaceName($spaceName)
    {
        $this->_spaceName = $spaceName;
    }

    /**
     * @return string
     */
    public function getThreadId()
    {
        return $this->_threadId;
    }

    /**
     * @param string $threadId
     */
    public function setThreadId($threadId)
    {
        $this->_threadId = $threadId;
    }

    /**
     * @return string
     */
    public function getThreadName()
    {
        return $this->_threadName;
    }

    /**
     * @param string $threadName
     */
    public function setThreadName($threadName)
    {
        $this->_threadName = $threadName;
    }

    /**
     * @return string
     */
    public function getFolderId()
    {
        return $this->_folderId;
    }

    /**
     * @param string $folderId
     */
    public function setFolderId($folderId)
    {
        $this->_folderId = $folderId;
    }

    /**
     * @return string
     */
    public function getFolderName()
    {
        return $this->_folderName;
    }

    /**
     * @param string $folderName
     */
    public function setFolderName($folderName)
    {
        $this->_folderName = $folderName;
    }

    /**
     * @return string
     */
    public function getDestinationSpaceId()
    {
        return $this->_destinationSpaceId;
    }

    /**
     * @param string $destinationSpaceId
     */
    public function setDestinationSpaceId($destinationSpaceId)
    {
        $this->_destinationSpaceId = $destinationSpaceId;
    }

    /**
     * @return string
     */
    public function getDestinationSpaceName()
    {
        return $this->_destinationSpaceName;
    }

    /**
     * @param string $destinationSpaceName
     */
    public function setDestinationSpaceName($destinationSpaceName)
    {
        $this->_destinationSpaceName = $destinationSpaceName;
    }

    /**
     * @return string
     */
    public function getDestinationFolderId()
    {
        return $this->_destinationFolderId;
    }

    /**
     * @param string $destinationFolderId
     */
    public function setDestinationFolderId($destinationFolderId)
    {
        $this->_destinationFolderId = $destinationFolderId;
    }

    /**
     * @return string
     */
    public function getDestinationFolderName()
    {
        return $this->_destinationFolderName;
    }

    /**
     * @param string $destinationFolderName
     */
    public function setDestinationFolderName($destinationFolderName)
    {
        $this->_destinationFolderName = $destinationFolderName;
    }

    /**
     * @return string
     */
    public function getNotifyCheck()
    {
        return $this->_notifyCheck;
    }

    /**
     * @param string $notifyCheck
     */
    public function setNotifyCheck($notifyCheck)
    {
        $this->_notifyCheck = $notifyCheck;
    }

    /**
     * @return array
     */
    public function getParameters()
    {
        $retval = [];
        if ($this->getSpaceId() == $this->getDestinationSpaceId()) {
            $retval[self::LOG_SPACE_ID] = $this->getSpaceId();
            $retval[self::LOG_SPACE_NAME] = $this->getSpaceName();
        } else {
            $retval[self::LOG_SOURCE_SPACE_ID] = $this->getSpaceId();
            $retval[self::LOG_SOURCE_SPACE_NAME] = $this->getSpaceName();
        }

        $retval[self::LOG_SOURCE_THREAD_ID] = $this->getThreadId();
        $retval[self::LOG_SOURCE_THREAD_NAME] = $this->getThreadName();

        if ($this->getFolderId() != null) {
            $retval[self::LOG_SOURCE_FOLDER_ID] = $this->getFolderId();
            $retval[self::LOG_SOURCE_FOLDER_NAME] = $this->getFolderName();
        } else {
            $retval[self::LOG_SOURCE_FOLDER_ID] = SpaceService::UNCATEGORIED;
            $retval[self::LOG_SOURCE_FOLDER_NAME] = cb_msg('grn.space',
                'uncategorized');
        }

        if ($this->getSpaceId() != $this->getDestinationSpaceId()) {
            $retval[self::LOG_DST_SPACE_ID] = $this->getDestinationSpaceId();
            $retval[self::LOG_DST_SPACE_NAME]
                = $this->getDestinationSpaceName();
        }

        if ($this->getDestinationFolderId() != null) {
            $retval[self::LOG_DST_FOLDER_ID] = $this->getDestinationFolderId();
            $retval[self::LOG_DST_FOLDER_NAME]
                = $this->getDestinationFolderName();
        } else {
            $retval[self::LOG_DST_FOLDER_ID] = SpaceService::UNCATEGORIED;
            $retval[self::LOG_DST_FOLDER_NAME] = cb_msg('grn.space',
                'uncategorized');
        }

        $retval[self::LOG_NOTIFY] = $this->getNotifyCheck();

        return $retval;
    }

}
