<?php

namespace grn\space\data\bean\log;

use grn\space\common\data\LogInterface;

/**
 * Class ImportModifyCategoryLocalLog
 */
class ImportModifyCategoryLocalLog implements LogInterface
{

    const ACTION_IMPORT = 'import';


    const OBJECT_CATEGORY_LOCAL = 'category_local';


    const LOG_CATEGORY_ID = 'cid';


    const LOG_CATEGORY_NAME = 'category_name';


    const LOG_LANGUAGE_CODE = 'language_code';


    const LOG_PREVIOUS_CATEGORY_NAME = 'prev_category_name';


    const NOT_SET = '';


    /**
     *
     * @var string
     */
    private $_action;


    /**
     *
     * @var string
     */
    private $_object;


    /**
     *
     * @var string
     */
    private $_categoryId;


    /**
     *
     * @var string
     */
    private $_categoryName;


    /**
     *
     * @var string
     */
    private $_languageCode;


    /**
     *
     * @var string
     */
    private $_previousCategoryName;


    /**
     * ImportModifyCategoryLocalLog constructor.
     */
    public function __construct()
    {
        $this->setAction(self::ACTION_IMPORT);
        $this->setObject(self::OBJECT_CATEGORY_LOCAL);
        $this->setCategoryId(self::NOT_SET);
        $this->setCategoryName(self::NOT_SET);
        $this->setLanguageCode(self::NOT_SET);
        $this->setPreviousCategoryName(self::NOT_SET);
    }


    /**
     * @param string $action
     */
    public function setAction($action)
    {
        $this->_action = $action;
    }


    /**
     * @return string
     */
    public function getAction()
    {
        return $this->_action;
    }


    /**
     * @param string $object
     */
    public function setObject($object)
    {
        $this->_object = $object;
    }


    /**
     * @return string
     */
    public function getObject()
    {
        return $this->_object;
    }


    /**
     * @param string $categoryId
     */
    public function setCategoryId($categoryId)
    {
        $this->_categoryId = $categoryId;
    }


    /**
     * @return string
     */
    public function getCategoryId()
    {
        return $this->_categoryId;
    }


    /**
     * @param string $categoryName
     */
    public function setCategoryName($categoryName)
    {
        $this->_categoryName = $categoryName;
    }


    /**
     * @return string
     */
    public function getCategoryName()
    {
        return $this->_categoryName;
    }


    /**
     * @param string $languageCode
     */
    public function setLanguageCode($languageCode)
    {
        $this->_languageCode = $languageCode;
    }


    /**
     * @return string
     */
    public function getLanguageCode()
    {
        return $this->_languageCode;
    }


    /**
     * @param string $previousCategoryName
     */
    public function setPreviousCategoryName($previousCategoryName)
    {
        $this->_previousCategoryName = $previousCategoryName;
    }


    /**
     * @return string
     */
    public function getPreviousCategoryName()
    {
        return $this->_previousCategoryName;
    }


    /**
     * @return array
     */
    public function getParameters()
    {
        $retval = [];
        $retval[self::LOG_CATEGORY_ID] = $this->getCategoryId();
        $retval[self::LOG_CATEGORY_NAME] = $this->getCategoryName();
        $retval[self::LOG_LANGUAGE_CODE] = $this->getLanguageCode();
        $retval[self::LOG_PREVIOUS_CATEGORY_NAME]
            = $this->getPreviousCategoryName();

        return $retval;
    }

}
