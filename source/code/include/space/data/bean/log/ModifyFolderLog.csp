<?php

namespace grn\space\data\bean\log;

use grn\space\common\data\LogInterface;

/**
 * Class ModifyFolderLog
 */
class ModifyFolderLog implements LogInterface
{

    const ACTION_MODIFY = 'modify';

    const OBJECT_FOLDER = 'folder';

    const LOG_SPACE_ID = 'spid';

    const LOG_SPACE_NAME = 'space_name';

    const NOT_SET = '';

    const LOG_FOLDER_ID = 'did';

    const LOG_FOLDER_NAME = 'folder_name';

    const LOG_FOLDER = 'folder';

    private $_action;

    private $_object;

    private $_spaceId;

    private $_folder;

    private $_spaceName;

    /**
     * ModifyFolderLog constructor.
     */
    public function __construct()
    {
        $this->setAction(self::ACTION_MODIFY);
        $this->setObject(self::OBJECT_FOLDER);
        $this->setSpaceId(self::NOT_SET);
        $this->setSpaceName(self::NOT_SET);
    }

    /**
     * @param $action
     */
    public function setAction($action)
    {
        $this->_action = $action;
    }

    /**
     * @return mixed
     */
    public function getAction()
    {
        return $this->_action;
    }

    /**
     * @param $object
     */
    public function setObject($object)
    {
        $this->_object = $object;
    }

    /**
     * @return mixed
     */
    public function getObject()
    {
        return $this->_object;
    }

    /**
     * @param $spaceId
     */
    public function setSpaceId($spaceId)
    {
        $this->_spaceId = $spaceId;
    }

    /**
     * @param $folder
     */
    public function setFolder($folder)
    {
        $this->_folder[] = $folder;
    }

    /**
     * @return mixed
     */
    public function getFolder()
    {
        return $this->_folder;
    }

    public function getSpaceId()
    {
        return $this->_spaceId;
    }

    /**
     * @param $spaceName
     */
    public function setSpaceName($spaceName)
    {
        $this->_spaceName = $spaceName;
    }

    /**
     * @return mixed
     */
    public function getSpaceName()
    {
        return $this->_spaceName;
    }

    /**
     * @return string
     */
    public function getParameters()
    {
        $folderList = $this->getFolder();
        $strMessageLog = "[" . self::ACTION_MODIFY . "] "
                         . self::OBJECT_FOLDER . "(" . self::LOG_SPACE_ID . ":"
                         . $this->getSpaceId() . ", "
                         . self::LOG_SPACE_NAME . ":'" . $this->getSpaceName()
                         . "', ";

        $strMessageLog .= implode(
            ', ', array_map(
                function ($folder) {
                    $folderIdKey = self::LOG_FOLDER_ID;
                    $folderNameKey = self::LOG_FOLDER_NAME;

                    return $folderIdKey . ":" . $folder[$folderIdKey] . ", "
                           . $folderNameKey . ":'"
                           . $folder[$folderNameKey] . "'";
                }, $folderList
            )
        );

        return $strMessageLog . ")";
    }

}
