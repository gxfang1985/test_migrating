<?php

namespace grn\space\data\bean\log;

use grn\space\common\data\LogInterface;

/**
 * Class CreateCategoryLog
 */
class CreateCategoryLog implements LogInterface
{

    const ACTION_CREATE = 'create';


    const OBJECT_CATEGORY = 'category';


    const LOG_CATEGORY_ID = 'cid';


    const LOG_FOREIGN_KEY = 'foreign_key';


    const LOG_CATEGORY_NAME = 'category_name';


    const LOG_PARENT = 'parent';


    const LOG_PARENT_NAME = 'parent_name';


    const NOT_SET = '';


    /**
     *
     * @var string
     */
    private $_action;


    /**
     *
     * @var string
     */
    private $_object;


    /**
     *
     * @var string
     */
    private $_categoryId;


    /**
     *
     * @var string
     */
    private $_foreignKey;


    /**
     *
     * @var string
     */
    private $_categoryName;


    /**
     *
     * @var string
     */
    private $_parentId;


    /**
     *
     * @var string
     */
    private $_parentName;

    /**
     * CreateCategoryLog constructor.
     */
    public function __construct()
    {
        $this->setAction(self::ACTION_CREATE);
        $this->setObject(self::OBJECT_CATEGORY);
        $this->setCategoryId(self::NOT_SET);
        $this->setForeignKey(self::NOT_SET);
        $this->setCategoryName(self::NOT_SET);
        $this->setParentId(self::NOT_SET);
        $this->setParentName(self::NOT_SET);
    }


    /**
     * @param string $action
     */
    public function setAction($action)
    {
        $this->_action = $action;
    }


    /**
     * @return string
     */
    public function getAction()
    {
        return $this->_action;
    }


    /**
     * @param string $object
     */
    public function setObject($object)
    {
        $this->_object = $object;
    }


    /**
     * @return string
     */
    public function getObject()
    {
        return $this->_object;
    }


    /**
     * @param string $categoryId
     */
    public function setCategoryId($categoryId)
    {
        $this->_categoryId = $categoryId;
    }


    /**
     * @return string
     */
    public function getCategoryId()
    {
        return $this->_categoryId;
    }


    /**
     * @param string $foreignKey
     */
    public function setForeignKey($foreignKey)
    {
        $this->_foreignKey = $foreignKey;
    }


    /**
     * @return string
     */
    public function getForeignKey()
    {
        return $this->_foreignKey;
    }


    /**
     * @param string $categoryName
     */
    public function setCategoryName($categoryName)
    {
        $this->_categoryName = $categoryName;
    }


    /**
     * @return string
     */
    public function getCategoryName()
    {
        return $this->_categoryName;
    }


    /**
     * @param string $parentId
     */
    public function setParentId($parentId)
    {
        $this->_parentId = $parentId;
    }


    /**
     * @return string
     */
    public function getParentId()
    {
        return $this->_parentId;
    }


    /**
     * @param string $parentName
     */
    public function setParentName($parentName)
    {
        $this->_parentName = $parentName;
    }


    /**
     * @return string
     */
    public function getParentName()
    {
        return $this->_parentName;
    }


    /**
     * @return array
     */
    public function getParameters()
    {
        $retval = [];
        $retval[self::LOG_CATEGORY_ID] = $this->getCategoryId();
        $retval[self::LOG_FOREIGN_KEY] = $this->getForeignKey();
        $retval[self::LOG_CATEGORY_NAME] = $this->getCategoryName();
        $retval[self::LOG_PARENT] = $this->getParentId();
        $retval[self::LOG_PARENT_NAME] = $this->getParentName();

        return $retval;
    }

}
