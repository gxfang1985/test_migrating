<?php

namespace grn\space\data\bean\log;

use grn\space\common\data\LogInterface;
use grn\space\common\exception\GrnInvalidArgumentException;

/**
 * Class CreateSpaceLog
 */
class CreateSpaceLog implements LogInterface
{
    const ACTION_CREATE = 'create';
    const OBJECT_SPACE = 'space';
    const PRIVACY_PRIVATE = 'private';
    const PRIVACY_PUBLIC = 'public';
    const LOG_SPACE_ID = 'spid';
    const LOG_SPACE_NAME = 'space_name';
    const LOG_CATEGORY_NAME = 'category_name';
    const LOG_PRIVACY = 'privacy';
    const LOG_ICON = 'icon';
    const LOG_MEMBER_NAME = 'member_name';
    const LOG_ADMIN_NAME = 'admin_name';
    const NOT_SET = '';
    const LOG_ALLOW_JOIN_LEAVE = 'join_leave';
    const LOG_EXPIRATION_DATE = 'end_timestamp';
    const NOT_ALLOW_JOIN_LEAVE = '0';
    const ALLOW_JOIN_LEAVE = '1';

    /** @var string */
    private $_action;
    /** @var string */
    private $_object;
    /** @var string */
    private $_spaceId;
    /** @var string */
    private $_spaceName;
    /** @var string */
    private $_categoryName;
    /** @var string */
    private $_privacy;
    /** @var string */
    private $_icon;
    /** @var array<string> */
    private $_memberNameList;
    /** @var array<string> */
    private $_adminNameList;
    /** @var  string */
    private $joinLeave;
    /** @var int */
    private $limitExpirationDate;

    /**
     * CreateSpaceLog constructor.
     */
    public function __construct()
    {
        $this->setAction(self::ACTION_CREATE);
        $this->setObject(self::OBJECT_SPACE);
        $this->setSpaceId(self::NOT_SET);
        $this->setSpaceName(self::NOT_SET);
        $this->setCategoryName(self::NOT_SET);
        $this->setPrivacy(self::PRIVACY_PUBLIC);
        $this->setIcon(self::NOT_SET);
        $this->setMemberNameList([]);
        $this->setAdminNameList([]);
        $this->setJoinLeave(self::NOT_ALLOW_JOIN_LEAVE);
    }

    /**
     * @param string $action
     */
    public function setAction($action)
    {
        $this->_action = $action;
    }

    /**
     * @return string
     */
    public function getAction()
    {
        return $this->_action;
    }

    /**
     * @param string $object
     */
    public function setObject($object)
    {
        $this->_object = $object;
    }

    /**
     * @return string
     */
    public function getObject()
    {
        return $this->_object;
    }

    /**
     * @param string $spaceId
     */
    public function setSpaceId($spaceId)
    {
        $this->_spaceId = $spaceId;
    }

    /**
     * @return string
     */
    public function getSpaceId()
    {
        return $this->_spaceId;
    }

    /**
     * @param string $spaceName
     */
    public function setSpaceName($spaceName)
    {
        $this->_spaceName = $spaceName;
    }

    /**
     * @return string
     */
    public function getSpaceName()
    {
        return $this->_spaceName;
    }

    /**
     * @param string $categoryName
     */
    public function setCategoryName($categoryName)
    {
        $this->_categoryName = $categoryName;
    }

    /**
     * @return string
     */
    public function getCategoryName()
    {
        return $this->_categoryName;
    }

    /**
     * @param string $privacy
     *
     * @throws \grn\space\common\exception\GrnInvalidArgumentException
     */
    public function setPrivacy($privacy)
    {
        if ( ! $this->validatePrivacy($privacy)) {
            throw new GrnInvalidArgumentException();
        }
        $this->_privacy = $privacy;
    }

    /**
     * @return string
     */
    public function getPrivacy()
    {
        return $this->_privacy;
    }

    /**
     * @param string $icon
     */
    public function setIcon($icon)
    {
        $this->_icon = $icon;
    }

    /**
     * @return string
     */
    public function getIcon()
    {
        return $this->_icon;
    }

    /**
     * @param array $memberNameList
     */
    public function setMemberNameList($memberNameList)
    {
        $this->_memberNameList = $memberNameList;
    }

    /**
     * @return array
     */
    public function getMemberNameList()
    {
        return $this->_memberNameList;
    }

    /**
     * @return array
     */
    public function getAdminNameList()
    {
        return $this->_adminNameList;
    }

    /**
     * @param array $adminNameList
     */
    public function setAdminNameList($adminNameList)
    {
        $this->_adminNameList = $adminNameList;
    }

    /**
     * @param $arg
     *
     * @return bool
     */
    protected function validatePrivacy($arg)
    {
        if (in_array($arg, [
            self::PRIVACY_PRIVATE,
            self::PRIVACY_PUBLIC,
        ])
        ) {
            return true;
        }

        return false;
    }

    /**
     * @return array
     */
    public function getParameters()
    {
        $retval = [];
        $retval[self::LOG_SPACE_ID] = $this->getSpaceId();
        $retval[self::LOG_SPACE_NAME] = $this->getSpaceName();
        $retval[self::LOG_CATEGORY_NAME] = $this->getCategoryName();
        $retval[self::LOG_PRIVACY] = $this->getPrivacy();
        $retval[self::LOG_ICON] = $this->getIcon();
        $retval[self::LOG_ALLOW_JOIN_LEAVE] = $this->getJoinLeave();

        if ($this->getLimitExpirationDate() > 0) {
            $retval[self::LOG_EXPIRATION_DATE]
                = $this->getLimitExpirationDate();
        }
        foreach ($this->getMemberNameList() as $memberKey => $memberName) {
            $memberIndex = $memberKey + 1;
            $retval[self::LOG_MEMBER_NAME . "_{$memberIndex}"] = $memberName;
        }
        foreach ($this->getAdminNameList() as $adminKey => $adminName) {
            $adminIndex = $adminKey + 1;
            $retval[self::LOG_ADMIN_NAME . "_{$adminIndex}"] = $adminName;
        }

        return $retval;
    }

    /**
     * @param string $value
     */
    public function setJoinLeave($value)
    {
        $this->joinLeave = $value;
    }

    /**
     * @return string
     */
    public function getJoinLeave()
    {
        return $this->joinLeave;
    }

    /**
     * @param int $limitExpirationDate
     */
    public function setLimitExpirationDate(int $limitExpirationDate)
    {
        $this->limitExpirationDate = $limitExpirationDate;
    }

    /**
     * @return int
     */
    public function getLimitExpirationDate()
    {
        return $this->limitExpirationDate;
    }
}
