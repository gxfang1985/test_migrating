<?php

namespace grn\space\data\bean;

use grn\space\common\data\bean\ComponentInspectionAbstract;
use grn\space\data\collection\ThreadCollection;

/**
 * Class Folder
 */
class Folder extends ComponentInspectionAbstract
{
    private $_colId;
    private $_colFolderCode;
    private $_colFolderName;
    private $_colMemo;
    private $_colSpaceId;
    private $_colDisplayOrder;
    private $_colNumberThread;
    private $_threadCollection;
    private $_isExpanded;
    private $_isUnread;

    /**
     * @param null $inDataArray
     */
    public function __construct($inDataArray = null)
    {
        if (is_null($inDataArray)) {
            $this->setId('');
            $this->setFolderCode('');
            $this->setFolderName('');
            $this->setMemo('');
            $this->setSpaceId('');
            $this->setDisplayOrder('');
            $this->setNumberThread(0);
            $this->setIsExpanded(false);
            $this->setIsUnread(false);
        } else {
            $this->setId(cb_at($inDataArray, '_id', ''));
            $this->setFolderCode(cb_at($inDataArray, 'col_folder_code', ''));
            $this->setFolderName(cb_trim(cb_at($inDataArray, 'col_folder_name',
                '')));
            $this->setMemo(cb_at($inDataArray, 'col_memo', ''));
            $this->setSpaceId(cb_at($inDataArray, 'col_space', ''));
            $this->setDisplayOrder(cb_at($inDataArray, 'col_display_order',
                ''));
            $this->setNumberThread(cb_at($inDataArray, 'number_thread', 0));
            $this->setIsExpanded(cb_at($inDataArray, 'is_expanded ', false));
            $this->setIsUnread(cb_at($inDataArray, 'is_unread', false));
        }
        $this->_threadCollection = new ThreadCollection();
    }

    /**
     * @return ThreadCollection
     */
    public function ThreadCollection()
    {
        return $this->_threadCollection;
    }

    public function reSetThreadCollection()
    {
        $this->_threadCollection = new ThreadCollection();
    }

    /**
     * @return array
     */
    public function toArray()
    {
        $result = [];
        $result['_id'] = $this->getId();
        $result['col_folder_code'] = $this->getFolderCode();
        $result['col_folder_name'] = $this->getFolderName();
        $result['col_memo'] = $this->getMemo();
        $result['col_space'] = $this->getSpaceId();
        $result['col_display_order'] = $this->getDisplayOrder();
        $result['number_thread'] = $this->getNumberThread();
        $result['is_expanded'] = $this->isExpanded();

        return $result;
    }

    /**
     * @return mixed
     */
    public function getId()
    {
        return $this->_colId;
    }

    /**
     * @param string $value
     */
    public function setId($value)
    {
        $this->_colId = $value;
    }

    /**
     * @return mixed
     */
    public function getFolderCode()
    {
        return $this->_colFolderCode;
    }

    /**
     * @param $value
     */
    public function setFolderCode($value)
    {
        $this->_colFolderCode = $value;
    }

    /**
     * @param $value
     */
    public function setFolderName($value)
    {
        $this->_colFolderName = $value;
    }

    /**
     * @return mixed
     */
    public function getFolderName()
    {
        return $this->_colFolderName;
    }

    /**
     * @param $value
     */
    public function setMemo($value)
    {
        $this->_colMemo = $value;
    }

    /**
     * @return mixed
     */
    public function getMemo()
    {
        return $this->_colMemo;
    }

    /**
     * @param $value
     */
    public function setSpaceId($value)
    {
        $this->_colSpaceId = $value;
    }

    /**
     * @return mixed
     */
    public function getSpaceId()
    {
        return $this->_colSpaceId;
    }

    /**
     * @param $value
     */
    public function setDisplayOrder($value)
    {
        $this->_colDisplayOrder = $value;
    }

    /**
     * @return mixed
     */
    public function getDisplayOrder()
    {
        return $this->_colDisplayOrder;
    }

    /**
     * @param $value
     */
    public function setNumberThread($value)
    {
        $this->_colNumberThread = $value;
    }

    /**
     * @return mixed
     */
    public function getNumberThread()
    {
        return $this->_colNumberThread;
    }

    /**
     * @param $value
     */
    public function setIsExpanded($value)
    {
        $this->_isExpanded = $value;
    }

    /**
     * @return mixed
     */
    public function isExpanded()
    {
        return $this->_isExpanded;
    }

    /**
     * @param $value
     */
    public function setIsUnread($value)
    {
        $this->_isUnread = $value;
    }

    /**
     * @return mixed
     */
    public function isUnread()
    {
        return $this->_isUnread;
    }
}
