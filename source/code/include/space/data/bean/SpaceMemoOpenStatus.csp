<?php

namespace grn\space\data\bean;

use grn\grn\MemberLogic;
use grn\space\common\data\bean\InspectionAbstract;
use grn\space\common\data\bean\SpaceMember;
use grn\space\common\data\bean\BeanAbstract;

/**
 * Class SpaceMemoOpenStatus
 */
class SpaceMemoOpenStatus extends BeanAbstract
{
    /**
     * Constant used as a key of $dataArray in the constructor
     *
     * @var string
     */
    const USER_ID = "col_user";

    /**
     * Constant used as a key of $dataArray in the constructor
     *
     * @var string
     */
    const IS_MEMO_OPEN = "col_is_memo_open";

    /**
     *
     * @var SpaceMember
     */
    private $_user;

    /**
     *
     * @var boolean true:the memo field is open, false:the memo field is closed.
     */
    private $_isMemoOpen;

    /**
     * Constructor
     *
     * @param array $dataArray
     * @param bool  $isInputCheck
     */
    public function __construct(
        array $dataArray = null,
        $isInputCheck = self::CHECK_INPUT
    ) {
        parent::__construct($dataArray, $isInputCheck);

        if (is_null($dataArray)) {
            $this->setUser(new SpaceMember(null,
                InspectionAbstract::INSPECTION_NON_INIT));
        } else {
            $this->setUser(new SpaceMember(null,
                InspectionAbstract::INSPECTION_NON_INIT));
            $this->setUserId(array_key_exists(self::USER_ID, $dataArray)
                ? $dataArray[self::USER_ID] : "");
            $this->setIsMemoOpen(array_keys(self::IS_MEMO_OPEN, $dataArray)
                ? $dataArray[self::IS_MEMO_OPEN] : "");
        }
    }

    /**
     * Get User
     *
     * @return SpaceMember
     */
    public function getUser()
    {
        return $this->_user;
    }

    /**
     * Set User
     *
     * @param SpaceMember $member
     */
    public function setUser(SpaceMember $member)
    {
        $this->_user = $member;
    }


    public function getUserDisplayName()
    {
        $this->getUser()->getUserName();
    }

    /**
     * @param $userId
     */
    public function setUserId($userId)
    {
        $this->getUser()->setMemberID($userId);
        $this->getUser()->setMemberType(MemberLogic::TYPE_USER);
    }

    /**
     * @return string
     */
    public function getUserId()
    {
        return $this->getUser()->getMemberID();
    }

    /**
     * Set the status of the memo field
     *
     * @param boolean $isMemoOpen
     */
    public function setIsMemoOpen($isMemoOpen)
    {
        $this->_isMemoOpen = $isMemoOpen;
    }

    /**
     * Get the memo is open
     *
     * @return boolean
     */
    public function isMemoOpen()
    {
        return $this->_isMemoOpen;
    }
}
