<?php

namespace grn\space\screen;

use grn\space\common\data\bean\Authority;

use grn\space\data\condition\SpaceSearchCondition;

use grn\space\service\SpaceService;
use grn\space\data\bean\SpaceLocal;
use grn\space\common\data\bean\Category;
use grn\space\common\data\bean\CategoryLocal;
use grn\space\common\data\collection\CategoryLocalCollection;
use grn\space\common\utility\ValidateUtility;
use grn\space\common\exception\GrnDataNotFoundException;
use grn\space\common\exception\GrnIllegalOperationException;
use grn\space\common\exception\GrnInvalidArgumentException;
use grn\space\common\exception\ErrorCode;

/**
 * Class SystemCommandDeleteCategory
 *
 */
class SystemCommandDeleteCategory extends GenericScreenBase
{
    const ARG_CATEGORY_ID = "cid";
    const ARG_NAME_BASE = "name";
    const MAX_LENGTH_NAME = 100;
    const MIN_LENGTH_NAME = 0;

    private $categoryLocalCollection;

    /**
     * @param $notUsed
     *
     * @return array
     * @throws GrnDataNotFoundException
     * @throws GrnIllegalOperationException
     * @throws GrnInvalidArgumentException
     * @throws \Exception
     */
    public function post($notUsed)
    {
        $input = $this->getInput();
        $login = $this->getLoginUserId();

        $cid = null;
        if (array_key_exists('cid', $input)) {
            $cid = $input['cid'];
        } else {
            throw new GrnDataNotFoundException(ErrorCode::GRN_INVALID_CATEGORY_ID);
        }


        $spaceService = SpaceService::getInstance();

        try {
            $category = $spaceService->getSpaceCategory($cid, $login,
                $this->getLanguageCode());
        } catch (GrnDataNotFoundException $e) {
            $e->setErrorCode(ErrorCode::GRN_INVALID_CATEGORY_ID);
            throw $e;
        } catch (GrnInvalidArgumentException $e) {
            $e->setErrorCode(ErrorCode::GRN_INVALID_CATEGORY_ID);
            throw $e;
        }

        //Root category should not be deleted.
        $rootCategory
            = $spaceService->getSpaceRootCategory($this->getLoginUserId());
        if ($cid == $rootCategory->getId()) {
            throw new GrnIllegalOperationException(ErrorCode::GRN_NO_DELETE_CATEGORY);
        }

        //Category which has some children categories should not be deleted.
        $childCategoryList = $spaceService->getChildCategoryList($cid,
            $this->getLanguageCode());
        if (count($childCategoryList) != 0) {
            throw new GrnIllegalOperationException(ErrorCode::GRN_NO_DELETE_CATEGORY);
        }

        //Category which has some spaces should not be deleted
        $spaceSearchCondition = new SpaceSearchCondition();
        $spaceSearchCondition->setSearchCategoryId($cid);
        $spaceList
            = $spaceService->searchSpaceBySearchCondition($spaceSearchCondition,
            $this->getLoginUserId());
        if (count($spaceList) != 0) {
            throw new GrnIllegalOperationException(ErrorCode::GRN_NO_DELETE_CATEGORY);
        }

        //Delete the category only when the login user has proper right. Otherwise, do nothing
        if ($spaceService->hasSpaceCategoryAccessControl(Authority::AUTHORITY_CODE_SYSTEM_PRIVILEGE,
            $category->getId(), $this->getLoginUserId())
        ) {
            $spaceService->deleteSpaceCategory($cid, $this->getLoginUserId());
        }

        return [
            'page'   => 'space/system/category_list',
            'params' => [
                'cid'      => $rootCategory->getId(),
                'language' => $this->getLanguageCode(),
            ]
        ];
    }
}
