<?php

namespace grn\space\screen\mobile\application\todo;

use grn\space\common\exception\GrnDataNotFoundException;
use grn\space\common\exception\ErrorCode;
use grn\space\common\exception\GrnInvalidPermissionException;
use grn\space\common\data\bean\Authority;
use grn\space\service\TodoService;
use grn\space\screen\mobile\MobileGenericScreenBase;

/**
 * Class TodoCommentDelete
 */
class TodoCommentDelete extends MobileGenericScreenBase
{
    /**
     * @return string
     */
    public function fetch()
    {
        $input = $this->getInput();
        $parameter = [
            self::ARG_SPACE_ID,
            self::ARG_TODO_ID,
            self::ARG_COMMENT_ID
        ];
        $this->checkArgFromInput($parameter, $input);
        $space_id = $this->getSpaceId();
        $todo_id = $this->getTodoId();
        $comment_id = $this->getCommentId();
        $login_id = $this->getLoginUserId();
        $comment = $this->getTodoComment($space_id, $todo_id, $comment_id,
            $login_id, true);

        require_once('grn/smarty.csp');
        $t = new \GRN_Smarty();

        $this->assignBreadcrumbUpperPage($t,
            cb_msg('grn.mobile', 'detail_title'),
            self::URL_TODO_DETAIL, [
                self::ARG_SPACE_ID => $space_id,
                self::ARG_TODO_ID  => $todo_id
            ]);
        $this->assignBreadcrumbCurrentPage($t,
            cb_msg('grn.mobile', 'comment_delete'));

        $t->assign('space_id', $space_id);
        $t->assign('todo_id', $todo_id);
        $t->assign('comment_id', $comment_id);

        return $t->fetch('space/mobile/application/todo/comment_delete.tpl');
    }

    /**
     * @param $input
     */
    public function post($input)
    {
        $this->setInput($input);
        $parameter = [
            self::ARG_SPACE_ID,
            self::ARG_TODO_ID,
            self::ARG_COMMENT_ID
        ];
        $this->checkArgFromInput($parameter, $input);
        $loginId = $this->getLoginUserId();
        $spaceId = $this->getSpaceId();
        $todoId = $this->getTodoId();
        $cmtId = $this->getCommentId();
        $todoService = TodoService::getInstance();

        $comment = $this->getTodoComment($spaceId, $todoId, $cmtId, $loginId,
            true);

        $todoService->deleteTodoComment($cmtId, $todoId,
            $this->makeLoginUserSpaceMember());
    }
}
