<?php

namespace grn\space\screen\mobile\application\todo;

use grn\space\screen\mobile\MobileGenericScreenBase;
use grn\space\service\TodoService;
use grn\space\common\utility\SpaceFileUtility;
use grn\space\common\utility\SpaceDatetimeUtility;
use grn\favour\service\FavourService;

/**
 * Class TodoCommentDetail
 */
class TodoCommentDetail extends MobileGenericScreenBase
{
    private $_comment;

    /**
     * @param $input
     */
    public function __construct($input)
    {
        parent::__construct($input);
        $input = $this->getInput();
        $login_id = $this->getLoginUserId();

        $parameter = [
            self::ARG_SPACE_ID,
            self::ARG_TODO_ID,
            self::ARG_COMMENT_ID
        ];
        $this->checkArgFromInput($parameter, $input);

        $space_id = $this->getSpaceId();
        $todo_id = $this->getTodoId();
        $comment_id = $this->getCommentId();
        $this->_comment = $this->getTodoComment($space_id, $todo_id,
            $comment_id, $login_id);
    }

    /**
     * @return string
     */
    public function fetch()
    {
        $login_id = $this->getLoginUserId();
        $space_id = $this->getSpaceId();
        $todo_id = $this->getTodoId();
        $comment_id = $this->getCommentId();

        $thread_id = $this->getThreadId();
        $todoService = TodoService::getInstance();
        $comment = $this->_comment;

        // Construction display user name and update time
        $todoService->addInspectionUserInfo(
            $comment,
            $login_id,
            $this->isSystemUseEnglish(),
            $this->isEnglishDisplayAfterName(),
            $this->isOrganizationDisplayAfterName(),
            $this->getLanguageCode());
        SpaceDatetimeUtility::constructDisplayDatetimeOfInspection(
            $comment,
            $this->getDatetimeFormat(),
            SpaceDatetimeUtility::DISPLAY_TYPE_LONGDATE_AND_TIME,
            $this->getLanguageCode(),
            $this->getTimezoneName());

        // Get comment file
        $spaceFileCollection = $comment->getSpaceFileCollection();
        $attachedFiles = [];
        foreach ($spaceFileCollection as $file) {
            /** @var \grn\space\common\data\bean\SpaceFile $file */
            $attachedFiles[$file->getId()]
                = SpaceFileUtility::getSpaceFileLinkView($file);
        }

        $commentInfo = [
            'id'           => $comment_id,
            'comment_no'   => $comment->getCommentNo(),
            'space_id'     => $space_id,
            'thread_id'    => $thread_id,
            'todo_id'      => $todo_id,
            'data'         => $comment->getContent(),
            'attach_files' => $attachedFiles,
            'parent_id'    => $comment->getParentCommentId(),
            'parent_no'    => $comment->getParentCommentNo(),
            'unread'       => ($comment->isUnread() ? true : false),
            'ctime'        => $comment->getCreateDisplayDatetime(),
            'creator'      => $comment->getCreatorDisplayName(),
            'creator_type' => $this->getUserType($comment->getCreator()),
            'is_rich_text' => ($comment->isRichText() ? true : false),
            'deletable'    => ($comment->getCreatorId() == $login_id ? true
                : false)
        ];

        require_once('grn/smarty.csp');
        $t = new \GRN_Smarty();
        $t->assign('comment', $commentInfo);

        // for favour
        $favour_service = new FavourService();
        $is_favour_active = $favour_service->isFavourAppActive();
        if ($is_favour_active) {
            $params = [
                self::ARG_SPACE_ID  => $space_id,
                self::ARG_THREAD_ID => $thread_id,
                self::ARG_TODO_ID   => $todo_id
            ];
            require_once('space/GrnSpaceApplication.csp');
            $favour_info
                = $favour_service->constructFavourInfo(\GrnSpaceApplication::GRN_SPACE_MODULE_ID,
                \GrnSpaceApplication::FAVOUR_TODO_COMMENT,
                $comment_id,
                $login_id,
                $params,
                \GrnSpaceApplication::GRN_TODO_SUB_MODULE_ID);
            $t->assign('favour_info', $favour_info);
        }
        $t->assign('is_favour_active', $is_favour_active);

        //assign breadcrumb.
        $current_page = cb_msg('grn.mobile', 'comment_reply_title');
        $upper_page = cb_msg('grn.mobile', 'detail_title');
        $this->assignBreadcrumbCurrentPage($t, $current_page);
        $this->assignBreadcrumbUpperPage($t, $upper_page, self::URL_TODO_DETAIL,
            $params = [
                self::ARG_SPACE_ID => $space_id,
                self::ARG_TODO_ID  => $todo_id
            ]);

        //generate upload ticket
        include('grn/_upload_prepend.csp');

        return $t->fetch('space/mobile/application/todo/comment_detail.tpl');
    }

    /**
     * @return string
     */
    public function getTitle()
    {
        return grn_get_page_display_name('space/comment_detail');
    }
}
