<?php
declare(strict_types=1);

namespace grn\space\screen;

use grn\space\common\exception\GrnInvalidArgumentException;
use grn\space\common\utility\ValidateUtility;

class SpaceAddRedirectFromMessage extends SpaceAddRedirect
{

    /**
     * @param  array $input
     *
     * @return array
     */
    public function getUserIDs(array $input): array
    {
        $user = cb_get_login_user();
        $relation_id = $input['rid'] ?? '';

        require_once('message/message_logic.csp');
        $message_logic = new \GRN_Message_Logic();
        $message = $message_logic->getMessage($user, $relation_id,
            $input['mid']);

        if ($message != false) {
            require_once("message/view_utils.csp");
            $member_ids = \GRN_Message_ViewUtils::getMessageMembers($message);

            return $member_ids;
        }

        return [];
    }

    /**
     * Check argument of $G_INPUT
     *
     * @param  array $input
     *
     * @throws GrnInvalidArgumentException
     */
    protected function checkArgFromInput(array $input)
    {
        if ( ! isset($input['mid'])
             || ! ValidateUtility::isNumber($input['mid'],
                ValidateUtility::DISABLE_EMPTY,
                ValidateUtility::EXCEPTION_NOT_THROW)
        ) {
            require_once('message/error_code.csp');
            throw new GrnInvalidArgumentException(E_GRN_MESSAGE_WRONG_PARAMETER);
        }
        if ( ! isset($input['rid'])
             || ! ValidateUtility::isNumber($input['rid'],
                ValidateUtility::DISABLE_EMPTY,
                ValidateUtility::EXCEPTION_NOT_THROW)
        ) {
            require_once('message/error_code.csp');
            throw new GrnInvalidArgumentException(E_GRN_MESSAGE_WRONG_PARAMETER);
        }

        return;
    }

}
