<?php

namespace grn\space\screen\common;

use grn\space\data\ApplicationTab;
use grn\space\screen\mobile\MobileGenericScreenBase;

class SpaceListScreenDecorator
{
    private $input;
    const PATH_TEMPLATE_FILE = "space/space_list_screen_common.tpl";
    const ARG_CATEGORY_ID = "cid";

    const PAGE_NAME_MY_LIST = "space/index";
    const PAGE_NAME_CATEGORY_ROOT = "space/root";

    /**
     * @param \grn\space\screen\GenericScreenBase $innerScreen
     */
    public function __construct($innerScreen)
    {
        $this->component = $innerScreen;
        $this->setInput($innerScreen->getInput());
    }

    /**
     * @return string
     */
    public function fetch()
    {
        global $G_state_set;
        if ($G_state_set->get('is_cybozu_browser')) {
            MobileGenericScreenBase::redirectMobilePage($this->getInput());
        }

        require_once("grn/smarty.csp");
        $smarty = new \GRN_Smarty();
        $smarty->assign("this", $this);
        $smarty->assign("component", $this->component);
        $smarty->assign("site_position", $this->getSitePosition());
        $smarty->assign("page_title", $this->getTitle());

        require_once("grn/application.csp");
        $application_locator = \GRN_ApplicationLocator::instance();
        /** @var \GrnSpaceApplication $spaceApplication */
        $spaceApplication
            = $application_locator->getInstance(\GrnSpaceApplication::GRN_SPACE_APPLICATION_ID);
        $smarty->assign("app_name", $spaceApplication->getName());
        $smarty->assign("categoryId", $this->getCategoryIdOrBlank());

        return $smarty->fetch(self::PATH_TEMPLATE_FILE);
    }

    /**
     * @param $input
     *
     * @return mixed
     */
    public function post($input)
    {
        return $this->component->post($input);
    }

    /**
     * @return mixed
     */
    public function getSitePosition()
    {
        $sitePosition = $this->component->getSitePosition();

        return $sitePosition;
    }

    /**
     * @return mixed
     */
    public function getTitle()
    {
        return $this->component->getTitle();
    }

    private function getInput()
    {
        return $this->input;
    }

    /**
     * @param $input
     */
    private function setInput($input)
    {
        $this->input = $input;
    }

    /**
     *
     * @todo
     */
    public function getCategoryIdOrBlank()
    {
        $input = $this->getInput();
        if (array_key_exists(self::ARG_CATEGORY_ID, $input)) {
            return $input[self::ARG_CATEGORY_ID];
        }

        return "";
    }

    /**
     * Get the list of the Application tab.
     *
     * @return ApplicationTab[]
     */
    public function getTabList()
    {
        $result = [];
        $mySpaceListTab = new ApplicationTab();
        $mySpaceListTab->setName(cb_msg("grn.space", "index"));
        $mySpaceListTab->setLink(cb_pageurl(self::PAGE_NAME_MY_LIST));
        $mySpaceListTab->setSelected($this->getPathInfo()
                                     === self::PAGE_NAME_MY_LIST);
        $result[] = $mySpaceListTab;

        $categorySpaceListTab = new ApplicationTab();
        $categorySpaceListTab->setName(cb_msg("grn.space", "root"));
        $categorySpaceListTab->setLink(cb_pageurl(self::PAGE_NAME_CATEGORY_ROOT));
        $categorySpaceListTab->setSelected($this->getPathInfo()
                                           !== self::PAGE_NAME_MY_LIST);
        $result[] = $categorySpaceListTab;

        return $result;
    }

    /**
     * @return string
     */
    private function getPathInfo()
    {
        return cb_get_pagename();
    }

}
