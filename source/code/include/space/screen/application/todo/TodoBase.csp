<?php

namespace grn\space\screen\application\todo;

// application object

require_once('grn/application.csp');

use grn\space\service\SpaceService;
use grn\space\service\TodoService;
use grn\space\service\DiscussionService;
use grn\space\data\condition\TodoSearchCondition;
use grn\space\common\exception\GrnInvalidPermissionException;
use grn\space\common\exception\GrnDataNotFoundException;
use grn\space\common\exception\ErrorCode;
use grn\space\common\data\bean\Authority;
use grn\space\common\data\bean\Application;
use grn\space\screen\GenericScreenBase;

/**
 * Class TodoBase
 */
class TodoBase extends GenericScreenBase
{
    const IS_TODO_USER = true;
    const NOT_TODO_USER = false;
    const LOGIN_USER_COMPLETE = true;
    const LOGIN_USER_UNCOMPLETE = false;

    /**
     * Constructor
     *
     * @param $input
     */
    public function __construct($input)
    {
        $this->setInput($input);

        $this->verifySpaceIsNotExpired();
    }

    /**
     * Return raw HTML which will be used without being escaped.
     *
     * @return string
     */
    public function fetch()
    {
        return "";
    }

    /**
     * Update database and return useful information to decide the page which to redirect.
     *
     * @param array $input
     *
     * @return mixed
     */
    public function post($input)
    {
        return "";
    }

    /**
     *
     * Return a part of the site position of the page in Discussion application.
     *
     * @return array
     */
    public function getSitePosition()
    {
        return [];
    }

    /**
     *
     * Return the title of the page
     *
     * @return string
     */
    public function getTitle()
    {
        return "";
    }

    /**
     * Get array for space user id.
     *
     * @param  string $spaceId
     *
     * @return array         spaceUserIds
     * @throws GrnDataNotFoundException
     * @throws GrnInvalidPermissionException
     */
    protected function getSpaceUserIds($spaceId)
    {
        try {
            //check authority
            $spaceService = SpaceService::getInstance();
            if ( ! $spaceService->hasSpaceAccessControl(Authority::AUTHORITY_CODE_READ_DETAIL,
                $spaceId, $this->getLoginUserId())
            ) {
                throw new GrnInvalidPermissionException(ErrorCode::GRN_INVALID_SPACE_ID);
            } else {
                return $spaceService->getSpaceUserIdsArrayOfUserOnly($spaceId,
                    $this->getLoginUserId());
            }
        } catch (GrnDataNotFoundException $e) {
            $e->setErrorCode(ErrorCode::GRN_INVALID_SPACE_ID);
            throw $e;
        }
    }

    /**
     * Get thread by todo id.
     * Attention: It will check the authority of discussion category.
     *
     * @param  string $spaceId
     * @param  string $todoId
     *
     * @return \grn\space\data\bean\Thread
     * @throws GrnDataNotFoundException
     * @throws GrnInvalidPermissionException
     * @throws \grn\space\common\exception\GrnArgumentOutOfRangeException
     */
    protected function getThreadByTodoId($spaceId, $todoId)
    {
        try {
            //check authority
            $discussionService = DiscussionService::getInstance();
            $rootThreadCategoryObj
                = $discussionService->getApplicationRootCategory($spaceId,
                Application::APPLICATION_CODE_DISCUSSION,
                $this->getLanguageCode());

            if ($discussionService->hasThreadCategoryAccessControl(Authority::AUTHORITY_CODE_READ_DETAIL,
                $spaceId, $rootThreadCategoryObj->getId(),
                $this->getLoginUserId())
            ) {
                return $discussionService->getThreadByTodoId($todoId,
                    $this->getLoginUserId());
            } else {
                throw new GrnInvalidPermissionException(ErrorCode::GRN_THREAD_NO_ACCESS_PERMISSION);
            }
        } catch (GrnDataNotFoundException $e) {
            $e->setErrorCode(ErrorCode::GRN_INVALID_TODO_ID);
            throw $e;
        }
    }

    /**
     * @param \GRN_Smarty $t
     * @param string      $space_id
     * @param string      $thread_id
     */
    public function assignTodoDialog(&$t, $space_id, $thread_id)
    {
        $append_post_data = [
            'spid' => $space_id,
            'tid'  => $thread_id
        ];
        $todo_search_box_options = [
            'is_use'           => true,
            'url'              => 'space/application/todo/ajax/todo_search_user',
            'append_post_data' => $append_post_data,
            'id_searchbox'     => 'todo-dialog-search-user'
        ];
        $t->assign('todo_search_box_options', $todo_search_box_options);

        $todo_pulldown_parts_options = ['is_use' => false];
        $t->assign('todo_pulldown_parts_options', $todo_pulldown_parts_options);

        $todo_order_parts_options = ['is_use' => true];
        $t->assign('todo_order_parts_options', $todo_order_parts_options);
    }

}
