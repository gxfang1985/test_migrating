<?php

namespace grn\space\screen\application\todo;

use grn\space\service\SpaceService;
use grn\space\service\TodoService;
use grn\space\common\data\bean\Authority;

/**
 * Class TodoList
 */
class TodoList extends TodoBase
{
    /**
     * @return array
     */
    public function getMyTodo()
    {
        $login_id = $this->getLoginUserId();
        $currentLanguage = $this->getLanguageCode();

        $todo_service = TodoService::getInstance();
        $todo_collection
            = $todo_service->getMyTodoCollectionByIncompleteWithAccessControl(Authority::AUTHORITY_CODE_READ_DETAIL,
            $login_id, $currentLanguage);

        $todo_list = [];
        $todos_no_term = [];
        foreach ($todo_collection as $todo) {
            /** @var \grn\space\data\bean\Todo $todo */
            $deadline_date = $this->transferTimestampToDateEx($todo,
                $todo->getDeadlineTimestamp());
            $todo_for_view = [
                'id'            => $todo->getId(),
                'spid'          => $todo->getParentSpaceId(),
                'title'         => $todo->getTitle(),
                'deadline_date' => $deadline_date,
                'status'        => $this->getTodoStatus($todo),
                'space_title'   => $todo->getParentSpaceName()
            ];
            if ($deadline_date) {
                $todo_list[] = $todo_for_view;
            } else {
                $todos_no_term[] = $todo_for_view;
            }
        }
        $todo_list = array_merge($todo_list, $todos_no_term);

        return $todo_list;
    }

    /**
     * @return array
     */
    public function getMyAssignedTodo()
    {
        $login_id = $this->getLoginUserId();
        $currentLanguage = $this->getLanguageCode();

        $todo_service = TodoService::getInstance();
        $todo_collection
            = $todo_service->getMyAssignedTodoCollectionByIncomplete($login_id,
            $currentLanguage);

        $checked_id = ['ok' => [], 'ng' => []];
        $todo_list = [];
        $todos_no_term = [];
        $space_service = SpaceService::getInstance();
        foreach ($todo_collection as $todo) {
            /** @var \grn\space\data\bean\Todo $todo */
            $space_id = $todo->getParentSpaceId();
            if ( ! in_array($space_id, $checked_id['ok'])) {
                if (in_array($space_id, $checked_id['ng'])) {
                    continue;
                }

                $space = $space_service->getSpace($space_id, $login_id,
                    $currentLanguage);
                if ($space->isExpired()) {
                    continue;
                } elseif ( ! $space->isPublic()
                           && ! $space_service->isSpaceMember($login_id,
                        $space_id, $login_id)
                ) {
                    $checked_id['ng'][] = $space_id;
                    continue;
                } else {
                    $checked_id['ok'][] = $space_id;
                }
            }
            $deadline_date = $this->transferTimestampToDateEx($todo,
                $todo->getDeadlineTimestamp());
            $todo_for_view = [
                'id'            => $todo->getId(),
                'spid'          => $space_id,
                'title'         => $todo->getTitle(),
                'deadline_date' => $deadline_date,
                'status'        => $this->getTodoStatus($todo),
                'space_title'   => $todo->getParentSpaceName()
            ];
            if ($deadline_date) {
                $todo_list[] = $todo_for_view;
            } else {
                $todos_no_term[] = $todo_for_view;
            }
        }
        $todo_list = array_merge($todo_list, $todos_no_term);

        return $todo_list;
    }
}
