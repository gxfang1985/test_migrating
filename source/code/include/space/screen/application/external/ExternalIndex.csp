<?php

namespace grn\space\screen\application\external;

use grn\space\common\exception\GrnDataNotFoundException;
use grn\space\common\exception\ErrorCode;
use grn\space\utility\ApplicationUtility;
use grn\space\common\data\bean\Application;
use grn\space\service\SpaceService;

/**
 * Class ExternalIndex
 */
class ExternalIndex extends ExternalBase
{
    /**
     * Selected Application
     *
     * @var Application
     */
    private $application;

    /**
     * (non-PHPdoc)
     * @see grn\space\screen\application\external.ExternalBase::fetch()
     */
    public function fetch()
    {
        require_once("grn/smarty.csp");
        $smarty = new \GRN_Smarty();
        $smarty->assign("this_getApplication", $this->getApplication());

        return $smarty->fetch("space/application/external/index.tpl");
    }

    /**
     * @return string
     */
    public function getTitle()
    {
        return $this->getApplication()->getApplicationName();
    }

    /**
     * @return array
     */
    public function getSitePosition()
    {
        return [
            [
                "page" => "",
                "name" => $this->getApplication()->getApplicationName(),
            ]
        ];
    }

    /**
     * Set application from $G_INPUT
     *
     * @param array $input
     *
     * @throws GrnDataNotFoundException
     */
    private function setApplicationFromInput(array $input)
    {
        try {
            $input = $this->getInput();
            $appId = @$input[self::ARG_APPLICATION_ID];

            $spaceService = SpaceService::getInstance();
            $application = $spaceService->getApplication($appId,
                $this->getLoginUserId());
            ApplicationUtility::constructApplicationViewURL($application);
            $this->setApplication($application);
        } catch (GrnDataNotFoundException $exception) {
            $exception->setErrorCode(ErrorCode::GRN_APPLICATION_NOT_FOUND);
            throw $exception;
        }
    }

    /**
     * Set application
     *
     * @param Application $application
     */
    private function setApplication(Application $application)
    {
        $this->application = $application;
    }

    /**
     * Get application
     *
     * @return Application
     */
    public function getApplication()
    {
        return $this->application;
    }

    /**
     * (non-PHPdoc)
     * @see grn\space\screen\application\external.ExternalBase::setInput()
     *
     * @param $input
     *
     * @throws GrnDataNotFoundException
     */
    protected function setInput($input)
    {
        parent::setInput($input);
        $this->setApplicationFromInput($input);
    }
}
