<?php

namespace grn\space\screen\application\discussion;

use grn\space\screen\application\discussion\DiscussionBase;
use grn\space\service\DiscussionService;
use grn\space\common\data\bean\Authority;
use grn\space\common\exception\GrnInvalidPermissionException;
use grn\space\common\exception\ErrorCode;
use grn\space\common\utility\ValidateUtility;

/**
 * Class NewerCommentCount
 */
class NewerCommentCount extends DiscussionBase
{
    const ARG_COMMENT_NO = 'comment_no';

    /**
     * @return int|mixed|string|void
     * @throws GrnInvalidPermissionException
     * @throws \grn\space\common\exception\GrnInvalidArgumentException
     */
    public function fetch()
    {
        $input = $this->getInput();
        $login_id = $this->getLoginUserId();
        $newer_comment_count = 0;

        $parameter = [self::ARG_SPACE_ID];
        $this->checkArgFromInput($parameter, $input);
        $this->verifySpaceIsNotExpired();
        $space_id = $this->getSpaceId();
        $thread_id = $this->getArrayValue(self::ARG_THREAD_ID, $input);
        if ( ! ValidateUtility::isNumber($thread_id,
            ValidateUtility::DISABLE_EMPTY,
            ValidateUtility::EXCEPTION_NOT_THROW)
        ) {
            $thread_id = $this->getSystemThreadId();
        }

        $comment_no = $this->getArrayValue(self::ARG_COMMENT_NO, $input);
        if ( ! ValidateUtility::isNumber($comment_no,
            ValidateUtility::DISABLE_EMPTY,
            ValidateUtility::EXCEPTION_NOT_THROW)
        ) {
            $comment_no = 0;
        }

        $discussion_service = DiscussionService::getInstance();
        $isAuthority = $discussion_service->hasThreadAccessControl(
            Authority::AUTHORITY_CODE_READ_DETAIL, $space_id, $thread_id,
            $login_id);

        if ($isAuthority) {
            $newer_comment_count
                = $discussion_service->getNewerComments($comment_no, $thread_id,
                $login_id);
        } else {
            throw new GrnInvalidPermissionException(ErrorCode::GRN_THREAD_NO_ACCESS_PERMISSION);
        }

        if ($newer_comment_count > 0) {
            require_once('grn/smarty.csp');
            $smarty = new \GRN_Smarty();
            $smarty->assign('newer_comment_count', $newer_comment_count);

            return $smarty->fetch('space/application/discussion/newer_comment_count.tpl');
        } else {
            return 0;
        }
    }
}
