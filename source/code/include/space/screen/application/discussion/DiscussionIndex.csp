<?php

namespace grn\space\screen\application\discussion;

use grn\grn\MemberLogic;
use grn\space\common\exception\GrnDataNotFoundException;
use grn\space\common\logic\SpaceMemberLogic;
use grn\space\common\utility\ValidateUtility;
use grn\space\data\bean\SpaceUser;
use grn\space\screen\application\todo\TodoBase;
use grn\space\screen\GenericScreenBase;
use grn\space\service\SpaceService;

/**
 * Class DiscussionIndex
 */
class DiscussionIndex extends GenericScreenBase
{
    const ARG_SF = 'sf';

    /**
     *
     * @see grn\space\screen\GenericScreenBase::fetch()
     */
    public function fetch()
    {
        require_once("grn/smarty.csp");
        $t = new \GRN_Smarty();

        $input = $this->getInput();

        if (strcasecmp(cb_at($_SERVER, 'REQUEST_METHOD'), 'POST') == 0) {
            $params = [];
            if (cb_at($input, 'spid') != null) {
                $params['spid'] = cb_at($input, 'spid');
            }
            if (cb_at($input, 'tid') != null) {
                $params['tid'] = cb_at($input, 'tid');
            }
            if (cb_at($input, 'nid') != null) {
                $params['nid'] = cb_at($input, 'nid');
            }
            if (cb_at($input, 'nhid') != null) {
                $params['nhid'] = cb_at($input, 'nhid');
            }
            if (cb_at($input, 'fnid') != null) {
                $params['fnid'] = cb_at($input, 'fnid');
            }
            $t->assign('params', $params);
        }

        $sf = $this->getArrayValue(self::ARG_SF, $input);
        if ($sf) {
            $session = $this->getSession(self::DISCUSSION_SESSION_KEY);
            $t->assign('tid', $session->get(self::ARG_THREAD_ID));
            $t->assign('sp', $session->get(self::ARG_NAVI_TAG));
            $t->assign('sf', true);
        }

        $t->assign('ajax_load', true);

        $loginId = $this->getLoginUserId();
        //generate upload ticket
        include('grn/_upload_prepend.csp');
        $t->assign('reply_upload_ticket', \GRN_UploadTicket::create($loginId));
        $t->assign('todo_upload_ticket', \GRN_UploadTicket::create($loginId));

        $this->assignTodoDialog($t, $input);

        require_once('fw/plugin.csp');
        $mention_access_plugin_encoded = \CB_PluginLoader::encodeParam(
            [
                'name'   => 'space',
                'params' => [
                    'app_id'   => 'space',
                    'space_id' => $this->getSpaceId(),
                    'target'   => [MemberLogic::TYPE_USER]
                ]
            ]);
        $t->assign('mention_access_plugin_encoded',
            $mention_access_plugin_encoded);

        return $t->fetch('space/application/discussion/index.tpl');
    }

    /**
     * @param \GRN_Smarty $smarty
     * @param array       $input
     */
    private function assignTodoDialog(&$smarty, $input)
    {
        $space_id = cb_at($input, self::ARG_SPACE_ID);
        $thread_id = cb_at($input, self::ARG_THREAD_ID);
        if ( ! ValidateUtility::isNumber($thread_id,
            ValidateUtility::DISABLE_EMPTY,
            ValidateUtility::EXCEPTION_NOT_THROW)
        ) {
            $discussion_base
                = new DiscussionBase([self::ARG_SPACE_ID => $space_id]);
            try {
                $thread_id = $discussion_base->getSystemThreadId();
            } catch (GrnDataNotFoundException $e) {
                $thread_id = '';
            }
        }

        $todo_base = new TodoBase([]);
        $todo_base->assignTodoDialog($smarty, $space_id, $thread_id);
    }

    /**
     *
     * @see grn\space\screen\GenericScreenBase::getTitle()
     */
    public function getTitle()
    {
        return grn_get_page_display_name('space/discussion/index');
    }

    /**
     * @return array
     */
    public function getSitePosition()
    {
        $sitePosition = [
            [
                "name" => grn_get_page_display_name(self::URL_ROOT),
                "page" => self::URL_ROOT,
            ],
        ];

        return $sitePosition;
    }
}
