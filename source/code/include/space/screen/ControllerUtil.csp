<?php

namespace grn\space\screen;

require_once('grn/controller.csp');

/**
 * Class ControllerUtil
 *
 */
class ControllerUtil extends \GRN_ControllerUtil
{
    /**
     * @param null $page
     */
    function __construct($page = null)
    {
        parent::__construct($page);
    }

    /**
     * @return bool
     */
    function isCurrentPage()
    {
        return $this->_page == cb_get_pagename();
    }

    /**
     * @param string $param_name
     * @param bool   $force_session
     *
     * @return int|null
     */
    function getNaviStartPosition($param_name = 'sp', $force_session = false)
    {
        global $G_INPUT;

        if ($force_session) {
            $session = &$this->getSession();
            if ($param_name == 'sp') {
                $start_position = $session->get('current_start_position');
            } else {
                $start_position = $session->get('curren_start_position'
                                                . $param_name);
            }
            if ($start_position == null) {
                $start_position = 0;
            }

            return $start_position;
        }

        if (array_key_exists($param_name, $G_INPUT)) {
            return (int)$G_INPUT[$param_name];
        }

        if ( ! array_key_exists('sf', $G_INPUT) || ! $G_INPUT['sf']) {
            return 0;
        }

        $session = &$this->getSession();
        if ($param_name == 'sp') {
            $start_position = $session->get('current_start_position');
        } else {
            $start_position = $session->get('current_start_position'
                                            . $param_name);
        }
        if ($start_position == null) {
            $start_position = 0;
        }

        return $start_position;
    }

    /**
     * @param        $pos
     * @param string $param_name
     */
    function setNaviStartPosition($pos, $param_name = 'sp')
    {
        $session = &$this->getSession();
        if ($param_name == 'sp') {
            $session->set('current_start_position', (int)$pos);
        } else {
            $session->set('current_start_position' . $param_name, (int)$pos);
        }
    }

    /**
     * @param string $param_name
     *
     * @return int|null
     */
    function getListOffset($param_name = 'sp')
    {
        if ( ! $this->isCurrentPage()) {
            return $this->getNaviStartPosition($param_name, true);
        }

        $sp = $this->getNaviStartPosition($param_name);
        $this->setNaviStartPosition($sp);

        return $sp;

    }
}
