<?php

namespace grn\space\screen;

use grn\space\service\SpaceService;
use grn\space\common\exception\GrnInvalidPermissionException;
use grn\space\common\exception\GrnRequiredDataIsNotException;
use grn\space\common\exception\GrnInvalidArgumentException;
use grn\space\common\exception\ErrorCode;

/**
 * Class AppManageDelete
 *
 */
class AppManageDelete extends AppManageBase
{
    const ARG_APPLICATION_ID = "appid";

    /**
     * @return mixed|string|void
     */
    public function fetch()
    {
        $spaceID = $this->getArrayValue(parent::ARG_SPACE_ID,
            $this->getInput());
        $appID = $this->getArrayValue(self::ARG_APPLICATION_ID,
            $this->getInput());
        $loginID = $this->getLoginUserId();
        require_once('fw/i18n.csp');
        $i18n = \CB_I18N::getInstance();

        $spaceService = SpaceService::getInstance();
        $application = $spaceService->getSpaceApplication($appID, $spaceID,
            $loginID, $i18n->getCurrentLanguage());

        //アプリケーションごと削除可能かどうか調べる
        $isOwner = $application->isExternalApplicationOwner();

        require_once('grn/smarty.csp');
        $smarty = new \GRN_Smarty();
        $smarty->assign('app', $application);
        $smarty->assign('isOwner', $isOwner);
        $smarty->assign('spid', $spaceID);
        $smarty->assign('space', $this->getSpace());
        $smarty->assign('site_position', $this->getSitePosition());
        $smarty->assign('page_title', $this->getTitle());

        return $smarty->fetch(cb_get_pagename() . ".tpl");
    }

    /**
     * @return array
     */
    public function getSitePosition()
    {
        $position = parent::getSitePosition();
        $position[] = [
            "name" => grn_get_page_display_name(cb_get_pagename()),
        ];

        return $position;
    }
}
