<?php

namespace grn\space\screen;

use grn\space\common\exception\ErrorCode;
use grn\space\common\exception\GrnDataNotFoundException;
use grn\space\common\exception\GrnInvalidArgumentException;
use grn\space\service\SpaceService;

/**
 * Class CommandDeleteSpace
 *
 */
class CommandDeleteSpace extends GenericScreenBase
{
    /**
     * @param $input
     *
     * @return \grn\space\data\bean\Space
     * @throws GrnDataNotFoundException
     * @throws \Exception
     */
    public function post($input)
    {
        $spaceService = SpaceService::getInstance();

        try {
            //Check access rights.
            if ( ! $this->isSpaceAdminOrOperator($spaceService,
                $this->getSpaceId(), $this->getLoginUserId())
            ) {
                throw new GrnDataNotFoundException(ErrorCode::GRN_INVALID_SPACE_ID);
            }

            $space = $spaceService->getSpace($this->getSpaceId(),
                $this->getLoginUserId());
        } catch (GrnDataNotFoundException $e) {
            $e->setErrorCode(ErrorCode::GRN_INVALID_SPACE_ID);
            throw $e;
        }
        $spaceService->deleteSpace($this->getSpaceId(),
            $this->getLoginUserId());

        return $space;
    }

    /**
     * @param $input
     *
     * @throws GrnInvalidArgumentException
     */
    protected function setInput($input)
    {
        parent::setInput($input);
        $this->checkArgFromInput([self::ARG_SPACE_ID], $input);
    }
}
