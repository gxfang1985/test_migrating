<?php

namespace grn\space\screen;

use grn\space\common\data\bean\CategoryLocal;

use grn\space\common\exception\GrnDataNotFoundException;
use grn\space\common\data\bean\Category;
use grn\space\service\SpaceService;
use grn\space\common\exception\ErrorCode;
use grn\space\common\exception\GrnRequiredDataIsNotException;
use grn\space\screen\GenericScreenBase;

/**
 * Class SystemCategoryNameImport2
 *
 */
class SystemCategoryNameImport2 extends CSVImport2ScreenBase
{
    const PATH_INFO = "space/system/category_name_import2";
    const SESSION_KEY = "space/system/category_name_import1";
    const IMPORT_FILES_KEY = "import_files";

    const CSV_COLUMN_CATEGORY_CODE = 0;
    const CSV_COLUMN_LANGUAGE_CODE = 1;
    const CSV_COLUMN_CATEGORY_NAME = 2;

    const GRN_SPACE_CATEGORY_CSV_LINE_LENGTH = 3;

    /**
     * (non-PHPdoc)
     * @see grn\space\screen.GenericScreenBase::getSitePosition()
     */
    public function getSitePosition()
    {
        return [
            [
                "name" => grn_get_page_display_name("space/system/category_name_import1"),
                "page" => "space/system/category_name_import1"
            ],
            ["name" => grn_get_page_display_name("space/system/category_name_import2")],
        ];
    }

    /**
     * Process to execute for each line of CSV
     *
     * @param array $line
     *
     * @throws GrnDataNotFoundException
     * @throws GrnRequiredDataIsNotException
     * @throws \Exception
     * @throws \grn\space\common\exception\GrnInvalidArgumentException
     */
    protected function processEachLine($line)
    {
        $spaceService = SpaceService::getInstance();
        $spaceRootCategory
            = $spaceService->getSpaceRootCategory($this->getLoginUserId());

        try {
            $categoryLocalCollection
                = $spaceService->getCategoryLocalCollectionByCategoryCode(
                $line[self::CSV_COLUMN_CATEGORY_CODE], $this->getLoginUserId());

            $targetCategoryLocal = null;
            /** @var \grn\space\common\data\bean\CategoryLocal $categoryLocal */
            foreach ($categoryLocalCollection as $categoryLocal) {
                if ($categoryLocal->getLanguageCode()
                    == $line[self::CSV_COLUMN_LANGUAGE_CODE]
                ) {
                    $targetCategoryLocal = $categoryLocal;
                    break;
                }
            }

            require_once('fw/i18n.csp');
            $i18n = \CB_I18N::getInstance();
            $availableLanguageArray = $i18n->getAvailableLanguages();
            if ( ! in_array($line[self::CSV_COLUMN_LANGUAGE_CODE],
                $availableLanguageArray)
            ) {
                throw new GrnRequiredDataIsNotException(ErrorCode::GRN_LANGUAGE_CODE_INVALID);
            }
            if ( ! is_null($targetCategoryLocal)) {
                $targetCategoryLocal->setCategoryName(cb_trim($line[self::CSV_COLUMN_CATEGORY_NAME]));
            } else {
                $targetCategoryLocal = new CategoryLocal();
                $targetCategoryLocal->setCategoryCode($line[self::CSV_COLUMN_CATEGORY_CODE]);
                $targetCategoryLocal->setCategoryName(cb_trim($line[self::CSV_COLUMN_CATEGORY_NAME]));
                $targetCategoryLocal->setLanguageCode($line[self::CSV_COLUMN_LANGUAGE_CODE]);
            }

            $spaceService->updateSpaceCategoryLocalForCSV($line[self::CSV_COLUMN_CATEGORY_CODE],
                $targetCategoryLocal, $this->makeLoginUserSpaceMember());
        } catch (GrnDataNotFoundException $e) {
            $e->setErrorCode(ErrorCode::GRN_INVALID_CATEGORY_ID);
            throw $e;
        }
    }
}
