<?php

namespace grn\space\screen;

use grn\space\common\exception\GrnDataNotFoundException;
use grn\space\common\data\bean\Category;
use grn\space\service\SpaceService;
use grn\space\common\exception\ErrorCode;
use grn\space\common\exception\GrnRequiredDataIsNotException;
use grn\space\common\exception\GrnIllegalOperationException;
use grn\space\screen\GenericScreenBase;

/**
 * Class SystemCategoryImport2
 *
 */
class SystemCategoryImport2 extends CSVImport2ScreenBase
{
    const PATH_INFO = "space/system/category_import2";
    const SESSION_KEY = "space/system/category_import1";
    const IMPORT_FILES_KEY = "import_files";

    const CSV_COLUMN_PARENT_CATEGORY_CODE = 0;
    const CSV_COLUMN_CATEGORY_CODE = 1;
    const CSV_COLUMN_CATEGORY_NAME = 2;
    const CSV_COLUMN_CATEGORY_MEMO = 3;

    /**
     * (non-PHPdoc)
     * @see grn\space\screen.GenericScreenBase::getSitePosition()
     */
    public function getSitePosition()
    {
        return [
            [
                "name" => grn_get_page_display_name("space/system/category_import1"),
                "page" => "space/system/category_import1"
            ],
            ["name" => grn_get_page_display_name("space/system/category_import2")],
        ];
    }

    /**
     * Process to execute for each line of CSV
     *
     * @param array $line
     *
     * @throws GrnIllegalOperationException
     * @throws \grn\space\common\exception\GrnInvalidArgumentException
     */
    protected function processEachLine($line)
    {
        $spaceService = SpaceService::getInstance();
        $line[self::CSV_COLUMN_PARENT_CATEGORY_CODE]
            = cb_trim($line[self::CSV_COLUMN_PARENT_CATEGORY_CODE]);
        $line[self::CSV_COLUMN_CATEGORY_CODE]
            = cb_trim_check($line[self::CSV_COLUMN_CATEGORY_CODE]);
        $line[self::CSV_COLUMN_CATEGORY_NAME]
            = cb_trim_check($line[self::CSV_COLUMN_CATEGORY_NAME]);

        $spaceRootCategory
            = $spaceService->getSpaceRootCategory($this->getLoginUserId());

        if ($line[self::CSV_COLUMN_CATEGORY_CODE]
            == $spaceRootCategory->getCategoryCode()
        ) {
            throw new GrnIllegalOperationException(ErrorCode::GRN_SPACE_CSV_ROOT_CATRGORY_FOREIGN_KEY);
        }
        if ($line[self::CSV_COLUMN_CATEGORY_CODE]
            == $line[self::CSV_COLUMN_PARENT_CATEGORY_CODE]
        ) {
            throw new GrnIllegalOperationException(ErrorCode::GRN_SPACE_INVALID_PARENT_CATEGORY);
        }

        if (mb_strlen($line[self::CSV_COLUMN_PARENT_CATEGORY_CODE]) == 0) {
            $parentCategory = $spaceRootCategory;
        } else {
            //ERROR: when $parentCategory is not found
            $parentCategory
                = $spaceService->getSpaceCategoryByCategoryCode($line[self::CSV_COLUMN_PARENT_CATEGORY_CODE],
                $this->getLoginUserId());
        }

        try {
            $targetCategory
                = $spaceService->getSpaceCategoryByCategoryCode($line[self::CSV_COLUMN_CATEGORY_CODE],
                $this->getLoginUserId());

            $targetCategory->setParentCategoryId($parentCategory->getId());
            $targetCategory->setCategoryName($line[self::CSV_COLUMN_CATEGORY_NAME]);
            $targetCategory->setMemo($line[self::CSV_COLUMN_CATEGORY_MEMO]);
            $targetCategory->setModifierId($this->getLoginUserId());
            $targetCategory->setModifierName($this->getLoginUser()
                                                  ->get('display_name'));
            $targetCategory->setModifyTimestamp(time());

            $spaceService->modifySpaceCategoryForCSV($targetCategory,
                $this->getLoginUserId());
        } catch (GrnDataNotFoundException $e) {
            $targetCategory = new Category();
            $targetCategory->setParentCategoryId($parentCategory->getId());
            $targetCategory->setCategoryCode($line[self::CSV_COLUMN_CATEGORY_CODE]);
            $targetCategory->setCategoryName($line[self::CSV_COLUMN_CATEGORY_NAME]);
            $targetCategory->setMemo($line[self::CSV_COLUMN_CATEGORY_MEMO]);
            $targetCategory->setCreatorId($this->getLoginUserId());
            $targetCategory->setCreatorName($this->getLoginUser()
                                                 ->get('display_name'));
            $targetCategory->setCreateTimestamp(time());
            $targetCategory->setModifierId($this->getLoginUserId());
            $targetCategory->setModifierName($this->getLoginUser()
                                                  ->get('display_name'));
            $targetCategory->setModifyTimestamp(time());

            $spaceService->createSpaceCategoryForCSV($targetCategory,
                $this->getLoginUserId());
        }
    }
}
