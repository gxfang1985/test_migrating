<?php

namespace grn\space\common\logic\legacy;

use grn\space\common\data\LogInterface;

/**
 * Space log logic class
 **/
class SpaceLogLogic
{
    private $loggerName;

    /**
     * コンストラクタ
     *
     * @param $loggerName
     */
    public function __construct($loggerName)
    {
        $this->setLoggerName($loggerName);
    }

    /**
     * @param $loggerName
     */
    private function setLoggerName($loggerName)
    {
        $this->loggerName = $loggerName;
    }

    /**
     * @return string
     */
    private function getLoggerName()
    {
        return $this->loggerName;
    }

    /**
     * @return \CB_Logger
     */
    private function getLogger()
    {
        require_once('grn/logger.csp');
        $logger_manager = \CB_LoggerManager::getInstance();

        return $logger_manager->getLogger($this->getLoggerName());
    }

    /**
     * 一般情報
     *
     * @param LogInterface $log
     */
    public function info(LogInterface $log)
    {
        $logger = $this->getLogger();
        $parameters = $log->getParameters();
        $logger->infoEx($log->getAction(), $log->getObject(), $parameters);
    }

    /**
     * 重要情報
     *
     * @param LogInterface $log
     */
    public function notice(LogInterface $log)
    {
        $logger = $this->getLogger();
        $parameter_list = $log->getParameters();
        $logger->noticeEx($log->getAction(), $log->getObject(),
            $parameter_list);
    }

}
