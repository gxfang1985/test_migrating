<?php

require_once('space/common/data/bean/legacy/GrnSpaceFile.csp');
require_once('space/common/data/bean/legacy/GrnSpaceFileBody.csp');

/**
 * SPACEの添付ファイル管理クラス
 *
 * This code uses the legacy of the past.
 */
class GRN_Space_FileManager extends \GRN_FileManager
{
    /**
     * singleton object
     *
     */
    private static $_instance = null;


    /**
     * コンストラクタ
     *
     */
    function __construct()
    {
        parent::__construct();

        $this->_file_table = cb_class2table('GRN_Space_File');
        $this->_body_table = cb_class2table('GRN_Space_FileBody');
    }


    /**
     * @return GRN_Space_FileManager
     */
    public static function getInstance()
    {
        if ( ! isset(self::$_instance)) {
            $c = __CLASS__;
            self::$_instance = new $c;
        }

        return self::$_instance;
    }


    /**
     * スペースファイルを添付する
     *
     * @param mixed    $mixedFile \GRN_File, or \GRN_ServerFile, or an element of $_FILES, or a path string of a file.
     * @param \CB_User $user      操作ユーザー
     *
     * @return \GRN_Space_File 失敗の場合はFALSEを返す
     */
    public function createSpaceFile($mixedFile, $user)
    {
        if ( ! $mixedFile) {
            $ret = false;

            return $ret;
        }

        if (is_a($mixedFile, 'GRN_File')) {
            return $this->duplicateFile($user, $mixedFile, null);
        } else {
            return $this->createFile($user, $mixedFile, null);
        }
    }

    /**
     * @param \GRN_Space_File $spaceFile space file
     *
     * @return bool
     */
    public function deleteSpaceFile(\GRN_Space_File $spaceFile)
    {
        $lock = $spaceFile->getLockObject();
        $lock->releaseLock(true);

        $spaceFile->delete();

        return true;
    }
}

