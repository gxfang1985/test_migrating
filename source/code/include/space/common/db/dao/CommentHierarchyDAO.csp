<?php

namespace grn\space\common\db\dao;

use grn\space\common\db\dao\DataAccessControlAbstract;
use grn\space\common\data\bean\Comment;
use grn\space\common\data\collection\CommentCollection;
use grn\space\common\data\condition\CommentSearchCondition;
use grn\space\common\exception\GrnDatabaseException;


/**
 * Database Back Layer
 * This layer mediates the database front layer and the DB.
 *
 * CommentHierarchy Data Access Object Class
 * Accept requests from the database front layer for all CommentHierarchy
 */
class CommentHierarchyDAO extends DataAccessControlAbstract
{
    /**
     * The insert of comment hierarchies is executed to the database.
     *
     * @param string            $commentId comment sequence id
     * @param CommentCollection $ancestorCommentCollection
     *
     * @throws GrnDatabaseException     Any error in the database.
     * @return Comment
     */
    public function insertCommentHierarchies(
        $commentId,
        CommentCollection $ancestorCommentCollection
    ) {
        try {
            $dbConn = $this->getDatabaseConnection();

            $query
                = "INSERT INTO tab_grn_space_comment_hierarchy (col_comment, col_ancestor) VALUES ";

            $tempIsNeedComma = false;
            foreach ($ancestorCommentCollection as $ancestorCtg) {
                if ($tempIsNeedComma) {
                    $query .= ", ";
                }

                /** @var \grn\space\common\data\bean\Comment $ancestorCtg */
                $query .= "('" . $dbConn->escape($commentId) . "','"
                          . $dbConn->escape($ancestorCtg->getId()) . "')";

                $tempIsNeedComma = true;
            }

            $query .= ";";

            $dbConn->query($query);
        } catch (GrnDatabaseException $e) {
            //将来的にはGrnDatabaseExceptionをキャッチしたい。
            //In the future you want to catch the GrnDatabaseException.
            throw $e;
        }
    }
}
