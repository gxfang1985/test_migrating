<?php

namespace grn\space\common\db\dao;

use grn\space\common\exception\ErrorCode;

use grn\space\common\data\collection\IconCollection;
use grn\space\common\data\condition\IconSearchCondition;
use grn\space\common\data\bean\Icon;
use grn\space\common\exception\GrnDatabaseException;
use grn\space\common\exception\GrnDataNotFoundException;

/**
 * Class IconDAO
 */
class IconDAO extends DataAccessControlAbstract
{

    /**
     * select Icon
     *
     * @param string $iconId
     *
     * @return Icon
     * @throws GrnDataNotFoundException
     */
    public function selectIcon($iconId)
    {
        $db = $this->getDatabaseConnection();

        $result = $db->query(
            "SELECT " .
            "* " .
            "FROM " .
            "tab_grn_space_icon " .
            "WHERE " .
            "_id = '{$db->escape($iconId)}';"
        );

        $row = $db->fetch_assoc($result);
        if ( ! $row) {
            throw new GrnDataNotFoundException(ErrorCode::GRN_ICON_NOT_FOUND);
        }
        $db->free_result($result);

        $icon = new Icon($row, Icon::NOT_CHECK_INPUT);

        return $icon;
    }

    /**
     * Insert Icon
     *
     * @param Icon $icon
     *
     * @return Icon
     * @throws GrnDatabaseException
     * @todo not implemented yet
     */
    public function insertIcon(Icon $icon)
    {

    }

    /**
     * Delete Icon
     *
     * @param Icon $icon
     *
     * @return Icon
     * @throws GrnDatabaseException
     * @throws GrnDataNotFoundException
     * @todo not implemented yet
     */
    public function deleteIcon(Icon $icon)
    {

    }

    /**
     * Update Icon
     *
     * @param Icon $icon
     *
     * @return Icon
     * @throws GrnDatabaseException
     * @throws GrnDataNotFoundException
     * @todo not implemented yet
     */
    public function updateIcon(Icon $icon)
    {

    }

    /**
     * Search for Icons
     *
     * @param IconSearchCondition $iconSearchCondition
     *
     * @return IconCollection
     * @throws GrnDatabaseException
     */
    public function search(IconSearchCondition $iconSearchCondition)
    {
        try {
            $db = $this->getDatabaseConnection();
            $query = "SELECT * FROM tab_grn_space_icon ORDER BY ";

            $isNeedComma = false;
            foreach (
                $iconSearchCondition->getOrderSortArray() as $eachOrderColumn
            ) {
                if ($isNeedComma) {
                    $query .= ",";
                }

                switch ($eachOrderColumn) {
                    case IconSearchCondition::SORT_ID_ASC:
                        $query .= " _id ASC ";
                        break;
                    case IconSearchCondition::SORT_ID_DESC:
                        $query .= " _id DESC ";
                        break;
                }
                $isNeedComma = true;
            }
            $query .= ";";

            $result = $db->query($query);

            $iconCollection = new IconCollection();
            while ($row = $db->fetch_assoc($result)) {
                $iconCollection->appendBean(new Icon($row,
                    Icon::NOT_CHECK_INPUT));
            }

            return $iconCollection;
        } catch (GrnDatabaseException $exception) {
            throw $exception;
        }
    }
}
