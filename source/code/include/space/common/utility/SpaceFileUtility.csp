<?php

namespace grn\space\common\utility;

use grn\space\common\data\bean\SpaceFile;
use grn\space\common\utility\ValidateUtility;

/**
 * Importance!! : Use ServiceClass or neither LogicClass nor DBClass from UtilityClass.
 * But, the DB access is exceptionally generated because this class is using legacy code.
 *
 * スペースファイルユーティリティクラス
 * スペースファイル情報を必要な形に加工するクラス
 *
 * This code uses the legacy of the past.
 **/
class SpaceFileUtility
{
    /**
     * ファイル履歴時刻昇順で並び替えする
     */
    const SORT_RECORD_TIME_ASC = 'tu';

    /**
     * ファイル履歴時刻降順で並び替えする
     */
    const SORT_RECORD_TIME_DESC = 'td';

    /**
     * ファイル更新者昇順で並び替えする
     */
    const SORT_RECORDER_NAME_ASC = 'uu';

    /**
     * ファイル更新者降順で並び替えする
     */
    const SORT_RECORDER_NAME_DESC = 'ud';

    /**
     * スペースファイル名の昇順で並び替えする
     */
    const SORT_SPACE_FILE_NAME_ASC = 'nu';

    /**
     * スペースファイル名の降順で並び替えする
     */
    const SORT_SPACE_FILE_NAME_DESC = 'nd';


    /**
     * Grnコントロールユーティリティオブジェクトを保持する
     */
    private static $_grnUtility = null;


    /**
     * コンストラクタ
     */
    private function __construct()
    {

    }


    /**
     * Grnコントロールユーティリティを取得する
     *
     * @return \GRN_ControllerUtil
     */
    static private function __getGrnUtility()
    {
        if (ValidateUtility::isNull(self::$_grnUtility)) {
            require_once('grn/controller.csp');
            self::$_grnUtility = new \GRN_ControllerUtil();
        }

        return self::$_grnUtility;
    }


    /**
     * ファイルリンク表示に必要なデータをオブジェクトから取得する
     *
     * @param SpaceFile $spaceFile スペース添付ファイル
     *
     * @return array
     */
    static public function getSpaceFileLinkView(SpaceFile $spaceFile)
    {
        $grnSpaceFile = $spaceFile->getGrnSpaceFileObject();

        $grnUtility = self::__getGrnUtility();
        $displayArray = $grnUtility->getFileLinkView($grnSpaceFile);

        return $displayArray;
    }


    /**
     * ファイル本体の詳細表示用のデータをオブジェクトから取得する
     * このデータに履歴は含まれない
     *
     * @param SpaceFile $spaceFile スペース添付ファイル
     *
     * @return array
     */
    static public function getSpaceFileView(SpaceFile $spaceFile)
    {
        $grnSpaceFile = $spaceFile->getGrnSpaceFileObject();

        $grnUtility = self::__getGrnUtility();
        $displayArray = $grnUtility->getFileView($grnSpaceFile);

        return $displayArray;
    }

    /**
     * make the file version menu
     *
     * @param SpaceFile $spaceFile スペース添付ファイル
     *
     * @return array
     */
    static public function getFileMaxVersionMenu(SpaceFile $spaceFile)
    {
        $grnSpaceFile = $spaceFile->getGrnSpaceFileObject();

        $grnUtility = self::__getGrnUtility();
        $version_menu
            = $grnUtility->getFileMaxVersionMenu($grnSpaceFile->getMaxVersion());

        return $version_menu;
    }


    /**
     * スペースファイルの詳細表示用のデータをオブジェクトから取得する
     *
     * @param SpaceFile $spaceFile  スペース添付ファイル
     * @param int       $logOffset  履歴一覧の先頭位置
     * @param int       $logLimit   履歴一覧件数
     * @param string    $logSortKey ソートしたいキーを表す定数
     *
     * @return array( 'id'            => ファイルID,
     *                'title'         => タイトル,
     *                'filename'      => ファイル名,
     *                'mime'          => MIMEタイプ,
     *                'size'          => ファイルサイズ,
     *                'memo'          => メモ,
     *                'version'       => バージョン番号,
     *                'max_version'   => バージョン管理数,
     *                'creator_uid'   => 登録者ID,
     *                'creator_name'  => 登録者名,
     *                'ctime'         => 登録タイムスタンプ,
     *                'modifier_uid'  => 更新者ID,
     *                'modifier_name' => 更新者名,
     *                'mtime'         => 更新タイムスタンプ,
     *                'logs'          => array( ログID => array( 'id'              => ログID,
     *                                                           'filename'        => ファイル名,
     *                                                           'version'         => バージョン番号,
     *                                                           'operation'       => 更新操作,
     *                                                           'restore_version' => 復活元バージョン,
     *                                                           'comment'         => 更新コメント,
     *                                                           'file_exists'     => 実ファイルの存在フラグ,
     *                                                           'creator_uid'     => 登録者ID,
     *                                                           'creator_name'    => 登録者名,
     *                                                           'ctime'           => 登録タイムスタンプ,
     *                                                         ),
     *                                           ...
     *                                   ),
     *                'sort' => $log_sort,
     *                'navi' => \GRN_ControllerUtil->makeNaviInformation()
     *             )
     *
     */
    public static function getSpaceFileDetailView(
        SpaceFile $spaceFile,
        $logOffset,
        $logLimit,
        $logSortKey = self::SORT_RECORD_TIME_DESC
    ) {
        $logSortKey = (ValidateUtility::isIn($logSortKey
            , [
                self::SORT_RECORD_TIME_ASC
                ,
                self::SORT_RECORD_TIME_DESC
                ,
                self::SORT_RECORDER_NAME_ASC
                ,
                self::SORT_RECORDER_NAME_DESC
                ,
                self::SORT_SPACE_FILE_NAME_ASC
                ,
                self::SORT_SPACE_FILE_NAME_DESC
            ]
            , ValidateUtility::DISABLE_EMPTY
            , ValidateUtility::EXCEPTION_NOT_THROW)) ? $logSortKey
            : self::SORT_RECORD_TIME_DESC;

        $sortInfoArrays = [
            self::SORT_RECORD_TIME_ASC      => [
                'column' => 'record_time',
                'order'  => false
            ],   // ファイル履歴時刻昇順
            self::SORT_RECORD_TIME_DESC     => [
                'column' => 'record_time',
                'order'  => true
            ],    // ファイル履歴時刻降順
            self::SORT_RECORDER_NAME_ASC    => [
                'column' => 'recorder_name',
                'order'  => false
            ],   // ファイル更新者昇順
            self::SORT_RECORDER_NAME_DESC   => [
                'column' => 'recorder_name',
                'order'  => true
            ],    // ファイル更新者降順
            self::SORT_SPACE_FILE_NAME_ASC  => [
                'column' => 'filename',
                'order'  => false
            ],   // ファイル名昇順
            self::SORT_SPACE_FILE_NAME_DESC => [
                'column' => 'filename',
                'order'  => true
            ],    // ファイル名降順
        ];

        $sortInfoArray = $sortInfoArrays[$logSortKey];

        $grnSpaceFile = $spaceFile->getGrnSpaceFileObject();

        $grnUtility = self::__getGrnUtility();
        $displayArray = $grnUtility->getFileDetailView($grnSpaceFile,
            $logOffset, $logLimit, $sortInfoArray['column'],
            $sortInfoArray['order']);

        return $displayArray;
    }
}

