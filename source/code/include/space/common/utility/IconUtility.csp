<?php

namespace grn\space\common\utility;


use grn\space\common\data\bean\Icon;

use grn\space\common\data\collection\IconCollection;

use grn\space\common\utility\ValidateUtility;
use grn\space\data\collection\SpaceCollection;
use grn\space\data\bean\Space;

/**
 * Importance!! : Use ServiceClass or neither LogicClass nor DBClass from UtilityClass.
 *
 * アイコンユーティリティクラス
 * アイコン情報を必要な形に加工するクラス
 **/
class IconUtility
{
    /**
     * コンストラクタ
     */
    private function __construct()
    {

    }

    /**
     * @param IconCollection $iconCollection
     * @param null           $grnIdentifierName
     */
    static public function constructIconCollectionIconPath(
        IconCollection $iconCollection,
        $grnIdentifierName = null
    ) {
        if (ValidateUtility::isNull($grnIdentifierName)) {
            global $G_config_common;
            $grnIdentifierName = $G_config_common->get('Global', 'app_path');
        }

        foreach ($iconCollection as $eachIcon) {
            IconUtility::constructIconIconPath($eachIcon, $grnIdentifierName);
        }
    }

    /**
     * Set property "displayIconPath" to $icon
     *
     * @param Icon   $icon
     * @param string $grnIdentifierName
     */
    static public function constructIconIconPath(
        Icon $icon,
        $grnIdentifierName = null
    ) {
        if (ValidateUtility::isNull($grnIdentifierName)) {
            global $G_config_common;
            $grnIdentifierName = $G_config_common->get('Global', 'app_path');
        }

        $icon->setDisplayIconPath($grnIdentifierName . "/"
                                  . $icon->getIconFileName());
    }


    /**
     * Set property "displayIconPath" to each Space object in $spaceCollection.
     *
     * @param SpaceCollection $spaceCollection SpaceCollection
     */
    static public function constructionSpaceCollectionIconPath(
        SpaceCollection $spaceCollection
    ) {
        global $G_config_common;
        $grnIdentifierName = $G_config_common->get('Global', 'app_path');

        foreach ($spaceCollection as $spaceObj) {
            IconUtility::constructionSpaceIconPath($spaceObj,
                $grnIdentifierName);
        }
    }

    /**
     * Set property "displayIconPath" to $space
     *
     * @param Space $spaceObj
     * @param null  $grnIdentifierName todo this method works only builtin icons.
     */
    static public function constructionSpaceIconPath(
        Space $spaceObj,
        $grnIdentifierName = null
    ) {
        if (ValidateUtility::isNull($grnIdentifierName)) {
            global $G_config_common;
            $grnIdentifierName = $G_config_common->get('Global', 'app_path');
        }

        if ($spaceObj->isBuiltinIcon()) {
            $spaceObj->setDisplayIconPath($grnIdentifierName . "/"
                                          . $spaceObj->getBuiltinIconFileName());
        } else {
            //---------- stub ---------------- start
            $spaceObj->setDisplayIconPath($grnIdentifierName
                                          . '/grn/image/cybozu/msg20_new.gif');
            //---------- stub ---------------- end
        }
    }
}

