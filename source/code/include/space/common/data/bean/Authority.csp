<?php

namespace grn\space\common\data\bean;

use grn\space\common\data\bean\BeanAbstract;
use grn\space\common\utility\ValidateUtility;

/**
 * 権限クラス
 * ひとつの権限を表すデータクラス
 **/
class Authority extends BeanAbstract
{
    /**
     * Read summary
     *
     * @var string
     */
    const AUTHORITY_CODE_READ_SUMMARY = "read_summary";

    /**
     * Read detail
     *
     * @var string
     */
    const AUTHORITY_CODE_READ_DETAIL = "read_detail";

    /**
     * 書き込み権
     */
    const AUTHORITY_CODE_WRITE = "write";

    /**
     * システム特権
     */
    const AUTHORITY_CODE_SYSTEM_PRIVILEGE = "system_privilege";

    /**
     * 運用特権
     */
    const AUTHORITY_CODE_OPERATION_PRIVILEGE = "operation_privilege";


    /**
     * コンストラクタ
     * オブジェクト配列を引数で受け取った場合は、受け取った配列でオブジェクトを初期化する
     * 引数がnullの場合は各データクラスのデフォルト値で初期化する
     *
     * @param    array $dataArray initial data
     * @param    bool  $isInputCheck
     */
    public function __construct(
        array $dataArray = null,
        $isInputCheck = self::CHECK_INPUT
    ) {
        parent::__construct($dataArray, $isInputCheck);
    }

    /**
     * オプジェクトデータを配列に変換する
     * 配列のキーはconst定数を使用
     *
     * @return    array         key:constant value:string or boolean or number
     */
    public function convertArray()
    {
        $result = parent::convertArray();

        return $result;
    }

    /**
     * 検査の実行(オーバーライド)
     * Performing Validation is override
     *
     * @param     int $validType VALID_TYPE_CREATE, VALID_TYPE_MODIFY, VALID_TYPE_SELECT
     *
     * @return    boolean       TRUE : valid   FALSE: Invalid
     */
    protected function checkValidate($validType)
    {

    }
}

