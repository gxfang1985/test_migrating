<?php

namespace grn\space\common\data\bean;

use grn\space\common\data\bean\BeanAbstract;

/**
 * コメントシーケンスNo管理クラス
 * ひとつのコメントシーケンスNo管理を表すデータクラス
 */
class CommentSequenceNo extends BeanAbstract
{
    /**
     * Using a constant array key. 配列のキーに使う定数
     */
    const LAST_NO = "col_last_no";


    /**
     * Initial value of comment no. コメントNoの初期値
     */
    const MINIMUM_LAST_NO = 0;


    /**
     * The present value of comment no is maintained.
     * コメントNoの現在値を保持する
     */
    private $_lastNo;


    /**
     * コンストラクタ
     * オブジェクト配列を引数で受け取った場合は、受け取った配列でオブジェクトを初期化する
     * 引数がnullの場合は各データクラスのデフォルト値で初期化する
     *
     * @param     array $dataArray initial data
     * @param     bool  $isInputCheck
     */
    function __construct(
        array $dataArray = null,
        $isInputCheck = self::CHECK_INPUT
    ) {
        parent::__construct($dataArray, $isInputCheck);

        if (is_null($dataArray)) {
            $this->setLastNo(self::MINIMUM_LAST_NO);
        } else {
            $this->setLastNo(array_key_exists(self::LAST_NO, $dataArray)
                ? $dataArray[self::LAST_NO] : self::MINIMUM_LAST_NO);
        }
    }

    /**
     * @param int $value
     */
    public function setLastNo($value)
    {
        $this->_lastNo = $value;
    }

    /**
     * @return int
     */
    public function getLastNo()
    {
        return $this->_lastNo;
    }

    /**
     * Performing Validation is override
     *
     * @param     int $validType VALID_TYPE_CREATE, VALID_TYPE_MODIFY, VALID_TYPE_SELECT
     *
     * @return    boolean       TRUE : valid   FALSE: Invalid
     */
    protected function checkValidate($validType)
    {
        if (parent::checkValidate($validType) === false) {
            return false;
        }

        return true;
    }
}
