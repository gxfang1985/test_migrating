<?php

namespace grn\space\common\data;

/**
 * That can be validated.
 */
interface ValidatableInterface
{
    /**
     * exception throw
     */
    const EXCEPTION_THROW = true;

    /**
     * exception not throw
     */
    const EXCEPTION_NOT_THROW = false;

    /**
     * valid check mode is select
     */
    const VALID_TYPE_SELECT = 1;

    /**
     * valid check mode is create
     */
    const VALID_TYPE_CREATE = 2;

    /**
     * valid check mode is modify
     */
    const VALID_TYPE_MODIFY = 3;


    /**
     * Validity check
     *
     * @param     int     $validType VALID_TYPE_CREATE, VALID_TYPE_MODIFY, VALID_TYPE_SELECT
     * @param     boolean $isThrow   EXCEPTION_THROW:exception throw   EXCEPTION_NOT_THROW:exception not throw
     *
     * @throws    \grn\space\common\exception\GrnArgumentOutOfRangeException        validType is out of range.
     * @throws    \grn\space\common\exception\GrnRequiredDataIsNotException         Do not have the required data.
     * @return    boolean       TRUE : $value is internal application   if isThrow = EXCEPTION_NOT_THROW then FALSE: external applicaton
     */
    public function isValidData($validType, $isThrow = self::EXCEPTION_THROW);
}

