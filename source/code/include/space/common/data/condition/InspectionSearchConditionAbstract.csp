<?php

namespace grn\space\common\data\condition;

require_once('space/common/data/condition/BeanSearchConditionAbstract.csp');
require_once('space/common/utility/ValidateUtility.csp');

use grn\space\common\data\condition\BeanSearchConditionAbstract;
use grn\space\common\utility\ValidateUtility;

/**
 * 検索クラス
 * 登録者情報、更新者情報付き検索条件を表す抽象クラス
 */
abstract class InspectionSearchConditionAbstract
    extends BeanSearchConditionAbstract
{
    /**
     * 作成日時の昇順
     */
    const SORT_CREATE_TIME_ASC = 3;

    /**
     * 作成日時の降順
     */
    const SORT_CREATE_TIME_DESC = 4;

    /**
     * 更新日時の昇順
     */
    const SORT_MODIFY_TIME_ASC = 5;

    /**
     * 更新日時の降順
     */
    const SORT_MODIFY_TIME_DESC = 6;


    /**
     * コンストラクタ
     * 検索条件を初期化する
     *
     */
    public function __construct()
    {
        parent::__construct();
    }


    /**
     * ソート順の範囲チェック
     *
     * @param     string $value The constant has been defined in oneself.
     *
     * @throws    \grn\space\common\exception\GrnInvalidArgumentException        It is not constant.
     * @throws    \grn\space\common\exception\GrnArgumentOutOfRangeException   It specified it excluding the constant.
     */
    protected function checkOrderSortRange($value)
    {
        ValidateUtility::isNumber($value, ValidateUtility::DISABLE_EMPTY);
        ValidateUtility::isInTheRange($value, self::SORT_ID_ASC,
            self::SORT_MODIFY_TIME_DESC, ValidateUtility::DISABLE_EMPTY);
    }


    /**
     * 検査の実行(オーバーライド)
     * Performing Validation is override
     *
     * @param     int $validType VALID_TYPE_CREATE, VALID_TYPE_MODIFY, VALID_TYPE_SELECT
     *
     * @return    boolean       TRUE : valid   FALSE: Invalid
     */
    protected function checkValidate($validType)
    {
        if (parent::checkValidate($validType) === false) {
            return false;
        }

        return true;
    }

}

