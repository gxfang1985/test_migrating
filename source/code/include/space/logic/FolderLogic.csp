<?php

namespace grn\space\logic;

use grn\space\data\bean\Folder;
use grn\space\data\collection\ThreadCollection;
use grn\space\db\FolderFacade;
use grn\space\data\condition\FolderSearchCondition;

/**
 * Class FolderLogic
 */
class FolderLogic
{

    /**
     * @param Folder $folder
     *
     * @return int insert id
     */
    public function createFolder(Folder $folder)
    {
        $folderFacade = new FolderFacade();
        $result = $folderFacade->insert($folder);

        return $result;
    }

    /**
     * @param Folder $folder
     *
     * @return bool|int
     */
    public function modify(Folder $folder)
    {

        $folderFacade = new FolderFacade();
        $result = $folderFacade->update($folder);

        return $result;
    }

    /**
     * @param $folderIdList
     *
     * @return bool|int
     */
    public function deleteFolderList($folderIdList)
    {
        $folderFacade = new FolderFacade();

        $result = $folderFacade->deleteFolderList($folderIdList);

        return $result;
    }

    /**
     * @param $folderId
     *
     * @return Folder
     */
    public function getFolder($folderId)
    {
        $folderFacade = new FolderFacade();
        $folder = $folderFacade->getFolder($folderId);

        return $folder;
    }

    /**
     * @param FolderSearchCondition $folderCondition
     *
     * @return \grn\space\data\collection\FolderCollection
     */
    public function getListByCondition(FolderSearchCondition $folderCondition)
    {
        $folderFacade = new FolderFacade();

        return $folderFacade->getListByCondition($folderCondition);
    }

}
