<?php
declare(strict_types=1);

namespace grn\api\validator;

use grn\api\exception\ErrorCode;
use grn\api\exception\validation\ValidationFailedException;

class ParamValidator
{

    /** @var  string|array $paramName */
    private $paramName;

    /** @var CheckerBase */
    private $checker;

    /**
     * ValidateItem constructor.
     *
     * @param string|array $param_name
     * @param CheckerBase  $checker
     */
    public function __construct($param_name, CheckerBase $checker)
    {
        $this->paramName = $param_name;
        $this->checker = $checker;
    }

    /**
     * @param array $input
     *
     * @throws ValidationFailedException
     */
    public function validate(array $input)
    {
        if ( ! $this->checker->check($this->paramName, $input)) {
            throw new ValidationFailedException(
                ErrorCode::INVALID_ITEM_TYPE, $this->getParamNameWithString());
        }
    }

    /**
     * @return string
     */
    private function getParamNameWithString(): string
    {
        if (is_array($this->paramName)) {
            return join(', ', $this->paramName);
        }

        return $this->paramName;
    }
}
