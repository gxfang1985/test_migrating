<?php
declare(strict_types=1);

namespace grn\api\validator\schedule;

use grn\api\validator\BooleanChecker;
use grn\api\validator\CheckerBase;
use grn\api\exception\validation\ValidationFailedException;
use grn\schedule\AttendanceStatusLogic;
use grn\schedule\rest_api\EventParamsBuilder;

require_once('schedule/error_code.csp');

class UseAttendanceCheckChecker extends CheckerBase
{
    /**
     * @param string $param_name
     * @param array  $input
     *
     * @return bool
     * @throws ValidationFailedException
     */
    public function check($param_name, array $input): bool
    {
        $is_not_set = ! array_key_exists($param_name, $input);
        if ($is_not_set) {
            return true;
        }
        $booleanChecker = new BooleanChecker();
        $booleanChecker->check($param_name, $input);

        $useAttendanceCheck = EventParamsBuilder::convertToBool($input[$param_name]);

        if ($useAttendanceCheck && ! $this->isEnableAttendanceCheck()) {
            throw new ValidationFailedException(E_GRN_SCHD_CAN_NOT_USE_ATTENDANCE_CHECK);
        }

        return true;
    }

    /**
     * @return bool
     */
    protected function isEnableAttendanceCheck(): bool
    {
        $attendanceStatusLogic = new AttendanceStatusLogic();

        return $attendanceStatusLogic->isEnableAttendanceCheck();
    }
}
