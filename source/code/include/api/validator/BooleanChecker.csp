<?php
declare(strict_types=1);

namespace grn\api\validator;

use grn\api\exception\ErrorCode;
use grn\api\exception\validation\ValidationFailedException;
use grn\schedule\rest_api\EventParamsBuilder;

class BooleanChecker extends CheckerBase
{
    /**
     * @param string $param_name
     * @param array  $input
     *
     * @return bool
     * @throws ValidationFailedException
     */
    public function check($param_name, array $input): bool
    {
        $is_not_set = ! array_key_exists($param_name, $input);
        if ($is_not_set) {
            return true;
        }
        $value = $this->getValue($param_name, $input);

        $converted_value = EventParamsBuilder::convertToBool($value);
        if (is_null($converted_value)) {
            throw new ValidationFailedException(ErrorCode::INVALID_ITEM_TYPE, $param_name);
        }

        return true;
    }
}
