<?php
declare(strict_types=1);

namespace grn\api\validator;

use grn\api\exception\ErrorCode;
use grn\api\exception\validation\ValidationFailedException;

class MultipleNotNullChecker extends CheckerBase
{
    /**
     * @param array $param_name
     * @param array $input
     *
     * @return bool
     * @throws ValidationFailedException
     */
    public function check($param_name, array $input): bool
    {
        if ( ! is_array($param_name) || 0 === count($param_name)) {
            throw new \RuntimeException();
        }

        if ( ! $this->checkAnyOneNotNull($param_name, $input)) {
            throw new ValidationFailedException(
                ErrorCode::MISSING_MULTIPLE_REQUIRED_PARAMETERS,
                join(', ', $param_name));
        }

        return true;
    }

    /**
     * @param array $param_name
     * @param array $input
     *
     * @return bool
     */
    private function checkAnyOneNotNull(array $param_name, array $input): bool
    {
        foreach ($param_name as $eachParam) {
            $depends_value = $this->getValue($eachParam, $input);
            if ( ! is_null($depends_value)) {
                return true;
            }
        }

        return false;
    }
}
