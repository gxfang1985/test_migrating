<?php
declare(strict_types=1);

namespace grn\api;

use grn\api\http\HttpMethod;

class Routes
{
    private const ROUTES
        = [
            //[ Method, URI, Controller class name ]
            "v1" => [
                [
                    HttpMethod::GET,
                    "/schedule/events/{id:\d+}",
                    v1\schedule\GetEventApi::class
                ],
                [
                    HttpMethod::GET,
                    "/schedule/events",
                    v1\schedule\GetEventsApi::class
                ],
                [
                    HttpMethod::POST,
                    "/schedule/events",
                    v1\schedule\PostEventApi::class
                ],
                [
                    HttpMethod::PUT,
                    "/schedule/events[/{id:\d+}]",
                    v1\schedule\PutEventApi::class
                ],
                [
                    HttpMethod::PATCH,
                    "/schedule/events/{id:\d+}",
                    v1\schedule\PatchEventApi::class
                ],
                [
                    HttpMethod::DELETE,
                    "/schedule/events/{id:\d+}",
                    v1\schedule\DeleteEventApi::class
                ],
            ],

            /*
            When you make new REST API version, add new version key then copy previous routes to invoke previous API.
            "v2" => [
                [ HttpMethod::GET, "/schedule/events/{id:\d+}", v2\schedule\GetEventApi::class ],
                [ HttpMethod::GET, "/schedule/events", v1\schedule\GetEventsApi::class ],
                [ HttpMethod::POST, "/schedule/events/{id:\d+}", v2\schedule\PostEventApi::class ]
            ],
            */
        ];

    /**
     * @return array
     */
    public static function getRoutes(): array
    {
        if (cb_is_debug_mode() && class_exists('grn\api\DevRoutes')) {
            return array_merge_recursive(self::ROUTES, DevRoutes::getRoutes());
        }

        return self::ROUTES;
    }
}
