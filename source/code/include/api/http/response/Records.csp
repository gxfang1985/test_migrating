<?php
declare(strict_types=1);

namespace grn\api\http\response;

use grn\api\Fields;

class Records implements MessageInterface
{
    /**
     * @var array $message
     */
    private $message;

    /**
     * @var string $label
     */
    private $label;

    /**
     * Records constructor.
     *
     * @param array  $message
     * @param string $label
     */
    public function __construct(array $message, string $label)
    {
        if ( ! isset($message[$label])) {
            throw new \RuntimeException('$message must contain $label property');
        }

        $this->label = $label;
        $this->message = $message;
    }

    /**
     * @return array
     */
    public function getMessage()
    {
        return $this->message;
    }

    /**
     * @return string
     */
    public function getLabel(): string
    {
        return $this->label;
    }

    /**
     * @param Fields $filter
     */
    public function convertToFields(Fields $filter)
    {
        $items = $this->message[$this->label];
        if (empty($items)) {
            return;
        }

        $new_items = [];
        foreach ($items as $each_item) {
            $new_items[] = $filter->convertFieldsToMessage($each_item);
        }
        $this->message[$this->label] = $new_items;
    }
}
