<?php

class GrnCabinetCondition
{
    private $_user = null;
    private $_folderId = null;
    private $_searchWords = [];
    private $_subfolder = true;
    private $_sensitive = false;
    private $_offset = 0;
    private $_limit = -1;


    public function __construct()
    {
        $this->setFolderId(null);
        $this->setSearchWords(null);
        $this->setEnableSubfolder(true);
        $this->setSensitive(false);
        $this->setOffset(0);
        $this->setLimit(-1);
    }


    public function setUser($user)
    {
        assert('is_a($user,"CB_User")');

        $this->_user = $user;
    }

    public function getUser()
    {
        return $this->_user;
    }

    public function setFolderId($folderId)
    {
        $this->_folderId = $folderId;
    }

    public function getFolderId()
    {
        return $this->_folderId;
    }

    public function setSearchWords($text)
    {
        if ( ! is_null($text) && strlen($text) > 0) {
            require_once('fw/string_util.csp');
            $this->_searchWords = cb_parse_search_text($text);
        }
    }

    public function getSearchWords()
    {
        return $this->_searchWords;
    }

    public function setEnableSubfolder($enable)
    {
        if ($this->_subfolder != $enable) {
            $this->_subfolder = $enable;

            return true;
        }

        return false;
    }

    public function isEnableSubfolder()
    {
        return $this->_subfolder;
    }

    public function setSensitive($enable)
    {
        if ($this->_sensitive != $enable) {
            $this->_sensitive = $enable;

            return true;
        }

        return false;
    }

    public function isSensitive()
    {
        return $this->_sensitive;
    }

    public function setOffset($offset)
    {
        $this->_offset = $offset;
    }

    public function getOffset()
    {
        return $this->_offset;
    }

    public function setLimit($limit)
    {
        $this->_limit = $limit;
    }

    public function getLimit()
    {
        return $this->_limit;
    }
}
