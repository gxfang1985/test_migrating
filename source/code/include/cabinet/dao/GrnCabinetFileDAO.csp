<?php

require_once('fw/database.csp');
require_once('cabinet/bean/GrnCabinetFile.csp');

class GrnCabinetFileDAO
{
    /**
     * @param                         $inDataObj
     * @param                         $inFolderArray
     * @param GrnCabinetFileCondition $inConditionBean
     *
     * @return array
     */
    public function getCabinetFileListByIds_Condition(
        $inDataObj,
        $inFolderArray,
        $inConditionBean
    ) {
        /* @var CB_DatabaseConnection $inDb */
        $inDb = $inDataObj['db'];
        $inIsCalcFoundRows = $inDataObj['isCalcFoundRows'];
        $inLock = (array_key_exists('lock', $inDataObj))
            ? $inDataObj['lock'] : null;
        $inOffset = (array_key_exists('offset', $inDataObj))
            ? $inDataObj['offset'] : null;
        $inLimit = (array_key_exists('limit', $inDataObj))
            ? $inDataObj['limit'] : null;
        $inLanguage = (array_key_exists('language', $inDataObj))
            ? $inDataObj['language'] : null;
        $isSensitive = (array_key_exists('isSensitive', $inDataObj))
            ? $inDataObj['isSensitive'] : false;

        $inEscapeFolderArray = [];
        foreach ($inFolderArray as $id) {
            $inEscapeFolderArray[] = $inDb->escape($id);
        }
        $inCategoryIds = implode("','", $inEscapeFolderArray);

        $query = ($inIsCalcFoundRows) ? "SELECT SQL_CALC_FOUND_ROWS" : "SELECT";
        $query = $query . "  fi._id";
        $query = $query . ", fi.col_creator";
        $query = $query . ", fi.col_creator_foreign_key";
        $query = $query
                 . ", CASE WHEN fi.col_creator IS NULL THEN fi.col_creator_name ELSE cu.col_display_name END AS col_creator_name";
        $query = $query . ", fi.col_ctime";
        $query = $query . ", fi.col_modifier";
        $query = $query . ", fi.col_modifier_foreign_key";
        $query = $query
                 . ", CASE WHEN fi.col_modifier IS NULL THEN fi.col_modifier_name ELSE mu.col_display_name END AS col_modifier_name";
        $query = $query . ", fi.col_mtime";
        $query = $query . ", fi.col_description";
        $query = $query . ", fi.col_dtime";
        $query = $query . ", fi.col_mark";
        $query = $query . ", fi.col_max_version";
        $query = $query . ", fi.col_title";
        $query = $query . ", fi.col_title_sort_key";
        $query = $query . ", fi.col_version";
        $query = $query . ", b.col_name AS filebody_col_name";
        $query = $query . ", folder.folder_id";
        $query = $query . ", folder.folder_col_name";
        $query = $query . " FROM (";
        $query = $query . "SELECT f._id AS folder_id";
        $query = $query
                 . ", IFNULL(fl.col_name, f.col_name) AS folder_col_name";
        $query = $query
                 . " FROM (tab_grn_cabinet_folderentity f LEFT JOIN (tab_grn_cabinet_folderentity_local fl INNER JOIN tab_cb_language_status l ON fl.language_id = l._id AND l.col_language = '"
                 . $inDb->escape($inLanguage) . "') ON f._id = fl.parent_id)";
        $query = $query . " WHERE f._id IN ('${inCategoryIds}')";
        $query = $query . ") folder";
        $query = $query . ", tab_grn_cabinet_filerelation r";
        $query = $query . ", tab_grn_cabinet_file fi";
        $query = $query
                 . " LEFT JOIN tab_grn_cabinet_filebody b ON fi._id = b.col_file AND fi.col_version = b.col_version";
        $query = $query
                 . " LEFT JOIN tab_cb_user cu ON fi.col_creator = cu._id AND cu.col_deleted IS NULL";
        $query = $query
                 . " LEFT JOIN tab_cb_user mu ON fi.col_modifier = mu._id AND mu.col_deleted IS NULL";

        $query = $query . " WHERE folder.folder_id = r.col_folder";
        $query = $query . " AND fi._id = r.col_file";

        //ignore search file in trash
        $query = $query . " AND fi.col_dtime IS NULL";

        //検索条件
        $inSearchWords = $inConditionBean->getSearchWords();
        $inSearchColumns = $inConditionBean->getSearchColumns();
        foreach ($inSearchWords as $searchWord) {
            $searchWordConditons = [];

            if (in_array('file_name', $inSearchColumns)) {
                if ($isSensitive) {
                    $searchWordConditons[] = cb_queryf($inDb,
                        "(b.col_name LIKE BINARY '%@L%')", $searchWord);
                } else {
                    $searchWordConditons[] = cb_queryf($inDb,
                        "(b.col_name LIKE '%@L%')", $searchWord);
                }
            }

            if (in_array('title', $inSearchColumns)) {
                if ($isSensitive) {
                    $searchWordConditons[] = cb_queryf($inDb,
                        "(fi.col_title LIKE BINARY '%@L%')", $searchWord);
                } else {
                    $searchWordConditons[] = cb_queryf($inDb,
                        "(fi.col_title LIKE '%@L%')", $searchWord);
                }
            }

            if (in_array('description', $inSearchColumns)) {
                if ($isSensitive) {
                    $searchWordConditons[] = cb_queryf($inDb,
                        "(fi.col_description LIKE BINARY '%@L%')", $searchWord);
                } else {
                    $searchWordConditons[] = cb_queryf($inDb,
                        "(fi.col_description LIKE '%@L%')", $searchWord);
                }
            }

            if (in_array('creator', $inSearchColumns)) {
                if ($isSensitive) {
                    $searchWordConditons[] = cb_queryf($inDb,
                        "(fi.col_creator_name LIKE BINARY '%@L%')",
                        $searchWord);
                    $searchWordConditons[] = cb_queryf($inDb,
                        "(cu.col_nickname LIKE BINARY '%@L%')", $searchWord);
                } else {
                    $searchWordConditons[] = cb_queryf($inDb,
                        "(fi.col_creator_name LIKE '%@L%')", $searchWord);
                    $searchWordConditons[] = cb_queryf($inDb,
                        "(cu.col_nickname LIKE '%@L%')", $searchWord);
                }
            }

            if (in_array('modifier', $inSearchColumns)) {
                if ($isSensitive) {
                    $searchWordConditons[] = cb_queryf($inDb,
                        "(fi.col_modifier_name LIKE BINARY '%@L%')",
                        $searchWord);
                    $searchWordConditons[] = cb_queryf($inDb,
                        "(mu.col_nickname LIKE BINARY '%@L%')", $searchWord);
                } else {
                    $searchWordConditons[] = cb_queryf($inDb,
                        "(fi.col_modifier_name LIKE '%@L%')", $searchWord);
                    $searchWordConditons[] = cb_queryf($inDb,
                        "(mu.col_nickname LIKE '%@L%')", $searchWord);
                }
            }

            $query = $query . " AND (" . implode(" OR ", $searchWordConditons)
                     . ")";
        }

        //検索範囲
        $inFileTermTs = $inConditionBean->getFileTerm();
        if (is_a($inFileTermTs, 'CB_TimeStamp')) {
            $query = $query . " AND fi.col_mtime >= '"
                     . $inDb->escape($inFileTermTs->unix_ts) . "'";
        }

        $query = $query . " ORDER BY folder.folder_col_name, b.col_name";
        if ( ! is_null($inOffset)) {
            $query = $inDb->select_format($query, $inOffset, $inLimit, $inLock);
        }

        $result = $inDb->query($query);

        if ($result === false) {
            //Throw Query Error
            $inDb->throwError(['query' => 'query failed: ' . $query]);
        }

        $grnFileArray = [];
        while ($rawdata = $inDb->fetch_assoc($result)) {
            $grnFile = new GrnCabinetFile($rawdata);
            $grnFileArray[] = $grnFile;
        }
        $inDb->free_result($result);
        $result = false;

        return $grnFileArray;
    }
}
