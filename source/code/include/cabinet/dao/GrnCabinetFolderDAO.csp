<?php

require_once('fw/database.csp');
require_once('cabinet/bean/GrnCabinetFolder.csp');

class GrnCabinetFolderDAO
{
    /**
     * @param $inDataObj
     *
     * @return int
     */
    public function getFoundRows($inDataObj)
    {
        /* @var CB_DatabaseConnection $inDb */
        $inDb = $inDataObj['db'];

        $result = $inDb->query("SELECT FOUND_ROWS() AS count;");

        if (($result === false) || ($inDb->num_rows($result) != 1)) {
            //Throw Query Error
            $inDb->throwError(['query' => 'query failed: ' . $query]);
        }

        $row = $inDb->fetch_assoc($result);
        $resultCount = $row['count'];

        $inDb->free_result($result);

        return $resultCount;
    }

    /**
     * @param $inDataObj
     * @param $inFolderKey
     *
     * @return bool|GrnCabinetFolder
     */
    public function selectByForeignKey($inDataObj, $inFolderKey)
    {
        /* @var CB_DatabaseConnection $inDb */
        $inDb = $inDataObj['db'];
        $inLock = (array_key_exists('lock', $inDataObj))
            ? $inDataObj['lock'] : null;
        $inLanguage = (array_key_exists('language', $inDataObj))
            ? $inDataObj['language'] : null;

        $query
            = "SELECT f._id, f.col_creator, f.col_creator_foreign_key, f.col_creator_name, f.col_ctime";
        $query = $query
                 . ", f.col_foreign_key, f.col_list_index, f.col_description, f.col_force_notify, f.col_modifier";
        $query = $query
                 . ", f.col_modifier_foreign_key, f.col_modifier_name, f.col_mtime";
        $query = $query . ", IFNULL(fl.col_name, f.col_name) AS col_name";
        $query = $query
                 . ", f.col_parent, f.col_reserve_blob1, f.col_reserve_blob2, f.col_reserve_blob3";
        $query = $query
                 . ", f.col_reserve_int1, f.col_reserve_int2, f.col_reserve_int3, f.col_reserve_text1";
        $query = $query
                 . ", f.col_reserve_text2, f.col_reserve_text3, f.col_security_model";
        $query = $query
                 . " FROM tab_grn_cabinet_folderentity f LEFT JOIN (tab_grn_cabinet_folderentity_local fl INNER JOIN tab_cb_language_status l ON fl.language_id = l._id AND l.col_language = '"
                 . $inDb->escape($inLanguage) . "') ON f._id = fl.parent_id";
        $query = $query . " WHERE f.col_foreign_key = '"
                 . $inDb->escape($inFolderKey) . "'";
        $query = $inDb->select_format($query, 0, -1, $inLock);

        $result = $inDb->query($query);

        if (($result === false) || ($inDb->num_rows($result) != 1)) {
            if ($result) {
                $inDb->free_result($result);
            }

            return false;
        }

        $rawdata = $inDb->fetch_assoc($result);
        $inDb->free_result($result);

        $grnFolder = new GrnCabinetFolder($rawdata);

        return $grnFolder;
    }

    /**
     * @param $inDataObj
     * @param $inId
     *
     * @return bool|GrnCabinetFolder
     */
    public function selectDefaultById($inDataObj, $inId)
    {
        /* @var CB_DatabaseConnection $inDb */
        $inDb = $inDataObj['db'];
        $inLock = (array_key_exists('lock', $inDataObj)) ? $inDataObj['lock']
            : null;

        $query
            = "SELECT f._id, f.col_creator, f.col_creator_foreign_key, f.col_creator_name, f.col_ctime";
        $query = $query
                 . ", f.col_foreign_key, f.col_list_index, f.col_description, f.col_force_notify, f.col_modifier";
        $query = $query
                 . ", f.col_modifier_foreign_key, f.col_modifier_name, f.col_mtime";
        $query = $query . ", f.col_name";
        $query = $query
                 . ", f.col_parent, f.col_reserve_blob1, f.col_reserve_blob2, f.col_reserve_blob3";
        $query = $query
                 . ", f.col_reserve_int1, f.col_reserve_int2, f.col_reserve_int3, f.col_reserve_text1";
        $query = $query
                 . ", f.col_reserve_text2, f.col_reserve_text3, f.col_security_model";
        $query = $query . " FROM tab_grn_cabinet_folderentity f";
        $query = $query . " WHERE f._id = '" . $inDb->escape($inId) . "'";
        $query = $inDb->select_format($query, 0, -1, $inLock);

        $result = $inDb->query($query);

        if (($result === false) || ($inDb->num_rows($result) != 1)) {
            if ($result) {
                $inDb->free_result($result);
            }

            return false;
        }

        $rawdata = $inDb->fetch_assoc($result);
        $inDb->free_result($result);

        $grnFolder = new GrnCabinetFolder($rawdata);

        return $grnFolder;
    }

    /**
     * @param $inDataObj
     * @param $inId
     *
     * @return bool|GrnCabinetFolder
     */
    public function selectLocalById($inDataObj, $inId)
    {
        /* @var CB_DatabaseConnection $inDb */
        $inDb = $inDataObj['db'];
        $inLock = (array_key_exists('lock', $inDataObj))
            ? $inDataObj['lock'] : null;
        $inLanguage = (array_key_exists('language', $inDataObj))
            ? $inDataObj['language'] : null;


        $query
            = "SELECT f._id, f.col_creator, f.col_creator_foreign_key, f.col_creator_name, f.col_ctime";
        $query = $query
                 . ", f.col_foreign_key, f.col_list_index, f.col_description, f.col_force_notify, f.col_modifier";
        $query = $query
                 . ", f.col_modifier_foreign_key, f.col_modifier_name, f.col_mtime";
        $query = $query . ", IFNULL(fl.col_name, f.col_name) AS col_name";
        $query = $query
                 . ", f.col_parent, f.col_reserve_blob1, f.col_reserve_blob2, f.col_reserve_blob3";
        $query = $query
                 . ", f.col_reserve_int1, f.col_reserve_int2, f.col_reserve_int3, f.col_reserve_text1";
        $query = $query
                 . ", f.col_reserve_text2, f.col_reserve_text3, f.col_security_model";
        $query = $query
                 . " FROM tab_grn_cabinet_folderentity f LEFT JOIN (tab_grn_cabinet_folderentity_local fl INNER JOIN tab_cb_language_status l ON fl.language_id = l._id AND l.col_language = '"
                 . $inDb->escape($inLanguage) . "') ON f._id = fl.parent_id";
        $query = $query . " WHERE f._id = '" . $inDb->escape($inId) . "'";
        $query = $inDb->select_format($query, 0, -1, $inLock);

        $result = $inDb->query($query);

        if (($result === false) || ($inDb->num_rows($result) != 1)) {
            if ($result) {
                $inDb->free_result($result);
            }

            return false;
        }

        $rawdata = $inDb->fetch_assoc($result);
        $inDb->free_result($result);

        $grnFolder = new GrnCabinetFolder($rawdata);

        return $grnFolder;
    }

    /**
     * @param array $inDataObj
     *
     * @return GrnCabinetFolder[]
     */
    public function getCabinetFolderList($inDataObj)
    {
        /* @var CB_DatabaseConnection $inDb */
        $inDb = $inDataObj['db'];
        $inLock = (array_key_exists('lock', $inDataObj))
            ? $inDataObj['lock'] : null;
        $inOffset = (array_key_exists('offset', $inDataObj))
            ? $inDataObj['offset'] : null;
        $inLimit = (array_key_exists('limit', $inDataObj))
            ? $inDataObj['limit'] : null;
        $inLanguage = (array_key_exists('language', $inDataObj))
            ? $inDataObj['language'] : null;

        $query
            = "SELECT f._id, f.col_creator, f.col_creator_foreign_key, f.col_creator_name, f.col_ctime";
        $query = $query
                 . ", f.col_foreign_key, f.col_list_index, f.col_description, f.col_force_notify, f.col_modifier";
        $query = $query
                 . ", f.col_modifier_foreign_key, f.col_modifier_name, f.col_mtime";
        $query = $query . ", IFNULL(fl.col_name, f.col_name) AS col_name";
        $query = $query
                 . ", f.col_parent, f.col_reserve_blob1, f.col_reserve_blob2, f.col_reserve_blob3";
        $query = $query
                 . ", f.col_reserve_int1, f.col_reserve_int2, f.col_reserve_int3, f.col_reserve_text1";
        $query = $query
                 . ", f.col_reserve_text2, f.col_reserve_text3, f.col_security_model";
        $query = $query
                 . " FROM (tab_grn_cabinet_folderentity f LEFT JOIN (tab_grn_cabinet_folderentity_local fl INNER JOIN tab_cb_language_status l ON fl.language_id = l._id AND l.col_language = '"
                 . $inDb->escape($inLanguage) . "') ON f._id = fl.parent_id)";
        $query = $query . " ORDER BY f.col_list_index, f._id";
        if ( ! is_null($inOffset)) {
            $query = $inDb->select_format($query, $inOffset, $inLimit, $inLock);
        }

        $result = $inDb->query($query);

        if ($result === false) {
            //Throw Query Error
            $inDb->throwError(['query' => 'query failed: ' . $query]);
        }

        $grnFolderArray = [];
        while ($rawdata = $inDb->fetch_assoc($result)) {
            $grnFolder = new GrnCabinetFolder($rawdata);
            $grnFolderArray[] = $grnFolder;
        }
        $inDb->free_result($result);
        $result = false;

        return $grnFolderArray;
    }

    /**
     * @param $inDataObj
     *
     * @return GrnCabinetFolder[]
     */
    public function getCabinetFolderListWithNonLocal($inDataObj)
    {
        /* @var CB_DatabaseConnection $inDb */
        $inDb = $inDataObj['db'];
        $inLock = (array_key_exists('lock', $inDataObj)) ? $inDataObj['lock']
            : null;
        $inOffset = (array_key_exists('offset', $inDataObj))
            ? $inDataObj['offset'] : null;
        $inLimit = (array_key_exists('limit', $inDataObj))
            ? $inDataObj['limit'] : null;

        $query
            = "SELECT f._id, f.col_creator, f.col_creator_foreign_key, f.col_creator_name, f.col_ctime";
        $query = $query
                 . ", f.col_foreign_key, f.col_list_index, f.col_description, f.col_force_notify, f.col_modifier";
        $query = $query
                 . ", f.col_modifier_foreign_key, f.col_modifier_name, f.col_mtime";
        $query = $query . ", f.col_name";
        $query = $query
                 . ", f.col_parent, f.col_reserve_blob1, f.col_reserve_blob2, f.col_reserve_blob3";
        $query = $query
                 . ", f.col_reserve_int1, f.col_reserve_int2, f.col_reserve_int3, f.col_reserve_text1";
        $query = $query
                 . ", f.col_reserve_text2, f.col_reserve_text3, f.col_security_model";
        $query = $query . " FROM tab_grn_cabinet_folderentity f";
        $query = $query . " ORDER BY f.col_list_index, f._id";
        if ( ! is_null($inOffset)) {
            $query = $inDb->select_format($query, $inOffset, $inLimit, $inLock);
        }

        $result = $inDb->query($query);

        if ($result === false) {
            //Throw Query Error
            $inDb->throwError(['query' => 'query failed: ' . $query]);
        }

        $grnFolderArray = [];
        while ($rawdata = $inDb->fetch_assoc($result)) {
            $grnFolder = new GrnCabinetFolder($rawdata);
            $grnFolderArray[] = $grnFolder;
        }
        $inDb->free_result($result);
        $result = false;

        return $grnFolderArray;
    }

    /**
     * @param array  $inDataObj
     * @param string $inParentId
     *
     * @return GrnCabinetFolder[]
     */
    public function getCabinetFolderListByParentId($inDataObj, $inParentId)
    {
        /* @var CB_DatabaseConnection $inDb */
        $inDb = $inDataObj['db'];
        $inLock = (array_key_exists('lock', $inDataObj))
            ? $inDataObj['lock'] : null;
        $inOffset = (array_key_exists('offset', $inDataObj))
            ? $inDataObj['offset'] : null;
        $inLimit = (array_key_exists('limit', $inDataObj))
            ? $inDataObj['limit'] : null;
        $inLanguage = (array_key_exists('language', $inDataObj))
            ? $inDataObj['language'] : null;

        $query
            = "SELECT f._id, f.col_creator, f.col_creator_foreign_key, f.col_creator_name, f.col_ctime";
        $query = $query
                 . ", f.col_foreign_key, f.col_list_index, f.col_description, f.col_force_notify, f.col_modifier";
        $query = $query
                 . ", f.col_modifier_foreign_key, f.col_modifier_name, f.col_mtime";
        $query = $query . ", IFNULL(fl.col_name, f.col_name) AS col_name";
        $query = $query
                 . ", f.col_parent, f.col_reserve_blob1, f.col_reserve_blob2, f.col_reserve_blob3";
        $query = $query
                 . ", f.col_reserve_int1, f.col_reserve_int2, f.col_reserve_int3, f.col_reserve_text1";
        $query = $query
                 . ", f.col_reserve_text2, f.col_reserve_text3, f.col_security_model";
        $query = $query
                 . " FROM (tab_grn_cabinet_folderentity f LEFT JOIN (tab_grn_cabinet_folderentity_local fl INNER JOIN tab_cb_language_status l ON fl.language_id = l._id AND l.col_language = '"
                 . $inDb->escape($inLanguage) . "') ON f._id = fl.parent_id)";
        $query = $query . " WHERE f.col_parent= '" . $inDb->escape($inParentId)
                 . "'";
        $query = $query . " ORDER BY f.col_list_index, f._id";
        if ( ! is_null($inOffset)) {
            $query = $inDb->select_format($query, $inOffset, $inLimit, $inLock);
        }

        $result = $inDb->query($query);

        if ($result === false) {
            //Throw Query Error
            $inDb->throwError(['query' => 'query failed: ' . $query]);
        }

        $grnFolderArray = [];
        while ($rawdata = $inDb->fetch_assoc($result)) {
            $grnFolder = new GrnCabinetFolder($rawdata);
            $grnFolderArray[] = $grnFolder;
        }
        $inDb->free_result($result);
        $result = false;

        return $grnFolderArray;
    }

    public function getCabinetFolderListByParentIdWithNonLocal(
        $inDataObj,
        $inParentId
    ) {
        /* @var CB_DatabaseConnection $inDb */
        $inDb = $inDataObj['db'];
        $inLock = (array_key_exists('lock', $inDataObj)) ? $inDataObj['lock']
            : null;
        $inOffset = (array_key_exists('offset', $inDataObj))
            ? $inDataObj['offset'] : null;
        $inLimit = (array_key_exists('limit', $inDataObj))
            ? $inDataObj['limit'] : null;

        $query
            = "SELECT f._id, f.col_creator, f.col_creator_foreign_key, f.col_creator_name, f.col_ctime";
        $query = $query
                 . ", f.col_foreign_key, f.col_list_index, f.col_description, f.col_force_notify, f.col_modifier";
        $query = $query
                 . ", f.col_modifier_foreign_key, f.col_modifier_name, f.col_mtime";
        $query = $query . ", f.col_name";
        $query = $query
                 . ", f.col_parent, f.col_reserve_blob1, f.col_reserve_blob2, f.col_reserve_blob3";
        $query = $query
                 . ", f.col_reserve_int1, f.col_reserve_int2, f.col_reserve_int3, f.col_reserve_text1";
        $query = $query
                 . ", f.col_reserve_text2, f.col_reserve_text3, f.col_security_model";
        $query = $query . " FROM tab_grn_cabinet_folderentity f";
        $query = $query . " WHERE f.col_parent= '" . $inDb->escape($inParentId)
                 . "'";
        $query = $query . " ORDER BY f.col_list_index, f._id";
        if ( ! is_null($inOffset)) {
            $query = $inDb->select_format($query, $inOffset, $inLimit, $inLock);
        }

        $result = $inDb->query($query);

        if ($result === false) {
            //Throw Query Error
            $inDb->throwError(['query' => 'query failed: ' . $query]);
        }

        $grnFolderArray = [];
        while ($rawdata = $inDb->fetch_assoc($result)) {
            $grnFolder = new GrnCabinetFolder($rawdata);
            $grnFolderArray[] = $grnFolder;
        }
        $inDb->free_result($result);
        $result = false;

        return $grnFolderArray;
    }

    /**
     * @param array $inDataObj
     * @param array $inFolderArray
     *
     * @return GrnCabinetFolder[]
     */
    public function getCabinetFolderListByIds($inDataObj, $inFolderArray)
    {
        /* @var CB_DatabaseConnection $inDb */
        $inDb = $inDataObj['db'];
        $inLock = (array_key_exists('lock', $inDataObj))
            ? $inDataObj['lock'] : null;
        $inOffset = (array_key_exists('offset', $inDataObj))
            ? $inDataObj['offset'] : null;
        $inLimit = (array_key_exists('limit', $inDataObj))
            ? $inDataObj['limit'] : null;
        $inLanguage = (array_key_exists('language', $inDataObj))
            ? $inDataObj['language'] : null;

        $inEscapeFolderArray = [];
        foreach ($inFolderArray as $id) {
            $inEscapeFolderArray[] = $inDb->escape($id);
        }
        $inCategoryIds = implode("','", $inEscapeFolderArray);

        $query
            = "SELECT f._id, f.col_creator, f.col_creator_foreign_key, f.col_creator_name, f.col_ctime";
        $query = $query
                 . ", f.col_foreign_key, f.col_list_index, f.col_description, f.col_force_notify, f.col_modifier";
        $query = $query
                 . ", f.col_modifier_foreign_key, f.col_modifier_name, f.col_mtime";
        $query = $query . ", IFNULL(fl.col_name, f.col_name) AS col_name";
        $query = $query
                 . ", f.col_parent, f.col_reserve_blob1, f.col_reserve_blob2, f.col_reserve_blob3";
        $query = $query
                 . ", f.col_reserve_int1, f.col_reserve_int2, f.col_reserve_int3, f.col_reserve_text1";
        $query = $query
                 . ", f.col_reserve_text2, f.col_reserve_text3, f.col_security_model";
        $query = $query
                 . " FROM (tab_grn_cabinet_folderentity f LEFT JOIN (tab_grn_cabinet_folderentity_local fl INNER JOIN tab_cb_language_status l ON fl.language_id = l._id AND l.col_language = '"
                 . $inDb->escape($inLanguage) . "') ON f._id = fl.parent_id)";
        $query = $query . " WHERE f._id IN ('${inCategoryIds}')";
        $query = $query . " ORDER BY f.col_list_index, f._id";
        if ( ! is_null($inOffset)) {
            $query = $inDb->select_format($query, $inOffset, $inLimit, $inLock);
        }

        $result = $inDb->query($query);

        if ($result === false) {
            //Throw Query Error
            $inDb->throwError(['query' => 'query failed: ' . $query]);
        }

        $grnFolderArray = [];
        while ($rawdata = $inDb->fetch_assoc($result)) {
            $grnFolder = new GrnCabinetFolder($rawdata);
            $grnFolderArray[] = $grnFolder;
        }
        $inDb->free_result($result);
        $result = false;

        return $grnFolderArray;
    }

    /**
     * @param $inDataObj
     * @param $inParentIdArray
     *
     * @return GrnCabinetFolder[]
     */
    public function getCabinetFolderListByParentIds(
        $inDataObj,
        $inParentIdArray
    ) {
        /* @var CB_DatabaseConnection $inDb */
        $inDb = $inDataObj['db'];
        $inLock = (array_key_exists('lock', $inDataObj))
            ? $inDataObj['lock'] : null;
        $inOffset = (array_key_exists('offset', $inDataObj))
            ? $inDataObj['offset'] : null;
        $inLimit = (array_key_exists('limit', $inDataObj))
            ? $inDataObj['limit'] : null;
        $inLanguage = (array_key_exists('language', $inDataObj))
            ? $inDataObj['language'] : null;

        $inEscapeParentIdArray = [];
        foreach ($inParentIdArray as $id) {
            $inEscapeParentIdArray[] = $inDb->escape($id);
        }
        $inParentIds = implode("','", $inEscapeParentIdArray);

        $query
            = "SELECT f._id, f.col_creator, f.col_creator_foreign_key, f.col_creator_name, f.col_ctime";
        $query = $query
                 . ", f.col_foreign_key, f.col_list_index, f.col_description, f.col_force_notify, f.col_modifier";
        $query = $query
                 . ", f.col_modifier_foreign_key, f.col_modifier_name, f.col_mtime";
        $query = $query . ", IFNULL(fl.col_name, f.col_name) AS col_name";
        $query = $query
                 . ", f.col_parent, f.col_reserve_blob1, f.col_reserve_blob2, f.col_reserve_blob3";
        $query = $query
                 . ", f.col_reserve_int1, f.col_reserve_int2, f.col_reserve_int3, f.col_reserve_text1";
        $query = $query
                 . ", f.col_reserve_text2, f.col_reserve_text3, f.col_security_model";
        $query = $query
                 . " FROM (tab_grn_cabinet_folderentity f LEFT JOIN (tab_grn_cabinet_folderentity_local fl INNER JOIN tab_cb_language_status l ON fl.language_id = l._id AND l.col_language = '"
                 . $inDb->escape($inLanguage) . "') ON f._id = fl.parent_id)";
        $query = $query . " WHERE f.col_parent IN ('${inParentIds}')";
        $query = $query . " ORDER BY f.col_list_index, f._id";
        if ( ! is_null($inOffset)) {
            $query = $inDb->select_format($query, $inOffset, $inLimit, $inLock);
        }

        $result = $inDb->query($query);

        if ($result === false) {
            //Throw Query Error
            $inDb->throwError(['query' => 'query failed: ' . $query]);
        }

        $grnFolderArray = [];
        while ($rawdata = $inDb->fetch_assoc($result)) {
            $grnFolder = new GrnCabinetFolder($rawdata);
            $grnFolderArray[] = $grnFolder;
        }
        $inDb->free_result($result);
        $result = false;

        return $grnFolderArray;
    }

    /**
     * @param array $inDataObj
     * @param array $inFolderNameArray
     *
     * @return GrnCabinetFolder[]
     */
    public function getCabinetFolderListByNames($inDataObj, $inFolderNameArray)
    {
        /* @var CB_DatabaseConnection $inDb */
        $inDb = $inDataObj['db'];
        $inLock = (array_key_exists('lock', $inDataObj))
            ? $inDataObj['lock'] : null;
        $inOffset = (array_key_exists('offset', $inDataObj))
            ? $inDataObj['offset'] : null;
        $inLimit = (array_key_exists('limit', $inDataObj))
            ? $inDataObj['limit'] : null;
        $inLanguage = (array_key_exists('language', $inDataObj))
            ? $inDataObj['language'] : null;

        $inEscapeFolderNameArray = [];
        foreach ($inFolderNameArray as $name) {
            $inEscapeFolderNameArray[] = cb_queryf($inDb,
                "(main.col_name LIKE '%@L%')", $name);
        }
        $inFolderNames = implode(" AND ", $inEscapeFolderNameArray);

        $query = "SELECT *";
        $query = $query . " FROM (";
        $query = $query
                 . "SELECT f._id, f.col_creator, f.col_creator_foreign_key, f.col_creator_name, f.col_ctime";
        $query = $query
                 . ", f.col_foreign_key, f.col_list_index, f.col_description, f.col_force_notify, f.col_modifier";
        $query = $query
                 . ", f.col_modifier_foreign_key, f.col_modifier_name, f.col_mtime";
        $query = $query . ", IFNULL(fl.col_name, f.col_name) AS col_name";
        $query = $query
                 . ", f.col_parent, f.col_reserve_blob1, f.col_reserve_blob2, f.col_reserve_blob3";
        $query = $query
                 . ", f.col_reserve_int1, f.col_reserve_int2, f.col_reserve_int3, f.col_reserve_text1";
        $query = $query
                 . ", f.col_reserve_text2, f.col_reserve_text3, f.col_security_model";
        $query = $query
                 . " FROM (tab_grn_cabinet_folderentity f LEFT JOIN (tab_grn_cabinet_folderentity_local fl INNER JOIN tab_cb_language_status l ON fl.language_id = l._id AND l.col_language = '"
                 . $inDb->escape($inLanguage) . "') ON f._id = fl.parent_id)";
        $query = $query . ") main";
        $query = $query . " WHERE ${inFolderNames}";
        $query = $query . " ORDER BY main.col_list_index, main._id";
        if ( ! is_null($inOffset)) {
            $query = $inDb->select_format($query, $inOffset, $inLimit, $inLock);
        }

        $result = $inDb->query($query);

        if ($result === false) {
            //Throw Query Error
            $inDb->throwError(['query' => 'query failed: ' . $query]);
        }

        $grnFolderArray = [];
        while ($rawdata = $inDb->fetch_assoc($result)) {
            $grnFolder = new GrnCabinetFolder($rawdata);
            $grnFolderArray[] = $grnFolder;
        }
        $inDb->free_result($result);
        $result = false;

        return $grnFolderArray;
    }

    /**
     * @param $inDataObj
     * @param $inFolderArray
     * @param $inFolderNameArray
     *
     * @return GrnCabinetFolder[]
     */
    public function getCabinetFolderListByIds_Names(
        $inDataObj,
        $inFolderArray,
        $inFolderNameArray
    ) {
        /* @var CB_DatabaseConnection $inDb */
        $inDb = $inDataObj['db'];
        $inIsCalcFoundRows = $inDataObj['isCalcFoundRows'];
        $inLock = (array_key_exists('lock', $inDataObj))
            ? $inDataObj['lock'] : null;
        $inOffset = (array_key_exists('offset', $inDataObj))
            ? $inDataObj['offset'] : null;
        $inLimit = (array_key_exists('limit', $inDataObj))
            ? $inDataObj['limit'] : null;
        $inLanguage = (array_key_exists('language', $inDataObj))
            ? $inDataObj['language'] : null;
        $isSensitive = (array_key_exists('isSensitive', $inDataObj))
            ? $inDataObj['isSensitive'] : false;

        $inEscapeFolderArray = [];
        foreach ($inFolderArray as $id) {
            $inEscapeFolderArray[] = $inDb->escape($id);
        }
        $inCategoryIds = implode("','", $inEscapeFolderArray);

        $inEscapeFolderNameArray = [];
        foreach ($inFolderNameArray as $name) {
            if ($isSensitive) {
                $inEscapeFolderNameArray[] = cb_queryf($inDb,
                    "(main.col_name LIKE BINARY '%@L%')", $name);
            } else {
                $inEscapeFolderNameArray[] = cb_queryf($inDb,
                    "(main.col_name LIKE '%@L%')", $name);
            }
        }
        $inFolderNames = implode(" AND ", $inEscapeFolderNameArray);

        $query = ($inIsCalcFoundRows) ? "SELECT SQL_CALC_FOUND_ROWS *"
            : "SELECT *";
        $query = $query . " FROM (";
        $query = $query
                 . "SELECT f._id, f.col_creator, f.col_creator_foreign_key, f.col_creator_name, f.col_ctime";
        $query = $query
                 . ", f.col_foreign_key, f.col_list_index, f.col_description, f.col_force_notify, f.col_modifier";
        $query = $query
                 . ", f.col_modifier_foreign_key, f.col_modifier_name, f.col_mtime";
        $query = $query . ", IFNULL(fl.col_name, f.col_name) AS col_name";
        $query = $query
                 . ", f.col_parent, f.col_reserve_blob1, f.col_reserve_blob2, f.col_reserve_blob3";
        $query = $query
                 . ", f.col_reserve_int1, f.col_reserve_int2, f.col_reserve_int3, f.col_reserve_text1";
        $query = $query
                 . ", f.col_reserve_text2, f.col_reserve_text3, f.col_security_model";
        $query = $query
                 . " FROM (tab_grn_cabinet_folderentity f LEFT JOIN (tab_grn_cabinet_folderentity_local fl INNER JOIN tab_cb_language_status l ON fl.language_id = l._id AND l.col_language = '"
                 . $inDb->escape($inLanguage) . "') ON f._id = fl.parent_id)";
        $query = $query . " WHERE f._id IN ('${inCategoryIds}')";
        $query = $query . ") main";
        $query = $query . " WHERE ${inFolderNames}";
        $query = $query . " ORDER BY main.col_list_index, main._id";
        if ( ! is_null($inOffset)) {
            $query = $inDb->select_format($query, $inOffset, $inLimit, $inLock);
        }

        $result = $inDb->query($query);

        if ($result === false) {
            //Throw Query Error
            $inDb->throwError(['query' => 'query failed: ' . $query]);
        }

        $grnFolderArray = [];
        while ($rawdata = $inDb->fetch_assoc($result)) {
            $grnFolder = new GrnCabinetFolder($rawdata);
            $grnFolderArray[] = $grnFolder;
        }
        $inDb->free_result($result);
        $result = false;

        return $grnFolderArray;
    }

    /**
     * @param $inDataObj
     * @param $inParentId
     *
     * @return int
     */
    public function getCountCabinetFolderByParentId($inDataObj, $inParentId)
    {
        /* @var CB_DatabaseConnection $inDb */
        $inDb = $inDataObj['db'];
        $inLock = (array_key_exists('lock', $inDataObj)) ? $inDataObj['lock']
            : null;

        $query = "SELECT COUNT(*) AS count";
        $query = $query . " FROM tab_grn_cabinet_folderentity f";
        $query = $query . " WHERE f.col_parent = '" . $inDb->escape($inParentId)
                 . "'";
        $query = $inDb->select_format($query, 0, -1, $inLock);

        $result = $inDb->query($query);

        if (($result === false) || ($inDb->num_rows($result) != 1)) {
            //Throw Query Error
            $inDb->throwError(['query' => 'query failed: ' . $query]);
        }

        $row = $inDb->fetch_assoc($result);
        $resultCount = $row['count'];

        $inDb->free_result($result);

        return $resultCount;
    }

    /**
     * @param $inDataObj
     * @param $inFolderId
     *
     * @return array|bool|null
     */
    public function getCabinetFolderOfFolderId($inDataObj, $inFolderId)
    {
        /* @var CB_DatabaseConnection $inDb */
        $inDb = $inDataObj['db'];
        $inLock = (array_key_exists('lock', $inDataObj)) ? $inDataObj['lock']
            : null;

        $query
            = "SELECT f._id as id, f.col_parent as parent, f.col_name as name, fl.language_id as language, fl.col_name as alias"
              . " FROM tab_grn_cabinet_folderentity f"
              . " LEFT JOIN tab_grn_cabinet_folderentity_local fl ON f._id = fl.parent_id"
              . " WHERE f._id = '" . $inDb->escape($inFolderId) . "'";
        $query = $inDb->select_format($query, 0, -1, $inLock);
        $result = $inDb->query($query);

        if (($result === false) || ($inDb->num_rows($result) < 1)) {
            return null;
        }

        $result_parent = false;
        while ($row = $inDb->fetch_assoc($result)) {
            if (false === $result_parent) {
                $result_parent = [
                    'id'     => $row['id'],
                    'name'   => $row['name'],
                    'parent' => $row['parent']
                ];
            }
            $result_parent['language'][$row['language']]
                = ['language' => $row['language'], 'name' => $row['alias']];
        }
        if ($row['col_parent']) {
            $result_parent = [
                'id'     => $row['_id'],
                'name'   => $row['col_name'],
                'parent' => $row['col_parent']
            ];
        }

        $inDb->free_result($result);

        return $result_parent;
    }

    /**
     * @param array  $parentIds
     * @param string $userId
     *
     * @return array
     */
    public function getSubFolderIdsWithEvaluateAccess(array $parentIds, $userId)
    {
        $ids = [];

        $app_locator = GRN_ApplicationLocator::instance();
        $db = $app_locator->getConnection('cabinet');

        $format = "SELECT folder._id " .
                  "FROM tab_grn_cabinet_folderentity AS folder " .
                  "LEFT JOIN ( " .
                  "SELECT folder._id, aclUser.col_authority_read " .
                  "FROM tab_grn_cabinet_folderentity AS folder " .
                  "LEFT JOIN tab_grn_cabinet_folderentity_acl_cb_user AS aclUser ON folder._id = aclUser.col_object "
                  .
                  "WHERE aclUser.col_target = '@S' " .

                  "UNION " .

                  "SELECT folder._id, aclGroup.col_authority_read " .
                  "FROM tab_grn_cabinet_folderentity AS folder " .
                  "LEFT JOIN tab_grn_cabinet_folderentity_acl_cb_group AS aclGroup ON folder._id = aclGroup.col_object "
                  .
                  "LEFT JOIN tab_cb_usergrouprelation AS ugr ON aclGroup.col_target = ugr.col_group "
                  .
                  "WHERE ugr.col_user = '@S' " .

                  "UNION " .

                  "SELECT folder._id, aclRole.col_authority_read " .
                  "FROM tab_grn_cabinet_folderentity AS folder " .
                  "LEFT JOIN tab_grn_cabinet_folderentity_acl_cb_role AS aclRole ON folder._id = aclRole.col_object "
                  .
                  "LEFT JOIN tab_cb_userrolerelation AS urr ON aclRole.col_target = urr.col_role "
                  .
                  "WHERE urr.col_user = '@S' " .

                  "UNION " .

                  "SELECT folder._id, aclDynamicRole.col_authority_read " .
                  "FROM tab_grn_cabinet_folderentity AS folder " .
                  "LEFT JOIN tab_grn_cabinet_folderentity_acl_dynamic_role AS aclDynamicRole ON folder._id = aclDynamicRole.col_object "
                  .
                  "WHERE aclDynamicRole.col_target IN ( 'LoginUser', 'Everyone' ) "
                  .
                  ") AS myAcl ON folder._id = myAcl._id " .
                  "WHERE folder.col_parent IN ( @A ) " .
                  "AND ( " .
                  "( folder.col_security_model = '0' AND myAcl.col_authority_read = '1' ) "
                  .
                  "OR " .
                  "( folder.col_security_model = '1' AND ( myAcl.col_authority_read = '0' OR myAcl.col_authority_read IS NULL ) ) "
                  .
                  ")";

        $query = cb_queryf($db, $format, $userId, $userId, $userId,
            $parentIds);
        $result = $db->query($query);
        while ($row = $db->fetch_assoc($result)) {
            $ids[] = $row['_id'];
        }

        return $ids;
    }
}

