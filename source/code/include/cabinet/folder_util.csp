<?php
require_once('cabinet/folder.csp');

class GRN_Cabinet_FolderSizeList
{
    var $_user = null;
    var $_folder = null;
    var $_sort_by_size = null;    //"up" or "down", "null" is not use sort by size
    var $_offset = null;
    var $_limit = null;

    function __construct(&$user, &$folder)
    {
        require_once('cabinet/access.csp');
        $acc = GRN_Cabinet_AccessManager::getInstance();

        if ( ! $acc->isSuperAdmin($user)) {
            $folder->privileged($user, ['operation'], true);
        }

        $this->_user =& $user;
        $this->_folder =& $folder;
        $this->_sort_by_size = 'down';
        $this->_limit = 18446744073709551615;
    }

    function sortBySize($is, $isDown = true)
    {
        if ($is) {
            $this->_sort_by_size = ($isDown == true) ? 'down' : 'up';
        } else {
            $this->_sort_by_size = null;
        }
    }

    function getFolderListView()
    {
        $children = $this->_folder->getFolders($this->_user);

        $folder_list_view = [];
        $list_size = [];
        foreach ($children as $child) {
            $id = $child->getOId();
            $folder_size
                = $child->getFolderSize($this->_user);
            $folder_list_view[$id]['name'] = $child->get('name');
            $folder_list_view[$id]['size'] = $folder_size;
            $folder_list_view[$id]['num_of_children']
                = $child->getNumFolders($this->_user);

            $list_size[$id] = $folder_size;
        }

        if ($this->_sort_by_size) {
            $this->_sortBySize($folder_list_view, $list_size);
        }

        $keys = array_keys($folder_list_view);
        $end = $this->_offset + $this->_limit;
        $start = $this->_offset;
        foreach ($folder_list_view as $id => $item) {
            if (array_search($id, $keys) < $start
                || array_search($id, $keys) >= $end
            ) {
                unset($folder_list_view[$id]);
            }
        }

        return $folder_list_view;
    }

    function _sortBySize(&$folder_list, $list_size)
    {
        if ($this->_sort_by_size == 'up') {
            asort($list_size, SORT_NUMERIC);
        } else {
            arsort($list_size, SORT_NUMERIC);
        }

        $folder_list_sorted = [];
        foreach ($list_size as $id => $item) {
            $folder_list_sorted[$id] = $folder_list[$id];
        }
        $folder_list = $folder_list_sorted;
    }

    function setOffSet($value)
    {
        assert("$value >= 0");
        $this->_offset = $value;
    }

    function setLimit($value)
    {
        assert("$value >= -1");
        if ($value == -1) {
            $this->_limit = 18446744073709551615;
        } else {
            $this->_limit = $value;
        }
    }

    function count()
    {
        return $this->_folder->getNumFolders($this->_user);
    }
}


