<?php

/**
 * RSS Reader Folder Logic
 *
 * @author  Eiji TAEN    2005/05
 * @version 1.0
 * @package grn.rss
 */

require_once('rss/resources.csp');

define('GRN_RSS_FOLDER_MAX_ORDER', 2147483646);

/**
 * RSS Reader folder logic class
 *
 * @author  Eiji TAEN    2005/05
 * @version 1.0
 * @package grn.rss
 */
class GRN_RSS_FolderManager
{
    /**
     * @access   private
     */
    var $_tbl_manager;

    /**
     * @access   private
     */
    var $_caches;

    /**
     * constructor
     */
    function __construct()
    {
        require_once('rss/tables.csp');
        $this->_tbl_manager = GRN_RSS_TableManager::getInstance();
        $this->_caches = ['shared' => [], 'personal' => []];
    }

    private static $_instance = null;

    /**
     * @return GRN_RSS_FolderManager
     */
    public static function getInstance()
    {
        if ( ! isset(self::$_instance)) {
            $c = __CLASS__;
            self::$_instance = new $c;
        }

        return self::$_instance;
    }

    /**
     * @access   private
     */
    function _getCache($category, $key)
    {
        if (array_key_exists($key, $this->_caches[$category])) {
            return $this->_caches[$category][$key];
        }
        $ret = false;

        return $ret;
    }

    /**
     * @access   private
     */
    function _setCache($category, $id, & $cache)
    {
        $this->_caches[$category][$id] =& $cache;
    }

    /**
     * get shared folder
     *
     * @param    string $id shared folder id
     *
     * @return   mixed    GRN_RSS_SharedFolder
     *                    if specified folder doesn't exist, return FALSE.
     */
    function &getSharedFolder($id)
    {
        if ($cache = $this->_getCache('shared', $id)) {
            return $cache;
        }

        $tbl_folder = $this->_tbl_manager->getTableInfo('GRN_RSS_SharedFolder');
        $tbl_folder->setLock(CB_DATABASE_NO_LOCK);
        $row = $tbl_folder->getRow($id);
        if ( ! $row) {
            $ret = false;

            return $ret;
        }

        $this->_setCache('shared', $id, $row);

        return $row;
    }

    /**
     * get personal folder
     *
     * @param  object $user      CB_User
     * @param  string $id        personal folder id
     * @param  int    $lock_mode //Lock Mode
     *
     * @return   mixed    GRN_RSS_PersonalFolder
     *                    if specified folder doesn't exist, return FALSE.
     */
    function getPersonalFolder($user, $id = GRN_RSS_PERSONALROOTFOLDER, $lock_mode = CB_DATABASE_NO_LOCK)
    {
        if ($cache = $this->_getCache('personal', $id)) {
            return $cache;
        }

        $tbl_folder
            = $this->_tbl_manager->getTableInfo('GRN_RSS_PersonalFolder');
        $tbl_folder->setLock($lock_mode);

        if (strcmp($id, GRN_RSS_PERSONALROOTFOLDER) === 0) {
            $db = $tbl_folder->getDBConnection();
            $rowset = new CB_RowSet($tbl_folder, 'p');

            $rowset->addJoin($this->_tbl_manager->getTableInfo('CB_User'),
                "p.col_user = u._id AND u.col_deleted IS NULL",
                CB_DATABASE_INNER_JOIN,
                'u');

            //$rowset->addCondition( 'col_user = ' . $user->getOID() . ' AND col_type = 0' );
            $rowset->addCondition("p.col_user = '"
                                  . $db->escape($user->getOID())
                                  . "' AND p.col_type = '0'");
            $rowset->limit(0, 1);
            $row = $rowset->iterate();
            $rowset->destroy();

            if (is_null($row)) {
                $ret = false;

                return $ret;
            }
        } else {
            $row = $tbl_folder->getRow($id);
            if ( ! $row || $row->get('user') != $user->getOID()) {
                $ret = false;

                return $ret;
            }
        }

        $this->_setCache('personal', $id, $row);

        return $row;
    }

    /**
     * add shared folder
     *
     * @param    array  $folder folder info
     * @param    string $parent parent folder id
     *
     * @return   object   GRN_RSS_SharedFolder
     *
     * $folder['title']  => string   folder title
     *        ['memo']   => string   folder memo
     */
    /*
    function &addSharedFolder( $folder, $parent )
    {
        // add shared folder
        $shared_folder =& $this->_tbl_manager->getTableInfo( 'GRN_RSS_SharedFolder' );
        $row = new $shared_folder->newRow();
        $row->setData( $folder );

        // add shared folder relation
        $this->_addSharedFolderRelation( $parent, GRN_RSS_RELATION_TYPE_FOLDER, $row );

        return $row;
    }

    function &_addSharedFolderRelation( $folder_id, $type, & $object )
    {
        $tbl_rel =& $this->_tbl_manager->getTableInfo( 'GRN_RSS_SharedFolderRelation' );
        $row = new $tbl_rel->newRow();
    }
     */

    /**
     * add personal folder
     *
     * @param    array  $folder    folder info
     * @param    string $parent_id parent folder id
     *
     * @option   int      $type        GRN_RSS_FOLDER_ROOT/GRN_RSS_FOLDER_GENERAL(default)
     * @return   mixed    object    GRN_RSS_PersonalFolder
     *                    boolean   FALSE if specified folder doesn't exist
     *
     * $folder['title']  => string   folder title
     */
    /*
    function &addPersonalFolder( & $user, $folder, $parent_id, $type = GRN_RSS_FOLDER_GENERAL )
    {
        // add personal folder
        $folder['user'] =& $user;
        $folder['type'] = $type;
        $parent_row = null;
        if( $type === GRN_RSS_FOLDER_GENERAL )
        {
            $parent_row =& $this->getPersonalFolder ( $user, $parent_id );
            if( ! $parent_row ) {$___ret = FALSE; return $___ret;}
        }
        $table =& $this->_tbl_manager->getTableInfo( 'GRN_RSS_PersonalFolder' );
        $row = new $table->newRow();
        $row->set( $folder );

        // add shared folder relation
        $this->_addPersonalFolderRelation( $user, $parent_row, GRN_RSS_RELATION_TYPE_FOLDER,
                                           $row );

        return $row;
    }

    function _addPersonalFolderRelation( & $user, $folder, $type, & $object )
    {
        $table =& $this->_tbl_manager->getTableInfo( 'GRN_RSS_PersonalFolderRelation' );
        $row = new $table->newRow();
        $row->set( 'user', $user );
        if( ! is_null( $parent_row ) )
        {
            $row->set( 'parent', $parent_row );
        }
    }
     */

}


