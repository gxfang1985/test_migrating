<?php

global $G_state_set, $G_config_common;

// 1. Disk space checking is deferred to this point since we need to
//    show up intermittent output even when the disk is too scarce.
if ( ! $G_state_set->get('error_occurred')) {
    $required_diskspace = $G_config_common->get('Global', 'required_diskspace');
    $files_dir = $G_config_common->get('Files', 'dir');
    $tmp_dir = cb_tmpdir();
    $min_disk_space = (float)$required_diskspace * 1024 * 1024;
    if (is_dir($files_dir)) {
        if ($min_disk_space > disk_free_space($files_dir)) {
            // flush output 
            while (ob_get_level() > 0) {
                ob_end_flush();
            }
            echo '<!-- " --><hr>', "\n";
            error_reporting(0);   // to avoid mb_output_handler's header troubles
            cb_throw_error(E_COMMON_TOO_SHORT_STORAGE, null,
                ['required' => $required_diskspace],
                ['dir' => $files_dir]);
        }
    }
    if (is_dir($tmp_dir)) {
        if ($min_disk_space > disk_free_space($tmp_dir)) {
            // flush output 
            while (ob_get_level() > 0) {
                ob_end_flush();
            }
            echo '<!-- " --><hr>', "\n";
            error_reporting(0);   // to avoid mb_output_handler's header troubles
            cb_throw_error(E_COMMON_TOO_SHORT_STORAGE, null,
                ['required' => $required_diskspace],
                ['dir' => $tmp_dir]);
        }
    }
    unset($required_diskspace);
    unset($files_dir);
    unset($tmp_dir);
    unset($min_disk_space);
}

if ($G_state_set->get('html_should_be_closed')) {
    echo '<div  class="credit">';
}

// 2. Postprocessing by common flowlet and plugin scripts.
if ( ! $G_state_set->get('error_occurred')) {
    // common flowlet finalization
    $loaded = false;
    if (defined('ON_FOREST')) {
        //GTM-129 for server side customization
        //try to load customized append file
        require_once('grn/CustomUtil.csp');
        $customutil = GRN_Custom_Util::getInstance();
        $loaded = $customutil->loadCustomCsp(dirname(cb_get_pagename())
                                             . '/_append.csp');
    }

    if ($loaded === false) {
        $append = cb_basedir() . '/code/doc_root/' . dirname(cb_get_pagename())
                  . '/_append.csp';
        if (file_exists($append)) {
            include($append);
        }
        unset($append);
    }
    unset($loaded);

    // finalize plugin scripts
    if ( ! $G_state_set->get('error_occurred'))    // to avoid recursion
    {
        require_once('fw/plugin.csp');
        $loader = new CB_PluginLoader('fw.append');
        $loader->loadFiles();
        unset($loader);
    }
}


// 3. Framework finalization.
require('fw/append.csp');


// 4. Issue copyright terms.  You may alter these terms for your product.
if ($G_state_set->get('copyright_should_be_written')) {
    echo cb_get_copyright(CB_TYPE_HTML);
}

if ($G_state_set->get('html_should_be_closed')) {
    // If mobile device is used, link that redirects to mobile view shows.
    // This will not show in login page, cellular view page, error page, system setting page and operation page.
    if (cb_is_ios() || cb_is_android()) {
        require_once('grn/ui.csp');
        $ui_config_manager = GRN_UIConfigManager::getInstance();
        $ui_config = $ui_config_manager->getSystemConfig();
        if ( ! $ui_config->isEnableMobileView()) {
            $G_state_set->set('not_show_mobile_view', true);
        }

        if ( ! ($G_state_set->get('not_show_mobile_view')
                || cb_is_cellular_page()
                || $G_state_set->get('error_occurred')
                || cb_is_system_page()
                || cb_is_operation_page()
                || cb_is_file_image_view_page()
                || ! grn\grn\mobile\MobileLicense::isLicensed())
        ) {
            echo "<span class='change_mobile_grn'><a href="
                 . cb_pageurl('mobile/index') . ">" . cb_msg('grn.mobile',
                    'mobileview') . "</a></span>";
        }
    }
    //closure div of credit class
    echo '</div>';

    //closure div of "container-wrap" id
    echo '</div>';

    echo '</body></html>';
}

// 5. Encode Output in Shift-JIS for cellular phones
if (cb_is_cellular_page()) {
    header('Content-Type: text/html; charset=Shift_JIS');
    echo mb_convert_encoding(ob_get_clean(), 'SJIS-win');
}

// 6. Optional redirect process.
//    Redirect defers till this point to avoid hiding errors.
if ($G_state_set->get('redirect_to')
    && ( ! $G_state_set->get('error_occurred'))
) {
    header('Location: ' . $G_state_set->get('redirect_to'));
}

