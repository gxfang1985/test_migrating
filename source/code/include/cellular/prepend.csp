<?php
require_once('cellular/error_code.csp');

function grn_cellular_prepend()
{
    global $G_state_set;

    // show copyright
    $G_state_set->set('copyright_should_be_written', true);
    // auto close html tag
    $G_state_set->set('html_should_be_closed', true);
    // custom error page
    $G_state_set->set('error_page_type', 'cellular');
}


function __grn_cellular_prepare_page($page, & $params)
{
    $pages = explode('/', $page);
    $p = null;

    if ($pages) {
        if ($pages[0] != 'cellular') {
            $p = implode('-', $pages);

            if ($params) {
                $params['p'] = $p;
            } else {
                $params = ['p' => $p];
            }

            $page = 'cellular/app';
        }
    } else {
        $page = 'cellular/index';
    }

    return $page;
}

function grn_cellular_pageurl(
    $page,
    $params = null,
    $fragment = null,
    $postfix = null
) {
    require_once('grn/ui.csp');

    $page = __grn_cellular_prepare_page($page, $params);

    $url = cb_pageurl($page, $params, $fragment, $postfix);

    if (preg_match('/\?$/', $url)) {
        $url = substr($url, 0, strlen($url) - 1);
    }

    return $url;
}

function grn_cellular_redirect(
    $page,
    $args = null,
    $fragment = null,
    $postfix = null,
    $ignore_referer = false
) {
    $page = __grn_cellular_prepare_page($page, $args);
    cb_redirect($page, $args, $fragment, $postfix, $ignore_referer);
}

function grn_cellular_switch_page($page, $args = null)
{
    if (is_array($args) && count($args)) {
        global $G_INPUT;
        $args['p'] = $G_INPUT['p'];
        $G_INPUT = $args;
    }

    $is_cellular = false;
    $page = preg_replace("/[\/\\\\]+/", "/", $page);

    $page_parts = explode('/', $page);
    // Check if the URL is '/cellular/...' or '/.../cellular/...'
    // URLs like '/cellular/(personal|system)' are not for cellular pages
    if (count($page_parts) > 1
        && ((strcmp($page_parts[0], 'cellular') == 0
             && strcmp($page_parts[1], 'personal') != 0
             && strcmp($page_parts[1], 'system') != 0)
            || strcmp($page_parts[1], 'cellular') == 0)
    ) {
        $is_cellular = true;
    }

    if ($is_cellular
        && file_exists(cb_basedir() . '/code/doc_root/' . $page . '.csp')
        && $page != cb_get_pagename()
    ) {
        cb_switch_page($page . '.csp');
    } else {
        cb_throw_error(E_GRN_CELLULAR_PAGE_NOT_FOUND);
    }
}

/**
 * リモートサービス向けにパスを書き換える
 * HTTP拡張ヘッダとして
 *   X-CYBOZU-REMOTE-KID
 *   X-CYBOZU-REMOTE-KAUTH
 * を取得するとそれらをパスの先頭に追加し返却
 * 拡張ヘッダが不正な場合、何も変換せず入力をそのまま返す
 * 例)
 *   $page = /cgi-bin/cbgrn/grn.cgi/cellular/index
 *   X-CYBOZU-REMOTE-KID: R1000000
 *   X-CYBOZU-REMOTE-KAUTH: abcdefgh
 *  返却されるパス
 *     /R1000000/abcdefgh/cgi-bin/cbgrn/grn.cgi/cellular/index
 *
 * @param    string $page 変換前ページパス
 *
 * @return   string   変換後ページパス
 */
function grn_cellular_remote_path($page)
{
    if (strpos($page, '/') !== 0) {
        $page = '/' . $page;
    }
    $page = cb_get_remote_path() . $page;

    return $page;
}


