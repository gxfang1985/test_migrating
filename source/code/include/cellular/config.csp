<?php

/**
 * @author  Tanaka, Yoshiaki        2004/11
 * @package grn.cellular
 */

require_once('fw/module.csp');
require_once('fw/forest_util.csp');

class GRN_Cellular_ConfigManager extends CB_ModuleBase
{
    private static $_instance = null;

    /**
     * @static
     * @return GRN_Cellular_ConfigManager
     */
    public static function getInstance()
    {
        if ( ! isset(self::$_instance)) {
            $c = __CLASS__;
            self::$_instance = new $c;
        }

        return self::$_instance;
    }

    /**
     * @access private
     */
    function __construct()
    {
        parent::__construct('grn.cellular');
    }

    /**
     * @access private
     */
    var $_user_config = [];

    /**
     * @return object GRN_UIConfig
     */
    function getSystemConfig(& $user)
    {
        $config = GRN_Cellular_SystemConfig::getInstance();

        return $config;
    }

    /**
     * Get per-user UI configuration object.
     *
     * @param CB_User $user
     *
     * @return GRN_Cellular_UserConfig
     */
    public function getUserConfig(CB_User $user)
    {
        $uid = $user->getOID();
        if ( ! array_key_exists($uid, $this->_user_config)) {
            $this->_user_config[$uid] = new GRN_Cellular_UserConfig($user);
        }

        return $this->_user_config[$uid];
    }
}

/**
 * 設定オブジェクトベースクラス
 *
 * @package grn.cellular
 */
class GRN_Cellular_ConfigBase
{
    public static function static_getUserProfile(& $user)
    {
        if ( ! is_a($user, 'CB_User')) {
            $ret = null;

            return $ret;
        }

        $uid = $user->getOID();

        static $_user_profile = [];
        if ( ! array_key_exists($uid, $_user_profile)) {
            require_once('fw/profile.csp');
            $_user_profile[$uid] = cb_get_user_profile($user, 'grn.cellular');
        }

        return $_user_profile[$uid];
    }

    public static function static_getSystemProfile()
    {
        static $_system_profile = null;

        if (is_null($_system_profile)) {
            require_once('fw/profile.csp');
            $_system_profile = cb_get_system_profile('grn.cellular');
        }

        return $_system_profile;
    }

    /**
     * @access private
     */
    var $_profile = null;
    /**
     * @access private
     */
    var $_settings = [];


    function __construct(& $profile, & $default)
    {
        $this->_profile =& $profile;
        $this->_initialize($default);
    }

    /**
     * @access private
     */
    function _initialize(& $default)
    {
        $dummy = null;
        if ($this->_profile->getAttribute('init', $dummy) !== false) {
            return;
        }

        if (is_null($default)) {
            $this->_profile->createAttribute('list_max', 10);
            $this->_profile->createAttribute('use_webmail', true);
            $this->_profile->createAttribute('subject_width', 14);
        } else {
            $this->_copy('list_max', $default);
            $this->_copy('use_webmail', $default);
            $this->_copy('subject_width', $default);
        }
        $this->_profile->createAttribute('init', true);
    }

    /**
     * @access private
     */
    function _copy($name, & $default)
    {
        $this->_profile->createAttribute($name, $default->_get($name));
    }


    function _set($name, $value)
    {
        if ( ! $this->_profile->updateAttribute($name, $value)) {
            $this->_profile->createAttribute($name, $value);
        }
        $this->_settings[$name] = $value;
    }

    function &_get($name, $default = null)
    {
        if (array_key_exists($name, $this->_settings)) {
            return $this->_settings[$name];
        }

        $value = null;
        if ( ! $this->_profile->getAttribute($name, $value)) {
            $value = $default;
        }
        $this->_settings[$name] = $value;

        return $value;
    }


    /**
     * 一覧表示の件数(N-件)
     *
     * @return int
     */
    function getListMax()
    {
        return $this->_get('list_max');
    }

    function setListMax($setting)
    {
        $this->_set('list_max', $setting);
    }

    /**
     * 標題を表示する幅
     */
    function getSubjectWidth()
    {
        return $this->_get('subject_width');
    }

    function setSubjectWidth($setting)
    {
        $this->_set('subject_width', $setting);
    }

    /**
     * 本文やフォローの先頭を表示する幅
     */
    function getUseWebMail()
    {
        return $this->_get('use_webmail');
    }

    function setUseWebMail($setting)
    {
        $this->_set('use_webmail', $setting);
    }
}


/**
 * システム設定クラス
 *
 * @package grn.cellular
 */
class GRN_Cellular_SystemConfig extends GRN_Cellular_ConfigBase
{
    private static $_instance = null;

    /**
     * @static
     * @return GRN_Cellular_SystemConfig
     */
    public static function getInstance()
    {
        if ( ! isset(self::$_instance)) {
            $c = __CLASS__;
            self::$_instance = new $c;
        }

        return self::$_instance;
    }


    function __construct()
    {
        $profile =& GRN_Cellular_ConfigBase::static_getSystemProfile();
        $dummy = null;
        parent::__construct($profile, $dummy);
    }

    /**
     * ケータイからのアクセスURL
     */
    function setLoginUrl($setting)
    {
        $this->_set('login_url', $setting);
    }

    function getLoginUrl()
    {
        if (defined('ON_FOREST')) {
            $forest_config = CB_ForestUtil::getConfig();
            $fqdn = $forest_config->get('Cellular', 'fqdn');
            if (strlen($fqdn) === 0) {
                return null;
            }

            return 'http://' . $fqdn . '/g/cellular/index.csp?';
        }

        return $this->_get('login_url', null);
    }

    /**
     * 検索時に表示されるユーザ項目
     */
    function setDisplayedUserItemsAsSearchResult($setting)
    {
        $this->_set('useritem_search', $setting);
    }

    function getDisplayedUserItemsAsSearchResult()
    {
        $value = $this->_get('useritem_search');
        if (is_null($value)) {
            return [
                'isDisplayItem' => 0,
                'items'         => ['', '']
            ];
        }

        return $value;
    }

    //GRn35-652
    function setAllowAutoLogin($setting)
    {
        $this->_set('allow_auto_login', $setting);
        //write log
        require_once('grn/logger.csp');
        $logger_manager = CB_LoggerManager::getInstance();
        $_logger = &$logger_manager->getLogger('grn.cellular');
        $message = ['allow_auto_login' => $setting['allow_auto_login']];
        $_logger->noticeEx('updated', 'allow_auto_login', $message);
    }

    function getAllowAutoLogin()
    {
        $value = $this->_get('allow_auto_login');
        if (is_null($value)) {
            return ['allow_auto_login' => 1];
        }

        return $value;
    }
    //GRn35-652
}


/**
 * ユーザー設定クラス
 *
 * @package grn.cellular
 */
class GRN_Cellular_UserConfig extends GRN_Cellular_ConfigBase
{

    function __construct(& $user)
    {
        $profile =& GRN_Cellular_ConfigBase::static_getUserProfile($user);
        $default = GRN_Cellular_SystemConfig::getInstance();

        parent::__construct($profile, $default);
    }


    /**
     * 利用の停止
     */
    function setAvailability($setting)
    {
        $this->_set('availability', $setting);
    }

    function getAvailability()
    {
        return $this->_get('availability', true);
    }

    /**
     * URL送信用ケータイアドレス
     */
    function setCellularMailAddress($setting)
    {
        $this->_set('cellular_mail_address', $setting);
    }

    function getCellularMailAddress()
    {
        return $this->_get('cellular_mail_address', null);
    }
}
