<?php
/**
 * DaiDung
 *
 * @date    2011/08
 * @package grn.cellular
 */

class GRN_Cellular_Token
{
    const ARRAY_KEY_TOKEN = 'cellular_token';
    const ARRAY_KEY_LAST_TIME_LOGIN = 'last_time_login';
    const ARRAY_KEY_USER = 'user_id';

    var $_dbconn = null;

    function __construct()
    {
        $this->connect();
    }

    function connect()
    {
        $app_locator = GRN_ApplicationLocator::instance();
        $this->_dbconn = $app_locator->getConnection('cellular');
    }

    function getData()
    {
        $data = [];
        $result = $this->_dbconn->query('select * from tab_grn_cellular_token');
        while ($row = $this->_dbconn->fetch_assoc($result)) {
            $data[$row['col_cellular_token']] = [
                self::ARRAY_KEY_TOKEN           => $row['col_cellular_token'],
                self::ARRAY_KEY_LAST_TIME_LOGIN => $row['col_last_time_login'],
                self::ARRAY_KEY_USER            => $row['col_user']
            ];
        }

        return $data;
    }

    function add($data)
    {
        $query = cb_queryf($this->_dbconn,
            'select _id from tab_grn_cellular_token where col_user=\'@S\'',
            $data[self::ARRAY_KEY_USER]);
        $result = $this->_dbconn->query($query);
        $row = $this->_dbconn->fetch_assoc($result);
        if ( ! $row) {
            $query = cb_queryf($this->_dbconn,
                'Insert into tab_grn_cellular_token(col_cellular_token,col_last_time_login,col_user) values(\'@S\',\'@S\',\'@S\')',
                $data[self::ARRAY_KEY_TOKEN], time(),
                $data[self::ARRAY_KEY_USER]);
            $this->_dbconn->query($query);
        } else {
            $this->update($data);
        }
    }

    function update($data)
    {
        $query = cb_queryf($this->_dbconn,
            'update tab_grn_cellular_token set col_cellular_token=\'@S\',col_last_time_login=\'@S\' where col_user=\'@S\'',
            $data[self::ARRAY_KEY_TOKEN], time(), $data[self::ARRAY_KEY_USER]);
        $this->_dbconn->query($query);
    }

    function remove($user_id)
    {
        $query = cb_queryf($this->_dbconn,
            'select _id from tab_grn_cellular_token where col_user=\'@S\'',
            $user_id);
        $result = $this->_dbconn->query($query);
        $row = $this->_dbconn->fetch_assoc($result);
        if ($row) {
            $query = cb_queryf($this->_dbconn,
                'delete from tab_grn_cellular_token where col_user=\'@S\'',
                $user_id);
            $this->_dbconn->query($query);
        }
    }

    function removeAll()
    {
        $result
            = $this->_dbconn->query('SELECT Count(_id) as total FROM tab_grn_cellular_token');
        $row = $this->_dbconn->fetch_assoc($result);
        if ($row['total'] > 0) {
            $this->_dbconn->query('delete from tab_grn_cellular_token');
        }
    }

    function getCount()
    {
        $result
            = $this->_dbconn->query('SELECT Count(_id) as total FROM tab_grn_cellular_token');
        $row = $this->_dbconn->fetch_assoc($result);

        return $row['total'];
    }

    function checkTokenUser($token)
    {
        $query = cb_queryf($this->_dbconn,
            'SELECT * FROM tab_grn_cellular_token where col_cellular_token = \'@S\'',
            $token);
        $result = $this->_dbconn->query($query);
        $row = $this->_dbconn->fetch_assoc($result);
        if ($row) {
            return [
                self::ARRAY_KEY_TOKEN           => $row['col_cellular_token'],
                self::ARRAY_KEY_LAST_TIME_LOGIN => $row['col_last_time_login'],
                self::ARRAY_KEY_USER            => $row['col_user']
            ];
        }

        return false;
    }
}
