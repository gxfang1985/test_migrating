<?php

/**
 * Database tables for Phone Message.
 *
 * @author  YOSHIDA, Hideyasu 2005/03
 * @version 1.0
 * @package grn.phonemessage
 */

require_once('grn/access_table.csp');
require_once('phonemessage/resources.csp');

/**
 * 電話メモクラス
 */
class GRN_PhoneMessage_Message extends GRN_InspectionBase
{
    function __construct($row)
    {
        parent::__construct($row, GRN_PHONEMESSAGE_MODULE_ID);
    }

    var $_app_id = 'phonemessage';

    /** 依頼主 */
    var $col_client_name
        = [
            'type'    => 'char',
            'length'  => 100,
            'notnull' => true
        ];
    /** 用件 */
    var $col_matter = ['type' => 'char', 'length' => 100, 'notnull' => true];
    /** 電話番号 */
    var $col_telephone_number
        = [
            'type'    => 'char',
            'length'  => 100,
            'notnull' => true
        ];
    /** 伝言 */
    var $col_message
        = [
            'type'    => 'char',
            'length'  => 65535,
            'lazy'    => true,
            'notnull' => true
        ];
    /** 送信者ID */
    var $col_sender = ['type' => 'weak_relation', 'to' => 'CB_User'];
    /** 送信者名 */
    var $col_sender_name
        = [
            'type'    => 'char',
            'length'  => 100,
            'notnull' => true
        ];
    /** 送信日時 */
    var $col_send_time = ['type' => 'timestamp', 'notnull' => true];
    /** 受信者ID */
    var $col_receiver = ['type' => 'relation', 'to' => 'CB_User'];
    /** 受信者名 */
    var $col_receiver_name
        = [
            'type'    => 'char',
            'length'  => 100,
            'notnull' => true
        ];
    /** 確認日時 */
    var $col_confirm_time = ['type' => 'timestamp'];

    // reserved columns 
    var $col_reserve_text1 = ['type' => 'char', 'lazy' => true];
    var $col_reserve_text2 = ['type' => 'char', 'lazy' => true];
    var $col_reserve_text3 = ['type' => 'char', 'lazy' => true];
    var $col_reserve_int1 = ['type' => 'int', 'lazy' => true];
    var $col_reserve_int2 = ['type' => 'int', 'lazy' => true];
    var $col_reserve_int3 = ['type' => 'int', 'lazy' => true];
    var $col_reserve_blob1 = ['type' => 'blob', 'lazy' => true];
    var $col_reserve_blob2 = ['type' => 'blob', 'lazy' => true];
    var $col_reserve_blob3 = ['type' => 'blob', 'lazy' => true];

    /** インデックス */
    var $idx_receiver = ['cols' => ['receiver', null]];
    var $idx_sender = ['cols' => ['sender', null]];
}

/**
 * アクセス制限するユーザークラス
 */
class GRN_PhoneMessage_User extends GRN_Access_Base
{
    var $_app_id = 'phonemessage';

    function __construct(& $row)
    {
        parent::__construct($row);
    }

    /** ユーザー */
    var $col_object = ['type' => 'relation', 'to' => 'CB_User'];
}

/**
 * アクセス制限する組織クラス
 */
class GRN_PhoneMessage_Group extends GRN_Access_Base
{
    var $_app_id = 'phonemessage';

    function __construct(& $row)
    {
        parent::__construct($row);
    }

    /** 組織 */
    var $col_object = ['type' => 'relation', 'to' => 'CB_Group'];

    /**
     * @param string $col_name
     *
     * @return CB_Row|mixed
     */
    public function get($col_name)
    {
        $result = false;

        $table_info = $this->getTableInfo();
        $col_info = $table_info->getColumnInfo($col_name);
        if (is_null($col_info)) {
            return $result;
        }


        if ($col_name == 'object') {
            $isKeyExists = array_key_exists(CB_DATABASE_COLUMN_PREFIX
                                            . $col_name,
                $this->__row->_rawdata);
            $id = $isKeyExists
                ? $this->__row->_rawdata[CB_DATABASE_COLUMN_PREFIX . $col_name]
                : null;

            if ( ! is_null($id)) {
                require_once('fw/FwFacade.csp');
                require_once('fw/i18n.csp');

                $i18n = CB_I18N::getInstance();
                $table_info = $this->getTableInfo();
                $tableManager = $table_info->getTableManager();
                $relationTableName = $col_info['to'];
                $relationTableInfo
                    = $tableManager->getTableInfo($relationTableName);
                $relationTableLock = $relationTableInfo->_lock;

                $dao = new FwFacade();
                $dataObj = [];
                $dataObj['lock'] = $relationTableLock;
                $dataObj['language'] = $i18n->getCurrentLanguage();

                $groupData = $dao->referGroupById($dataObj, $id);
                $result = $relationTableInfo->getRow($groupData->getId(),
                    $groupData->convertArray());
            } else {
                $result = parent::get($col_name);
            }
        } else {
            $result = parent::get($col_name);
        }

        return $result;
    }
}

/**
 * アクセス制限する（スタティック）ロールクラス
 */
class GRN_PhoneMessage_Role extends GRN_Access_Base
{
    function __construct(& $row)
    {
        parent::__construct($row);
    }

    var $_app_id = 'phonemessage';

    /** （スタティック）ロール */
    var $col_object = ['type' => 'relation', 'to' => 'CB_Role'];
}


