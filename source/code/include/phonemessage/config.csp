<?php

/**
 * Configuration for Phone Message.
 *
 * @author  YOSHIDA, Hideyasu 2005/03
 * @version 1.0
 * @package grn.phonemessage
 */

/**
 * 電話メモ設定管理クラス
 */
class GRN_PhoneMessage_ConfigManager extends CB_ModuleBase
{
    /** @var GRN_PhoneMessage_ConfigManager */
    private static $_instance = null;

    /**
     * シングルトンを取得する
     *
     * @return GRN_PhoneMessage_ConfigManager
     */
    public static function getInstance()
    {
        if ( ! isset(self::$_instance)) {
            $c = __CLASS__;
            self::$_instance = new $c;
        }

        return self::$_instance;
    }

    /**
     * コンストラクタ
     */
    function __construct()
    {
        parent::__construct(GRN_PHONEMESSAGE_MODULE_ID);
    }

    /**
     * @access private
     */
    var $_system_config = null;

    /**
     * システム管理を取得する
     */
    function getSystemConfig()
    {
        if (is_null($this->_system_config)) {
            $profile = $this->getSystemProfile();
            $this->_system_config = new GRN_PhoneMessage_Config($profile);
        }

        return $this->_system_config;
    }

    /**
     * @access private
     */
    var $_personal_config = [];

    /**
     * 個人設定を取得する
     *
     * @param $user
     *
     * @return GRN_PhoneMessage_Config
     */
    function getPersonalConfig($user)
    {
        assert('is_object( $user ) && is_a( $user, \'CB_User\' )');

        $user_id = $user->getOID();
        if ( ! array_key_exists($user_id, $this->_personal_config)) {
            $profile = $this->getUserProfile($user);
            $this->_personal_config[$user_id]
                = new GRN_PhoneMessage_Config($profile);
        }

        return $this->_personal_config[$user_id];
    }
}

/**
 * 設定クラス
 */
class GRN_PhoneMessage_Config
{
    /**
     * @access private
     * @var CB_Profile
     */
    var $_profile;

    /**
     * コンストラクタ
     */
    function __construct(& $profile)
    {
        assert('is_object( $profile ) && is_a( $profile, \'CB_Profile\' )');

        $this->_profile =& $profile;
    }

    /**
     * 属性を更新する
     *
     * @access private
     */
    function _updateAttribute($key, $value)
    {
        $old_value = null;
        if ( ! $this->_profile->getAttribute($key, $old_value)) {
            return $this->_profile->createAttribute($key, $value);
        }

        return $this->_profile->updateAttribute($key, $value);
    }

    /**
     * システムメールアカウントを使用するか取得する
     */
    function getUseSystemEmailFlag()
    {
        // 初期値はシステムメールアカウントを使用しない
        $use_system_email = false;
        $this->_profile->getAttribute('use_system_email', $use_system_email);

        return $use_system_email;
    }

    /**
     * システムメールアカウントを使用するか設定する
     */
    function setUseSystemEmailFlag($use_system_email)
    {
        return $this->_updateAttribute('use_system_email', $use_system_email);
    }

    /**
     * ユーザー名に割り当てるシングルサインオンを取得する
     */
    function getSSO()
    {
        $sso = GRN_PHONEMESSAGE_SSO_DEFAULT;
        $this->_profile->getAttribute('sso', $sso);

        return $sso;
    }

    /**
     * ユーザー名に割り当てるシングルサインオンを設定する
     */
    function setSSO($sso)
    {
        return $this->_updateAttribute('sso', $sso);
    }

    /**
     * 電話メモをメール転送するか取得する
     */
    function getForwardEmailFlag()
    {
        // 初期値は電話メモをメール転送しない
        $forward_email = false;
        $this->_profile->getAttribute('forward_email', $forward_email);

        return $forward_email;
    }

    /**
     * 電話メモをメール転送するか設定する
     */
    function setForwardEmailFlag($forward_email)
    {
        return $this->_updateAttribute('forward_email', $forward_email);
    }

    /**
     * 電話メモをユーザー情報のメールアドレスで受け取るか取得する
     */
    function getForwardUserEmailFlag()
    {
        // 初期値は受け取る
        $forward_user_email = true;
        $this->_profile->getAttribute('forward_user_email',
            $forward_user_email);

        return $forward_user_email;
    }

    /**
     * 電話メモをユーザー情報のメールアドレスで受け取るか設定する
     */
    function setForwardUserEmailFlag($forward_user_email)
    {
        return $this->_updateAttribute('forward_user_email',
            $forward_user_email);
    }

    /**
     * 電話メモを受け取るメールアドレスを取得する
     */
    function getOtherEmailAddress()
    {
        // 初期値は空
        $other_email_address = null;
        $this->_profile->getAttribute('other_email_address',
            $other_email_address);

        return $other_email_address;
    }

    /**
     * 電話メモを受け取るメールアドレスを設定する
     */
    function setOtherEmailAddress($other_email_address)
    {
        return $this->_updateAttribute('other_email_address',
            $other_email_address);
    }

}


