<?php

require_once('fw/csv.csp');

abstract class GRN_ForestCustomItemBase
{
    const CHARSET = 'UTF-8';
    /** @var GRN_Uum */
    protected $_uum;
    /** @var CB_CSVWriter */
    protected $_writer;

    public function __construct()
    {
        $this->_uum = cb_lwc_uum();
    }

    public function main()
    {
        if ( ! defined('ON_FOREST')) {
            exit("Error: not forest mode");
        }

        $this->_writer = new CB_CSVWriter(self::CHARSET, null);
        $this->_export();
    }

    abstract protected function _export();
}

class GRN_ForestCustomItemExport extends GRN_ForestCustomItemBase
{

    protected function _export()
    {
        $customItems = $this->_uum->listItems();

        foreach ($customItems as $item) {
            $line = $this->_getLine($item);
            $this->_writer->writeLine($line);
        }
    }

    protected function _getLine($item)
    {
        $line = [];

        /** 識別子（%書式やJavaScriptの変数で参照するときの） */
        $line[] = $item->get('id');

        /** 表示名 */
        $line[] = $item->get('display_name');

        /** published */
        $line[] = ($item->get('show')) ? 1 : 0;

        /** editable */
        $line[] = ($item->get('not_modify')) ? 0 : 1;

        return $line;
    }
}

class GRN_ForestCustomItemValueExport extends GRN_ForestCustomItemBase
{

    protected function _export()
    {
        $allUsers = $this->_uum->getUsers();

        foreach ($allUsers as $user) {
            $items = $this->_uum->listUserItems($user);
            $line = $this->_getLine($user->get('foreign_key'), $items);
            if (2 < count($line)) {
                $this->_writer->writeLine($line);
            }
        }
    }

    /**
     * @param string                 $foreign_key
     * @param GRN_ItemUserRelation[] $items
     *
     * @return array
     */
    protected function _getLine($foreign_key, $items)
    {
        $line = [$foreign_key];

        foreach ($items as $code => $item) {
            $value = $item->get('string');

            // データがない場合は出力しない
            if ('' === trim($value)) {
                continue;
            }

            /** 識別子（%書式やJavaScriptの変数で参照するときの） */
            $line[] = $item->get('item')->get('id');

            /** 文字列データ */
            $line[] = mb_substr($value, 0, 100); // Slashが100文字までなので100文字にしてあります
        }

        return $line;
    }
}
