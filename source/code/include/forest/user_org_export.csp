<?php

require_once('fw/csv.csp');

class GRN_ForestUserOrganizationExport
{
    const CHARSET = 'UTF-8';
    const ADMINISTRATOR_ID = '1';

    public function __construct()
    {
        global $G_container_base;
        $this->uum = $G_container_base->getInstance('uum');
    }

    public function main()
    {
        if ( ! defined('ON_FOREST')) {
            exit("Error: not forest mode");
        }

        $this->export();
    }

    private function export()
    {
        $writer = new CB_CSVWriter(self::CHARSET, null);

        $allUsers = $this->uum->getUsers();
        foreach ($allUsers as $user) {
            if ($user->getOID() == self::ADMINISTRATOR_ID) {
                continue;
            }
            $groups = $this->getUserGroups($user);
            $loginName = $user->get('foreign_key');
            $line = [];
            // 1. login code
            $line[] = $loginName;
            foreach ($groups as $group) {
                // 2,4,6,･･･,2n org code
                $line[] = $group->get('foreign_key');
                // 3,5,7,･･･,2n+1 position code
                $line[] = '';
            }
            $writer->writeLine($line);
        }
    }

    /**
     * Get user-related groups with the primary group at the head
     *
     * @param CB_User $user
     *
     * @return CB_Group[]
     */
    private function getUserGroups(CB_User $user)
    {
        $userId = $user->getOID();
        $groups = $this->uum->getUserGroups($userId);

        $primaryGroup = $this->uum->getUserPrimaryGroup($userId);
        if ($primaryGroup instanceof CB_Group) {
            // move the primary group to the head of array
            unset($groups[$primaryGroup->getOID()]);
            array_unshift($groups, $primaryGroup);
        }

        return $groups;
    }
}
