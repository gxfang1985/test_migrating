<?php

require_once('fw/csv.csp');

class GRN_ForestOrganizationExport
{
    const CHARSET = 'UTF-8';
    const EXPORT_LOCAL_NAME_LANGUAGE = 'en';
    private $writer;

    public function __construct()
    {
        global $G_container_base;
        $this->uum = $G_container_base->getInstance('uum');
    }

    public function main()
    {
        if ( ! defined('ON_FOREST')) {
            exit("Error: not forest mode");
        }

        $this->export();
    }

    private function export()
    {
        $this->writer = new CB_CSVWriter(self::CHARSET, null);

        $rootGroups = $this->uum->getRootGroups(false);
        foreach ($rootGroups as $group) {
            $this->exportRecursive($group);
        }
    }

    /**
     * @param CB_Group $group
     */
    private function exportRecursive(CB_Group $group)
    {
        $line = $this->getLine($group);
        $this->writer->writeLine($line);

        $children = $this->uum->getChildGroups($group->getOID(), false);
        foreach ($children as $child) {
            $this->exportRecursive($child);
        }
    }

    /**
     * @param CB_Group $group
     *
     * @return string[]
     */
    private function getLine(CB_Group $group)
    {
        $line = [];

        // 1. code
        $line[] = $group->get('foreign_key');

        // 2. name
        $line[] = $group->get('name');

        // 3. local name
        // 4. local name language
        $names = $this->uum->createMultiLanguageValuesArray($group->getOID());
        if (isset($names[self::EXPORT_LOCAL_NAME_LANGUAGE])) {
            $line[] = $names[self::EXPORT_LOCAL_NAME_LANGUAGE];
            $line[] = self::EXPORT_LOCAL_NAME_LANGUAGE;
        } else {
            $line[] = '';
            $line[] = '';
        }

        // 5. new code
        $line[] = '*';

        // 6. parent code
        $parentGroup = $group->get('parent');
        if (is_null($parentGroup)) {
            $line[] = '';
        } else {
            $line[] = $parentGroup->get('foreign_key');
        }

        // 7. memo
        $line[] = $group->get('description');

        return $line;
    }
}
