<?php

namespace grn\mail;


class HtmlMailInlineContents
{
    /**
     * @var string
     */
    private $mailId;

    /**
     * @var string|null
     */
    private $pids;

    /**
     * @var array[]
     */
    private $filesByCid = [];

    /**
     * @param array[]     $files
     * @param string      $mailId
     * @param string|null $pids
     */
    public function __construct(array $files, $mailId, $pids = null)
    {
        $this->mailId = $mailId;
        $this->pids = $pids;

        foreach ($files as $key => $file) {
            if (isset($file['content_id']) && strlen($file['content_id']) > 0) {
                $this->filesByCid[$file['content_id']] = $file;
            }
        }
    }

    /**
     * @param string $contentId
     *
     * @return string|null
     */
    public function getFileUrlByContentId($contentId)
    {
        if ( ! array_key_exists($contentId, $this->filesByCid)) {
            return null;
        }

        $file = $this->filesByCid[$contentId];
        $params = [
            'mid' => $this->mailId,
            'fid' => $file['fid'],
        ];
        if ( ! is_null($this->pids)) {
            $params['pids'] = $this->pids;
        }
        if (array_key_exists('hash', $file)) {
            $params['hash'] = $file['hash'];
        }
        $name = null;
        if (array_key_exists('name', $file)) {
            $name = $file['name'];
        }

        return cb_pageurl('mail/file_download', $params, null, $name);
    }

    /**
     * @param string[] $contentIds
     *
     * @return array
     */
    public function getFileIdsByContentIds(array $contentIds)
    {
        $fileIds = [];
        foreach ($contentIds as $cid) {
            if ( ! array_key_exists($cid, $this->filesByCid)) {
                continue;
            }
            $fileIds[] = $this->filesByCid[$cid]['fid'];
        }

        return array_unique($fileIds);
    }
}
