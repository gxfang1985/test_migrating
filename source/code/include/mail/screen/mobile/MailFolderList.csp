<?php

namespace grn\mail\screen\mobile;

use grn\mail\screen\mobile\MobileMailScreenBase;
use grn\grn\mobile\MobileFolderList;
use grn\grn\Validate;
use grn\grn\GrnException;

class MailFolderList extends MobileMailScreenBase
{
    public function __construct($input)
    {
        parent::__construct($input);

        $account_id = $this->getAccountId();
        $category_id = $this->getCategoryId($account_id);

        require_once('grn/smarty.csp');
        $smarty = new \GRN_Smarty;

        $disable_mail = $this->isMailDisabled();
        $smarty->assign('disable_mail', $disable_mail);

        // Check setting.
        $no_setting = $this->getNoSettingInfo($smarty,
            $this->getAccountDataCount());

        // 0はOK、1はメールサーバーがまだ 2はアカウントがまだ 3は両方まだ
        $smarty->assign('no_setting', $no_setting);

        if ($this->_account_deleted || $disable_mail || $this->_cannot_send
            || $this->_size_over
        ) {
            $this->setMobileFooterBar();
        } else {
            $this->setMobileFooterBar([
                'add' => [
                    'page'   => 'mail/mobile/send',
                    'params' => [
                        'aid'        => $account_id,
                        'cid'        => $category_id,
                        'from_index' => 1
                    ]
                ]
            ]);
        }
        $this->_smarty = $smarty;
    }

    public function fetch()
    {
        if (is_null($this->_smarty)) {
            require_once('grn/smarty.csp');
            $this->_smarty = new \GRN_Smarty;
        }
        $smarty = $this->_smarty;

        $account_id = $this->getAccountId();
        $category_id = $this->getCategoryId($account_id);
        $mail_logic = $this->getMailLogic();

        $smarty->assign('account_id', $account_id);
        $smarty->assign('category_id', $category_id);

        $app_name = $this->getMailApp()->getName();
        $smarty->assign('app_name', $app_name);

        $account_list_view = $this->getAccountListInfo();
        $smarty->assign('account_list', $account_list_view);

        // Get folder tree information.
        $account_data_count = $this->getAccountDataCount();
        if ($account_data_count != 0) {
            // データの自動削除
            $logged_in_user = cb_get_login_user();
            $mail_logic->cleanOldMailData($logged_in_user);

            $tree_for_view = $this->getFolderTree($account_id, $category_id);

            if ($tree_for_view) {
                $smarty->assign('folder_tree', $tree_for_view);
            }
        }

        //assign breadcrumb.
        $this->assignBreadcrumbCurrentPage($smarty, $this->getTitle());

        return $smarty->fetch(cb_get_pagename() . '.tpl');
    }

    public function getSubFolderList($input)
    {
        if ( ! Validate::isNumber(@$input[self::ARG_ACCOUNT_ID])) {
            throw new GrnException(E_GRN_MAIL_ACCOUNT_DATA_NOT_FOUND);
        }
        if ( ! Validate::isNumber(@$input[self::ARG_CATEGORY_ID])) {
            throw new GrnException(E_GRN_MAIL_FOLDER_DATA_NOT_FOUND);
        }
        $account_id = $input[self::ARG_ACCOUNT_ID];
        $oid = $input[self::ARG_CATEGORY_ID];

        require_once('mail/folder_tree.csp');
        require_once('grn/org_tree.csp');

        $util = \GRN_OrgTreeUtil::getInstance();

        $page_name = 'mail/mobile/index/' . $account_id;
        $tree = $util->getTree($page_name, 'GRN_Mail_FolderTree',
            ['account_id' => $account_id]);

        $folder_list_object = new MobileFolderList($input);
        $sub_tree = $folder_list_object->constructSubFolderList($tree,
            $page_name, 'cid', $oid, 'mail/mobile/mail_list',
            ['aid' => $account_id]);

        return $sub_tree;
    }

    public function getTitle()
    {
        return grn_get_page_display_name(self::PAGE_INDEX);
    }
}

