<?php

namespace grn\mail\screen\personal\automation\command;

use grn\mail\automation\MailAutomaticEventValidator;
use grn\mail\automation\AutomaticEventFacade;

class CommandRegister implements CommandAutomationResponse
{
    private $actionName;
    private $validator;
    private $data;
    private $facade;
    private $user;
    private $accountId;
    private $eventId;

    public function __construct($actionName, $input)
    {
        $this->actionName = $actionName;
        $this->validator = new MailAutomaticEventValidator();
        $this->data = $input;
        $this->accountId = $this->data["accountId"];
        $this->eventId = $this->data["eventId"];
        $this->user = cb_get_login_user();
        $this->validate();
        $this->facade = new AutomaticEventFacade();
    }

    private function validate()
    {
        if ($this->actionName === CommandAutomation::MODIFY_EVENT) {

            $this->validator->validateAccountHasAutomaticEvent(
                $this->user->getOID(),
                $this->data["accountId"],
                $this->data["eventId"]
            );
        } else {
            $this->validator->validateUserHasAccount(
                $this->user->getOID(),
                $this->accountId
            );
        }
        $event = $this->data["event"];
        $this->validator->validateEvent($event);
        $this->validator->validateConditions($event["conditions"]);
        $this->validator->validateActions($event["actions"]);
    }

    public function getResponse()
    {
        if ($this->actionName === CommandAutomation::ADD_EVENT) {
            $this->facade->addEvent(
                $this->user->getOID(),
                $this->accountId,
                $this->data["event"],
                $this->data["event"]["conditions"],
                $this->data["event"]["actions"]
            );
        } else {
            $this->facade->updateEvent(
                $this->user->getOID(),
                $this->accountId,
                $this->eventId,
                $this->data["event"],
                $this->data["event"]["conditions"],
                $this->data["event"]["actions"]
            );
        }

        return [
            "result"   => "ok",
            "redirect" => cb_format_url(
                "mail/personal/automation",
                [
                    "accountId" => $this->accountId
                ]
            )
        ];

    }
}
