<?php

namespace grn\mail\screen\personal\automation;


use grn\mail\automation\AutomaticEventFacade;
use grn\mail\automation\MailAutomaticEventValidator;
use grn\mail\automation\AutomaticEventFilterOption;

class ModifyEvent implements RegisterAction
{
    private $validator;
    private $accountId;
    private $eventId;
    private $pageTitle;
    private $facade;

    public function __construct($accountId, $eventId)
    {
        $this->validator = new MailAutomaticEventValidator();
        $this->facade = new AutomaticEventFacade();
        $this->user = cb_get_login_user();
        $this->validate($accountId, $eventId);

        $this->accountId = $accountId;
        $this->eventId = $eventId;
        $this->pageTitle = cb_msg('grn.mail.personal', 'automation_modify');
    }

    private function validate($accountId, $eventId)
    {
        $this->validator->validateAccountHasAutomaticEvent(
            $this->user->getOID(),
            $accountId,
            $eventId
        );
    }

    public function getSitePosition()
    {
        return [
            [
                'page'      => 'mail/personal/automation',
                'name'      => cb_msg("grn.mail.personal", "automation"),
                'accountId' => $this->accountId,
            ],
            [
                'page' => '',
                'name' => $this->pageTitle
            ]
        ];
    }

    public function getTitle()
    {
        return $this->pageTitle;
    }

    public function getEvent()
    {
        $filterOption = new AutomaticEventFilterOption;
        $filterOption->toGetAlsoStoppedAccount();
        $filterOption->toGetAlsoOutOfServiceAction();
        $events = $this->facade->getEventByAccountId($this->accountId,
            $filterOption);

        return $events[$this->eventId]->toArray();
    }
}
