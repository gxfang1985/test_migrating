<?php

namespace grn\mail\screen;

use grn\grn\GrnException;
use grn\grn\Validate;

use grn\mail\screen\MailScreenBase;

require_once('mail/error_code.csp');
require_once('mail/resources.csp');
require_once('mail/utility.csp');
require_once('mail/table.csp');

class ChangeCharset extends MailScreenBase
{
    public function post($input)
    {
        $this->setInput($input);
        $user = $this->getLoginUser();

        if ( ! is_object($user)) {
            throw new GrnException(E_COMMON_AUTHENTICATION_FAILED);
        }

        $mail_logic = $this->getMailLogic();
        //------------------

        $cmd = '';
        if (array_key_exists('cmd', $input)) {
            $cmd = $input['cmd'];
        }

        if ($cmd == 'save') {
            $mid = '';
            if (array_key_exists('mid', $input)) {
                $mid = $input['mid'];
            }

            $table_name = grn_mail_get_personal_tablename($user->getOID(),
                GRN_MAIL_MESSAGE_TABLE);
            $utility = \GRN_Mail_Utility::getInstance();
            $table = $utility->getTableInfo($table_name);

            $db = $table->getDBConnection();
            $rowset = new \CB_RowSet($table);
            $rowset->addCondition(cb_queryf($db,
                '_id = \'@S\' AND col_user = \'@S\'', $mid,
                $user->getOID()));
            $rowset->limit(0, 1);
            $row = $rowset->iterate();
            $rowset->destroy();

            if ( ! $row) {
                throw new GrnException(E_GRN_MAIL_MAIL_ACCESS_DENIED);
            }

            $properties = [];
            // header force encoding
            if (array_key_exists('charset_header', $input)
                && strlen($input['charset_header']) > 0
            ) {
                $msg = $row->getMessage();
                $msg->setForceEncoding($input['charset_header']);
                $main_part = $msg->getMainPart();
                $properties['subject'] = $msg->getSubject();
                $properties['from'] = implode(', ',
                    $msg->getHeaderValues('from'));
                $properties['to'] = implode(', ',
                    $msg->getHeaderValues('to'));
                $properties['cc'] = implode(', ',
                    $msg->getHeaderValues('cc'));

                unset($input['charset_header']);
            }

            // body force encoding
            if (array_key_exists('charset_body', $input)
                && strlen($input['charset_body']) > 0
            ) {
                $msg = $row->getMessage();
                $msg->setForceEncoding($input['charset_body']);
                $main_part = $msg->getMainPart();
                \GRN_Mail_Message::static_getPartContent($main_part, $body,
                    $html_body,
                    $input['charset_body']);
                $properties['data'] = $body;
                $properties['html_data'] = $html_body;

                unset($input['charset_body']);
            }

            if (array_key_exists('charset_on', $input)) {
                unset($input['charset_on']);
            }

            $row->updateProperties($properties);
        }
    }
}
