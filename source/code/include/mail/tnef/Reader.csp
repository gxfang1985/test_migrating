<?php

namespace grn\mail\tnef;

/**
 * Stream reader class of the TNEF file.
 */
class Reader
{
    /** @var string */
    private $buffer;

    /** @var int */
    private $pos = 0;

    /**
     * @param string $buffer
     */
    public function __construct($buffer)
    {
        $this->buffer = $buffer;
    }

    /**
     * @param int $length
     *
     * @return string
     * @throws TnefFormatException
     */
    public function read($length)
    {
        if ($this->pos + $length > strlen($this->buffer)) {
            throw new TnefFormatException('No buffer remains.');
        }

        $part = substr($this->buffer, $this->pos, $length);
        $this->pos += $length;

        return $part;
    }

    /**
     * @return bool
     */
    private function isEndOfBuffer()
    {
        return strlen($this->buffer) <= $this->pos;
    }

    /**
     * @return bool
     */
    public function hasNext()
    {
        return ! $this->isEndOfBuffer();
    }

    /**
     * @return int
     */
    public function readUint32()
    {
        return BinaryUtil::binaryToUint32($this->read(4));
    }

    /**
     * @return int
     */
    public function readUint16()
    {
        return BinaryUtil::binaryToUint16($this->read(2));
    }

    /**
     * @return int
     */
    public function readUint8()
    {
        return ord($this->read(1));
    }

    /**
     * @return int
     */
    public function readInt32()
    {
        return BinaryUtil::binaryToInt32($this->read(4));
    }

    /**
     * @return int
     */
    public function readInt16()
    {
        return BinaryUtil::binaryToInt16($this->read(2));
    }

    /**
     * @param int $byte_to_pad
     */
    public function pad($byte_to_pad)
    {
        $extra_byte = $this->pos % $byte_to_pad;

        if ($extra_byte !== 0) {
            $this->read($byte_to_pad - $extra_byte);
        }
    }
}
