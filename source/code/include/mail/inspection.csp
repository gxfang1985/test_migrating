<?php

/**
 * Inspection for Mail.
 *Date 2007/06
 *
 * @version 1.0
 * @package grn.mail
 */

class GRN_Mail_Inspection extends CB_ModuleBase
{
    /**
     * @return GRN_Mail_Inspection
     */
    public static function getInstance()
    {
        static $_instance = null;
        if (is_null($_instance)) {
            $_instance = new GRN_Mail_Inspection();
        }

        return $_instance;
    }

    var $_logger = null;

    var $_uum = null;

    function __construct()
    {
        require_once('grn/logger.csp');
        $logger_manager = CB_LoggerManager::getInstance();

        parent::__construct('grn.mail');

        $this->_logger = $logger_manager->getLogger($this->getModuleId());

        global $G_container_base;
        $this->_uum = $G_container_base->getInstance('uum');
    }

    function isEnabled()
    {
        return $this->_logger->isNoticeEnabled();
    }

    /**
     * write an inspection log
     *
     * @param   string $action action name
     * @param   string $target target name
     * @param   array  $params log list array
     */
    function writeInspectionLog($action, $target, $params = [])
    {
        $this->_logger->noticeEx($action, $target, $params);
    }

    function writeWaringLog($message)
    {
        $this->_logger->warning($message);
    }

}


