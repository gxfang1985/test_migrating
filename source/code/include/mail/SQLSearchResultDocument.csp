<?php

namespace grn\mail;

use grn\fts\SQLSearchResultDocument as ftsSearchResultDocument;

require_once("fw/mail_message.csp");

class SQLSearchResultDocument extends ftsSearchResultDocument
{
    const KEY_HISTORY_URL = "historyUrl";
    const KEY_NAME = "name";
    const HISTORY_URL = "mail/exchange_history";

    /**
     * @return string of url
     */
    public function getIconUrl()
    {
        return cb_get_app_path() . '/grn/image/cybozu/mail16.png';
    }

    /**
     * @param $mid integer
     *
     * @return string
     */
    public function getMessageUrl($mid)
    {
        assert(is_numeric($mid));

        return cb_format_url("mail/view", ["mid" => $mid]);
    }

    /**
     * @param $mid     integer
     * @param $address string
     *
     * @return string of url
     */
    public function createHistoryUrl($mid, $address)
    {
        return cb_format_url(self::HISTORY_URL,
            ['mid' => $mid, 'email' => $address]);
    }

    /**
     * @param $row_data array of
     *
     * @return array
     */
    public function createDocument(array $row_data)
    {
        assert(isset($row_data["sender"]));
        assert(isset($row_data["mid"]));
        $doc = [];
        if ($row_data[parent::TITLE] !== "") {
            $doc[parent::TITLE]
                = parent::htmlEscape($row_data[parent::TITLE]);
        } else {
            $doc[parent::TITLE]
                = cb_msg('grn.mail', 'no_title');
        }
        $doc[parent::SNIPPET] = "";
        $doc[parent::ICON] = $this->getIconUrl();
        $doc[parent::URL] = $this->getMessageUrl($row_data["mid"]);
        $doc[parent::MODIFIED_TIME]
            = $this->getFormatTimestamp($row_data[parent::MODIFIED_TIME]);
        $address_info
            = \CB_MailAddress::static_parse($row_data["sender"]);
        $address = [];
        $address[self::KEY_HISTORY_URL]
            = $this->createHistoryUrl($row_data["mid"],
            $address_info->address);
        if (strlen($address_info->name) > 0) {
            $address[self::KEY_NAME] = parent::htmlEscape($address_info->name);
        } else {
            $address[self::KEY_NAME]
                = parent::htmlEscape($address_info->address);
        }
        $doc["address"] = $address;

        return $doc;
    }


}
