<?php

namespace grn\mail\automation;

use grn\mail\automation\evaluation\EvaluationMethodConstraints;
use grn\mail\automation\evaluation\EvaluationObjectConstraints;
use grn\mail\automation\evaluation\AutomaticEventConstraints;
use grn\mail\automation\action\ActionNameConstraints;


class Enums
{
    private $logicType
        = [
            AutomaticEventConstraints::LOGIC_AND,
            AutomaticEventConstraints::LOGIC_OR
        ];

    private $serviceStatus
        = [
            AutomaticEventConstraints::SERVICE_STATUS_ON,
            AutomaticEventConstraints::SERVICE_STATUS_OFF
        ];

    private $evaluationMethod
        = [
            EvaluationMethodConstraints::CONTAINS,
            EvaluationMethodConstraints::NOT_CONTAINS,
            EvaluationMethodConstraints::EQUALS,
            EvaluationMethodConstraints::NOT_EQUALS,
            EvaluationMethodConstraints::STARTS_WITH
        ];

    private $evaluationObject
        = [
            EvaluationObjectConstraints::SUBJECT,
            EvaluationObjectConstraints::TO,
            EvaluationObjectConstraints::CC,
            EvaluationObjectConstraints::FROM
        ];

    private $actionName
        = [
            ActionNameConstraints::FORWARD_MAIL
        ];

    private static $instance = null;

    private function __construct()
    {
    }

    /**
     * @return Enums
     */
    public static function getInstance()
    {
        if (is_null(self::$instance)) {
            self::$instance = new self();
        }

        return self::$instance;
    }

    public function evaluationObject()
    {
        return $this->evaluationObject;
    }

    public function actionName()
    {
        return $this->actionName;
    }

    public function evaluationMethod()
    {
        return $this->evaluationMethod;
    }

    public function serviceStatus()
    {
        return $this->serviceStatus;
    }

    public function logicType()
    {
        return $this->logicType;
    }
}
