<?php

/**
 * get mail status list
 *
 * @auther   Eiji TAEN   2005/04
 * @version  1.0
 * @package  grn.mail
 *
 * @param    object $user CB_User
 *
 * @return   array    status list
 *
 * return[status oid]          => array (key: status oid)
 *                   ['name']  => string   status name
 *                   ['type']  => string   status type
 *                   ['color'] => string   status color
 */
function grn_mail_get_status_list(& $user)
{
    require_once('mail/resources.csp');
    require_once('mail/table.csp');
    require_once('mail/utility.csp');
    $util = GRN_Mail_Utility::getInstance();
    $rowset = new CB_RowSet($util->getTableInfo(GRN_MAIL_STATUS_TABLE));

    $rowset->addCondition('col_type = ' . GRN_MAIL_STATUS_TYPE_SYSTEM
                          . ' OR col_user = ' .
                          $user->getOID());
    $rowset->addOrderColumn('_id');

    require_once('fw/i18n.csp');
    $status_list = [];
    while ( ! is_null($row = $rowset->iterate())) {
        $status_list[$row->getOID()] = _grn_mail_get_status_by_row($row);
    }

    return $status_list;
}

/**
 * set mail status
 *
 * @auther   Eiji TAEN   2005/04
 * @version  1.0
 * @package  grn.mail
 *
 * @param    object   CB_User
 * @param    string $mail_id
 * @param    string $status_id
 */
function grn_mail_set_status(& $user, $mail_id, $status_id)
{
    require_once('mail/resources.csp');
    require_once('mail/table.csp');
    require_once('mail/utility.csp');
    $util = GRN_Mail_Utility::getInstance();
    $table_name = grn_mail_get_personal_tablename($user->getOID(),
        GRN_MAIL_MESSAGE_TABLE);
    $rowset = new CB_RowSet($util->getTableInfo($table_name), 'm');
    $rowset->addCondition($rowset->queryf('m._id = \'@S\' AND m.col_user = '
                                          . $user->getOID(),
        $mail_id));
    $user_table_info =& $util->getTableInfo('cb_user');
    $on = 'm.col_user = u._id AND u.col_deleted IS NULL';
    $rowset->addJoin($user_table_info, $on, CB_DATABASE_INNER_JOIN, 'u');
    $rowset->limit(0, 1);

    $row = $rowset->iterate();
    $rowset->destroy();

    if ( ! $row) {
        require_once('mail/error_code.csp');
        cb_throw_error(E_GRN_MAIL_MAIL_DATA_NOT_FOUND);
    }

    $row->set('status', $status_id);
}

/**
 * set mail status multiple
 *
 * @auther   Yuichi Nakamura   2005/07
 * @version  1.0
 * @package  grn.mail
 *
 * @param    object   CB_User
 * @param    array  $mail_id_list
 * @param    string $status_id
 */
function grn_mail_set_status_multi(& $user, $mail_id_list, $status_id)
{
    require_once('mail/resources.csp');
    require_once('mail/table.csp');
    require_once('mail/utility.csp');

    //Create RowSet
    $util = GRN_Mail_Utility::getInstance();
    $table_name = grn_mail_get_personal_tablename($user->getOID(),
        GRN_MAIL_MESSAGE_TABLE);
    $rowset = new CB_RowSet($util->getTableInfo($table_name), 'm');

    //Create Condition
    if (is_array($mail_id_list) && count($mail_id_list) > 0) {
        $condition = [];
        foreach ($mail_id_list as $mail_id) {
            $condition[] = $rowset->queryf("'@S'", $mail_id);
        }
        $mail_condition = sprintf('(m._id IN ( %s ))',
            implode(', ', $condition));
        $rowset->addCondition($mail_condition);
    }
    $rowset->addCondition($rowset->queryf('(m.col_user = @S)',
        $user->getOID()));
    $user_table_info =& $util->getTableInfo('cb_user');
    $on = 'm.col_user = u._id AND u.col_deleted IS NULL';
    $rowset->addJoin($user_table_info, $on, CB_DATABASE_INNER_JOIN, 'u');

    //Set New Status to Selected Mail
    while ( ! is_null($row = $rowset->iterate())) {
        if ( ! $row) {
            continue;
        }
        $row->set('status', $status_id);
    }

    //Destory RowSet
    $rowset->destroy();
}

/**
 * get specified status row object
 *
 * @auther   Eiji TAEN   2005/04
 * @version  1.0
 * @package  grn.mail
 *
 * @param    string $status_id status OID
 *
 * @return   object   GRN_Mail_Message
 */
function grn_mail_get_status_row($status_id)
{
    $util = GRN_Mail_Utility::getInstance();
    $table = $util->getTableInfo(GRN_MAIL_STATUS_TABLE);

    $ret = $table->getRow($status_id);

    return $ret;
}

/**
 * get specified status information
 *
 * @auther   Eiji TAEN   2005/04
 * @version  1.0
 * @package  grn.mail
 *
 * @param    string $status_id status OID
 *
 * @return   array
 *
 * return['type']  => string   status type
 *       ['name']  => string   status name
 *       ['color'] => string   status color
 */
function grn_mail_get_status($status_id)
{
    $row = grn_mail_get_status_row($status_id);
    if ( ! $row) {
        return [
            'type'  => '',
            'name'  => '',
            'color' => '000000'
        ];
    }

    return _grn_mail_get_status_by_row($row);
}

/**
 * @access   private
 */
function _grn_mail_get_status_by_row(& $status_row)
{
    $status = [];
    $status['type'] = $status_row->get('type');
    $status['color'] = $status_row->get('color');
    if ($status['type'] == GRN_MAIL_STATUS_TYPE_SYSTEM) {
        $status['name'] = cb_msg(GRN_MAIL_MODULE_ID, $status_row->get('code'));
    } else {
        $status['name'] = $status_row->get('name');
    }

    return $status;
}


