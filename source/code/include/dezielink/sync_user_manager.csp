<?php
/**
 * Dezie/Office Link Sync User Manager
 *
 */

require_once('dezielink/sync_user_logic.csp');
require_once('dezielink/resources.csp');

class GRN_Connector_SyncUserManager
{
    /** @var GRN_DezieLink_SyncUserLogic/GRN_OfficeLink_SyncUserLogic */
    protected $_sync_logic;

    protected $_lock_file;

    protected $_lock_file_path;

    function __construct()
    {
    }

    /**
     * @return GRN_Connector_SyncUserManager
     */
    public static function getInstance()
    {
        static $_instance = null;
        if (is_null($_instance)) {
            $_instance = new GRN_Connector_SyncUserManager();
        }

        return $_instance;
    }

    /**
     * @param GRN_DezieLink_SyncUserLogic|GRN_OfficeLink_SyncUserLogic $logic
     */
    public function setSyncLogic(&$logic)
    {
        $this->_sync_logic =& $logic;
        $this->createLockFile();
    }

    /**
     *  Run Sync User
     */
    public function runSync()
    {
        $sync_info = $this->_sync_logic->getURL();

        // create lock
        $block = null;
        $ret = flock($this->_lock_file, LOCK_EX | LOCK_NB, $block);

        // windowsではブロックされても、$blockはFALSEで、flockの返り値がfalseとなる
        if ($block == true || $ret == false) {
            fclose($this->_lock_file);

            //TODO: replace error message
            cb_throw_error($this->_sync_logic->error_key_sync_user_script_already_running,
                null, ['server' => $sync_info]);
        }

        // write sync information
        fwrite($this->_lock_file, $sync_info);

        // start sync
        $this->_sync_logic->sync();
        //sleep(30);

        // release lock
        flock($this->_lock_file, LOCK_UN);

        // close file
        fclose($this->_lock_file);

        $this->deleteLockFile();
    }

    /**
     * Create Lock File
     */
    private function createLockFile()
    {
        $file_path = cb_tmpdir() . DIRECTORY_SEPARATOR
                     . $this->_sync_logic->getLockFile();

        $this->_lock_file = @fopen($file_path, 'a');
        if ( ! $this->_lock_file) {
            require_once('fw/error_code.csp');
            cb_throw_error(E_COMMON_FOPEN_WRITE, null, ['file' => $file_path]);
        }

        $this->_lock_file_path = $file_path;
    }

    /**
     * Delete Lock File
     */
    private function deleteLockFile()
    {
        unlink($this->_lock_file_path);
    }
}


