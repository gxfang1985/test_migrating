<?php

namespace grn\favour\screen;

use grn\favour\service\FavourService;

class FavourNotifyList extends FavourScreenBase
{
    const FAVOUR_NOTIFY_LIMIT = 20;

    public function fetch()
    {
        $login = $this->getLoginUser();
        if ($login == false) {
            return;
        }

        $favour_service = new FavourService();
        if ( ! $favour_service->isFavourAppActive()) {
            return;
        }

        $favour_notify_apps = $favour_service->getFavourNotifyApplicationList();
        $favour_notify_collection
            = $favour_service->getFavourNotifyListByUserId($login->getOID(),
            array_keys($favour_notify_apps), self::FAVOUR_NOTIFY_LIMIT);

        $notify_data_list = [];
        $favourer_ids = [];
        /** @var $favour_notify \grn\favour\data\bean\FavourNotify */
        foreach ($favour_notify_collection as $favour_notify) {
            $notify_data = [];
            $notify_data['id'] = $favour_notify->getId();
            $notify_data['sender_id'] = $favour_notify->getFavourerId();
            $favourer_ids[] = $favour_notify->getFavourerId();
            $notify_data['sender_name'] = $favour_notify->getFavourerName();
            $notify_data['abstract'] = $favour_notify->getAbstract();
            $notify_data['count_favourer']
                = $favour_service->getFavourerCount($favour_notify->getModuleId(),
                    $favour_notify->getType(), $favour_notify->getValue(),
                    $favour_notify->getSubModuleId()) - 1;
            $notify_data['unread'] = $favour_notify->getRead() == 0 ? true
                : false;
            $notify_data['module_id'] = $favour_notify->getModuleId();

            $id_array = explode('.', $favour_notify->getModuleId());
            if (is_array($id_array)
                && (strcasecmp($id_array[0], 'grn') === 0)
            ) {
                if (count($id_array) > 1) {
                    $app_id = $id_array[1];
                    if (is_array($favour_notify_apps)
                        && isset($favour_notify_apps[$app_id])
                    ) {
                        $org_data = $favour_notify->getOrgData();
                        $sub_module_id = $favour_notify->getSubModuleId();
                        $type = $favour_notify->getType();
                        $value = $favour_notify->getValue();
                        $page_info
                            = $favour_notify_apps[$app_id]->getFavourNotifyPageInfo($type,
                            $value, $org_data, $sub_module_id);
                        if ($app_id === 'space'
                            && array_key_exists('subject_fragment', $page_info)
                        ) {
                            $page_info['subject_fragment'] .= '&fnid='
                                                              . $favour_notify->getId();
                        }

                        $notify_data['subject_icon']
                            = $page_info['subject_icon'];
                        $notify_data['subject_icon_label']
                            = $page_info['subject_icon_label'];

                        $notify_data['page_info'] = $page_info;
                    }
                }
            }
            $notify_data_list[$favour_notify->getId()] = $notify_data;
        }

        $favour_service->setFavourNotifyReadByUserId($login->getOID(),
            array_keys($favour_notify_apps));

        require_once('grn/smarty.csp');
        $smarty = new \GRN_Smarty();
        $smarty->assign('login_id', $login->getOID());

        // user image icon
        require_once('grn/controller.csp');
        $image_icon = \GRN_ControllerUtil::getUserIconFormat($login);
        $smarty->assign('image_icon', $image_icon);
        $users_info
            = \GRN_ControllerUtil::getUserInfoToShowUserName($favourer_ids,
            $login);
        if ($image_icon) {
            $users_info = \GRN_ControllerUtil::addPhotoUrlForUsersInfo($users_info,
                \GRN_ControllerUtil::getUserProfilePhotoSmallSize());
            $smarty->assign('icon_size', \GRN_ControllerUtil::ICON_SIZE_SMALL);
        }
        $smarty->assign('users_info', $users_info);

        $smarty->assign('total_notify',
            $favour_notify_collection->getCountNoLimit());
        $session = $this->getSession('notification');
        $session->set('favour_notify_number',
            $favour_notify_collection->getCountNoLimit());

        $smarty->assign('notify_data_list', $notify_data_list);

        return $smarty->fetch('favour/favour_notify_list.tpl');
    }
}
