<?php

namespace grn\favour\exception;

use grn\favour\Application;
use grn\grn\GrnException;

class FavourException extends GrnException
{
    const GRN_FAVOUR_ERR_KEY = 'app_name';
    public static $_app_name;

    public function __construct(
        $errorCode = self::GRN_UNEXPECTED_ERROR,
        $diagnosis = null,
        $cause = null,
        $counter = null
    ) {
        parent::__construct();
        $this->setErrorCode($errorCode);
        $this->setDiagnosis($diagnosis);
        $this->setCause($cause);
        $this->setCounter($counter);
    }

    public static function getArrayForErrMsg()
    {
        if (is_null(self::$_app_name)) {
            require_once('grn/application.csp');
            $app_locator = \GRN_ApplicationLocator::instance();
            self::$_app_name
                = $app_locator->getName(Application::APPLICATION_ID);
        }

        return [self::GRN_FAVOUR_ERR_KEY => self::$_app_name];
    }
}
