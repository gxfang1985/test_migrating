<?php

require_once('fw/database.csp');
require_once('link/bean/GrnLinkSystemCategory.csp');

class GrnLinkSystemCategoryDAO
{
    /**
     * @param array  $inDataObj
     * @param string $inCategoryKey
     *
     * @return bool|GrnLinkSystemCategory
     */
    public function selectByForeignKey($inDataObj, $inCategoryKey)
    {
        /* @var CB_DatabaseConnection $inDb */
        $inDb = $inDataObj['db'];
        $inLock = (array_key_exists('lock', $inDataObj))
            ? $inDataObj['lock'] : null;
        $inLanguage = (array_key_exists('language', $inDataObj))
            ? $inDataObj['language'] : null;

        $query
            = "SELECT c._id, c.col_creator, c.col_creator_foreign_key, c.col_creator_name, c.col_ctime";
        $query = $query
                 . ", c.col_foreign_key, c.col_list_index, c.col_memo, c.col_modifier";
        $query = $query
                 . ", c.col_modifier_foreign_key, c.col_modifier_name, c.col_mtime";
        $query = $query . ", IFNULL(cl.col_name, c.col_name) AS col_name";
        $query = $query
                 . ", c.col_parent, c.col_reserve_blob1, c.col_reserve_blob2, c.col_reserve_blob3";
        $query = $query
                 . ", c.col_reserve_int1, c.col_reserve_int2, c.col_reserve_int3, c.col_reserve_text1";
        $query = $query
                 . ", c.col_reserve_text2, c.col_reserve_text3, c.col_security_model";
        $query = $query
                 . " FROM tab_grn_link_system_category c LEFT JOIN (tab_grn_link_system_category_local cl INNER JOIN tab_cb_language_status l ON cl.language_id = l._id AND l.col_language = '"
                 . $inDb->escape($inLanguage) . "') ON c._id = cl.parent_id";
        $query = $query . " WHERE c.col_foreign_key = '"
                 . $inDb->escape($inCategoryKey) . "'";
        $query = $inDb->select_format($query, 0, -1, $inLock);

        $result = $inDb->query($query);

        if (($result === false) || ($inDb->num_rows($result) != 1)) {
            if ($result) {
                $inDb->free_result($result);
            }

            return false;
        }

        $rawdata = $inDb->fetch_assoc($result);
        $inDb->free_result($result);

        $grnCategory = new GrnLinkSystemCategory($rawdata);

        return $grnCategory;
    }

    /**
     * @param $inDataObj
     * @param $inCategoryKey
     * @param $inUserId
     *
     * @return bool|GrnLinkSystemCategory
     */
    public function selectByForeignKey_UserId(
        $inDataObj,
        $inCategoryKey,
        $inUserId
    ) {
        /* @var CB_DatabaseConnection $inDb */
        $inDb = $inDataObj['db'];
        $inLock = (array_key_exists('lock', $inDataObj))
            ? $inDataObj['lock'] : null;
        $inLanguage = (array_key_exists('language', $inDataObj))
            ? $inDataObj['language'] : null;

        $query
            = "SELECT c._id, c.col_creator, c.col_creator_foreign_key, c.col_creator_name, c.col_ctime";
        $query = $query
                 . ", c.col_foreign_key, c.col_list_index, c.col_memo, c.col_modifier";
        $query = $query
                 . ", c.col_modifier_foreign_key, c.col_modifier_name, c.col_mtime";
        $query = $query . ", IFNULL(cl.col_name, c.col_name) AS col_name";
        $query = $query
                 . ", c.col_parent, c.col_reserve_blob1, c.col_reserve_blob2, c.col_reserve_blob3";
        $query = $query
                 . ", c.col_reserve_int1, c.col_reserve_int2, c.col_reserve_int3, c.col_reserve_text1";
        $query = $query
                 . ", c.col_reserve_text2, c.col_reserve_text3, c.col_security_model";
        $query = $query
                 . " FROM tab_grn_link_system_category c LEFT JOIN (tab_grn_link_system_category_local cl INNER JOIN tab_cb_language_status l ON cl.language_id = l._id AND l.col_language = '"
                 . $inDb->escape($inLanguage) . "') ON c._id = cl.parent_id";
        $query = $query . " WHERE c.col_foreign_key = '"
                 . $inDb->escape($inCategoryKey) . "'";
        $query = $query . " AND c.col_user = '" . $inDb->escape($inUserId)
                 . "'";
        $query = $inDb->select_format($query, 0, -1, $inLock);

        $result = $inDb->query($query);

        if (($result === false) || ($inDb->num_rows($result) != 1)) {
            if ($result) {
                $inDb->free_result($result);
            }

            return false;
        }

        $rawdata = $inDb->fetch_assoc($result);
        $inDb->free_result($result);

        $grnCategory = new GrnLinkSystemCategory($rawdata);

        return $grnCategory;
    }

    /**
     * @param $inDataObj
     * @param $inId
     *
     * @return bool|GrnLinkSystemCategory
     */
    public function selectDefaultById($inDataObj, $inId)
    {
        /* @var CB_DatabaseConnection $inDb */
        $inDb = $inDataObj['db'];
        $inLock = (array_key_exists('lock', $inDataObj)) ? $inDataObj['lock']
            : null;

        $query
            = "SELECT c._id, c.col_creator, c.col_creator_foreign_key, c.col_creator_name, c.col_ctime";
        $query = $query
                 . ", c.col_foreign_key, c.col_list_index, c.col_memo, c.col_modifier";
        $query = $query
                 . ", c.col_modifier_foreign_key, c.col_modifier_name, c.col_mtime";
        $query = $query . ", c.col_name";
        $query = $query
                 . ", c.col_parent, c.col_reserve_blob1, c.col_reserve_blob2, c.col_reserve_blob3";
        $query = $query
                 . ", c.col_reserve_int1, c.col_reserve_int2, c.col_reserve_int3, c.col_reserve_text1";
        $query = $query
                 . ", c.col_reserve_text2, c.col_reserve_text3, c.col_security_model";
        $query = $query . " FROM tab_grn_link_system_category c";
        $query = $query . " WHERE c._id = '" . $inDb->escape($inId) . "'";
        $query = $inDb->select_format($query, 0, -1, $inLock);

        $result = $inDb->query($query);

        if (($result === false) || ($inDb->num_rows($result) != 1)) {
            if ($result) {
                $inDb->free_result($result);
            }

            return false;
        }

        $rawdata = $inDb->fetch_assoc($result);
        $inDb->free_result($result);

        $grnCategory = new GrnLinkSystemCategory($rawdata);

        return $grnCategory;
    }

    /**
     * @param $inDataObj
     * @param $inId
     *
     * @return bool|GrnLinkSystemCategory
     */
    public function selectLocalById($inDataObj, $inId)
    {
        /* @var CB_DatabaseConnection $inDb */
        $inDb = $inDataObj['db'];
        $inLock = (array_key_exists('lock', $inDataObj))
            ? $inDataObj['lock'] : null;
        $inLanguage = (array_key_exists('language', $inDataObj))
            ? $inDataObj['language'] : null;


        $query
            = "SELECT c._id, c.col_creator, c.col_creator_foreign_key, c.col_creator_name, c.col_ctime";
        $query = $query
                 . ", c.col_foreign_key, c.col_list_index, c.col_memo, c.col_modifier";
        $query = $query
                 . ", c.col_modifier_foreign_key, c.col_modifier_name, c.col_mtime";
        $query = $query . ", IFNULL(cl.col_name, c.col_name) AS col_name";
        $query = $query
                 . ", c.col_parent, c.col_reserve_blob1, c.col_reserve_blob2, c.col_reserve_blob3";
        $query = $query
                 . ", c.col_reserve_int1, c.col_reserve_int2, c.col_reserve_int3, c.col_reserve_text1";
        $query = $query
                 . ", c.col_reserve_text2, c.col_reserve_text3, c.col_security_model";
        $query = $query
                 . " FROM tab_grn_link_system_category c LEFT JOIN (tab_grn_link_system_category_local cl INNER JOIN tab_cb_language_status l ON cl.language_id = l._id AND l.col_language = '"
                 . $inDb->escape($inLanguage) . "') ON c._id = cl.parent_id";
        $query = $query . " WHERE c._id = '" . $inDb->escape($inId) . "'";
        $query = $inDb->select_format($query, 0, -1, $inLock);

        $result = $inDb->query($query);

        if (($result === false) || ($inDb->num_rows($result) != 1)) {
            if ($result) {
                $inDb->free_result($result);
            }

            return false;
        }

        $rawdata = $inDb->fetch_assoc($result);
        $inDb->free_result($result);

        $grnCategory = new GrnLinkSystemCategory($rawdata);

        return $grnCategory;
    }

    /**
     * @param array $inDataObj
     *
     * @return GrnLinkSystemCategory[]
     */
    public function getSystemCategoryList($inDataObj)
    {
        /* @var CB_DatabaseConnection $inDb */
        $inDb = $inDataObj['db'];
        $inLock = (array_key_exists('lock', $inDataObj))
            ? $inDataObj['lock'] : null;
        $inOffset = (array_key_exists('offset', $inDataObj))
            ? $inDataObj['offset'] : null;
        $inLimit = (array_key_exists('limit', $inDataObj))
            ? $inDataObj['limit'] : null;
        $inLanguage = (array_key_exists('language', $inDataObj))
            ? $inDataObj['language'] : null;

        $query
            = "SELECT c._id, c.col_creator, c.col_creator_foreign_key, c.col_creator_name, c.col_ctime";
        $query = $query
                 . ", c.col_foreign_key, c.col_list_index, c.col_memo, c.col_modifier";
        $query = $query
                 . ", c.col_modifier_foreign_key, c.col_modifier_name, c.col_mtime";
        $query = $query . ", IFNULL(cl.col_name, c.col_name) AS col_name";
        $query = $query
                 . ", c.col_parent, c.col_reserve_blob1, c.col_reserve_blob2, c.col_reserve_blob3";
        $query = $query
                 . ", c.col_reserve_int1, c.col_reserve_int2, c.col_reserve_int3, c.col_reserve_text1";
        $query = $query
                 . ", c.col_reserve_text2, c.col_reserve_text3, c.col_security_model";
        $query = $query
                 . " FROM (tab_grn_link_system_category c LEFT JOIN (tab_grn_link_system_category_local cl INNER JOIN tab_cb_language_status l ON cl.language_id = l._id AND l.col_language = '"
                 . $inDb->escape($inLanguage) . "') ON c._id = cl.parent_id)";
        $query = $query . " ORDER BY c.col_list_index";
        if ( ! is_null($inOffset)) {
            $query = $inDb->select_format($query, $inOffset, $inLimit, $inLock);
        }

        $result = $inDb->query($query);

        if ($result === false) {
            //Throw Query Error
            $inDb->throwError(['query' => 'query failed: ' . $query]);
        }

        $grnCategoryArray = [];
        while ($rawdata = $inDb->fetch_assoc($result)) {
            $grnCategory = new GrnLinkSystemCategory($rawdata);
            $grnCategoryArray[] = $grnCategory;
        }
        $inDb->free_result($result);
        $result = false;

        return $grnCategoryArray;
    }

    /**
     * @param array  $inDataObj
     * @param string $inParentId
     *
     * @return GrnLinkSystemCategory[]
     */
    public function getSystemCategoryListByParentId($inDataObj, $inParentId)
    {
        /* @var CB_DatabaseConnection $inDb */
        $inDb = $inDataObj['db'];
        $inLock = (array_key_exists('lock', $inDataObj))
            ? $inDataObj['lock'] : null;
        $inOffset = (array_key_exists('offset', $inDataObj))
            ? $inDataObj['offset'] : null;
        $inLimit = (array_key_exists('limit', $inDataObj))
            ? $inDataObj['limit'] : null;
        $inLanguage = (array_key_exists('language', $inDataObj))
            ? $inDataObj['language'] : null;

        $query
            = "SELECT c._id, c.col_creator, c.col_creator_foreign_key, c.col_creator_name, c.col_ctime";
        $query = $query
                 . ", c.col_foreign_key, c.col_list_index, c.col_memo, c.col_modifier";
        $query = $query
                 . ", c.col_modifier_foreign_key, c.col_modifier_name, c.col_mtime";
        $query = $query . ", IFNULL(cl.col_name, c.col_name) AS col_name";
        $query = $query
                 . ", c.col_parent, c.col_reserve_blob1, c.col_reserve_blob2, c.col_reserve_blob3";
        $query = $query
                 . ", c.col_reserve_int1, c.col_reserve_int2, c.col_reserve_int3, c.col_reserve_text1";
        $query = $query
                 . ", c.col_reserve_text2, c.col_reserve_text3, c.col_security_model";
        $query = $query
                 . " FROM (tab_grn_link_system_category c LEFT JOIN (tab_grn_link_system_category_local cl INNER JOIN tab_cb_language_status l ON cl.language_id = l._id AND l.col_language = '"
                 . $inDb->escape($inLanguage) . "') ON c._id = cl.parent_id)";
        $query = $query . " WHERE c.col_parent= '" . $inDb->escape($inParentId)
                 . "'";
        $query = $query . " ORDER BY c.col_list_index";
        if ( ! is_null($inOffset)) {
            $query = $inDb->select_format($query, $inOffset, $inLimit, $inLock);
        }

        $result = $inDb->query($query);

        if ($result === false) {
            //Throw Query Error
            $inDb->throwError(['query' => 'query failed: ' . $query]);
        }

        $grnCategoryArray = [];
        while ($rawdata = $inDb->fetch_assoc($result)) {
            $grnCategory = new GrnLinkSystemCategory($rawdata);
            $grnCategoryArray[] = $grnCategory;
        }
        $inDb->free_result($result);
        $result = false;

        return $grnCategoryArray;
    }

    /**
     * @param $inDataObj
     * @param $inId
     * @param $inUserId
     *
     * @return GrnLinkSystemCategory[]
     */
    public function getSystemCategoryListByIdOrUserId(
        $inDataObj,
        $inId,
        $inUserId
    ) {
        /* @var CB_DatabaseConnection $inDb */
        $inDb = $inDataObj['db'];
        $inLock = (array_key_exists('lock', $inDataObj))
            ? $inDataObj['lock'] : null;
        $inOffset = (array_key_exists('offset', $inDataObj))
            ? $inDataObj['offset'] : null;
        $inLimit = (array_key_exists('limit', $inDataObj))
            ? $inDataObj['limit'] : null;
        $inLanguage = (array_key_exists('language', $inDataObj))
            ? $inDataObj['language'] : null;

        $query
            = "SELECT c._id, c.col_creator, c.col_creator_foreign_key, c.col_creator_name, c.col_ctime";
        $query = $query
                 . ", c.col_foreign_key, c.col_list_index, c.col_memo, c.col_modifier";
        $query = $query
                 . ", c.col_modifier_foreign_key, c.col_modifier_name, c.col_mtime";
        $query = $query . ", IFNULL(cl.col_name, c.col_name) AS col_name";
        $query = $query
                 . ", c.col_parent, c.col_reserve_blob1, c.col_reserve_blob2, c.col_reserve_blob3";
        $query = $query
                 . ", c.col_reserve_int1, c.col_reserve_int2, c.col_reserve_int3, c.col_reserve_text1";
        $query = $query
                 . ", c.col_reserve_text2, c.col_reserve_text3, c.col_security_model";
        $query = $query
                 . " FROM (tab_grn_link_system_category c LEFT JOIN (tab_grn_link_system_category_local cl INNER JOIN tab_cb_language_status l ON cl.language_id = l._id AND l.col_language = '"
                 . $inDb->escape($inLanguage) . "') ON c._id = cl.parent_id)";
        $query = $query . " WHERE c.col_user= '" . $inDb->escape($inUserId)
                 . "'";
        $query = $query . " OR c._id = '" . $inDb->escape($inId) . "'";
        $query = $query . " ORDER BY c.col_list_index";
        if ( ! is_null($inOffset)) {
            $query = $inDb->select_format($query, $inOffset, $inLimit, $inLock);
        }

        $result = $inDb->query($query);

        if ($result === false) {
            //Throw Query Error
            $inDb->throwError(['query' => 'query failed: ' . $query]);
        }

        $grnCategoryArray = [];
        while ($rawdata = $inDb->fetch_assoc($result)) {
            $grnCategory = new GrnLinkSystemCategory($rawdata);
            $grnCategoryArray[] = $grnCategory;
        }
        $inDb->free_result($result);
        $result = false;

        return $grnCategoryArray;
    }

    /**
     * @param $inDataObj
     * @param $inParentId
     * @param $inUserId
     *
     * @return GrnLinkSystemCategory[]
     */
    public function getSystemCategoryListByParentId_UserId(
        $inDataObj,
        $inParentId,
        $inUserId
    ) {
        /* @var CB_DatabaseConnection $inDb */
        $inDb = $inDataObj['db'];
        $inLock = (array_key_exists('lock', $inDataObj))
            ? $inDataObj['lock'] : null;
        $inOffset = (array_key_exists('offset', $inDataObj))
            ? $inDataObj['offset'] : null;
        $inLimit = (array_key_exists('limit', $inDataObj))
            ? $inDataObj['limit'] : null;
        $inLanguage = (array_key_exists('language', $inDataObj))
            ? $inDataObj['language'] : null;

        $query
            = "SELECT c._id, c.col_creator, c.col_creator_foreign_key, c.col_creator_name, c.col_ctime";
        $query = $query
                 . ", c.col_foreign_key, c.col_list_index, c.col_memo, c.col_modifier";
        $query = $query
                 . ", c.col_modifier_foreign_key, c.col_modifier_name, c.col_mtime";
        $query = $query . ", IFNULL(cl.col_name, c.col_name) AS col_name";
        $query = $query
                 . ", c.col_parent, c.col_reserve_blob1, c.col_reserve_blob2, c.col_reserve_blob3";
        $query = $query
                 . ", c.col_reserve_int1, c.col_reserve_int2, c.col_reserve_int3, c.col_reserve_text1";
        $query = $query
                 . ", c.col_reserve_text2, c.col_reserve_text3, c.col_security_model";
        $query = $query
                 . " FROM (tab_grn_link_system_category c LEFT JOIN (tab_grn_link_system_category_local cl INNER JOIN tab_cb_language_status l ON cl.language_id = l._id AND l.col_language = '"
                 . $inDb->escape($inLanguage) . "') ON c._id = cl.parent_id)";
        $query = $query . " WHERE c.col_parent= '" . $inDb->escape($inParentId)
                 . "'";
        $query = $query . " AND c.col_user= '" . $inDb->escape($inUserId) . "'";
        $query = $query . " ORDER BY c.col_list_index";
        if ( ! is_null($inOffset)) {
            $query = $inDb->select_format($query, $inOffset, $inLimit, $inLock);
        }

        $result = $inDb->query($query);

        if ($result === false) {
            //Throw Query Error
            $inDb->throwError(['query' => 'query failed: ' . $query]);
        }

        $grnCategoryArray = [];
        while ($rawdata = $inDb->fetch_assoc($result)) {
            $grnCategory = new GrnLinkSystemCategory($rawdata);
            $grnCategoryArray[] = $grnCategory;
        }
        $inDb->free_result($result);
        $result = false;

        return $grnCategoryArray;
    }

    /**
     * @param  array    $inDataObj
     * @param  string[] $inCategoryArray
     *
     * @return GrnLinkSystemCategory[]
     */
    public function getChildSystemCategoryListByIds(
        $inDataObj,
        $inCategoryArray
    ) {
        /** @var CB_DatabaseConnection $inDb */
        $inDb = $inDataObj['db'];
        $inLock = (array_key_exists('lock', $inDataObj))
            ? $inDataObj['lock'] : null;
        $inLanguage = (array_key_exists('language', $inDataObj))
            ? $inDataObj['language'] : null;

        $inEscapeCategoryArray = [];
        foreach ($inCategoryArray as $id) {
            $inEscapeCategoryArray[] = $inDb->escape($id);
        }
        $inCategoryIds = implode("','", $inEscapeCategoryArray);

        $query
            = "SELECT c._id, c.col_creator, c.col_creator_foreign_key, c.col_creator_name, c.col_ctime";
        $query = $query
                 . ", c.col_foreign_key, c.col_list_index, c.col_memo, c.col_modifier";
        $query = $query
                 . ", c.col_modifier_foreign_key, c.col_modifier_name, c.col_mtime";
        $query = $query . ", IFNULL(cl.col_name, c.col_name) AS col_name";
        $query = $query
                 . ", c.col_parent, c.col_reserve_blob1, c.col_reserve_blob2, c.col_reserve_blob3";
        $query = $query
                 . ", c.col_reserve_int1, c.col_reserve_int2, c.col_reserve_int3, c.col_reserve_text1";
        $query = $query
                 . ", c.col_reserve_text2, c.col_reserve_text3, c.col_security_model";
        $query = $query
                 . " FROM (tab_grn_link_system_category c LEFT JOIN (tab_grn_link_system_category_local cl INNER JOIN tab_cb_language_status l ON cl.language_id = l._id AND l.col_language = '"
                 . $inDb->escape($inLanguage) . "') ON c._id = cl.parent_id)";
        $query = $query . " WHERE c.col_parent IN ('${inCategoryIds}')";
        $query = $query . " ORDER BY c.col_list_index";

        $query = $inDb->select_format($query, 0, -1, $inLock);

        $result = $inDb->query($query);

        if ($result === false) {
            //Throw Query Error
            $inDb->throwError(['query' => 'query failed: ' . $query]);
        }

        $grnCategoryArray = [];
        while ($rawdata = $inDb->fetch_assoc($result)) {
            $grnCategory = new GrnLinkSystemCategory($rawdata);
            $grnCategoryArray[] = $grnCategory;
        }
        $inDb->free_result($result);

        return $grnCategoryArray;
    }

    /**
     * @param  array    $inDataObj
     * @param  string[] $inCategoryArray
     * @param  string[] $inCategoryNameArray
     *
     * @return GrnLinkSystemCategory[]
     */
    public function getSystemCategoryListByIds_Names(
        $inDataObj,
        $inCategoryArray,
        $inCategoryNameArray
    ) {
        /** @var CB_DatabaseConnection $inDb */
        $inDb = $inDataObj['db'];
        $inLock = (array_key_exists('lock', $inDataObj))
            ? $inDataObj['lock'] : null;
        $inOffset = (array_key_exists('offset', $inDataObj))
            ? $inDataObj['offset'] : null;
        $inLimit = (array_key_exists('limit', $inDataObj))
            ? $inDataObj['limit'] : null;
        $inLanguage = (array_key_exists('language', $inDataObj))
            ? $inDataObj['language'] : null;

        $inEscapeCategoryArray = [];
        foreach ($inCategoryArray as $id) {
            $inEscapeCategoryArray[] = $inDb->escape($id);
        }
        $inCategoryIds = implode("','", $inEscapeCategoryArray);

        $inEscapeCategoryNameArray = [];
        foreach ($inCategoryNameArray as $name) {
            $inEscapeCategoryNameArray[] = cb_queryf($inDb,
                "(main.col_name LIKE '%@L%')", $name);
        }
        $inCategoryNames = implode(" AND ", $inEscapeCategoryNameArray);

        $query = "SELECT *";
        $query = $query . " FROM (";
        $query = $query
                 . "SELECT c._id, c.col_creator, c.col_creator_foreign_key, c.col_creator_name, c.col_ctime";
        $query = $query
                 . ", c.col_foreign_key, c.col_list_index, c.col_memo, c.col_modifier";
        $query = $query
                 . ", c.col_modifier_foreign_key, c.col_modifier_name, c.col_mtime";
        $query = $query . ", IFNULL(cl.col_name, c.col_name) AS col_name";
        $query = $query
                 . ", c.col_parent, c.col_reserve_blob1, c.col_reserve_blob2, c.col_reserve_blob3";
        $query = $query
                 . ", c.col_reserve_int1, c.col_reserve_int2, c.col_reserve_int3, c.col_reserve_text1";
        $query = $query
                 . ", c.col_reserve_text2, c.col_reserve_text3, c.col_security_model";
        $query = $query
                 . " FROM (tab_grn_link_system_category c LEFT JOIN (tab_grn_link_system_category_local cl INNER JOIN tab_cb_language_status l ON cl.language_id = l._id AND l.col_language = '"
                 . $inDb->escape($inLanguage) . "') ON c._id = cl.parent_id)";
        $query = $query . " WHERE c._id IN ('${inCategoryIds}')";
        $query = $query . ") main";
        $query = $query . " WHERE ${inCategoryNames}";
        $query = $query . " ORDER BY main.col_list_index";
        if ( ! is_null($inOffset)) {
            $query = $inDb->select_format($query, $inOffset, $inLimit, $inLock);
        }

        $result = $inDb->query($query);

        if ($result === false) {
            //Throw Query Error
            $inDb->throwError(['query' => 'query failed: ' . $query]);
        }

        $grnCategoryArray = [];
        while ($rawdata = $inDb->fetch_assoc($result)) {
            $grnCategory = new GrnLinkSystemCategory($rawdata);
            $grnCategoryArray[] = $grnCategory;
        }
        $inDb->free_result($result);

        return $grnCategoryArray;
    }

    /**
     * @param $inDataObj
     * @param $inCategoryArray
     * @param $inCategoryNameArray
     * @param $inMtime
     *
     * @return GrnLinkSystemCategory[]
     */
    public function getSystemCategoryListByIds_Names_Mtime(
        $inDataObj,
        $inCategoryArray,
        $inCategoryNameArray,
        $inMtime
    ) {
        /* @var CB_DatabaseConnection $inDb */
        $inDb = $inDataObj['db'];
        $inLock = (array_key_exists('lock', $inDataObj))
            ? $inDataObj['lock'] : null;
        $inOffset = (array_key_exists('offset', $inDataObj))
            ? $inDataObj['offset'] : null;
        $inLimit = (array_key_exists('limit', $inDataObj))
            ? $inDataObj['limit'] : null;
        $inLanguage = (array_key_exists('language', $inDataObj))
            ? $inDataObj['language'] : null;

        $inEscapeCategoryArray = [];
        foreach ($inCategoryArray as $id) {
            $inEscapeCategoryArray[] = $inDb->escape($id);
        }
        $inCategoryIds = implode("','", $inEscapeCategoryArray);

        $inEscapeCategoryNameArray = [];
        foreach ($inCategoryNameArray as $name) {
            $inEscapeCategoryNameArray[] = cb_queryf($inDb,
                "(main.col_name LIKE '%@L%')", $name);
        }
        $inCategoryNames = implode(" AND ", $inEscapeCategoryNameArray);

        $query = "SELECT *";
        $query = $query . " FROM (";
        $query = $query
                 . "SELECT c._id, c.col_creator, c.col_creator_foreign_key, c.col_creator_name, c.col_ctime";
        $query = $query
                 . ", c.col_foreign_key, c.col_list_index, c.col_memo, c.col_modifier";
        $query = $query
                 . ", c.col_modifier_foreign_key, c.col_modifier_name, c.col_mtime";
        $query = $query . ", IFNULL(cl.col_name, c.col_name) AS col_name";
        $query = $query
                 . ", c.col_parent, c.col_reserve_blob1, c.col_reserve_blob2, c.col_reserve_blob3";
        $query = $query
                 . ", c.col_reserve_int1, c.col_reserve_int2, c.col_reserve_int3, c.col_reserve_text1";
        $query = $query
                 . ", c.col_reserve_text2, c.col_reserve_text3, c.col_security_model";
        $query = $query
                 . " FROM (tab_grn_link_system_category c LEFT JOIN (tab_grn_link_system_category_local cl INNER JOIN tab_cb_language_status l ON cl.language_id = l._id AND l.col_language = '"
                 . $inDb->escape($inLanguage) . "') ON c._id = cl.parent_id)";
        $query = $query . " WHERE c._id IN ('${inCategoryIds}')";
        $query = $query . " AND c.col_mtime >= '" . $inDb->escape($inMtime)
                 . "'";
        $query = $query . ") main";
        $query = $query . " WHERE ${inCategoryNames}";
        $query = $query . " ORDER BY main.col_list_index";
        if ( ! is_null($inOffset)) {
            $query = $inDb->select_format($query, $inOffset, $inLimit, $inLock);
        }

        $result = $inDb->query($query);

        if ($result === false) {
            //Throw Query Error
            $inDb->throwError(['query' => 'query failed: ' . $query]);
        }

        $grnCategoryArray = [];
        while ($rawdata = $inDb->fetch_assoc($result)) {
            $grnCategory = new GrnLinkSystemCategory($rawdata);
            $grnCategoryArray[] = $grnCategory;
        }
        $inDb->free_result($result);
        $result = false;

        return $grnCategoryArray;
    }

    /**
     * @param $inDataObj
     * @param $inCategoryArray
     * @param $inCategoryNameArray
     *
     * @return int
     */
    public function getCountSystemCategoryByIds_Names(
        $inDataObj,
        $inCategoryArray,
        $inCategoryNameArray
    ) {
        /* @var CB_DatabaseConnection $inDb */
        $inDb = $inDataObj['db'];
        $inLock = (array_key_exists('lock', $inDataObj))
            ? $inDataObj['lock'] : null;
        $inOffset = (array_key_exists('offset', $inDataObj))
            ? $inDataObj['offset'] : null;
        $inLimit = (array_key_exists('limit', $inDataObj))
            ? $inDataObj['limit'] : null;
        $inLanguage = (array_key_exists('language', $inDataObj))
            ? $inDataObj['language'] : null;

        $inEscapeCategoryArray = [];
        foreach ($inCategoryArray as $id) {
            $inEscapeCategoryArray[] = $inDb->escape($id);
        }
        $inCategoryIds = implode("','", $inEscapeCategoryArray);

        $inEscapeCategoryNameArray = [];
        foreach ($inCategoryNameArray as $name) {
            $inEscapeCategoryNameArray[] = cb_queryf($inDb,
                "(main.col_name LIKE '%@L%')", $name);
        }
        $inCategoryNames = implode(" AND ", $inEscapeCategoryNameArray);

        $query = "SELECT COUNT(*) AS count";
        $query = $query . " FROM (";
        $query = $query . "SELECT c._id";
        $query = $query . ", IFNULL(cl.col_name, c.col_name) AS col_name";
        $query = $query
                 . " FROM (tab_grn_link_system_category c LEFT JOIN (tab_grn_link_system_category_local cl INNER JOIN tab_cb_language_status l ON cl.language_id = l._id AND l.col_language = '"
                 . $inDb->escape($inLanguage) . "') ON c._id = cl.parent_id)";
        $query = $query . " WHERE c._id IN ('${inCategoryIds}')";
        $query = $query . ") main";
        $query = $query . " WHERE ${inCategoryNames}";

        $query = $inDb->select_format($query, 0, -1, $inLock);

        $result = $inDb->query($query);

        if (($result === false) || ($inDb->num_rows($result) != 1)) {
            //Throw Query Error
            $inDb->throwError(['query' => 'query failed: ' . $query]);
        }

        $row = $inDb->fetch_assoc($result);
        $resultCount = $row['count'];

        $inDb->free_result($result);

        return $resultCount;
    }

    /**
     * @param $inDataObj
     * @param $inCategoryArray
     * @param $inCategoryNameArray
     * @param $inMtime
     *
     * @return int
     */
    public function getCountSystemCategoryByIds_Names_Mtime(
        $inDataObj,
        $inCategoryArray,
        $inCategoryNameArray,
        $inMtime
    ) {
        /* @var CB_DatabaseConnection $inDb */
        $inDb = $inDataObj['db'];
        $inLock = (array_key_exists('lock', $inDataObj))
            ? $inDataObj['lock'] : null;
        $inOffset = (array_key_exists('offset', $inDataObj))
            ? $inDataObj['offset'] : null;
        $inLimit = (array_key_exists('limit', $inDataObj))
            ? $inDataObj['limit'] : null;
        $inLanguage = (array_key_exists('language', $inDataObj))
            ? $inDataObj['language'] : null;

        $inEscapeCategoryArray = [];
        foreach ($inCategoryArray as $id) {
            $inEscapeCategoryArray[] = $inDb->escape($id);
        }
        $inCategoryIds = implode("','", $inEscapeCategoryArray);

        $inEscapeCategoryNameArray = [];
        foreach ($inCategoryNameArray as $name) {
            $inEscapeCategoryNameArray[] = cb_queryf($inDb,
                "(main.col_name LIKE '%@L%')", $name);
        }
        $inCategoryNames = implode(" AND ", $inEscapeCategoryNameArray);

        $query = "SELECT COUNT(*) AS count";
        $query = $query . " FROM (";
        $query = $query . "SELECT c._id";
        $query = $query . ", IFNULL(cl.col_name, c.col_name) AS col_name";
        $query = $query
                 . " FROM (tab_grn_link_system_category c LEFT JOIN (tab_grn_link_system_category_local cl INNER JOIN tab_cb_language_status l ON cl.language_id = l._id AND l.col_language = '"
                 . $inDb->escape($inLanguage) . "') ON c._id = cl.parent_id)";
        $query = $query . " WHERE c._id IN ('${inCategoryIds}')";
        $query = $query . " AND c.col_mtime >= '" . $inDb->escape($inMtime)
                 . "'";
        $query = $query . ") main";
        $query = $query . " WHERE ${inCategoryNames}";

        $query = $inDb->select_format($query, 0, -1, $inLock);

        $result = $inDb->query($query);

        if (($result === false) || ($inDb->num_rows($result) != 1)) {
            //Throw Query Error
            $inDb->throwError(['query' => 'query failed: ' . $query]);
        }

        $row = $inDb->fetch_assoc($result);
        $resultCount = $row['count'];

        $inDb->free_result($result);

        return $resultCount;
    }
}
