<?php

/**
 * リンク集アプリケーションベース
 *
 * @author  Yuichi, Nakamura 2005/3
 * @version 1.0
 * @package grn.link
 */

//Garoon Base Service
require_once('grn/application.csp');

//Link Application
require_once('link/resources.csp');

/**
 * リンク集アプリケーションベースクラス
 *
 * @package grn.link
 */
class GRN_Link_Application extends GRN_ApplicationBase
{
    /**
     * コンストラクタ
     */
    function __construct()
    {
        parent::__construct(GRN_LINK_ID);
    }

    private static $_instance = null;

    /**
     * インスタンスの取得
     *
     * @return GRN_Link_Application
     */
    public static function getInstance()
    {
        if ( ! isset(self::$_instance)) {
            $c = __CLASS__;
            self::$_instance = new $c;
        }

        return self::$_instance;
    }


    /**
     * 設定値の取得
     *
     * @param string $name
     *
     * @return  mixed
     */
    function getConfig($name = null)
    {
        return parent::getConfig($name);
    }

    /**
     * %...%形式の識別子リストを返す
     *
     * @return array $identifier_list           //%...% Identifier List
     */
    function getIdentifierList()
    {
        //Set Standard Identifier List
        $identifier_list = [
            //from System Link
            '%grn.link.system_link.id%',
            '%grn.link.system_link.name%',
            '%grn.link.system_link.url%',
            '%grn.link.system_link.memo%',
            //from System Category
            '%grn.link.system_category.id%',
            '%grn.link.system_category.name%',
            '%grn.link.system_category.foreign_key%',
            '%grn.link.system_category.memo%',
            /*
                        //from Personal Link
                        '%grn.link.personal_link.id%',
                        '%grn.link.personal_link.name%',
                        '%grn.link.personal_link.url%',
                        '%grn.link.personal_link.memo%',
                        //from Personal Category
                        '%grn.link.personal_category.id%',
                        '%grn.link.personal_category.name%',
                        '%grn.link.personal_category.foreign_key%',
                        '%grn.link.personal_category.memo%',
            */

        ];

        return $identifier_list;
    }

    /**
     * SSO用の%...%形式の識別子リストを返す(表示名付き)
     *
     * @return array $identifier_list           //%...% Identifier List
     */
    function getSSOIdentifierList()
    {
        //Get Standard Identifier List
        $identifier_list = $this->getIdentifierList();

        //Create SSO Identifier List
        $sso_identifier_list = [];
        foreach ($identifier_list as $identifier) {
            $sso_identifier_list[cb_msg('grn.link', $identifier)] = $identifier;
        }

        //Return SSO Identifier List
        return $sso_identifier_list;
    }

    /**
     * %...%形式の識別子とその値のリストを返す（OID版）
     *
     * @param  string $id_list //Object ID List
     *
     * @return array  $identifier_value_list    //Identifier Value List
     */
    function getIdentifierValueList($id_list = null)
    {
        $identifier_value_list = [];

        //Get Link and Category Logic
        if (is_array($id_list)) {
            $logic_list = [];
            foreach ($id_list as $id_name => $id_value) {
                //Get Target Object
                switch ($id_name) {
                    case 'system_link':
                        require_once('link/link_logic.csp');
                        $logic[0] = GRN_Link_System_Link_Logic::getInstance();
                        $object =& $logic[0]->get($id_value);
                        $target_class = 'system_link';
                        break;
                    case 'system_category':
                        require_once('link/category_logic.csp');
                        $logic[1]
                            = GRN_Link_System_Category_Logic::getInstance();
                        $object =& $logic[1]->get($id_value);
                        $target_class = 'system_category';
                        break;
                    case 'personal_link':
                        require_once('link/link_logic.csp');
                        $logic[2] = GRN_Link_Personal_Link_Logic::getInstance();
                        $object =& $logic[2]->get($id_value);
                        $target_class = 'personal_link';
                        break;
                    case 'personal_category':
                        require_once('link/category_logic.csp');
                        $logic[3]
                            = GRN_Link_Personal_Category_Logic::getInstance();
                        $object =& $logic[3]->get($id_value);
                        $target_class = 'personal_category';
                        break;
                    default:
                        $object = null;
                        break;
                }

                //Check Object
                if ( ! $object) {
                    continue;
                }

                //Get Target Object Property List
                $identifier_list = $this->getIdentifierlist();
                foreach ($identifier_list as $identifier) {
                    $identifier_items = explode('.', $identifier);
                    if ($identifier_items[2] === $target_class) {
                        //Default Item
                        $identifier_items[3] = str_replace('%', '',
                            $identifier_items[3]);
                        if ($identifier_items[3] === 'id') {
                            $identifier_value_list[$identifier]
                                = $object->getOID();
                        } else {
                            $identifier_value_list[$identifier]
                                = $object->get($identifier_items[3]);
                        }
                    }
                }
            }
        }

        //Return Identifier Value
        return $identifier_value_list;
    }

    /**
     * Get Portlet List
     *
     * @return $portlet_list
     */
    function getPortletList()
    {
        $portlet_list = [];

        //Define Link Portlet
        $portlet = [
            'name'             => 'リンク集（単数）',
            //Name
            'type'             => 'grn.link.link',
            //Type
            'version'          => '1.0',
            //Version
            'set_template'     => 'link/portlet/set_link.csp',
            //Set Template Name
            'command_template' => 'link/portlet/command_set_link.csp',
            //Set Template Name
            'view_template'    => 'link/portlet/view_link.csp'
            //View Template Name
        ];
        $portlet_list[] = $portlet;

        //Return Portlet List
        return $portlet_list;
    }

    /**
     * システム設定
     */
    function getSystemConfigArray()
    {
        $ret = [
            'link_config' =>
                [
                    [
                        'page' => 'link/system/common_set',
                        'icon' => 'general32'
                    ],
                    [
                        'page' => 'link/system/list',
                        'icon' => 'link32'
                    ],
                ],
        ];

        $ret['link_config'][] = [
            'page' => 'link/system/access_index',
            'icon' => 'access32'
        ];
        $ret['link_config'][] = [
            'page' => 'link/system/privilege_index',
            'icon' => 'manager32'
        ];
        $ret['link_config'][] = [
            'page' => 'link/system/category_access_import1',
            'icon' => 'import32'
        ];
        $ret['link_config'][] = [
            'page' => 'link/system/category_access_export',
            'icon' => 'export32'
        ];

        return $ret;
    }

    /**
     * 個人設定
     */
    function getPersonalConfigArray()
    {
        return [
            'my_link_config' =>
                [
                    [
                        'page' => 'link/personal/common_set',
                        'icon' => 'general32'
                    ],
                ],
        ];
    }
}


