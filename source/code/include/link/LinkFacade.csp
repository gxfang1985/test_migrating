<?php

require_once('grn/application.csp');
require_once('grn/CBException.csp');
require_once('grn/DAOFactory.csp');
require_once('link/error_code.csp');
require_once('link/inspection.csp');

define('CB_LINK_FACADE_DB_STATUS_INSERT', 1);
define('CB_LINK_FACADE_DB_STATUS_UPDATE', 2);
define('CB_LINK_FACADE_DB_STATUS_DELETE', 3);

class LinkFacade
{
    private $_db = null;

    function __construct()
    {
        $app_locator = GRN_ApplicationLocator::instance();
        $this->_db = $app_locator->getConnection('link');
    }

    /** ***************************************************** */
    /** -----           GrnLinkSystemCategory       --------- */
    /** ***************************************************** */
    /**
     * @param array  $inDataObj
     * @param string $inCategoryKey
     *
     * @return GrnLinkSystemCategory
     */
    public function referSystemCategoryByForeignKey($inDataObj, $inCategoryKey)
    {
        $inDataObj['db'] = $this->_db;
        $daoFctry = DAOFactory::getDAOFactory(DAOFactory::$MYSQL);
        $dao = $daoFctry->getGrnLinkSystemCategoryDAO();

        $result = $dao->selectByForeignKey($inDataObj, $inCategoryKey);

        return $result;
    }

    /**
     * @param $inDataObj
     * @param $inId
     *
     * @return bool|GrnLinkSystemCategory
     */
    public function referSystemCategoryById($inDataObj, $inId)
    {
        try {
            $inDataObj['db'] = $this->_db;
            $daoFctry = DAOFactory::getDAOFactory(DAOFactory::$MYSQL);
            $dao = $daoFctry->getGrnLinkSystemCategoryDAO();

            $inLanguage = (array_key_exists('language', $inDataObj))
                ? $inDataObj['language'] : null;
            if (is_null($inLanguage)) {
                $result = $dao->selectDefaultById($inDataObj, $inId);
            } else {
                $result = $dao->selectLocalById($inDataObj, $inId);
            }

            if ($result === false) {
                throw new CBException();
            }

            return $result;
        } catch (CBException $cbe) {
            cb_throw_error(E_GRN_LINK_CATEGORY_NOT_FOUND);
        }
    }

    /**
     * @param array $inDataObj
     *
     * @return GrnLinkSystemCategory[]
     */
    public function getSystemCategoryList($inDataObj)
    {
        try {
            $inDataObj['db'] = $this->_db;
            $daoFctry = DAOFactory::getDAOFactory(DAOFactory::$MYSQL);
            $dao = $daoFctry->getGrnLinkSystemCategoryDAO();
            $inParentId = (array_key_exists('parentId', $inDataObj))
                ? $inDataObj['parentId'] : null;

            if (is_null($inParentId)) {
                $resultList = $dao->getSystemCategoryList($inDataObj);
            } else {
                $resultList = $dao->getSystemCategoryListByParentId($inDataObj,
                    $inParentId);
            }

            return $resultList;
        } catch (CBException $cbe) {

        }
    }

    /**
     * @param  array    $inDataObj
     * @param  string[] $inCategoryArray
     *
     * @return GrnLinkSystemCategory[]
     */
    public function getChildSystemCategoryListByIds(
        $inDataObj,
        $inCategoryArray
    ) {
        try {
            $inDataObj['db'] = $this->_db;
            $daoFctry = DAOFactory::getDAOFactory(DAOFactory::$MYSQL);
            $dao = $daoFctry->getGrnLinkSystemCategoryDAO();

            $resultList = $dao->getChildSystemCategoryListByIds($inDataObj,
                $inCategoryArray);

            return $resultList;
        } catch (CBException $cbe) {

        }
    }

    /**
     * @param  array    $inDataObj
     * @param  string[] $inCategoryArray
     * @param  string[] $inCategoryNameArray
     * @param  int      $inTerm
     *
     * @return GrnLinkSystemCategory[]
     */
    public function getSystemCategoryListByIds_Names_Mtime(
        $inDataObj,
        $inCategoryArray,
        $inCategoryNameArray,
        $inTerm = 0
    ) {
        try {
            $inDataObj['db'] = $this->_db;
            $daoFctry = DAOFactory::getDAOFactory(DAOFactory::$MYSQL);
            $dao = $daoFctry->getGrnLinkSystemCategoryDAO();

            if ($inTerm == 0) {
                $resultList = $dao->getSystemCategoryListByIds_Names($inDataObj,
                    $inCategoryArray, $inCategoryNameArray);
            } else {
                $resultList
                    = $dao->getSystemCategoryListByIds_Names_Mtime($inDataObj,
                    $inCategoryArray, $inCategoryNameArray, $inTerm);
            }

            return $resultList;
        } catch (CBException $cbe) {

        }
    }

    /**
     * @param     $inDataObj
     * @param     $inCategoryArray
     * @param     $inCategoryNameArray
     * @param int $inTerm
     *
     * @return int
     */
    public function getCountSystemCategoryByIds_Names_Mtime(
        $inDataObj,
        $inCategoryArray,
        $inCategoryNameArray,
        $inTerm = 0
    ) {
        try {
            $inDataObj['db'] = $this->_db;
            $daoFctry = DAOFactory::getDAOFactory(DAOFactory::$MYSQL);
            $dao = $daoFctry->getGrnLinkSystemCategoryDAO();

            if ($inTerm == 0) {
                $resultCount
                    = $dao->getCountSystemCategoryByIds_Names($inDataObj,
                    $inCategoryArray, $inCategoryNameArray);
            } else {
                $resultCount
                    = $dao->getCountSystemCategoryByIds_Names_Mtime($inDataObj,
                    $inCategoryArray, $inCategoryNameArray, $inTerm);
            }

            return $resultCount;
        } catch (CBException $cbe) {

        }
    }


    /** ***************************************************** */
    /** -----        GrnLinkSystemCategoryLocal    --------- */
    /** ***************************************************** */
    /**
     * @param                            $inDataObj
     * @param GrnLinkSystemCategoryLocal $inSystemCategoryLocalObj
     *
     * @return bool|int
     */
    public function insertSystemCategoryLocal(
        $inDataObj,
        $inSystemCategoryLocalObj
    ) {
        try {
            $inDataObj['db'] = $this->_db;
            $daoFctry = DAOFactory::getDAOFactory(DAOFactory::$MYSQL);
            $dao = $daoFctry->getGrnLinkSystemCategoryLocalDAO();
            $inspection
                = GRN_Link_System_Category_Local_Inspection::getInstance();

            $insertCount = $dao->insert($inDataObj, $inSystemCategoryLocalObj);

            if (($insertCount > 0) && ($inspection->isEnabled())) {
                $messageType = 'system_category_local_add';
                $message_args = [
                    'cid'           => $inSystemCategoryLocalObj->getParentId(),
                    'language_code' => $inSystemCategoryLocalObj->getLanguageCode(),
                    'category_name' => $inSystemCategoryLocalObj->getName(),
                ];

                $inspection->record($messageType, $message_args);
            }

            return $insertCount;
        } catch (CBException $cbe) {

        }
    }

    /**
     * @param                            $inDataObj
     * @param GrnLinkSystemCategoryLocal $inSystemCategoryLocalObj
     *
     * @return int
     */
    public function updateSystemCategoryLocal(
        $inDataObj,
        $inSystemCategoryLocalObj
    ) {
        try {
            $inDataObj['db'] = $this->_db;
            $daoFctry = DAOFactory::getDAOFactory(DAOFactory::$MYSQL);
            $dao = $daoFctry->getGrnLinkSystemCategoryLocalDAO();

            $messageTypeAdd = 'system_category_local_add';
            $messageTypeModify = 'system_category_local_modify';
            $inspection
                = GRN_Link_System_Category_Local_Inspection::getInstance();

            $beforSystemCategoryLocal
                = $dao->selectByCategoryId_LanguageCode($inDataObj,
                $inSystemCategoryLocalObj);
            if ($beforSystemCategoryLocal === false) {
                $insertCount = $dao->insert($inDataObj,
                    $inSystemCategoryLocalObj);

                if (($insertCount > 0) && ($inspection->isEnabled())) {
                    $message_args = [
                        'cid'           => $inSystemCategoryLocalObj->getParentId(),
                        'language_code' => $inSystemCategoryLocalObj->getLanguageCode(),
                        'category_name' => $inSystemCategoryLocalObj->getName(),
                    ];

                    $inspection->record($messageTypeAdd, $message_args);
                }

                return CB_LINK_FACADE_DB_STATUS_INSERT;
            } else {
                $updateCount = $dao->update($inDataObj,
                    $inSystemCategoryLocalObj);

                //MySQLは変化が無い場合UPDATE結果が0件になる。しかし、現在のGaroonのログ仕様は変化が無くても変更ログを出力しているので、更新件数が0でもログ出力している
                if (($updateCount >= 0) && ($inspection->isEnabled())) {
                    $message_args = [
                        'cid'                => $inSystemCategoryLocalObj->getParentId(),
                        'language_code'      => $inSystemCategoryLocalObj->getLanguageCode(),
                        'prev_category_name' => $beforSystemCategoryLocal->getName(),
                        'next_category_name' => $inSystemCategoryLocalObj->getName(),
                    ];

                    $inspection->record($messageTypeModify, $message_args);
                }

                return CB_LINK_FACADE_DB_STATUS_UPDATE;
            }
        } catch (CBException $cbe) {

        }
    }

    /**
     * @param                            $inDataObj
     * @param GrnLinkSystemCategoryLocal $inSystemCategoryLocalObj
     *
     * @return bool|int
     */
    public function deleteSystemCategoryLocal(
        $inDataObj,
        $inSystemCategoryLocalObj
    ) {
        try {
            $inDataObj['db'] = $this->_db;
            $daoFctry = DAOFactory::getDAOFactory(DAOFactory::$MYSQL);
            $dao = $daoFctry->getGrnLinkSystemCategoryLocalDAO();

            $messageTypeDelete = 'system_category_local_delete';
            $inspection
                = GRN_Link_System_Category_Local_Inspection::getInstance();

            $deleteCount = 0;
            $beforSystemCategoryLocal
                = $dao->selectByCategoryId_LanguageCode($inDataObj,
                $inSystemCategoryLocalObj);
            if ($beforSystemCategoryLocal !== false) {
                $deleteCount = $dao->deleteByParentId_LanguageCode($inDataObj,
                    $inSystemCategoryLocalObj);
                if (($deleteCount > 0) && ($inspection->isEnabled())) {
                    $message_args = [
                        'cid'           => $inSystemCategoryLocalObj->getParentId(),
                        'language_code' => $inSystemCategoryLocalObj->getLanguageCode(),
                        'category_name' => $beforSystemCategoryLocal->getName(),
                    ];

                    $inspection->record($messageTypeDelete, $message_args);
                }
            }

            return $deleteCount;
        } catch (CBException $cbe) {

        }
    }

    /**
     * @param $inDataObj
     * @param $inCategoryId
     *
     * @return GrnLinkSystemCategoryLocal[]
     */
    public function getSystemCategoryLocalListByCategoryId(
        $inDataObj,
        $inCategoryId
    ) {
        try {
            $inDataObj['db'] = $this->_db;
            $daoFctry = DAOFactory::getDAOFactory(DAOFactory::$MYSQL);
            $dao = $daoFctry->getGrnLinkSystemCategoryLocalDAO();
            $resultList
                = $dao->getSystemCategoryLocalListByCategoryId($inDataObj,
                $inCategoryId);

            return $resultList;
        } catch (CBException $cbe) {

        }
    }
}

