<?php

namespace grn\fts;

class CommandLineParser implements ParameterParserInterface
{
    /** @var array */
    private $input;

    /**
     * @param array $input
     */
    public function __construct(array $input)
    {
        $this->input = $input;
    }

    public function validate()
    {
        $validator = new ArgumentValidator();
        $validator->validateTarget(
            cb_at($this->input, FullIndexerArgValue::APPLICATION),
            cb_at($this->input, FullIndexerArgValue::DOCUMENT)
        );
    }

    /**
     * @return FullIndexerArgumentBuilder
     */
    public function assign()
    {
        $builder = new FullIndexerArgumentBuilder();
        $progressInfo = $this->createProgressInfo();
        $builder->setIndexApplicationInfo($progressInfo);
        $builder->setProgressInfo($progressInfo);

        if (
            isset($this->input[FullIndexerArgValue::FILE_ONLY])
            && $this->input[FullIndexerArgValue::FILE_ONLY]
        ) {
            $builder->setFileOnly(true);
        }

        if (isset($this->input[FullIndexerArgValue::NUMBER])) {
            $builder->setNumber($this->input[FullIndexerArgValue::NUMBER]);
        }

        if (
            isset($this->input[FullIndexerArgValue::FORWARD])
            && $this->input[FullIndexerArgValue::FORWARD]
        ) {
            $builder->setForward((string)$this->input[FullIndexerArgValue::FORWARD]);
        }

        if (isset($this->input[FullIndexerArgValue::SLEEP])) {
            $builder->setSleep($this->input[FullIndexerArgValue::SLEEP]);
        }

        if (isset($this->input[FullIndexerArgValue::START_TIME])) {
            $builder->setStartTime($this->input[FullIndexerArgValue::START_TIME]);
        }

        if (isset($this->input[FullIndexerArgValue::STOP_TIME])) {
            $builder->setStopTime($this->input[FullIndexerArgValue::STOP_TIME]);
        }

        if (isset($this->input[FullIndexerArgValue::MAX_JOB_NUM])) {
            $builder->setMaxJobNum($this->input[FullIndexerArgValue::MAX_JOB_NUM]);
        }

        if (isset($this->input[FullIndexerArgValue::SEARCH_ENGINE])) {
            $builder->setSearchEngine($this->input[FullIndexerArgValue::SEARCH_ENGINE]);
        }

        return $builder;
    }

    /**
     * @return FullIndexProgressInfo
     */
    private function createProgressInfo()
    {
        if (isset($this->input[FullIndexerArgValue::DOCUMENT])) {
            $document = $this->input[FullIndexerArgValue::DOCUMENT];

            return FullIndexProgressInfo::initWithTargetDocuments(explode(',',
                $document));
        } elseif (isset($this->input[FullIndexerArgValue::APPLICATION])) {
            return FullIndexProgressInfo::initWithTargetApplication($this->input[FullIndexerArgValue::APPLICATION]);
        } else {
            return FullIndexProgressInfo::init();
        }
    }
}
