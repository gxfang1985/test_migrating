<?php

namespace grn\fts\message;

use grn\fts\BulkIndexerChildProcessInterface;
use grn\fts\ChildProcessArgValue;
use grn\fts\FtsProduct;

class BulkFileIndexer implements BulkIndexerChildProcessInterface
{
    /** @var \grn\fts\ChildProcessArgValue */
    private $value;

    /**
     * @param array $input
     */
    public function __construct(array $input)
    {
        $this->value = new ChildProcessArgValue();
        $this->value->parseInput($input);
    }

    /**
     * @return string[]
     */
    public function getConnectAppIds()
    {
        return ["message"];
    }

    /**
     */
    public function execute()
    {
        $service = new IndexService($this->value->getSearchEngine());
        $db = cb_get_app_db('message');
        $result = $db->query(
            "SELECT a.col_message, " .
            "a.col_follow, " .
            "f._id, " .
            "f.col_modifier, " .
            "f.col_mtime, " .
            "b._id AS fileId, " .
            "b.col_blob, " .
            "b.col_name " .
            "FROM tab_grn_message_file as f, " .
            "tab_grn_message_attachedfiles as a, " .
            "tab_grn_message_filebody as b " .
            "WHERE f._id >= {$db->escape($this->value->getStartId())} " .
            "AND {$db->escape($this->value->getEndId())} >= f._id " .
            "AND f._id=a.col_file " .
            "AND f._id=b.col_file " .
            "AND f.col_version=b.col_version " .
            "FOR UPDATE");
        $rows = [];
        while ($row = $db->fetch_assoc($result)) {
            $rows[] = $row;
        }
        $db->free_result($result);
        $service->bulkCreateFileIndex($rows, $this->value->getForward());
        $rowsCount = count($rows);
        echo "{$rowsCount} files indexed.";
        gc_collect_cycles();
    }
}
