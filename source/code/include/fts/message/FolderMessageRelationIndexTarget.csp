<?php

namespace grn\fts\message;

use grn\fts\FullIndexTargetHelper;
use grn\fts\FullIndexTargetRangeDAOInterface;
use grn\fts\IndexTargetRange;

class FolderMessageRelationIndexTarget
    implements FullIndexTargetRangeDAOInterface
{
    /** @var \CB_DatabaseConnection */
    private $db;

    public function __construct($userTableNum)
    {
        $this->db = cb_get_app_db('message');
        $this->userTableNum = $userTableNum;
    }

    /**
     * @param $startId
     * @param $limit
     *
     * @return IndexTargetRange
     */
    public function getTargetRange($startId, $limit)
    {
        $getTargetQuery
            = "SELECT f._id AS id " .
              "FROM tab_grn_message_foldermessagerelations___p{$this->userTableNum} AS f "
              .
              "INNER JOIN tab_grn_message_messages AS m " .
              "ON m._id = f.col_message " .
              "WHERE f._id >= '@S' " .
              "AND m.col_message_type != " . GRN_MESSAGE_TYPE_DRAFT .
              " ORDER BY f._id LIMIT @S";

        return FullIndexTargetHelper::getTargetRange($getTargetQuery, $this->db,
            $startId, $limit);
    }

    /**
     * @return int
     */
    public function getLastId()
    {
        $query
            = "SELECT f._id AS id " .
              "FROM tab_grn_message_foldermessagerelations___p{$this->userTableNum} AS f "
              .
              "INNER JOIN tab_grn_message_messages AS m " .
              "ON m._id = f.col_message " .
              "WHERE m.col_message_type != " . GRN_MESSAGE_TYPE_DRAFT .
              " ORDER BY f._id DESC LIMIT 1";

        return FullIndexTargetHelper::getIndexTargetLastId($this->db, $query);
    }
}
