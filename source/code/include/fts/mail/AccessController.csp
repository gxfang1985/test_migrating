<?php

namespace grn\fts\mail;

use grn\fts\AccessControllerInterface;
use grn\fts\SearchConstants;
use grn\fts\SearchDocumentInterface;

class AccessController implements AccessControllerInterface
{
    /**
     * @param \grn\fts\SearchDocumentInterface $document
     * @param \CB_User                         $user
     *
     * @return bool
     */
    public function isAccessible(
        SearchDocumentInterface $document,
        \CB_User $user
    ) {
        $tokens = explode(SearchConstants::DOCUMENT_ID_DELIMITER,
            $document->getId());
        $userId = substr($tokens[2], 1);
        if ($userId != $user->getOID()) {
            return false;
        }

        $util = new MailUtil();
        $mail = $util->getMailMessage($document);
        if (is_null($mail)) {
            return false;
        }

        // check file
        if (count($tokens) === 5) {
            $fileId = substr($tokens[4], 1);
            require_once('mail/mail.csp');
            $mailLogic = new \GRN_Mail_MailLogic();
            if ($mail->isUseFileBodyTable()) {
                if ($mail->isDraft()) {
                    // The attachment files of draft mail are not indexed on current Garoon.
                    // But on old environments, it had been indexed. see: GRB-16693, GRB-16685
                    // We just ignore it.
                    return false;
                }

                /* @var \CB_ServerFile $fileBody */
                $fileBody = $mailLogic->getMailFileBody($mail->getOID(),
                    $fileId, false);
            } else {
                require_once('mail/resources.csp');
                $fileInfoTable
                    = $mailLogic->_utility->getTableInfo(grn_mail_get_personal_tablename($mail->get('user')
                                                                                              ->getOID(),
                    GRN_MAIL_FILEINFO_TABLE));
                $fileInfo = $fileInfoTable->getRow($fileId);
                $partNo = $fileInfo->get('part_no');
                /* @var \CB_MailSinglePart $fileBody */
                $fileBody = $mailLogic->getMailFileBody($mail->getOID(),
                    $partNo, false);
            }

            if ( ! $fileBody) {
                return false;
            }
        }

        return true;
    }
}

