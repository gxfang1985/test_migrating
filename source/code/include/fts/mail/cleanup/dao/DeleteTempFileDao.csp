<?php

namespace grn\fts\mail\cleanup\dao;

class DeleteTempFileDao
{
    const MYSQL_MEDIUMTEXT_SIZE = 16000000;

    private function db()
    {
        return cb_get_app_db("job");
    }

    /**
     * @param string   $queueId
     * @param string[] $filesPathList
     */
    public function add($queueId, array $filesPathList)
    {
        $jsonFilesPathList = json_encode($filesPathList);

        if (strlen($jsonFilesPathList) > self::MYSQL_MEDIUMTEXT_SIZE) {
            cb_throw_error();
        }

        $db = $this->db();

        $query
            = "INSERT INTO tab_grn_fts_mail_temp_file (col_queue_id, col_file_path_list) VALUES ('@S', '@S')";
        $query = $db->format($query, [$queueId, $jsonFilesPathList]);

        $db->query($query);
    }

    /**
     * @param string[] $queueIdList
     */
    public function remove(array $queueIdList)
    {
        $db = $this->db();

        $query
            = "DELETE FROM tab_grn_fts_mail_temp_file WHERE col_queue_id IN (@A)";
        $query = $db->format($query, [$queueIdList]);

        $db->query($query);
    }

    /**
     * @param int $limit
     *
     * @return array
     */
    public function getList($limit)
    {
        $db = $this->db();

        $query
            = <<<SQL
      SELECT * FROM tab_grn_fts_mail_temp_file
      ORDER BY col_queue_id
      LIMIT $limit
SQL;

        $result = $db->query($query);
        $rows = [];
        while ($row = $db->fetch_assoc($result)) {
            $row['col_file_path_list']
                = json_decode($row['col_file_path_list']);
            assert('is_array($row["col_file_path_list"])');

            $rows[] = $row;
        }

        return $rows;
    }
}
