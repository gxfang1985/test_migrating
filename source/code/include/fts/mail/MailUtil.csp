<?php

namespace grn\fts\mail;

use grn\fts\SearchConstants;
use grn\fts\SearchDocumentInterface;

class MailUtil
{
    /**
     *
     * @param \grn\fts\SearchDocumentInterface $document
     *
     * @return \GRN_Mail_Message
     */
    public function getMailMessage(SearchDocumentInterface $document)
    {
        $tokens = explode(SearchConstants::DOCUMENT_ID_DELIMITER,
            $document->getId());
        $mailId = substr($tokens[3], 1);

        require_once('mail/mail.csp');
        $mailLogic = new \GRN_Mail_MailLogic();

        return $mailLogic->_getMailRow($mailId);
    }

    /**
     *
     * @return string
     */
    public function getMailIconUrl()
    {
        return cb_get_app_path() . '/grn/image/cybozu/mail16.png';
    }

    /**
     *
     * @param \grn\fts\SearchDocumentInterface $document
     *
     * @return string
     */
    public function getFileId(SearchDocumentInterface $document)
    {
        $tokens = explode(SearchConstants::DOCUMENT_ID_DELIMITER,
            $document->getId());

        return substr($tokens[4], 1);
    }

    /**
     * @return string
     */
    public static function getTmpDirectoryPath()
    {
        global $G_config_common;
        $dir = $G_config_common->get('Files', 'dir')
               . "/mail/tmp_solr_index"
               . DIRECTORY_SEPARATOR . sprintf('%04d', mt_rand(0, 9999));

        if ( ! is_dir($dir)) {
            mkdir($dir, 0777, true);
        }

        return $dir;
    }

    /**
     * @param string $dir
     * @param        $content
     *
     * @return string|bool
     */
    public static function makeTmpFile($dir, $content)
    {
        $path = tempnam($dir, "");
        $ret = false;
        if ($path !== false && ! is_null($content)) {
            $ret = file_put_contents($path, $content);
        }
        if ($ret === false) {
            syslog(LOG_ERR, "Couldn't make temporary file!!");
            if ($path !== false) {
                unlink($path);
            }

            return false;
        }

        return $path;
    }
}

