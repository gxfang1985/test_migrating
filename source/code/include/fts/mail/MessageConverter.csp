<?php

namespace grn\fts\mail;

use grn\fts\DocumentConverterInterface;
use grn\fts\DocumentView;
use grn\fts\SearchDocumentInterface;
use grn\fts\SearchUtil;
use grn\fts\AddressView;

class MessageConverter implements DocumentConverterInterface
{
    /**
     * @param \grn\fts\SearchDocumentInterface $document
     *
     * @return \grn\fts\DocumentView
     */
    public function convert(SearchDocumentInterface $document)
    {
        $util = new MailUtil();
        $mail = $util->getMailMessage($document);

        $snippet = $this->getSnippet($document);
        $title = $mail->get('subject');
        if ($title === "") {
            $title = cb_msg('grn.mail', 'no_title');
        }
        $titleIcon = $util->getMailIconUrl();
        $url = $this->getUrl($mail);
        $modifiedTime = $mail->get('send_ts')->unix_ts;

        $documentView = new DocumentView($snippet, $title, $titleIcon, $url,
            $modifiedTime);

        $from = $mail->get('from');
        if (is_string($from) && strlen($from) > 0) {
            $addressView = new AddressView($from, $mail->getOID());
            $documentView->setAddressView($addressView);
        }

        return $documentView;
    }

    /**
     * @param \grn\fts\SearchDocumentInterface $document
     *
     * @return string
     */
    private function getSnippet(SearchDocumentInterface $document)
    {
        $util = new SearchUtil();

        return $util->getSnippet($document);
    }

    /**
     * @param \GRN_Mail_Message $mail
     *
     * @return string
     */
    private function getUrl(\GRN_Mail_Message $mail)
    {
        $params = [
            'mid' => $mail->getOID(),
        ];

        return cb_format_url("mail/view", $params);
    }
}

