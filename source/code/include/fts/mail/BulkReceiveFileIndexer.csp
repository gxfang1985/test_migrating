<?php

namespace grn\fts\mail;

use grn\fts\BulkIndexerChildProcessInterface;
use grn\fts\ChildProcessArgValue;
use grn\fts\FtsProduct;

class BulkReceiveFileIndexer implements BulkIndexerChildProcessInterface
{
    /** @var \grn\fts\ChildProcessArgValue */
    private $value;

    /**
     * @param array $input
     */
    public function __construct(array $input)
    {
        $this->value = new ChildProcessArgValue();
        $this->value->parseInput($input);
    }

    /**
     * @return string[]
     */
    public function getConnectAppIds()
    {
        return ["mail"];
    }

    /**
     */
    public function execute()
    {
        $service = new IndexService($this->value->getSearchEngine());
        $db = cb_get_app_db('mail');
        $rows = [];
        if (defined('ON_FOREST')) {
            $query
                = "SELECT i._id, " .
                  "r.col_blob, " .
                  "i.col_name, " .
                  "i.col_mail, " .
                  "i.col_part_no, " .
                  "m.col_user, " .
                  "m.col_from, " .
                  "m.col_to, " .
                  "m.col_cc, " .
                  "m.col_bcc, " .
                  "m.col_send_ts, " .
                  "m.col_folder, " .
                  "f.col_account " .
                  "FROM tab_grn_mail_fileinfo___p{$db->escape($this->value->getUserTableNum())} AS i, "
                  .
                  "tab_grn_mail_message___p{$db->escape($this->value->getUserTableNum())} AS m, "
                  .
                  "tab_grn_mail_folder AS f, " .
                  "tab_grn_mail_sourcefilebody___p{$db->escape($this->value->getUserTableNum())} AS s, "
                  .
                  "tab_grn_mail_receivedfilerelation AS r " .
                  "WHERE i._id >= '{$db->escape($this->value->getStartId())}' "
                  .
                  "AND '{$db->escape($this->value->getEndId())}' >= i._id "
                  .
                  "AND i.col_mail=m._id " .
                  "AND m.col_folder=f._id " .
                  "AND m._id=s.col_mail " .
                  "AND r.col_file=i._id " .
                  "AND r.col_user=m.col_user " .
                  "AND r.col_blob IS NOT NULL " .
                  "AND m.col_dtime IS NULL " .
                  "FOR UPDATE";
            $result = $db->query($query);
            while ($row = $db->fetch_assoc($result)) {
                $rows[] = $row;
            }
            $db->free_result($result);
            $service->bulkCreateFileIndex($rows, $this->value->getForward(),
                'mail.receiveFile');
            $rowsCount = count($rows);
            echo "{$rowsCount} receive files indexed.";
            gc_collect_cycles();
        } else {
            $query
                = "SELECT f.col_mail " .
                  "FROM tab_grn_mail_fileinfo___p{$db->escape($this->value->getUserTableNum())} AS f, "
                  .
                  "tab_grn_mail_message___p{$db->escape($this->value->getUserTableNum())} AS m, "
                  .
                  "tab_grn_mail_sourcefilebody___p{$db->escape($this->value->getUserTableNum())} AS s "
                  .
                  "WHERE f.col_mail >= '{$db->escape($this->value->getStartId())}' "
                  .
                  "AND '{$db->escape($this->value->getEndId())}' >= f.col_mail "
                  .
                  "AND f.col_mail=m._id " .
                  "AND m._id=s.col_mail " .
                  "AND m.col_dtime IS NULL " .
                  "GROUP BY f.col_mail FOR UPDATE";
            $result = $db->query($query);
            while ($row = $db->fetch_assoc($result)) {
                $rows[] = $row;
            }
            $db->free_result($result);
            $service->bulkCreateReceiveFileIndex($rows,
                $this->value->getUserTableNum());
            $rowsCount = count($rows);
            echo "Received files of {$rowsCount} mails were indexed.";
            gc_collect_cycles();
        }
    }
}
