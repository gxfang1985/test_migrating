<?php

namespace grn\fts\filter;

use grn\fts\Field;
use grn\fts\FtsProduct;

class RangeFilter implements SearchFilterInterface
{
    /** @var Field */
    private $field;

    /** @var array */
    private $conditions;

    /**
     * @param Field $field
     * @param array $conditions
     */
    public function __construct(Field $field, array $conditions)
    {
        $this->field = $field;
        $this->conditions = $conditions;
    }

    /**
     * @param FtsProduct $fts_product
     *
     * @return string|array
     * @throws \grn\fts\exception\NoResultException  throws when no documents are matched with this condition.
     * @throws \grn\fts\exception\AllResultException  throws when all documents are matched with this condition.
     */
    public function getQuery(FtsProduct $fts_product)
    {
        if ($fts_product->isSolr()) {
            throw new \RuntimeException('Not implemented.');
        } else {
            return [
                'range' => [
                    $this->field->es() => $this->conditions
                ]
            ];
        }
    }
}
