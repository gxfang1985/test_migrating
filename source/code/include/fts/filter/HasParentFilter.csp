<?php

namespace grn\fts\filter;

use grn\fts\FtsProduct;

class HasParentFilter implements SearchFilterInterface
{
    /**
     * @var string
     */
    private $parentType;

    /**
     * @var SearchFilterInterface
     */
    private $filter;

    /**
     * @param string                $parent_type
     * @param SearchFilterInterface $filter
     */
    public function __construct($parent_type, SearchFilterInterface $filter)
    {
        $this->parentType = $parent_type;
        $this->filter = $filter;
    }


    /**
     * @param FtsProduct $fts_product
     *
     * @return string|array
     * @throws \grn\fts\exception\NoResultException  throws when no documents are matched with this condition.
     * @throws \grn\fts\exception\AllResultException  throws when all documents are matched with this condition.
     */
    public function getQuery(FtsProduct $fts_product)
    {
        if ($fts_product->isSolr()) {
            throw new \RuntimeException('Not supported on solr.');
        }

        return [
            'has_parent' => [
                'parent_type' => $this->parentType,
                'query'       => $this->filter->getQuery($fts_product),
            ]
        ];
    }
}
