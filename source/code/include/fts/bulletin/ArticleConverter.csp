<?php

namespace grn\fts\bulletin;

use grn\fts\DocumentConverterInterface;
use grn\fts\DocumentView;
use grn\fts\SearchDocumentInterface;
use grn\fts\SearchUtil;

class ArticleConverter implements DocumentConverterInterface
{
    /**
     * Convert a search result to view data of Garoon.
     *
     * @param \grn\fts\SearchDocumentInterface $document
     *
     * @return \grn\fts\DocumentView
     */
    public function convert(SearchDocumentInterface $document)
    {
        $util = new BulletinUtil();
        $article = $util->getArticle($document);

        // article must exists.
        assert('$article');

        $snippet = $this->getSnippet($document);
        $title = $article->get('subject');
        $titleIcon = $util->getArticleIconUrl();
        $url = $this->getUrl($article);
        $modifierView = $this->getModifierView($article);
        $modifiedTime = $article->get('mtime')->unix_ts;

        $documentView = new DocumentView($snippet, $title, $titleIcon, $url,
            $modifiedTime);
        $documentView->setModifierView($modifierView);

        return $documentView;
    }

    /**
     * @param \grn\fts\SearchDocumentInterface $document
     *
     * @return string
     */
    private function getSnippet(SearchDocumentInterface $document)
    {
        $util = $this->getSearchUtil();

        return $util->getSnippet($document);
    }

    private function getUrl(\GRN_Bulletin_Article $article)
    {
        $params = ['aid' => $article->getOID()];

        return cb_format_url("bulletin/view", $params);
    }

    /**
     * @param \GRN_Bulletin_Article $article
     *
     * @return \grn\fts\ModifierView|string
     */
    private function getModifierView(\GRN_Bulletin_Article $article)
    {
        $manually_enter_sender = $article->get('manually_enter_sender');
        if ($manually_enter_sender) {
            return $manually_enter_sender;
        } else {
            $modifier = $article->get('modifier');
            $util = $this->getSearchUtil();

            return $util->getModifierView($modifier,
                $article->get('modifier_name'));
        }
    }

    /**
     * @return \grn\fts\SearchUtil
     */
    private function getSearchUtil()
    {
        return new SearchUtil();
    }
}
