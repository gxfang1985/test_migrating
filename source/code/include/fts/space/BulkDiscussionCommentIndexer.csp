<?php

namespace grn\fts\space;

use grn\fts\BulkIndexerChildProcessInterface;
use grn\fts\FtsProduct;
use grn\space\logic\ThreadLogic;
use grn\fts\ChildProcessArgValue;
use grn\fts\FullIndexer as Indexer;

class BulkDiscussionCommentIndexer implements BulkIndexerChildProcessInterface
{
    /** @var \grn\fts\ChildProcessArgValue */
    private $value;

    public function __construct(array $input)
    {
        $this->value = new ChildProcessArgValue();
        $this->value->parseInput($input);
    }

    /**
     * @return string[]
     */
    public function getConnectAppIds()
    {
        return ["space"];
    }

    /**
     */
    public function execute()
    {
        $service = new IndexService($this->value->getSearchEngine());
        $logic = ThreadLogic::getInstance();
        $rows
            = $logic->getAllThreadCommentForFtsFullIndexer($this->value->getStartId(),
            $this->value->getEndId(), Indexer::LONGTEXT_MAX_LENGTH);
        foreach ($rows as $row) {
            if ($row['truncated'] === 1) {
                echo "space discussion comment truncated: tab_grn_space_comment {$row['_id']}.";
            }
        }
        $service->bulkCreateDiscussionCommentIndex($rows,
            $this->value->getForward());
        $rowsCount = count($rows);
        echo "{$rowsCount} discussion comments indexed.";
        gc_collect_cycles();
    }
}
