<?php

namespace grn\fts;

class SearchDocument implements SearchDocumentInterface
{
    /* @var string $id */
    private $id;
    /* @var string[] $highlights */
    private $highlights;
    /* @var int $fileId */
    private $fileId = null;
    /* @var string $application */
    private $application;
    /* @var string[] $fileNameHighlights */
    private $fileNameHighlights = null;

    /**
     * @param string   $id
     * @param string[] $highlights
     */
    public function __construct($id, $highlights)
    {
        $this->setId($id);
        $this->setHighlights($highlights);

        assert('substr($id, 0, 3) === "G.A"');
        $tokens = explode(SearchConstants::DOCUMENT_ID_DELIMITER, $id);
        $application = substr($tokens[1], 1);
        $this->setApplication($application);
    }

    /**
     * @param string[] $highlights
     */
    public function setHighlights($highlights)
    {
        $this->highlights = $highlights;
    }

    /**
     * @return string[]
     */
    public function getHighlights()
    {
        return $this->highlights;
    }

    /**
     * @param string $id
     */
    public function setId($id)
    {
        $this->id = $id;
    }

    /**
     * @return string
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * @param int $fileId
     */
    public function setFileId($fileId)
    {
        $this->fileId = $fileId;
    }

    /**
     * @return int
     */
    public function getFileId()
    {
        return $this->fileId;
    }

    /**
     * @return bool
     */
    public function isFile()
    {
        return ! is_null($this->fileId);
    }

    /**
     * @return string
     */
    public function getApplication()
    {
        return $this->application;
    }

    /**
     * @param string $application
     */
    public function setApplication($application)
    {
        $this->application = $application;
    }

    /**
     * @param string[] $fileNameHighlights
     */
    public function setFileNameHighlights($fileNameHighlights)
    {
        $this->fileNameHighlights = $fileNameHighlights;
    }

    /**
     * @return string[]|null
     */
    public function getFileNameHighlights()
    {
        return $this->fileNameHighlights;
    }

    /**
     * @return bool
     */
    public function isSpace()
    {
        return (substr($this->getId(), 0, 8) === 'G.Aspace');
    }
}
