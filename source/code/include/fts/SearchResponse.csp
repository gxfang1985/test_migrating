<?php

namespace grn\fts;

class SearchResponse implements SearchResponseInterface
{
    /* @var SearchDocumentInterface[] $documents */
    private $documents = [];

    /* @var int $numFetched */
    private $numFetched;

    /* @var int $numChecked */
    private $numChecked;

    /* @var bool $continuable */
    private $continuable = true;

    /** @var int $processingTime */
    private $processingTime;

    /**
     * @param SearchDocumentInterface[] $documents
     * @param int                       $numChecked
     * @param bool                      $continuable
     * @param int                       $processingTime
     */
    public function __construct(
        $documents,
        $numChecked,
        $continuable,
        $processingTime = 0
    ) {
        $this->setDocuments($documents);
        $this->setNumFetched(count($documents));
        $this->setNumChecked($numChecked);
        $this->setContinuable($continuable);
        $this->setProcessingTime($processingTime);
    }

    /**
     * Get searched documents.
     *
     * @return SearchDocumentInterface[]
     */
    public function getDocuments()
    {
        return $this->documents;
    }

    /**
     * @param SearchDocumentInterface[] $documents
     */
    private function setDocuments($documents)
    {
        $this->documents = $documents;
    }

    /**
     * Get the number of checked documents.
     * This can be used for the offset of the next search.
     *
     * @return int
     */
    public function getNumFetched()
    {
        return $this->numFetched;
    }

    /**
     * @param int $numFetched
     */
    private function setNumFetched($numFetched)
    {
        $this->numFetched = $numFetched;
    }

    /**
     * @return int
     */
    public function getNumChecked()
    {
        return $this->numChecked;
    }

    /**
     * @param int $numChecked
     */
    private function setNumChecked($numChecked)
    {
        $this->numChecked = $numChecked;
    }

    /**
     * Get if there can be more documents matched for the searched conditions.
     *
     * @return bool;
     */
    public function getContinuable()
    {
        return $this->continuable;
    }

    /**
     * @param bool $continuable
     */
    private function setContinuable($continuable)
    {
        $this->continuable = $continuable;
    }

    /**
     * @return int
     */
    public function getProcessingTime()
    {
        return $this->processingTime;
    }

    /**
     * @param int $processingTime
     */
    public function setProcessingTime($processingTime)
    {
        $this->processingTime = $processingTime;
    }
}
