<?php

namespace grn\fts;


use grn\fts\exception\FullIndexerException;

class ResumeFileParser implements ParameterParserInterface
{
    const ERR_MSG = "[ERROR] Failed to get correct information from the information files to resume the full indexing. Quit the full indexing.";

    public function validate()
    {
        // nothing to do
    }

    /**
     * @throws FullIndexerException
     * @return FullIndexerArgumentBuilder
     */
    public function assign()
    {
        $argJSON
            = @file_get_contents(FullIndexerArgValue::getArgumentsFilePath());
        $resumeJSON
            = @file_get_contents(FullIndexerArgValue::getResumeFilePath());
        if ($argJSON === false || $resumeJSON === false) {
            throw new FullIndexerException(self::ERR_MSG);
        }

        $resumeInfoArray = json_decode($resumeJSON, true);
        if ( ! $this->isExistNecessaryValues($resumeInfoArray)) {
            throw new FullIndexerException(self::ERR_MSG);
        }
        $progressInfo = FullIndexProgressInfo::valueOf(
            $resumeInfoArray[FullIndexProgressInfo::COMMAND_INFO],
            $resumeInfoArray[FullIndexProgressInfo::START_ID],
            $resumeInfoArray[FullIndexProgressInfo::USER_TABLE_NUM]
        );
        if ( ! $progressInfo->validate()) {
            throw new FullIndexerException(self::ERR_MSG);
        }

        $argInfoArray = json_decode($argJSON, true);
        if (is_null($argInfoArray)) {
            throw new FullIndexerException(self::ERR_MSG);
        }

        $builder = new FullIndexerArgumentBuilder();
        $builder->setProgressInfo($progressInfo);

        $builder->setIndexApplicationInfo($progressInfo);
        $builder->setNumber($argInfoArray[FullIndexerArgValue::NUMBER]);
        $builder->setFileOnly($argInfoArray[FullIndexerArgValue::FILE_ONLY]);
        $builder->setForward($argInfoArray[FullIndexerArgValue::FORWARD]);
        $builder->setSleep($argInfoArray[FullIndexerArgValue::SLEEP]);
        $builder->setStartTime($argInfoArray[FullIndexerArgValue::START_TIME]);
        $builder->setStopTime($argInfoArray[FullIndexerArgValue::STOP_TIME]);
        $builder->setMaxJobNum($argInfoArray[FullIndexerArgValue::MAX_JOB_NUM]);

        return $builder;
    }

    /**
     * @param mixed $resumeInfoArray
     *
     * @return boolean
     */
    private function isExistNecessaryValues($resumeInfoArray)
    {
        return
            ! is_null($resumeInfoArray) && is_array($resumeInfoArray)
            && isset($resumeInfoArray[FullIndexProgressInfo::COMMAND_INFO])
            && isset($resumeInfoArray[FullIndexProgressInfo::START_ID])
            && array_key_exists(FullIndexProgressInfo::USER_TABLE_NUM,
                $resumeInfoArray);
    }
}
