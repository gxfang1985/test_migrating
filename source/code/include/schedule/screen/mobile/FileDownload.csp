<?php

namespace grn\schedule\screen\mobile;

class FileDownload extends MobileScheduleScreenBase
{
    public function post($input)
    {
        $event_id = cb_at($input, self::ARG_EVENT);
        $file_id = cb_at($input, self::ARG_FILE_ID);
        $login = cb_get_login_user();

        require_once('schedule/system_logic.csp');
        $systemlogic = \GRN_Schedule_SystemLogic::getInstance();
        if ($systemlogic->getAllowFileAttachment() != '1') {
            cb_throw_error(E_GRN_SCHD_DEACTIVATED_FILE);
        }

        if ( ! $event_id) {
            cb_throw_error(E_GRN_SCHD_NOTFOUND_EVENT);
        }

        require_once('schedule/application.csp');
        $app = \GRN_Schedule_Application::getInstance();

        if ( ! ($event = $app->getEvent($login, $event_id))) {
            cb_throw_error(E_GRN_SCHD_NOTFOUND_EVENT);
        }

        require_once('schedule/access_logic.csp');
        $acc_logic = \GRN_Schedule_Access_Logic::getInstance();

        global $G_container_base;
        $uum = $G_container_base->getInstance('uum');
        $dynamic_roles = $uum->listGrantedRoles();

        $access = $acc_logic->getEventAccess($login, $event, ['read'],
            $dynamic_roles);
        if ($access['read'] == GRN_SCHD_ACCESS_DENY) {
            cb_throw_error(E_GRN_SCHD_ACCESSDENY_FILE_VIEW);
        }

        if ( ! $file_id) {
            cb_throw_error(E_GRN_SCHD_NOTFOUND_FILE);
        }

        require_once('schedule/file.csp');
        $fm = \GRN_Schedule_FileManager::getInstance();
        if ( ! ($file =& $fm->getFile($event_id, $file_id))) {
            cb_throw_error(E_GRN_SCHD_NOTFOUND_FILE);
        }

        $body =& $file->getCurrentBody();
        if ( ! $body) {
            cb_throw_error(E_GRN_SCHD_NOTFOUND_FILE_LOG);
        }

        //logging
        require_once('grn/logger.csp');
        $lm = \CB_LoggerManager::getInstance();
        $schedule_log = $lm->getLogger(GRN_SCHEDULE_MODULE_ID);
        $log_params = [
            'eid'       => $event_id,
            'fid'       => $file_id,
            'file_name' => $body->get('name'),
            'version'   => $file->get('version')
        ];
        $schedule_log->infoEx('download', 'file', $log_params);

        $body->download(true);

        cb_safe_exit();
    }
}
