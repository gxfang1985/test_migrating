<?php

namespace grn\schedule\screen\mobile;

use grn\grn\mobile\MobileDisplayUserList;

class SchedulePublicToUserList extends MobileScheduleScreenBase
{
    const REQUEST_PAGE = 'schedule/mobile/ajax/public_to_user_list';
    private $_is_from_ajax;

    public function __construct($input)
    {
        parent::__construct($input);

        $this->setMobileFooterBar();
    }

    public function fetch()
    {
        //Get login info
        global $G_container_base;
        $uum = $G_container_base->getInstance('uum');
        $login = $uum->getLoginUser();
        $login_id = $login->getOID();
        //Get event ID
        $input = $this->getInput();
        $this->checkArgFromInput([self::ARG_EVENT], $input);
        $event_id = $this->getEvent();
        $bdate = cb_at($input, self::ARG_BEGIN_DATE);
        $user_id = cb_at($input, self::ARG_USER_ID);
        $group_id = cb_at($input, self::ARG_GROUP_ID);
        $referer_key = cb_at($input, self::ARG_REFERER_KEY);

        if ( ! $event_id) {
            cb_throw_error(E_GRN_SCHD_NOTFOUND_EVENT);
        }

        //Get begin date(bdate)
        $str_date = $this->getBDateStr();
        $date = new \CB_Date();
        if ( ! $date->parse($str_date)) {
            $date = null;
        }

        //Get event.
        require_once('schedule/application.csp');
        $app = \GRN_Schedule_Application::getInstance();
        $event = $app->getEvent($login, $event_id, $date, CB_DATABASE_NO_LOCK,
            false, GRN_SCHEDULE_GET_MEMBER_ID);
        if ( ! $event) {
            cb_throw_error(E_GRN_SCHD_NOTFOUND_EVENT);
        }

        //Check View right of appointment
        require_once('schedule/access_logic.csp');
        $acc_logic = \GRN_Schedule_Access_Logic::getInstance();
        $dynamic_roles = $uum->listGrantedRoles();
        $access = $acc_logic->getEventAccessByID($login, $event,
            ['read'], $dynamic_roles);

        if ($access['read'] == GRN_SCHD_ACCESS_DENY) {
            cb_throw_error(E_GRN_SCHD_ACCESSDENY_EVENT);
        }
        //Get Public To user list
        $members = [];
        if ($event->private && is_array($event->notify_address)
            && count($event->notify_address) > 0
        ) {
            $members = array_keys($event->notify_address);
        }

        $display_info = $this->getDisplayMemberList($members);

        $params = [
            self::ARG_EVENT       => $event_id,
            self::ARG_BEGIN_DATE  => $str_date,
            self::ARG_USER_ID     => $user_id,
            self::ARG_GROUP_ID    => $group_id,
            self::ARG_REFERER_KEY => $referer_key
        ];

        require_once('grn/smarty.csp');
        $t = new \GRN_Smarty();
        $t->assign('count', count($members));
        $t->assign('request_page', self::REQUEST_PAGE);
        $t->assign(MobileDisplayUserList::USER_INFO_LIST, $display_info);
        if ($this->_is_from_ajax) {
            $member_referer_key = cb_at($input, "member_referer_key");
            $t->assign('member_referer_key', $member_referer_key);

            return $t->fetch('grn/mobile_member_list.tpl');
        } else {
            $this->assignBreadcrumbUpperPage($t,
                cb_msg('grn.mobile', 'detail_title'), "schedule/mobile/view",
                $params);
            $this->assignBreadcrumbCurrentPage($t,
                cb_msg('grn.schedule', 'GRN_SCH-318'));
            $t->assign('offset', $this->getNewOffset());

            $params = [
                self::ARG_EVENT       => $event_id,
                self::ARG_BEGIN_DATE  => $str_date,
                self::ARG_USER_ID     => $user_id,
                self::ARG_GROUP_ID    => $group_id,
                self::ARG_REFERER_KEY => $referer_key
            ];

            require_once('fw/session_manager.csp');
            $session_manager = \CB_SessionManager::getInstance();
            $session
                = $session_manager->getSession("mobile.member_referer");
            $member_referer_key = md5(uniqid(rand(), true));
            $member_referer = [];
            $member_referer["page_name"] = cb_msg("grn.schedule",
                "GRN_SCH-318");
            $member_referer["page_path"]
                = "schedule/mobile/public_to_user_list";
            $member_referer["page_params"] = $params;
            $member_referer['app_id'] = "schedule";
            $member_referer["access_plugin"] = [
                "name"         => "schedule",
                "params"       => ["action" => ["read"]],
                "session_name" => cb_get_pagename()
            ];
            $session->set($member_referer_key, $member_referer);
            $t->assign("member_referer_key", $member_referer_key);
            $t->assign("list_title", cb_msg("grn.schedule", "GRN_SCH-318"));

            $params = [];
            $params[self::ARG_EVENT] = $event_id;
            $params['member_referer_key'] = $member_referer_key;
            $t->assign('more_view_args', $params);

            return $t->fetch('schedule/mobile/member_index.tpl');
        }
    }

    public function getIsFromAjax()
    {
        return $this->_is_from_ajax;
    }

    public function setIsFromAjax($value)
    {
        $this->_is_from_ajax = $value;
    }

    public function getTitle()
    {
        $event = $this->getEventForView();

        return $event->detail . ' - ' . cb_msg('grn.schedule', 'GRN_SCH-318');
    }
}
