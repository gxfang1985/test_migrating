<?php

namespace grn\schedule\screen;

use grn\grn\customization\logic\CustomizationGroupLogic;
use grn\grn\customization\logic\ResourceLogic;
use grn\grn\customization\screen\FileDownload;
use grn\grn\customization\service\CustomizationGroupService;

class CustomizationFileDownload extends FileDownload
{
    /**
     * @return string
     */
    protected function getAppId()
    {
        return 'schedule';
    }

    /**
     * @param string $file_id
     */
    protected function checkAccessRightOfFile($file_id)
    {
        $resource_logic = new ResourceLogic($this->getAppId());
        $resource_target = $resource_logic->getTargetByFileID($file_id);
        $resource_target_array = explode('.', $resource_target);

        $group_id = cb_at($resource_target_array, 1);
        $customization_group_service
            = new CustomizationGroupService($this->getAppId());
        $group
            = $customization_group_service->getGroup($group_id, true);

        if (cb_is_system_page()) {
            return;
        }

        if ( ! $group->isActive()) {
            require_once('grn/error_code.csp');
            cb_throw_error(E_GRN_USERS_FILE_NOT_FOUND);
        }

        /* @var \CB_User $login_user */
        $login_user = cb_get_login_user();

        $customization_group_logic
            = new CustomizationGroupLogic($this->getAppId());
        $is_target_for_group
            = $customization_group_logic->isTargetByUserId($login_user->getOID(),
            $group_id);
        if ( ! $is_target_for_group) {
            require_once("grn/error_code.csp");
            cb_throw_error(E_GRN_CUSTOMIZATION_GROUP_IS_NOT_TARGET);
        }
    }
}
