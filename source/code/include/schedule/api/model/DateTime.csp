<?php

namespace grn\schedule\api\model;

class DateTime
{
    const DATETIME = 'dateTime';
    const TIMEZONE = 'timeZone';

    /**
     * @var string $dateTime Format is ISO8601
     */
    private $dateTime;
    /**
     * @var string $timeZone Time zone
     */
    private $timeZone;

    public function __construct($date_time = null, $time_zone = null)
    {
        $this->dateTime = $date_time;
        $this->timeZone = $time_zone;
    }

    public function getDateTime()
    {
        return $this->dateTime;
    }

    public function setDateTime($date_time)
    {
        $this->dateTime = $date_time;
    }

    public function getTimeZone()
    {
        return $this->timeZone;
    }

    public function setTimeZone($time_zone)
    {
        $this->timeZone = $time_zone;
    }

    public function toArray()
    {
        return get_object_vars($this);
    }

    /**
     * Convert Date & Time to Iso8601
     *
     * @param \CB_Date      $date
     * @param \CB_Time|null $time
     * @param string        $timezone
     * @param boolean       $withUTC with UTC
     *
     * @return DateTime
     */
    public static function convertDateTimeToIso8601(
        $date,
        $time,
        $timezone,
        $withUTC = false
    ) {
        $date_time = new \CB_DateTime();
        $date_time->year = isset($date->year) && $date->year > 0 ? $date->year
            : 0;
        $date_time->month = isset($date->month) && $date->month > 0
            ? $date->month : 0;
        $date_time->day = isset($date->day) && $date->day > 0 ? $date->day
            : 0;
        $date_time->hour = isset($time->hour) && $time->hour > 0 ? $time->hour
            : 0;
        $date_time->minute = isset($time->minute) && $time->minute > 0
            ? $time->minute : 0;
        $date_time->second = isset($time->second) && $time->second > 0
            ? $time->second : 0;

        return grn_cbpapi_iso8601($date_time, $withUTC, $timezone);
    }

    /**
     * Get Mapping day of week from number
     *
     * @param int $day
     *
     * @return null|string $day_of_week
     */
    public static function getMappingDayOfWeek(int $day)
    {
        $day_of_week = null;
        switch ($day) {
            case 0:
                $day_of_week = 'SUN';
                break;
            case 1:
                $day_of_week = 'MON';
                break;
            case 2:
                $day_of_week = 'TUE';
                break;
            case 3:
                $day_of_week = 'WED';
                break;
            case 4:
                $day_of_week = 'THU';
                break;
            case 5:
                $day_of_week = 'FRI';
                break;
            case 6:
                $day_of_week = 'SAT';
                break;
        }

        return $day_of_week;
    }

    /**
     * Get Iso 8601 date time
     *
     * @param \CB_Date      $date     date
     * @param \CB_Time|null $time     time
     * @param string        $timezone time zone
     *
     * @return DateTime
     */
    public static function getIso8601DateTime($date, $time, $timezone)
    {
        $iso8601_date = DateTime::convertDateTimeToIso8601($date, $time,
            $timezone);

        return new DateTime($iso8601_date, $timezone);
    }
}
