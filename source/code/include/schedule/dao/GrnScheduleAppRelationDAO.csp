<?php

namespace grn\schedule\dao;

use grn\grn\Validate;
use grn\schedule\bean\GrnScheduleAppRelation;

class GrnScheduleAppRelationDAO
{
    /** @var \CB_DatabaseConnection $_db */
    private $_db;

    public function __construct()
    {
        global $G_container_base;
        $this->_db = $G_container_base->getInstance('dbconn');
    }

    public function getRelationsByEventId($event_id)
    {
        if ( ! Validate::isNumber($event_id)) {
            return false;
        }

        $query = cb_queryf($this->_db,
            "SELECT _id, col_user, col_event, col_item_id, col_app_id, col_record_id FROM tab_grn_schedule_app_relations WHERE col_event = '@S';",
            $event_id);
        $result = $this->_db->query($query);
        $relations = [];
        while ($row = $this->_db->fetch_assoc($result)) {
            $relations[$row['_id']] = new GrnScheduleAppRelation($row);
        }
        $this->_db->free_result($result);

        return $relations;
    }

    public function addRelation(GrnScheduleAppRelation $relation)
    {
        $event = $relation->getEvent();
        $app_id = $relation->getAppId();
        $record_id = $relation->getRecordId();
        $item_id = $relation->getItemId();
        if (( ! Validate::isNumber($event))
            || ( ! Validate::isNumber($app_id))
            || ( ! Validate::isNumber($record_id))
            || ( ! Validate::isNumber($item_id))
        ) {
            return false;
        }

        $format
            = "INSERT INTO tab_grn_schedule_app_relations SET col_user = '@S', col_event = '@S', col_item_id = '@S', col_app_id = '@S', col_record_id = '@S';";
        $query = cb_queryf($this->_db, $format, $relation->getUser(), $event,
            $item_id, $app_id, $record_id);
        $result = $this->_db->query($query);

        return $result;
    }

    public function deleteRelations(array $relation_ids)
    {
        if (count($relation_ids) > 0) {
            $query = cb_queryf($this->_db,
                "DELETE FROM tab_grn_schedule_app_relations WHERE _id IN (@A);",
                $relation_ids);
            $result = $this->_db->query($query);

            return $result;
        }

        return false;
    }

    public function updateRelation(GrnScheduleAppRelation $relation)
    {
        // condition
        $event = $relation->getEvent();
        $item_id = $relation->getItemId();

        // new data
        $app_id = $relation->getAppId();
        $record_id = $relation->getRecordId();

        if (( ! Validate::isNumber($event))
            || ( ! Validate::isNumber($app_id))
            || ( ! Validate::isNumber($record_id))
            || ( ! Validate::isNumber($item_id))
        ) {
            return false;
        }

        $format
            = "UPDATE tab_grn_schedule_app_relations SET col_user = '@S', col_app_id = '@S', col_record_id = '@S' WHERE col_event = '@S' AND col_item_id = '@S';";
        $query = cb_queryf($this->_db, $format, $relation->getUser(), $app_id,
            $record_id, $event, $item_id);
        $result = $this->_db->query($query);

        return $result;
    }
}
