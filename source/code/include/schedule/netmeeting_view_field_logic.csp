<?php
/**
 * @updated:
 *    2011/06/08 VCBSCH0010 Sync for V-CUBE
 */
require_once('schedule/netmeeting_resources.csp');

class GRN_Netmeeting_ViewFieldLogic
{
    public $netmeeting_data = null;

    /**
     * @access private
     */
    function __construct()
    {
        $netmeeting_data = null;
    }

    private static $_instance = null;

    /**
     * @return GRN_Netmeeting_ViewFieldLogic
     */
    public static function getInstance()
    {
        if ( ! isset(self::$_instance)) {
            $c = __CLASS__;
            self::$_instance = new $c;
        }

        return self::$_instance;
    }

    /**
     * 更新者チェック
     */
    public function checkCreator($event, $login_id)
    {
        // ログインユーザーのチェック
        $b_creator = false;
        if ((is_a($event->creator, 'CB_User')
             && $login_id == $event->creator->getOID())
            || (is_a($event->modifier, 'CB_User')
                && $login_id == $event->modifier->getOID())
        ) {
            $b_creator = true;
        }

        return $b_creator;
    }

    /**
     * 招待情報取得
     */
    public function setInviteDisp(
        $event_status,
        $login_id,
        $b_login,
        $b_creator,
        $coop_data
    ) {
        require_once('schedule/netmeeting_system_logic.csp');
        $vcb_system_logic = GRN_Netmeeting_SystemLogic::getInstance();

        // 招待情報を取得
        if ($event_status !== GRN_NETMEETING_MEETING_STATUS_END) {
            // 招待URL表示取得
            $b_disp = $vcb_system_logic->isNetmeetingUrlDisplay();
            if (($b_login && $b_disp) || $b_creator) {
                // パスワード
                if (isset($coop_data->password)
                    && strlen($coop_data->password) > 0
                ) {
                    $this->netmeeting_data['password'] = $coop_data->password;
                }
            }
            if ($b_login && $b_disp) {
                // 招待URL
                if (is_array($coop_data->invite_data)) {
                    if (array_key_exists($login_id, $coop_data->invite_data)) {
                        $this->netmeeting_data['invite_url']
                            = $coop_data->invite_data[$login_id]->invite_url;
                    }
                }
            }
        }
    }

    /**
     * 外部招待者取得
     */
    public function setOutsideMembersDisp($coop_data, $b_login, $b_creator)
    {
        require_once('schedule/netmeeting_system_logic.csp');
        $vcb_system_logic = GRN_Netmeeting_SystemLogic::getInstance();

        // 外部ユーザーセット
        if (is_array($coop_data->outside_members)
            && count($coop_data->outside_members)
        ) {
            $this->netmeeting_data['outside_members']
                = $coop_data->outside_members;
            if ($b_login || $b_creator) {
                $this->netmeeting_data['guests_show'] = true;
            }
        }
    }

    /**
     * リトライ表示取得
     */
    public function setRetryBtnDisp(
        $vcb_facility,
        $b_netmeeting_retry,
        $b_login,
        $b_creator,
        $event_status
    ) {
        // リトライボタン表示
        if (isset($vcb_facility) && $b_netmeeting_retry) {
            $this->netmeeting_data['netmeeting_err_msg'] = true;

            if ($b_login || $b_creator) {
                // 終了予定以外
                if ($event_status !== GRN_NETMEETING_MEETING_STATUS_END) {
                    // リトライボタン表示あり
                    $this->netmeeting_data['netmeeting_retry_btn'] = true;
                }
                if ($event_status === GRN_NETMEETING_MEETING_STATUS_NOW) {
                    $this->netmeeting_data['netmeeting_retry_now'] = true;
                }
                if ($event_status === GRN_NETMEETING_MEETING_STATUS_END) {
                    $this->netmeeting_data['netmeeting_retry_end'] = true;
                }
            }
        }
    }

    /**
     * V-CUBE欄表示取得
     */
    public function setNetmeetingFieldDsp(
        $schedule_event,
        $vcb_available_facilities
    ) {
        // 選択されている施設がある場合
        if (array_key_exists('facilities', $schedule_event)) {
            // NETMEETING施設かチェック
            foreach (array_keys($schedule_event['facilities']) as $vcb_key) {
                if (array_key_exists($vcb_key, $vcb_available_facilities)) {
                    // V-CUBE欄表示あり
                    $this->netmeeting_data['netmeeting_field_dsp'] = true;
                    break;
                }
            }
        }
    }
}

