<?php

namespace grn\schedule\bean;


class AttendanceStatusCondition extends AttendanceStatus
{
    const ATTENDANCE_STATUS_DAO_ORDER_BY_STATUS = 'col_status';
    const ATTENDANCE_CTIME_DAO_ORDER_BY_CTIME = 'col_ctime';

    private $_sortArray = [];
    private $_attendanceStatus;
    private $_userIds = [];
    private $_listEventIds = [];
    private $_isCountFunction;

    public function __construct($inDataArray = null)
    {
        parent::__construct($inDataArray);
    }


    public function setAttendanceStatus($value)
    {
        $this->_attendanceStatus = $value;
    }

    public function getAttendanceStatus()
    {
        return $this->_attendanceStatus;
    }

    public function setLimit($value)
    {
        $this->_limit = $value;
    }

    public function getLimit()
    {
        return $this->_limit;
    }

    public function setUserIds($value)
    {
        $this->_userIds = $value;
    }

    public function getUserIds()
    {
        return $this->_userIds;
    }

    public function setSortArray($value)
    {
        $this->_sortArray = $value;
    }

    /**
     * @param      $field
     * @param bool $value TRUE => DESC   FALSE => ASC
     */
    public function addSort($field, $isDesc)
    {
        $this->_sortArray[$field] = $isDesc;
    }

    public function getSortArray()
    {
        return $this->_sortArray;
    }

    public function isExistsSortKey($key)
    {
        return array_key_exists($key, $this->getSortArray());
    }

    public function getIsCountFunction()
    {
        return $this->_isCountFunction;
    }

    public function setIsCountFunction($value)
    {
        $this->_isCountFunction = $value;
    }

    public function setListEventIds($value)
    {
        $this->_listEventIds = $value;
    }

    public function getListEventIds()
    {
        return $this->_listEventIds;
    }
}
