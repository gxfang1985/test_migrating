<?php

/**
 * 施設グループ管理権限条件クラス
 *
 * 対象ユーザーと、対象ユーザーにひも付く所属グループ・静的役割・動的役割を元にして、
 * 対象ユーザーが管理権限を持つ施設グループを検索するための検索条件Beanクラス
 *
 * @package code.include.schedule.bean
 * @access  public
 * @author  Toshihisa Kobayashi
 * @create  2011/04/21
 **/
class GrnFacilityFacilitygroupPrivilegeCondition
{
    private $_user_id;
    private $_group_id_array;
    private $_static_role_id_araay;
    private $_dynamic_role_id_array;

    public function __construct(
        $inUserId = '',
        $inGroupIdArray = [],
        $inStaticRoleIdArray = [],
        $inDynamicRoleIdArray = []
    ) {
        $this->setUserId($inUserId);
        $this->setGroupIdArray($inGroupIdArray);
        $this->setStaticRoleIdArray($inStaticRoleIdArray);
        $this->setDynamicRoleIdArray($inDynamicRoleIdArray);
    }

    //accessor method
    public function getUserId()
    {
        return $this->_user_id;
    }

    public function setUserId($value)
    {
        $this->_user_id = $value;
    }

    public function getGroupIdArray()
    {
        return $this->_group_id_array;
    }

    public function setGroupIdArray($value)
    {
        $this->_group_id_array = $value;
    }

    public function getStaticRoleIdArray()
    {
        return $this->_static_role_id_araay;
    }

    public function setStaticRoleIdArray($value)
    {
        $this->_static_role_id_araay = $value;
    }

    public function getDynamicRoleIdArray()
    {
        return $this->_dynamic_role_id_array;
    }

    public function setDynamicRoleIdArray($value)
    {
        $this->_dynamic_role_id_array = $value;
    }

    /**
     * 検索条件が無効か判定する
     *
     * @access    public
     * @return    boolean   無効：TRUE  有効：FALSE
     */
    public function isInvalidityCondition()
    {
        return strlen($this->getUserId() > 0) ? false : true;
    }
}
