<?php

/**
 * @author   Tuyen Truong
 */

require_once('fw/database.csp');
require_once('star/resources.csp');

/**
 * @class    GRN_Star
 * @package  grn.star
 */
class GRN_Star extends CB_PersistentBase
{
    function __construct($row)
    {
        parent::__construct($row);
    }

    var $_app_id = GRN_STAR_APPLICATION_ID;

    var $col_user = ['type' => 'relation', 'to' => 'CB_User'];
    var $col_timestamp = ['type' => 'timestamp', 'notnull' => true];
    var $col_module_id = ['type' => 'char', 'length' => 64, 'notnull' => true];
    var $col_unique_id = ['type' => 'char', 'length' => 64, 'notnull' => true];
    var $col_org_data = ['type' => 'char', 'length' => 65535];
    var $col_subject
        = [
            'type'   => 'char',
            'length' => GRN_STAR_SUBJECT_MAXLEN
        ];   // 標題

    var $col_ctime = ['type' => 'timestamp'];
    var $col_mtime = ['type' => 'timestamp'];

    var $col_sender_id = ['type' => 'char', 'length' => GRN_STAR_SENDER_MAXLEN];
    var $col_sender_name
        = [
            'type'   => 'char',
            'length' => GRN_STAR_SENDER_MAXLEN
        ];

    var $col_list_index = ['type' => 'list_index'];
    var $col_folder = ['type' => 'weak_relation', 'to' => 'GRN_Star_Folder'];
    var $col_type = ['type' => 'char', 'length' => '2'];
    // GRN2-1943
    var $col_updater = ['type' => 'char', 'length' => GRN_STAR_SENDER_MAXLEN];
    var $col_updater_name
        = [
            'type'   => 'char',
            'length' => GRN_STAR_SENDER_MAXLEN
        ];
    // end GRN2-1943

    // reserved columns 
    var $col_reserve_text1 = ['type' => 'char', 'lazy' => true];
    var $col_reserve_text2 = ['type' => 'char', 'lazy' => true];
    var $col_reserve_text3 = ['type' => 'char', 'lazy' => true];
    var $col_reserve_int1 = ['type' => 'int', 'lazy' => true];
    var $col_reserve_int2 = ['type' => 'int', 'lazy' => true];
    var $col_reserve_int3 = ['type' => 'int', 'lazy' => true];
    var $col_reserve_blob1 = ['type' => 'blob', 'lazy' => true];
    var $col_reserve_blob2 = ['type' => 'blob', 'lazy' => true];
    var $col_reserve_blob3 = ['type' => 'blob', 'lazy' => true];

    /*
     * Index
     */
    var $idx_user_module_unique_id
        = [
            'cols'   => [
                'user',
                'module_id',
                'unique_id'
            ],
            'unique' => true
        ];
    var $idx_user_module_ts = ['cols' => ['user', 'module_id', 'timestamp']];
    var $idx_user_ts_n = ['cols' => ['user', 'timestamp', null]];
    var $idx_user_sender_ts = ['cols' => ['user', 'sender_name', 'timestamp']];

    var $idx_ts = ['cols' => ['timestamp']];
    var $idx_unique_id = ['cols' => ['unique_id']];
}

/**
 * @class    GRN_Star_Folder
 * @package  grn.star
 */
class GRN_Star_Folder extends CB_PersistentBase
{
    function __construct($row)
    {
        parent::__construct($row);
    }

    var $_app_id = GRN_STAR_APPLICATION_ID;

    var $col_user = ['type' => 'relation', 'to' => 'CB_User'];

    var $col_name = ['type' => 'char', 'length' => 100];
    var $col_memo = ['type' => 'char', 'length' => 65535, 'lazy' => true];
    var $col_list_index = ['type' => 'list_index'];
    var $col_parent = ['type' => 'relation', 'to' => 'GRN_Star_Folder'];

    var $col_ctime = ['type' => 'timestamp'];
    var $col_mtime = ['type' => 'timestamp'];

    // reserved columns 
    var $col_reserve_text1 = ['type' => 'char', 'lazy' => true];
    var $col_reserve_text2 = ['type' => 'char', 'lazy' => true];
    var $col_reserve_int1 = ['type' => 'int', 'lazy' => true];
    var $col_reserve_int2 = ['type' => 'int', 'lazy' => true];
}

function grn_get_personal_tablename_star($uid, $table_name)
{
    if (is_null($uid) || 0 == strlen($uid) || is_null($table_name)
        || 0 == strlen($table_name)
    ) {
        return '';
    }

    global $G_config_common;
    $table_is_merged = $G_config_common->get('Database', 'merged');
    if ($table_is_merged == 1) {
        return $table_name;
    }

    return $table_name . CB_PERSISTENT_NAMESEPARATOR
           . grn_get_personal_suffix_star($uid);
}

function grn_get_personal_suffix_star($uid)
{
    if (is_null($uid) || 0 == strlen($uid)) {
        return '';
    }

    $user_tables = cb_get_user_tables();
    $partition_id = (int)($uid % $user_tables);

    return CB_DATABASE_USER_TABLE_PREFIX . $partition_id;
}

