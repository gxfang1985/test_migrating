<?php
require_once('grn/controller.csp');


class GRN_Star_ControllerUtil extends GRN_ControllerUtil
{
    function __construct($page = null)
    {
        parent::__construct($page);
    }

    function isCurrentPage()
    {
        return $this->_page == cb_get_pagename();
    }


    /**
     * @return integer
     */
    function getListOffset()
    {
        if ( ! $this->isCurrentPage()) {
            $session = $this->getSession();
            $sp = $session->get('current_start_position');
            if ($sp == null) {
                $sp = 0;
            }

            return $sp;
        }

        $sp = $this->getNaviStartPosition();
        $this->setNaviStartPosition($sp);

        return $sp;
    }

    /**
     * @access private
     */
    private $_order_param = null;

    /**
     * @param string $default
     *
     * @return string
     */
    function getListOrderParam($default = null)
    {
        if ( ! is_null($this->_order_param)) {
            return $this->_order_param;
        }

        global $G_INPUT;

        if ($this->isCurrentPage()) {
            if (array_key_exists('sort', $G_INPUT)) {
                $this->_order_param = $G_INPUT['sort'];
                if ( ! $this->_order_param) {
                    $this->_order_param = $default;
                }

                $session = $this->getSession();
                $session->set('current_sort', $this->_order_param);

                return $this->_order_param;
            }

            if ( ! array_key_exists('sf', $G_INPUT) || ! $G_INPUT['sf']) {
                $this->_order_param = $default;

                $session = $this->getSession();
                $session->set('current_sort', $this->_order_param);

                return $this->_order_param;
            }
        }

        $session = $this->getSession();
        $current_sort = $session->get('current_sort');
        if ($current_sort == null) {
            $current_sort = $default;
        }

        $this->_order_param = $current_sort;

        return $current_sort;
    }

    //GRN2-1945
    function setListOrderParam($arg)
    {
        $this->_order_param = $arg;
        $session = $this->getSession();
        $session->set('current_sort', $this->_order_param);
    }
    //GRN2-1945

    /**
     * @param string $arg
     * @param string $default
     *
     * @return array
     */
    function getListOrderColumn($arg = null, $default = 'td')
    {
        $params = [
            // List sort parameter
            'tu'  => [
                'param'  => 'tu',
                'column' => 'timestamp',
                'order'  => false
            ],
            // Time up
            'td'  => [
                'param'  => 'td',
                'column' => 'timestamp',
                'order'  => true
            ],
            // Time down
            'nu'  => [
                'param'  => 'nu',
                'column' => 'sender_name',
                'order'  => false
            ],
            // Sender name up
            'nd'  => [
                'param'  => 'nd',
                'column' => 'sender_name',
                'order'  => true
            ],
            // Sender name down
            'ctu' => ['param' => 'ctu', 'column' => 'ctime', 'order' => false],
            // Time up
            'ctd' => ['param' => 'ctd', 'column' => 'ctime', 'order' => true],
            // Time down
            //GRN2-1943
            'muu' => [
                'param'  => 'muu',
                'column' => 'updater_name',
                'order'  => false
            ],
            // 更新者名昇順
            'mud' => [
                'param'  => 'mud',
                'column' => 'updater_name',
                'order'  => true
            ],
            // 更新者名降順
            'ltu' => [
                'param'  => 'ltu',
                'column' => 'timestamp',
                'order'  => false
            ],
            // Time up
            'ltd' => [
                'param'  => 'ltd',
                'column' => 'timestamp',
                'order'  => true
            ],
            // Time down
            //GRN2-1943

            //GRN2-1945
            'liu' => [
                'param'  => 'liu',
                'column' => 'list_index',
                'order'  => false
            ],
            // List_index up
            'lid' => [
                'param'  => 'lid',
                'column' => 'list_index',
                'order'  => true
            ],
            // List_index down
            //GRN2-1945
        ];

        if (is_null($arg)) {
            $arg = $this->getListOrderParam($default);
        }

        if ( ! $arg || ! array_key_exists($arg, $params)) {
            $arg = 'td';
        }

        return $params[$arg];
    }

    //GRN2-1945
    function setSwitchOrderColumn($col = 'lid')
    {
        $session = $this->getSession();
        $session->set('switch_order_column', $col);
        $switch_order_column = $session->get('switch_order_column');
    }

    function getSwitchOrderColumn()
    {
        $session = $this->getSession();
        $switch_order_column = $session->get('switch_order_column');
        if (is_null($switch_order_column)) {
            return 'lid';
        } else {
            return $switch_order_column;
        }
    }

    //GRN2-1945

    function getUserConfig($user)
    {
        require_once('grn/ui.csp');
        $ucm = GRN_UIConfigManager::getInstance();
        $ret = $ucm->getUserConfig($user);

        return $ret;
    }
}

