<?php

require_once('star/resources.csp');
require_once('star/error_code.csp');

use grn\grn\access\service\AppAccess;
use grn\fw\DistributorDBConvert;

/**
 *  スターアプリケーション
 *
 * @pakage grn.star
 */
class GRN_Star_Application extends GRN_ApplicationBase
{
    private static $updateStarListExecuted = false;

    /**
     * Contructor
     */
    function __construct()
    {
        parent::__construct(GRN_STAR_APPLICATION_ID);
    }

    public function initializeDatabase()
    {
        parent::initializeDatabase();
        $distributor = new DistributorDBConvert();
        $distributor->convertStar();
    }

    /**
     * System Setting
     */
    function getSystemConfigArray()
    {
        $config = [];
        $config[] = [
            'page' => 'star/system/common_set',
            'icon' => 'general32'
        ];

        return ['star_config' => $config];

    }

    /**
     * Application Portlet List
     *
     * @return array
     */
    function &getPortletList()
    {
        require_once('fw/i18n.csp');
        $portlet_list = [];

        // スターポートレットの定義
        $star_portlet = [
            'name'             => $this->getName(),
            //名前
            'type'             => 'grn.star.portlet',
            //種別
            'version'          => '1.0',
            //バージョン
            'set_template'     => 'star/portlet/set_star_list.csp',
            //設定用テンプレート名
            'command_template' => 'star/portlet/command_set_star_list.csp',
            //設定用テンプレート名
            'view_template'    => 'star/portlet/view_star_list.csp'
            //表示用テンプレート名
        ];
        $portlet_list[] = $star_portlet;

        return $portlet_list;
    }

    /**
     * Update/remove star item list
     *
     * @param    $user              CB_User
     * @param    $available_only    bool
     */
    function updateStarList($user, $available_only, $forceExecute = false)
    {
        if ( ! is_object($user) || ! is_a($user, 'CB_User')) {
            assert("FALSE");

            return;
        }

        if (self::$updateStarListExecuted && $forceExecute === false) {
            return;
        }
        self::$updateStarListExecuted = true;

        $app_locator = GRN_ApplicationLocator::instance();
        //$apps = array( 'schedule', 'message', 'cabinet', 'mail', 'report', 'bulletin' );
        $apps = array_keys($this->getSupportedApplications());
        foreach ($apps as $app_id) {
            // update star list
            $instance = $app_locator->getInstance($app_id, true);
            if (is_null($instance)
                || ! AppAccess::isAppAvailableInternalAccess($app_id)
            ) {
                continue;
            }

            if ( ! method_exists($instance, 'updateStarData')) {
                continue;
            }
            $instance->updateStarData($user);
        }
    }

    /**
     * @return array
     */
    function &getSupportedApplications()
    {
        $supported_apps = [
            'schedule' => 'grn.schedule',
            'message'  => 'grn.message',
            'bulletin' => 'grn.bulletin',
            'cabinet'  => 'grn.cabinet',
            'mail'     => 'grn.mail',
            'report'   => 'grn.report',
            'space'    => 'grn.space',
        ];

        return $supported_apps;
    }
}



