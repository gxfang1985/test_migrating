<?php
/**
 * Report Application Item Logic Base Class
 *
 * @author  Shou Aoki 2009/09
 * @version 1.0
 * @package grn.report
 */

/** Report Application **/
require_once('report/resources.csp');
require_once('report/item_manager_base.csp');

/**
 * Item Manager Class
 *
 * @package grn.report
 */
class GRN_Report_Item_Logic_Base
{
    /**
     * Constructor
     *
     * @return none
     */
    function __construct()
    {

    }

    private static $_instance = null;

    /**
     * Get Instance
     *
     * @return GRN_Report_Item_Logic_Base
     */
    public static function getInstance()
    {
        if ( ! isset(self::$_instance)) {
            $c = __CLASS__;
            self::$_instance = new $c;
        }

        return self::$_instance;
    }

    /**
     * Get Column List
     *
     * @param  none
     *
     * @return array  $column_name_list          //Column Name List
     */
    function getColumnList()
    {
        //Get Column List
        $column_name_list
            =& GRN_Report_Table_Manager::getColumnlist(GRN_REPORT_TABLE_ITEM,
            null, true);

        //Return Column Name List
        return $column_name_list;
    }

    /**
     * Get Item
     *
     * @param  int   $item_id     //Item ID
     * @param  int   $form_id     //Form ID
     * @param  array $column_list //Column List
     * @param  bool  $refresh     //Refresh Cache
     * @param  int   $lock_mode   //Lock Mode
     *
     * @return array  $item                      //Item Information Array
     */
    function &get(
        $item_id,
        $form_id = null,
        $column_list = [],
        $refresh = false,
        $lock_mode = CB_DATABASE_DEFAULT_LOCK
    ) {
        //Check Argument
        require_once('fw/string_util.csp');
        require_once('report/error_code.csp');
        cb_trim_check($item_id, E_GRN_RPRT_ITEM_INVALID_ID);    //Item ID

        //Get Item 
        $item_manager_base = GRN_Report_Item_Manager_Base::getInstance();
        $item =& $item_manager_base->get($item_id, $form_id,
            $column_list, $refresh, $lock_mode);
        if ( ! $item) {
            //Item Not Found
            require_once('report/error_code.csp');
            cb_throw_error(E_GRN_RPRT_ITEM_NOT_FOUND);
        }

        //Return Item
        return $item;
    }

    /**
     * Get Item Direct
     *
     * @param  int   $item_id     //Item ID
     * @param  array $column_list //Column List
     * @param  int   $lock_mode   //Lock Mode
     *
     * @return array  $item                      //Item Information Array
     */
    function getDirect(
        $item_id,
        $column_list = [],
        $lock_mode = CB_DATABASE_DEFAULT_LOCK
    ) {
        //Check Argument
        require_once('fw/string_util.csp');
        require_once('report/error_code.csp');
        cb_trim_check($item_id, E_GRN_RPRT_ITEM_INVALID_ID);    //Item ID

        //Get Item 
        $item_manager_base = GRN_Report_Item_Manager_Base::getInstance();
        $item = $item_manager_base->getDirect($item_id,
            $column_list, $lock_mode);
        if ( ! $item) {
            //Item Not Found
            cb_throw_error(E_GRN_RPRT_ITEM_NOT_FOUND);
        }

        //Return Item
        return $item;
    }

    /**
     * Get Item List
     *
     * @param  int   $form_id     //Form ID
     * @param  array $column_list //Column List
     * @param  bool  $refresh     //Refresh Cache
     * @param  int   $lock_mode   //Lock Mode
     *
     * @return array  $item_list                 //Item Information List
     */
    function &getList(
        $form_id = null,
        $column_list = [],
        $refresh = false,
        $lock_mode = CB_DATABASE_DEFAULT_LOCK
    ) {
        //Get Item List
        $item_manager_base = GRN_Report_Item_Manager_Base::getInstance();
        $item_list =& $item_manager_base->getList($form_id,
            $column_list, $refresh, $lock_mode);

        //Return Item List
        return $item_list;
    }

    /**
     * Get Item Count
     *
     * @param  int  $form_id   //Form ID
     * @param  bool $refresh   //Refresh Cache
     * @param  int  $lock_mode //Lock Mode
     *
     * @return int    $item_count                //Item Count
     */
    function getCount(
        $form_id = null,
        $refresh = false,
        $lock_mode = CB_DATABASE_DEFAULT_LOCK
    ) {
        //Get Item List
        $item_manager_base = GRN_Report_Item_Manager_Base::getInstance();
        $item_count = $item_manager_base->getCount($form_id, $refresh,
            $lock_mode);

        //Return Item Count
        return $item_count;
    }

    /**
     * Get standard item iid
     *
     * @param $form_id
     *
     * @return null or string
     */
    protected function getStandardItemIid($form_id)
    {
        $item_list = $this->getList($form_id);
        $standard_item = null;
        foreach ($item_list as $index => $item_info) {
            if ($item_info['col_type'] == 1) {
                $standard_item = $item_info['_id'];
                break;
            }
        }

        return $standard_item;
    }
}


