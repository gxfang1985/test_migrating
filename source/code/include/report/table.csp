<?php

/**
 * Report Application Persistent Class
 *
 * @author  J.Miyata 2009/09/10
 * @version 1.0
 * @package grn.report
 */

/** Framework **/
require_once('fw/uum_core.csp');

/** Base Service **/
require_once('grn/inspection.csp');

/** File **/
require_once('report/file.csp');

define('GRN_REPORT_ACCESS_R', 1);
define('GRN_REPORT_ACCESS_F', 2);
define('GRN_REPORT_ACCESS_W', 4);
define('GRN_REPORT_ACCESS_RF', 3);
define('GRN_REPORT_ACCESS_RW', 5);
define('GRN_REPORT_ACCESS_RFW', 7);

/**
 * Report Application Access Base Class
 *
 * @package grn.report
 * @abstract
 */
class GRN_Report_AccessBase extends GRN_InspectionBase
{
    function __construct($row)
    {
        parent::__construct($row, 'grn.report');
    }

    var $_app_id = 'report';

    /** Security Model **/
    var $col_security_model = ['type' => 'int', 'notnull' => true];
}

/**
 * Category Persistent Class
 *
 * @package grn.report
 */
class GRN_Report_Category extends GRN_Report_AccessBase
{
    function __construct($row)
    {
        parent::__construct($row);
    }

    /** Foreign Key **/
    var $col_foreign_key = ['type' => 'char', 'notnull' => true];
    /** List Index **/
    var $col_list_index = ['type' => 'list_index'];
    /** Memo **/
    var $col_memo = ['type' => 'char', 'length' => 65535, 'lazy' => true];
    /** Name **/
    var $col_name = ['type' => 'char', 'notnull' => true];
    /** Parent **/
    var $col_parent = ['type' => 'relation', 'to' => 'GRN_Report_Category'];
    /** Security Model for Public Folder **/
    var $col_public_security_model = ['type' => 'int'];

    /** Complex Index **/
    var $idx_list_index = ['cols' => ['list_index', null]];
    var $idx_parent_list_index = ['cols' => ['parent', 'list_index', null]];

    /**
     * @param string $col_name
     *
     * @return bool|CB_Row|mixed
     */
    public function get($col_name)
    {
        $result = false;

        $table_info = $this->getTableInfo();
        $col_info = $table_info->getColumnInfo($col_name);
        if (is_null($col_info)) {
            return $result;
        }

        if ($col_name == 'parent') {
            $isKeyExists = array_key_exists(CB_DATABASE_COLUMN_PREFIX
                                            . $col_name,
                $this->__row->_rawdata);
            $id = $isKeyExists
                ? $this->__row->_rawdata[CB_DATABASE_COLUMN_PREFIX . $col_name]
                : null;

            if ( ! is_null($id)) {
                require_once('report/ReportFacade.csp');
                require_once('fw/i18n.csp');

                $i18n = CB_I18N::getInstance();
                $table_info = $this->getTableInfo();
                $tableManager = $table_info->getTableManager();
                $relationTableName = $col_info['to'];
                $relationTableInfo
                    = $tableManager->getTableInfo($relationTableName);
                $relationTableLock = $relationTableInfo->_lock;

                $dao = new ReportFacade();
                $dataObj = [];
                $dataObj['lock'] = $relationTableLock;
                $dataObj['language'] = $i18n->getCurrentLanguage();

                $reportCategoryData = $dao->referReportCategoryById($dataObj,
                    $id);
                $result
                    = $relationTableInfo->getRow($reportCategoryData->getId(),
                    $reportCategoryData->convertArray());
            } else {
                $result = parent::get($col_name);
            }
        } else {
            $result = parent::get($col_name);
        }

        return $result;
    }
}

/**
 * Category PersistentBase Class
 *
 * @package grn.report
 * @abstract
 */
class GRN_Report_Category_PersistentBase extends CB_PersistentBase
{
    function __construct($row)
    {
        parent::__construct($row);
    }

    var $_app_id = 'report';

    var $col_object
        = [
            'type'    => 'relation',
            'to'      => 'GRN_Report_Category',
            'notnull' => true
        ];


    /**
     * @param string $col_name
     *
     * @return CB_Row|mixed
     */
    public function get($col_name)
    {
        $result = false;

        $table_info = $this->getTableInfo();
        $col_info = $table_info->getColumnInfo($col_name);
        if (is_null($col_info)) {
            return $result;
        }

        if ($col_name == 'object') {
            $isKeyExists = array_key_exists(CB_DATABASE_COLUMN_PREFIX
                                            . $col_name,
                $this->__row->_rawdata);
            $id = $isKeyExists
                ? $this->__row->_rawdata[CB_DATABASE_COLUMN_PREFIX . $col_name]
                : null;

            if ( ! is_null($id)) {
                require_once('report/ReportFacade.csp');
                require_once('fw/i18n.csp');

                $i18n = CB_I18N::getInstance();
                $table_info = $this->getTableInfo();
                $tableManager = $table_info->getTableManager();
                $relationTableName = $col_info['to'];
                $relationTableInfo
                    = $tableManager->getTableInfo($relationTableName);
                $relationTableLock = $relationTableInfo->_lock;

                $dao = new ReportFacade();
                $dataObj = [];
                $dataObj['lock'] = $relationTableLock;
                $dataObj['language'] = $i18n->getCurrentLanguage();

                $reportCategoryData = $dao->referReportCategoryById($dataObj,
                    $id);
                $result
                    = $relationTableInfo->getRow($reportCategoryData->getId(),
                    $reportCategoryData->convertArray());
            } else {
                $result = parent::get($col_name);
            }
        } else {
            $result = parent::get($col_name);
        }

        return $result;
    }
}

/**
 * Category InspectionBase Class
 *
 * @package grn.report
 * @abstract
 */
class GRN_Report_Category_InspectionBase extends GRN_InspectionBase
{
    function __construct($row)
    {
        parent::__construct($row, 'grn.report');
    }

    var $_app_id = 'report';

    var $col_category
        = [
            'type' => 'weak_relation',
            'to'   => 'GRN_Report_Category'
        ];

    /**
     * @param string $col_name
     *
     * @return CB_Row|mixed
     */
    public function get($col_name)
    {
        $result = false;

        $table_info = $this->getTableInfo();
        $col_info = $table_info->getColumnInfo($col_name);
        if (is_null($col_info)) {
            return $result;
        }

        if ($col_name == 'category') {
            $isKeyExists = array_key_exists(CB_DATABASE_COLUMN_PREFIX
                                            . $col_name,
                $this->__row->_rawdata);
            $id = $isKeyExists
                ? $this->__row->_rawdata[CB_DATABASE_COLUMN_PREFIX . $col_name]
                : null;

            if ( ! is_null($id)) {
                require_once('report/ReportFacade.csp');
                require_once('fw/i18n.csp');

                $i18n = CB_I18N::getInstance();
                $table_info = $this->getTableInfo();
                $tableManager = $table_info->getTableManager();
                $relationTableName = $col_info['to'];
                $relationTableInfo
                    = $tableManager->getTableInfo($relationTableName);
                $relationTableLock = $relationTableInfo->_lock;

                $dao = new ReportFacade();
                $dataObj = [];
                $dataObj['lock'] = $relationTableLock;
                $dataObj['language'] = $i18n->getCurrentLanguage();

                $reportCategoryData = $dao->referReportCategoryById($dataObj,
                    $id);
                $result
                    = $relationTableInfo->getRow($reportCategoryData->getId(),
                    $reportCategoryData->convertArray());
            } else {
                $result = parent::get($col_name);
            }
        } else {
            $result = parent::get($col_name);
        }

        return $result;
    }
}

/**
 * Category Access Dynamic Role Class
 *
 * @package grn.report
 * @abstract
 */
class GRN_Report_CategoryAccessDynamicRole
    extends GRN_Report_Category_PersistentBase
{
    function __construct($row)
    {
        parent::__construct($row);
    }

    /** Authority Browse **/
    var $col_authority_browse = ['type' => 'int'];
    /** Target **/
    var $col_target = ['type' => 'char', 'notnull' => true];

    /** Complex Index **/
    var $idx_object_target = ['cols' => ['object', 'target'], 'unique' => true];
}

/**
 * Category Access Group Class
 *
 * @package grn.report
 * @abstract
 */
class GRN_Report_CategoryAccessGroup extends GRN_Report_Category_PersistentBase
{
    function __construct($row)
    {
        parent::__construct($row);
    }

    /** Target **/
    var $col_target
        = [
            'type'    => 'relation',
            'to'      => 'CB_Group',
            'notnull' => true
        ];
    /** Authority Browse **/
    var $col_authority_browse = ['type' => 'int'];

    /** Complex Index **/
    var $idx_object_target = ['cols' => ['object', 'target'], 'unique' => true];

    /**
     * @param string $col_name
     *
     * @return CB_Row|mixed
     */
    public function get($col_name)
    {
        $result = false;

        $table_info = $this->getTableInfo();
        $col_info = $table_info->getColumnInfo($col_name);
        if (is_null($col_info)) {
            return $result;
        }


        if ($col_name == 'target') {
            $isKeyExists = array_key_exists(CB_DATABASE_COLUMN_PREFIX
                                            . $col_name,
                $this->__row->_rawdata);
            $id = $isKeyExists
                ? $this->__row->_rawdata[CB_DATABASE_COLUMN_PREFIX . $col_name]
                : null;

            if ( ! is_null($id)) {
                require_once('fw/FwFacade.csp');
                require_once('fw/i18n.csp');

                $i18n = CB_I18N::getInstance();
                $table_info = $this->getTableInfo();
                $tableManager = $table_info->getTableManager();
                $relationTableName = $col_info['to'];
                $relationTableInfo
                    = $tableManager->getTableInfo($relationTableName);
                $relationTableLock = $relationTableInfo->_lock;

                $dao = new FwFacade();
                $dataObj = [];
                $dataObj['lock'] = $relationTableLock;
                $dataObj['language'] = $i18n->getCurrentLanguage();

                $groupData = $dao->referGroupById($dataObj, $id);
                $result = $relationTableInfo->getRow($groupData->getId(),
                    $groupData->convertArray());
            } else {
                $result = parent::get($col_name);
            }
        } else {
            $result = parent::get($col_name);
        }

        return $result;
    }
}

/**
 * Category Access Static Role Class
 *
 * @package grn.report
 * @abstract
 */
class GRN_Report_CategoryAccessStaticRole
    extends GRN_Report_Category_PersistentBase
{
    function __construct($row)
    {
        parent::__construct($row);
    }

    /** Target **/
    var $col_target
        = [
            'type'    => 'relation',
            'to'      => 'CB_Role',
            'notnull' => true
        ];
    /** Authority Browse **/
    var $col_authority_browse = ['type' => 'int'];

    /** Complex Index **/
    var $idx_object_target = ['cols' => ['object', 'target'], 'unique' => true];
}

/**
 * Category Access User Class
 *
 * @package grn.report
 * @abstract
 */
class GRN_Report_CategoryAccessUser extends GRN_Report_Category_PersistentBase
{
    function __construct($row)
    {
        parent::__construct($row);
    }

    /** Target **/
    var $col_target
        = [
            'type'    => 'relation',
            'to'      => 'CB_User',
            'notnull' => true
        ];
    /** Authority Browse **/
    var $col_authority_browse = ['type' => 'int'];

    /** Complex Index **/
    var $idx_object_target = ['cols' => ['object', 'target'], 'unique' => true];
}

/**
 * Category Manage Dynamic Role Class
 *
 * @package grn.report
 * @abstract
 */
class GRN_Report_CategoryManageDynamicRole
    extends GRN_Report_Category_PersistentBase
{
    function __construct($row)
    {
        parent::__construct($row);
    }

    /** Target **/
    var $col_target = ['type' => 'char', 'notnull' => true];
    /** Authority Browse **/
    var $col_authority_manage = ['type' => 'int'];

    /** Complex Index **/
    var $idx_object_target = ['cols' => ['object', 'target'], 'unique' => true];
}

class GRN_Report_AvailabilityUser extends CB_PersistentBase
{
    function __construct($row)
    {
        parent::__construct($row);
    }

    var $_app_id = 'report';

    // ユーザー
    var $col_user
        = [
            'type'    => 'relation',
            'to'      => 'CB_User',
            'unique'  => true,
            'notnull' => true
        ];
    // 利用許可時刻
    var $col_ctime = ['type' => 'timestamp'];
    // ケータイの利用権限
    var $col_authority_cellular = ['type' => 'int'];
}

/**
 * Category Manage Group Class
 *
 * @package grn.report
 * @abstract
 */
class GRN_Report_CategoryManageGroup extends GRN_Report_Category_PersistentBase
{
    function __construct($row)
    {
        parent::__construct($row);
    }

    /** Target **/
    var $col_target
        = [
            'type'    => 'relation',
            'to'      => 'CB_Group',
            'notnull' => true
        ];
    /** Authority Browse **/
    var $col_authority_manage = ['type' => 'int'];

    /** Complex Index **/
    var $idx_object_target = ['cols' => ['object', 'target'], 'unique' => true];

    /**
     * @param string $col_name
     *
     * @return CB_Row|mixed
     */
    public function get($col_name)
    {
        $result = false;

        $table_info = $this->getTableInfo();
        $col_info = $table_info->getColumnInfo($col_name);
        if (is_null($col_info)) {
            return $result;
        }


        if ($col_name == 'target') {
            $isKeyExists = array_key_exists(CB_DATABASE_COLUMN_PREFIX
                                            . $col_name,
                $this->__row->_rawdata);
            $id = $isKeyExists
                ? $this->__row->_rawdata[CB_DATABASE_COLUMN_PREFIX . $col_name]
                : null;

            if ( ! is_null($id)) {
                require_once('fw/FwFacade.csp');
                require_once('fw/i18n.csp');

                $i18n = CB_I18N::getInstance();
                $table_info = $this->getTableInfo();
                $tableManager = $table_info->getTableManager();
                $relationTableName = $col_info['to'];
                $relationTableInfo
                    = $tableManager->getTableInfo($relationTableName);
                $relationTableLock = $relationTableInfo->_lock;

                $dao = new FwFacade();
                $dataObj = [];
                $dataObj['lock'] = $relationTableLock;
                $dataObj['language'] = $i18n->getCurrentLanguage();

                $groupData = $dao->referGroupById($dataObj, $id);
                $result = $relationTableInfo->getRow($groupData->getId(),
                    $groupData->convertArray());
            } else {
                $result = parent::get($col_name);
            }
        } else {
            $result = parent::get($col_name);
        }

        return $result;
    }
}

/**
 * Category Manage Static Role Class
 *
 * @package grn.report
 * @abstract
 */
class GRN_Report_CategoryManageStaticRole
    extends GRN_Report_Category_PersistentBase
{
    function __construct($row)
    {
        parent::__construct($row);
    }

    /** Target **/
    var $col_target
        = [
            'type'    => 'relation',
            'to'      => 'CB_Role',
            'notnull' => true
        ];
    /** Authority Browse **/
    var $col_authority_manage = ['type' => 'int'];

    /** Complex Index **/
    var $idx_object_target = ['cols' => ['object', 'target'], 'unique' => true];
}

/**
 * Category Manage User Class
 *
 * @package grn.report
 * @abstract
 */
class GRN_Report_CategoryManageUser extends GRN_Report_Category_PersistentBase
{
    function __construct($row)
    {
        parent::__construct($row);
    }

    /** Target **/
    var $col_target
        = [
            'type'    => 'relation',
            'to'      => 'CB_User',
            'notnull' => true
        ];
    /** Authority Browse **/
    var $col_authority_manage = ['type' => 'int'];

    /** Complex Index **/
    var $idx_object_target = ['cols' => ['object', 'target'], 'unique' => true];
}

/**
 * 添付ファイルの関連付け
 *
 * @package grn.report
 */
class GRN_Report_FileRelation extends CB_PersistentBase
{
    var $_app_id = 'report';

    var $col_item_data
        = [
            'type' => 'weak_relation',
            'to'   => 'GRN_Report_Itemdata',
            'lazy' => true
        ];
    var $col_follow
        = [
            'type' => 'weak_relation',
            'to'   => 'GRN_Report_Follow',
            'lazy' => true
        ];
    var $col_file
        = [
            'type' => 'relation',
            'to'   => 'GRN_Report_File',
            'lazy' => true
        ];
    var $col_report
        = [
            'type'    => 'relation',
            'to'      => 'GRN_Report_Report',
            'notnull' => true
        ];


    function __construct($row)
    {
        parent::__construct($row);
    }
}

/**
 * Follow Persistent Class
 *
 * @package  grn.report
 */
class GRN_Report_Follow extends GRN_InspectionBase
{
    function __construct($row)
    {
        parent::__construct($row, 'grn.report');
    }

    var $_app_id = 'report';

    // report relation
    var $col_report
        = [
            'type'    => 'relation',
            'to'      => 'GRN_Report_Report',
            'notnull' => true
        ];
    // follow id
    var $col_follow_id = ['type' => 'int'];
    // data
    var $col_data = ['type' => 'char', 'length' => '1048575'];
    // HTML data
    var $col_html = ['type' => 'char', 'length' => '1048575'];

    // index
    var $idx_ctime = ['cols' => ['ctime', null]];
    var $idx_id_report = ['cols' => [null, 'report']];
    var $idx_report_follow_id = ['cols' => ['report', 'follow_id']];
}

/**
 * Form Persistent Class
 *
 * @package grn.report
 */
class GRN_Report_Form extends GRN_Report_Category_InspectionBase
{
    function __construct($row)
    {
        parent::__construct($row);
    }

    /** Active (0:Deactive Form/1:Active Form) **/
    var $col_active = ['type' => 'int', 'notnull' => true];
    /** Admin Memo **/
    var $col_admin_memo = ['type' => 'char', 'length' => 65535, 'lazy' => true];
    /** Deleted **/
    var $col_deleted = ['type' => 'int', 'notnull' => true];
    /** Foreign Key **/
    var $col_foreign_key = ['type' => 'char', 'notnull' => true];
    var $idx_foreign_key = ['cols' => 'foreign_key'];
    /** List Index **/
    var $col_list_index = ['type' => 'list_index'];
    /** Memo **/
    var $col_memo = ['type' => 'char', 'length' => 65535, 'lazy' => true];
    /** Name **/
    var $col_name = ['type' => 'char', 'notnull' => true];
    /** Type (0:form/1:separater) **/
    var $col_type = ['type' => 'int', 'notnull' => true];
    /** Enable Follow (1:enable) **/
    var $col_enable_follow = ['type' => 'int', 'notnull' => true];
    /** Enable Member (1:enable) **/
    var $col_enable_member = ['type' => 'int', 'notnull' => true];
    /** Enable Partner (1:enable) **/
    var $col_enable_partner = ['type' => 'int', 'notnull' => true];

    /** Complex Index **/
    var $idx_list_index = ['cols' => ['list_index', null]];
    var $idx_category_list_index = ['cols' => ['category', 'list_index', null]];
}

/**
 * Item Persistent Class
 *
 * @package grn.report
 */
class GRN_Report_Item extends GRN_InspectionBase
{
    function __construct($row)
    {
        parent::__construct($row, 'grn.report');
    }

    var $_app_id = 'report';

    /** Form **/
    var $col_form
        = [
            'type'    => 'relation',
            'to'      => 'GRN_Report_Form',
            'notnull' => true
        ];
    /** Display Name **/
    var $col_display_name = ['type' => 'char'];
    /** Type (0:item/1:line/2:space/3:standard) **/
    var $col_type = ['type' => 'int', 'notnull' => true];
    /** Option String **/
    var $col_option_string = ['type' => 'char'];
    /** Option String Type (0:front/1:back) **/
    var $col_option_string_type = ['type' => 'int'];
    /** Discription **/
    var $col_description
        = [
            'type'   => 'char',
            'length' => 65535,
            'lazy'   => true
        ];
    /** Discription Type (0:Text/1:Icon) **/
    var $col_description_type = ['type' => 'int'];
    /** Description Editor (0:Text/1:HTML) **/
    var $col_description_editor = ['type' => 'int'];
    /** Data Type **/
    var $col_data_type = ['type' => 'char', 'notnull' => true];
    /** Settings **/
    var $col_settings = ['type' => 'char', 'length' => 65535, 'lazy' => true];
    /** Required **/
    var $col_required = ['type' => 'int', 'notnull' => true];

    /** List Index **/
    var $col_list_index = ['type' => 'list_index'];
    //var $idx_list_index         = array('cols'=>'list_index');

    /** Complex Index **/
    var $idx_list_index = ['cols' => ['list_index', null]];
    var $idx_form_list_index = ['cols' => ['form', 'list_index', null]];
}

/**
 * Item Data Persistent Class
 *
 * @package grn.report
 */
class GRN_Report_ItemData extends GRN_InspectionBase
{
    function __construct($row)
    {
        parent::__construct($row, 'grn.report');
    }

    var $_app_id = 'report';

    /** Report **/
    var $col_report
        = [
            'type'    => 'relation',
            'to'      => 'GRN_Report_Report',
            'notnull' => true
        ];
    /** Item **/
    var $col_item
        = [
            'type'    => 'relation',
            'to'      => 'GRN_Report_Item',
            'notnull' => true
        ];
    /** Number **/
    var $col_number = ['type' => 'char'];
    /** Text **/
    var $col_text = ['type' => 'char', 'length' => '1048575', 'lazy' => true];
    /** HTML **/
    var $col_html = ['type' => 'char', 'length' => '1048575', 'lazy' => true];

    /** Display Name **/
    var $col_display_name = ['type' => 'char'];
    /** Type (0:item/1:line/2:space/3:standard) **/
    var $col_type = ['type' => 'int'];
    /** Option String **/
    var $col_option_string = ['type' => 'char'];
    /** Option String Type (0:front/1:back) **/
    var $col_option_string_type = ['type' => 'int'];
    /** Discription **/
    var $col_description
        = [
            'type'   => 'char',
            'length' => 65535,
            'lazy'   => true
        ];
    /** Discription Type (0:Text/1:Icon) **/
    var $col_description_type = ['type' => 'int'];
    /** Description Editor (0:Text/1:HTML) **/
    var $col_description_editor = ['type' => 'int'];
    /** Data Type **/
    var $col_data_type = ['type' => 'char', 'notnull' => true];
    /** Settings **/
    var $col_settings = ['type' => 'char', 'length' => 65535, 'lazy' => true];
    /** Required **/
    var $col_required = ['type' => 'int', 'notnull' => true];
    /** List Index **/
    var $col_list_index = ['type' => 'list_index'];

    /** Complex Index **/
    var $idx_list_index = ['cols' => ['list_index', null]];
    var $idx_report_list_index = ['cols' => ['report', 'list_index', null]];
}

/**
 * Member Data Persistent Class
 *
 * @package grn.report
 */
class GRN_Report_Member extends CB_PersistentBase
{
    var $_app_id = 'report';

    var $col_user
        = [
            'type'    => 'relation',
            'to'      => 'CB_User',
            'lazy'    => true,
            'notnull' => true
        ];
    var $col_report
        = [
            'type'    => 'relation',
            'to'      => 'GRN_Report_Report',
            'lazy'    => true,
            'notnull' => true
        ];
    var $col_list_index = ['type' => 'list_index'];
    var $col_is_operator = ['type' => 'int', 'notnull' => true];

    function __construct($row)
    {
        parent::__construct($row);
    }
}

/**
 * Notification Data Persistent Class
 *
 * @package grn.report
 */
class GRN_Report_Notification extends CB_PersistentBase
{
    var $_app_id = 'report';

    var $col_user
        = [
            'type'    => 'relation',
            'to'      => 'CB_User',
            'lazy'    => true,
            'notnull' => true
        ];
    var $col_report
        = [
            'type'    => 'relation',
            'to'      => 'GRN_Report_Report',
            'lazy'    => true,
            'notnull' => true
        ];
    var $col_list_index = ['type' => 'list_index'];
    var $col_is_operator = ['type' => 'int', 'notnull' => true];

    function __construct($row)
    {
        parent::__construct($row);
    }
}

/**
 * Partner Data Persistent Class
 *
 * @package grn.report
 */
class GRN_Report_Partner extends CB_PersistentBase
{
    var $_app_id = 'report';

    var $col_address = ['type' => 'int', 'length' => 20, 'notnull' => true];
    var $col_report
        = [
            'type'    => 'relation',
            'to'      => 'GRN_Report_Report',
            'lazy'    => true,
            'notnull' => true
        ];
    var $col_subject = ['type' => 'char', 'notnull' => true];
    var $col_company_name = ['type' => 'char', 'notnull' => true];
    var $col_list_index = ['type' => 'list_index'];

    var $idx_report_list_index = ['cols' => ['report', 'list_index', null]];
    var $idx_address_report = ['cols' => ['address', 'report']];

    function GRN_Report_Member($row)
    {
        parent::__construct($row);
    }
}

/**
 * Subscribe Data Persistent Class
 *
 * @package grn.report
 */
class GRN_Report_Subscribe extends CB_PersistentBase
{
    var $_app_id = 'report';

    var $col_user
        = [
            'type'    => 'relation',
            'to'      => 'CB_User',
            'lazy'    => true,
            'notnull' => true
        ];
    var $col_report
        = [
            'type'    => 'relation',
            'to'      => 'GRN_Report_Report',
            'lazy'    => true,
            'notnull' => true
        ];
    var $col_subscribe = ['type' => 'int'];

    function __construct($row)
    {
        parent::__construct($row);
    }
}

/**
 * Report Persistent Class
 *
 * @package grn.report
 */
class GRN_Report_Filter extends GRN_Report_Category_InspectionBase
{
    function __construct($row)
    {
        parent::__construct($row);
    }

    /** Name **/
    var $col_name = ['type' => 'char', 'notnull' => true];
    /** Foreign Key **/
    var $col_foreign_key = ['type' => 'char', 'notnull' => true];
    var $idx_foreign_key = ['cols' => 'foreign_key'];
    /** List Index **/
    var $col_list_index = ['type' => 'list_index'];
    /** AND/OR Condition **/
    var $col_or = ['type' => 'int', 'notnull' => true];
    /** Active (0:Deactive Filter/1:Active Filter) **/
    var $col_active = ['type' => 'int', 'notnull' => true];
    /** Target Form Type (0: none / 1:Like Search / 2:Select a Form) **/
    var $col_formtype = ['type' => 'int', 'notnull' => true];
    /** Personal Filter (null: system filter / other: creator's user id of personal filter **/
    /* GRN2-1936 pending
    var $col_personal_user  = array('type'=>'weak_relation', 'to'=>'CB_User');
     */

    /** Complex Index **/
    var $idx_list_index = ['cols' => ['list_index', null]];
    var $idx_ctime_list_index = ['cols' => [null, 'ctime', 'list_index']];
    /* GRN2-1936 pending
    var $idx_personal_user_list_index = array('cols'=>array('personal_user', 'list_index', null));
     */
}

class GRN_Report_FilterFormRelations extends CB_PersistentBase
{
    function __construct($row)
    {
        parent::__construct($row);
    }

    var $_app_id = 'report';

    // filter relation
    var $col_filter
        = [
            'type' => 'relation',
            'to'   => 'GRN_Report_Filter'
        ];
    // form relation
    var $col_form
        = [
            'type' => 'weak_relation',
            'to'   => 'GRN_Report_Form'
        ];
}

class GRN_Report_FilterFormCondition extends CB_PersistentBase
{
    function __construct($row)
    {
        parent::__construct($row);
    }

    var $_app_id = 'report';

    // filter relation
    var $col_filter
        = [
            'type'    => 'relation',
            'to'      => 'GRN_Report_Filter',
            'notnull' => true
        ];

    //search text
    var $col_text = ['type' => 'char', 'length' => 65535, 'lazy' => true];
}

/**
 * Report Persistent Class
 *
 * @package grn.report
 */
class GRN_Report_FilterCondition extends CB_PersistentBase
{
    function __construct($row)
    {
        parent::__construct($row);
    }

    var $_app_id = 'report';

    /** Condition (0:include/1:not include/2:equal/3:not equal/4:after
     * /5:before/6:bigger/7:and over/8:smaller/9:or less)  **/
    var $col_condition = ['type' => 'int', 'notnull' => true];
    /** Number **/
    var $col_number = ['type' => 'double'];
    /** Filter ID **/
    var $col_filter
        = [
            'type'    => 'relation',
            'to'      => 'GRN_Report_Filter',
            'notnull' => true
        ];
    /** Text **/
    var $col_text = ['type' => 'char', 'length' => 65535, 'lazy' => true];
    /** Type (0:form name/1:title/2:create date/3:creator/4:itemdata/5:follow/6:itemdata) **/
    var $col_type = ['type' => 'int', 'notnull' => true];

    var $col_item = ['type' => 'relation', 'to' => 'GRN_Report_Item'];
}

/**
 * よく使う絞込
 *
 * @package grn.report
 */
class GRN_Report_FilterUserRelations extends CB_PersistentBase
{
    function __construct($row)
    {
        parent::__construct($row);
    }

    var $_app_id = 'report';

    // user relation
    var $col_user
        = [
            'type'    => 'relation',
            'to'      => 'CB_User',
            'notnull' => true
        ];
    // filter relation
    var $col_filter
        = [
            'type'    => 'relation',
            'to'      => 'GRN_Report_Filter',
            'notnull' => true
        ];
}

/**
 * Report Persistent Class
 * ユーザーの最近使った絞込みを保持する。
 * 一番最近使用した絞込みはcol_filter1に、
 * 前回使用した絞込みはcol_filter2に保持される。
 *
 * @package grn.report
 */
class GRN_Report_RecentFilterUserRelations extends CB_PersistentBase
{
    function __construct($row)
    {
        parent::__construct($row);
    }

    var $_app_id = 'report';

    // user relation
    var $col_user
        = [
            'type'    => 'relation',
            'to'      => 'CB_User',
            'notnull' => true
        ];
    // filter relation
    var $col_filter1
        = [
            'type' => 'weak_relation',
            'to'   => 'GRN_Report_Filter'
        ];
    // filter relation
    var $col_filter2
        = [
            'type' => 'weak_relation',
            'to'   => 'GRN_Report_Filter'
        ];
    // filter relation
    var $col_filter3
        = [
            'type' => 'weak_relation',
            'to'   => 'GRN_Report_Filter'
        ];
    // filter relation
    var $col_filter4
        = [
            'type' => 'weak_relation',
            'to'   => 'GRN_Report_Filter'
        ];
    // filter relation
    var $col_filter5
        = [
            'type' => 'weak_relation',
            'to'   => 'GRN_Report_Filter'
        ];
}

/**
 * Report Persistent Class
 * ユーザーの最近選択したフォームを保持する。
 * 一番最近選択したフォームはcol_form1に、
 * その前に選択した絞込みはcol_form2に保持される。
 *
 * @package grn.report
 */
class GRN_Report_RecentFormUserRelations extends CB_PersistentBase
{
    function __construct($row)
    {
        parent::__construct($row);
    }

    var $_app_id = 'report';

    // user relation
    var $col_user
        = [
            'type'    => 'relation',
            'to'      => 'CB_User',
            'notnull' => true
        ];
    // form relation
    var $col_form1
        = [
            'type' => 'weak_relation',
            'to'   => 'GRN_Report_Form'
        ];
    // form relation
    var $col_form2
        = [
            'type' => 'weak_relation',
            'to'   => 'GRN_Report_Form'
        ];
    // form relation
    var $col_form3
        = [
            'type' => 'weak_relation',
            'to'   => 'GRN_Report_Form'
        ];
    // form relation
    var $col_form4
        = [
            'type' => 'weak_relation',
            'to'   => 'GRN_Report_Form'
        ];
    // form relation
    var $col_form5
        = [
            'type' => 'weak_relation',
            'to'   => 'GRN_Report_Form'
        ];
}

/**
 * Report Persistent Class
 *
 * @package grn.report
 */
class GRN_Report_Report extends GRN_Report_Category_InspectionBase
{
    function __construct($row)
    {
        parent::__construct($row);
    }

    /** Name **/
    var $col_name = ['type' => 'char', 'notnull' => true];
    /** Form ID / Form Name / Form Foreign key **/
    var $col_form = ['type' => 'weak_relation', 'to' => 'GRN_Report_Form'];
    var $col_form_name = ['type' => 'char'];
    var $col_form_foreign_key = ['type' => 'char'];
    /** Deleted  **/
    var $col_deleted = ['type' => 'int', 'notnull' => true];
    /** Draft **/
    var $col_draft = ['type' => 'int', 'notnull' => true];
    /** Last Follow ID **/
    var $col_last_follow_id = ['type' => 'int'];
    /** List Index **/
    var $col_list_index = ['type' => 'list_index'];
    /** Private **/
    var $col_private = ['type' => 'int', 'notnull' => true];
    /** Enable Follow **/
    var $col_enable_follow = ['type' => 'int', 'notnull' => true];
    /** Enable Member **/
    var $col_enable_member = ['type' => 'int', 'notnull' => true];
    /** Enable Partner **/
    var $col_enable_partner = ['type' => 'int', 'notnull' => true];
    /** Report Modified Time **/
    var $col_report_mtime = ['type' => 'timestamp'];

    /** Complex Index **/
    var $idx_list_index = ['cols' => ['list_index', null]];
    var $idx_form_list_index = ['cols' => ['form', 'list_index', null]];
    var $idx_ctime_list_index = ['cols' => [null, 'ctime', 'list_index']];
    var $idx_mtime_list_index = ['cols' => [null, 'mtime', 'list_index']];
    var $idx_form_draft_mtime = ['cols' => ['form', 'draft', 'mtime']];
    var $idx_private_draft_deleted_category_mtime
        = [
            'cols' => [
                'private',
                'draft',
                'deleted',
                'category',
                'mtime'
            ]
        ];
    var $idx_private_draft_deleted_category_name
        = [
            'cols' => [
                'private',
                'draft',
                'deleted',
                'category',
                'name'
            ]
        ];
    var $idx_private_draft_deleted_category_creatorname
        = [
            'cols' => [
                'private',
                'draft',
                'deleted',
                'category',
                'creator_name'
            ]
        ];
}

class GRN_Report_ReadStatus extends CB_PersistentBase
{
    function __construct($row)
    {
        parent::__construct($row);
    }

    var $_app_id = 'report';

    // user
    var $col_user
        = [
            'type'    => 'relation',
            'to'      => 'CB_User',
            'notnull' => true
        ];
    // report
    var $col_report
        = [
            'type'    => 'relation',
            'to'      => 'GRN_Report_Report',
            'notnull' => true
        ];
    // last time stamp
    var $col_last_timestamp
        = [
            'type'    => 'timestamp',
            'notnull' => true
        ];

}

class GRN_Report_ReportScheduleRelations extends CB_PersistentBase
{
    function __construct($row)
    {
        parent::__construct($row);
    }

    var $_app_id = 'report';

    // schedule
    var $col_schedule
        = [
            'type'    => 'int',
            'length'  => 8,
            'notnull' => true,
            'unique'  => true
        ];

    // report
    var $col_report
        = [
            'type'    => 'relation',
            'to'      => 'GRN_Report_Report',
            'notnull' => true
        ];
    //対象の日付
    var $col_date = ['type' => 'date'];

    var $idx_schedule = ['cols' => ['schedule', null]];
    var $idx_report = ['cols' => ['report', null]];
}

