<?php

namespace grn\report\screen\mobile;

require_once('report/error_code.csp');

class ReportCommentDelete extends MobileReportScreenBase
{
    public function fetch()
    {
        $arg = $this->checkComment();
        require_once('grn/smarty.csp');
        $t = new \GRN_Smarty();
        $t->assign('cid', $arg['category_id']);
        $t->assign('rid', $arg['report_id']);
        $t->assign('follow_id', $arg['follow_id']);

        //Set the navigation bar
        $this->assignBreadcrumbUpperPage($t,
            cb_msg('grn.mobile', 'detail_title'), self::URL_REPORT_DETAIL,
            [
                self::ARG_REPORT_ID => $this->getReportId(),
            ]);
        $this->assignBreadcrumbCurrentPage($t,
            cb_msg('grn.mobile', 'comment_delete'));

        return $t->fetch('report/mobile/comment_delete.tpl');
    }

    public function post($input)
    {
        $this->setInput($input);
        $arg = $this->checkComment();
        $follow_id = $arg['follow_id'];
        $report_id = $arg['report_id'];

        require_once('report/follow_logic.csp');
        $follow_logic = \GRN_Report_Follow_Logic::getInstance();
        $follow_logic->delete($follow_id, $report_id);

        $this->recordInspection('follow_delete',
            ['rid' => $report_id, 'follow_id' => $follow_id]);
    }

    private function checkComment()
    {
        $input = $this->getInput();
        $this->checkArgFromInput([self::ARG_FOLLOW_ID], $input);

        $report = $this->getReportForView();
        $report_id = $this->getReportId();

        $form = $this->getFormById($report['form']);
        $category_id = $this->getCategoryId($report, $form);
        $members = $this->getReportMembers($report_id);
        $notification_users = $this->getReportNotification($report_id);
        $this->checkViewAccessRight($category_id, $report, $members,
            $notification_users);

        $user_id = $this->getLoginUserId();
        $follow_id = $this->getFollowId();
        $follow = $this->getFollowById($follow_id);
        if ($report_id != $follow['report']) {
            cb_throw_error(E_GRN_RPRT_FOLLOW_INVALID_ID);
        }

        require_once('report/controller_util.csp');
        $category_util = \GRN_Report_Category_Controller_Utility::getInstance();
        $category_manage = $category_util->checkManage($category_id, false,
            CB_DATABASE_NO_LOCK);
        $creator_id = isset($follow['creator']) ? $follow['creator']
            : null;
        if ( ! $category_manage && $creator_id != $user_id) {
            cb_throw_error(E_GRN_RPRT_FOLLOW_NOT_REMOVABLE);
        }

        return [
            'category_id' => $category_id,
            'report_id'   => $report_id,
            'follow_id'   => $follow_id
        ];
    }

    public function getTitle()
    {
        return $this->getReportTitle() . ' - ' . cb_msg('grn.mobile',
                'comment_delete');;
    }
}
