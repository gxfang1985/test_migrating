<?php

namespace grn\report\screen\mobile;

require_once('report/error_code.csp');

class ReportCommentAdd extends MobileReportScreenBase
{
    public function fetch()
    {
        $input = $this->getInput();
        $report = $this->getReportForView();
        $report_id = $this->getReportId();

        require_once('report/controller_util.csp');
        $report_util = \GRN_Report_Report_Controller_Utility::getInstance();
        if ( ! $report_util->isViewable($this->getLoginUserId(), $report_id)) {
            cb_throw_error(E_GRN_RPRT_REPORT_DENY_ACCESS);
        }

        if ($report['enable_follow'] != 1) {
            cb_throw_error(E_GRN_RPRT_DENY_ADD_FOLLOW);
        }

        // report follow reply
        if (array_key_exists(self::ARG_FOLLOW_ID, $input)
            && $input[self::ARG_FOLLOW_ID] > 0
        ) {
            $follow = $this->getFollowById($input[self::ARG_FOLLOW_ID]);
            if ($report_id != $follow['report']) {
                cb_throw_error(E_GRN_RPRT_FOLLOW_INVALID_ID);
            }
        }

        require_once('grn/smarty.csp');
        $t = new \GRN_Smarty();

        //set the navigation bar
        if (array_key_exists(self::ARG_FOLLOW_ID, $input)
            && $input[self::ARG_FOLLOW_ID] > 0
        ) {
            $this->assignBreadcrumbUpperPage($t,
                cb_msg('grn.mobile', 'comment_detail_title'),
                'report/mobile/comment_detail', [
                    self::ARG_REPORT_ID => $this->getReportId(),
                    self::ARG_FOLLOW_ID => $input[self::ARG_FOLLOW_ID]
                ]);
            $this->assignBreadcrumbCurrentPage($t,
                cb_msg('grn.mobile', 'comment_reply'));
        } else {
            $this->assignBreadcrumbUpperPage($t,
                cb_msg('grn.mobile', 'detail_title'), 'report/mobile/view',
                [self::ARG_REPORT_ID => $this->getReportId()]);
            $this->assignBreadcrumbCurrentPage($t,
                cb_msg('grn.mobile', 'comment_add'));
        }

        $t->assign('rid', $this->getReportId());
        $t->assign('parent_fid', @ $input[self::ARG_FOLLOW_ID]);

        //generate upload ticket
        include('grn/_upload_prepend.csp');

        return $t->fetch('report/mobile/comment_add.tpl');
    }

    public function post($input)
    {
        $this->setInput($input);
        $this->checkArgFromInput([self::ARG_REPORT_ID], $input);
        $report_id = $this->getReportId();

        require_once('report/controller_util.csp');
        $report_util = \GRN_Report_Report_Controller_Utility::getInstance();
        if ( ! $report_util->isViewable($this->getLoginUserId(), $report_id)) {
            cb_throw_error(E_GRN_RPRT_REPORT_DENY_ACCESS);
        }

        $properties[GRN_REPORT_COLUMN_DATA] = $input['comment_data'];
        $properties[GRN_REPORT_COLUMN_HTML] = null;

        if (@ $input['attached_file']) {
            require_once('grn/upload.csp');
            $files = \GRN_UploadFile::getUploadedFiles(@$input['upload_ticket'],
                @$input['file_input'], true);
        } else {
            $files = [];
        }

        if (is_null($properties[GRN_REPORT_COLUMN_DATA])
            || strlen(cb_trim($properties[GRN_REPORT_COLUMN_DATA])) < 1
        ) {
            if ( ! $files || count($files) == 0) {
                cb_throw_error(E_GRN_RPRT_EMPTY_FOLLOW);
            }
        }

        // report follow reply
        if (array_key_exists(self::ARG_FOLLOW_ID, $input)
            && $input[self::ARG_FOLLOW_ID] > 0
        ) {
            $follow = $this->getFollowById($input[self::ARG_FOLLOW_ID]);
            if ($report_id != $follow['report']) {
                cb_throw_error(E_GRN_RPRT_FOLLOW_INVALID_ID);
            }
            $follow_number = $follow[self::ARG_FOLLOW_ID];
            if ($follow_number && $follow_number > 0) {
                $properties[GRN_REPORT_COLUMN_DATA] = ">>" . $follow_number
                                                      . "\n"
                                                      . $properties[GRN_REPORT_COLUMN_DATA];
            }
        }

        //Create Follow
        require_once('report/follow_logic.csp');
        $follow_logic = \GRN_Report_Follow_Logic::getInstance();
        $follow_id =& $follow_logic->add($report_id, $properties, $files);

        assert('$follow_id !== FALSE');

        //Send Notification
        $this->sendNotification($report_id,
            $properties[GRN_REPORT_COLUMN_DATA]);

        //Update Read Status Before Redirect
        $this->confirmNotification($report_id);

        //Inspection
        $message_args['rid'] = $report_id;
        $message_args['follow_id'] = $follow_id;
        $message_args['uid'] = $this->getLoginUserId();
        $this->recordInspection('follow_add', $message_args);
    }

    public function getTitle()
    {
        return $this->getReportTitle() . ' - ' . (cb_at($this->getInput(),
                self::ARG_FOLLOW_ID, 0) > 0 ? cb_msg('grn.mobile',
                'comment_reply') : cb_msg('grn.mobile', 'comment_add'));
    }
}
