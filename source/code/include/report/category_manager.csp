<?php
/**
 * Report Application Category Manager Base Class
 *
 * @author  Jumpei Miyata 2009/09
 * @version 1.0
 * @package grn.report
 */

/** Report Application **/
require_once('report/resources.csp');
require_once('report/category_manager_base.csp');
require_once('report/table_manager.csp');

/**
 * Category Manager Class
 *
 * @package grn.report
 */
class GRN_Report_Category_Manager extends GRN_Report_Category_Manager_Base
{
    /**
     * Constructor
     *
     * @return none
     */
    function __construct()
    {
        //Get Parent Instance
        $parent = parent::getInstance();

        //Sync Parent Table and Category List Cache
        $this->_table_name =& $parent->_table_name;
        $this->_list =& $parent->_list;
        $this->_search_list =& $parent->_search_list;
    }

    private static $_instance = null;

    /**
     * Get Instance
     *
     * @return GRN_Report_Category_Manager
     */
    public static function getInstance()
    {
        if ( ! isset(self::$_instance)) {
            $c = __CLASS__;
            self::$_instance = new $c;
        }

        return self::$_instance;
    }

    /**
     * Create Category
     *
     * @param  array $property_list //Property List(Name=>Value)
     *
     * @return int   $category_id               //Category ID
     */
    function create($property_list)
    {
        //デフォルトのセキュリティモデルはrevoke
        $property_list[GRN_REPORT_COLUMN_SECURITY_MODEL]
            = GRN_REPORT_SECURITY_MODEL_TYPE_REVOKE;

        $id = GRN_Report_Table_Manager::genericCreate(GRN_REPORT_TABLE_CATEGORY,
            $property_list);

        return $id;
    }

    /**
     * Update Category
     *
     * @param  array $category_id   //Category ID
     * @param  array $property_list //Property List(Name=>Value)
     *
     * @return array $category_id               //Category ID
     */
    function update($category_id, $property_list)
    {
        $id = GRN_Report_Table_Manager::updateById(GRN_REPORT_TABLE_CATEGORY,
            $category_id, $property_list);

        return $id;
    }

    /**
     * Remove Category
     *
     * @param int  $category_id //Category ID
     * @param bool $result      //Result
     */
    function remove($category_id)
    {
        require_once('report/resources.csp');
        if ($category_id == GRN_REPORT_CATEGORY_ROOT_ID) {
            require_once('report/error_code.csp');
            cb_throw_error(E_GRN_RPRT_CATEGORY_INVALID_ID);
        }

        GRN_Report_Table_Manager::removeById(GRN_REPORT_TABLE_CATEGORY,
            $category_id);

        //Delete From Category List
        foreach (array_keys($this->_list) as $key) {
            if (in_array($category_id, $this->_list[$key])) {
                unset($this->_list[$key][$category_id]);
            }
        }

        return true;
    }
}

