<?php

require_once('fw/database.csp');
require_once('report/bean/GrnReportCategory.csp');

class GrnReportCategoryDAO
{
    /**
     * @param $inDataObj
     *
     * @return int
     */
    public function getFountRows($inDataObj)
    {
        /** @var CB_DatabaseConnection $inDb */
        $inDb = $inDataObj['db'];

        $result = $inDb->query("SELECT FOUND_ROWS() AS count;");

        if (($result === false) || ($inDb->num_rows($result) != 1)) {
            //Throw Query Error
            $inDb->throwError(['query' => 'query failed: ' . $query]);
        }

        $row = $inDb->fetch_assoc($result);
        $resultCount = $row['count'];

        $inDb->free_result($result);

        return $resultCount;
    }

    /**
     * @param $inDataObj
     * @param $inCategoryKey
     *
     * @return bool|GrnReportCategory
     */
    public function selectByForeignKey($inDataObj, $inCategoryKey)
    {
        /** @var CB_DatabaseConnection $inDb */
        $inDb = $inDataObj['db'];
        $inLock = (array_key_exists('lock', $inDataObj))
            ? $inDataObj['lock'] : null;
        $inLanguage = (array_key_exists('language', $inDataObj))
            ? $inDataObj['language'] : null;

        $query
            = "SELECT c._id, c.col_creator_foreign_key, c.col_creator_name, c.col_ctime";
        $query = $query
                 . ", CASE WHEN uc.col_deleted IS NULL THEN c.col_creator END AS col_creator";
        $query = $query
                 . ", c.col_foreign_key, c.col_list_index, c.col_memo, c.col_public_security_model";
        $query = $query
                 . ", CASE WHEN um.col_deleted IS NULL THEN c.col_modifier END AS col_modifier";
        $query = $query
                 . ", c.col_modifier_foreign_key, c.col_modifier_name, c.col_mtime";
        $query = $query . ", IFNULL(cl.col_name, c.col_name) AS col_name";
        $query = $query . ", c.col_parent, c.col_security_model";
        $query = $query
                 . " FROM tab_grn_report_category c LEFT JOIN (tab_grn_report_category_local cl INNER JOIN tab_cb_language_status l ON cl.language_id = l._id AND l.col_language = '"
                 . $inDb->escape($inLanguage) . "') ON c._id = cl.parent_id";
        $query = $query
                 . " LEFT JOIN tab_cb_user AS uc ON c.col_creator=uc._id LEFT JOIN tab_cb_user AS um ON c.col_modifier=um._id ";
        $query = $query . " WHERE c.col_foreign_key = '"
                 . $inDb->escape($inCategoryKey) . "'";
        $query = $inDb->select_format($query, 0, -1, $inLock);

        $result = $inDb->query($query);

        if (($result === false) || ($inDb->num_rows($result) != 1)) {
            if ($result === false) {
                //Throw Query Error
                $inDb->throwError(['query' => 'query failed: ' . $query]);
            }

            if ($result) {
                $inDb->free_result($result);
            }

            return false;
        }

        $rawdata = $inDb->fetch_assoc($result);
        $inDb->free_result($result);

        $grnCategory = new GrnReportCategory($rawdata);

        return $grnCategory;
    }

    /**
     * @param $inDataObj
     * @param $inId
     *
     * @return bool|GrnReportCategory
     */
    public function selectDefaultById($inDataObj, $inId)
    {
        /** @var CB_DatabaseConnection $inDb */
        $inDb = $inDataObj['db'];
        $inLock = (array_key_exists('lock', $inDataObj)) ? $inDataObj['lock']
            : null;

        $query
            = "SELECT c._id, c.col_creator_foreign_key, c.col_creator_name, c.col_ctime";
        $query = $query
                 . ", CASE WHEN uc.col_deleted IS NULL THEN c.col_creator END AS col_creator";
        $query = $query
                 . ", c.col_foreign_key, c.col_list_index, c.col_memo, c.col_public_security_model";
        $query = $query
                 . ", CASE WHEN um.col_deleted IS NULL THEN c.col_modifier END AS col_modifier";
        $query = $query
                 . ", c.col_modifier_foreign_key, c.col_modifier_name, c.col_mtime";
        $query = $query . ", c.col_name, c.col_parent, c.col_security_model";
        $query = $query . " FROM tab_grn_report_category c";
        $query = $query
                 . " LEFT JOIN tab_cb_user AS uc ON c.col_creator=uc._id LEFT JOIN tab_cb_user AS um ON c.col_modifier=um._id ";
        $query = $query . " WHERE c._id = '" . $inDb->escape($inId) . "'";
        $query = $inDb->select_format($query, 0, -1, $inLock);

        $result = $inDb->query($query);

        if (($result === false) || ($inDb->num_rows($result) != 1)) {
            if ($result) {
                $inDb->free_result($result);
            }

            return false;
        }

        $rawdata = $inDb->fetch_assoc($result);
        $inDb->free_result($result);

        $grnCategory = new GrnReportCategory($rawdata);

        return $grnCategory;
    }

    /**
     * @param $inDataObj
     * @param $inId
     *
     * @return bool|GrnReportCategory
     */
    public function selectLocalById($inDataObj, $inId)
    {
        /** @var CB_DatabaseConnection $inDb */
        $inDb = $inDataObj['db'];
        $inLock = (array_key_exists('lock', $inDataObj))
            ? $inDataObj['lock'] : null;
        $inLanguage = (array_key_exists('language', $inDataObj))
            ? $inDataObj['language'] : null;


        $query
            = "SELECT c._id, c.col_creator_foreign_key, c.col_creator_name, c.col_ctime";
        $query = $query
                 . ", CASE WHEN uc.col_deleted IS NULL THEN c.col_creator END AS col_creator";
        $query = $query
                 . ", c.col_foreign_key, c.col_list_index, c.col_memo, c.col_public_security_model";
        $query = $query
                 . ", CASE WHEN um.col_deleted IS NULL THEN c.col_modifier END AS col_modifier";
        $query = $query
                 . ", c.col_modifier_foreign_key, c.col_modifier_name, c.col_mtime";
        $query = $query . ", IFNULL(cl.col_name, c.col_name) AS col_name";
        $query = $query . ", c.col_parent, c.col_security_model";
        $query = $query
                 . " FROM tab_grn_report_category c LEFT JOIN (tab_grn_report_category_local cl INNER JOIN tab_cb_language_status l ON cl.language_id = l._id AND l.col_language = '"
                 . $inDb->escape($inLanguage) . "') ON c._id = cl.parent_id";
        $query = $query
                 . " LEFT JOIN tab_cb_user AS uc ON c.col_creator=uc._id LEFT JOIN tab_cb_user AS um ON c.col_modifier=um._id ";
        $query = $query . " WHERE c._id = '" . $inDb->escape($inId) . "'";
        $query = $inDb->select_format($query, 0, -1, $inLock);

        $result = $inDb->query($query);

        if (($result === false) || ($inDb->num_rows($result) != 1)) {
            if ($result) {
                $inDb->free_result($result);
            }

            return false;
        }

        $rawdata = $inDb->fetch_assoc($result);
        $inDb->free_result($result);

        $grnCategory = new GrnReportCategory($rawdata);

        return $grnCategory;
    }

    /**
     * @param $inDataObj
     *
     * @return GrnReportCategory[]
     */
    public function getReportCategoryList($inDataObj)
    {
        /** @var CB_DatabaseConnection $inDb */
        $inDb = $inDataObj['db'];
        $inLock = (array_key_exists('lock', $inDataObj))
            ? $inDataObj['lock'] : null;
        $inOffset = (array_key_exists('offset', $inDataObj))
            ? $inDataObj['offset'] : null;
        $inLimit = (array_key_exists('limit', $inDataObj))
            ? $inDataObj['limit'] : null;
        $inLanguage = (array_key_exists('language', $inDataObj))
            ? $inDataObj['language'] : null;

        $query
            = "SELECT c._id, c.col_creator_foreign_key, c.col_creator_name, c.col_ctime";
        $query = $query
                 . ", CASE WHEN uc.col_deleted IS NULL THEN c.col_creator END AS col_creator";
        $query = $query
                 . ", c.col_foreign_key, c.col_list_index, c.col_memo, c.col_public_security_model";
        $query = $query
                 . ", CASE WHEN um.col_deleted IS NULL THEN c.col_modifier END AS col_modifier";
        $query = $query
                 . ", c.col_modifier_foreign_key, c.col_modifier_name, c.col_mtime";
        $query = $query . ", IFNULL(cl.col_name, c.col_name) AS col_name";
        $query = $query . ", c.col_parent, c.col_security_model";
        $query = $query
                 . " FROM (tab_grn_report_category c LEFT JOIN (tab_grn_report_category_local cl INNER JOIN tab_cb_language_status l ON cl.language_id = l._id AND l.col_language = '"
                 . $inDb->escape($inLanguage) . "') ON c._id = cl.parent_id)";
        $query = $query
                 . " LEFT JOIN tab_cb_user AS uc ON c.col_creator=uc._id LEFT JOIN tab_cb_user AS um ON c.col_modifier=um._id ";
        $query = $query . " ORDER BY c.col_list_index, c._id";
        if ( ! is_null($inOffset)) {
            $query = $inDb->select_format($query, $inOffset, $inLimit, $inLock);
        }

        $result = $inDb->query($query);

        if ($result === false) {
            //Throw Query Error
            $inDb->throwError(['query' => 'query failed: ' . $query]);
        }

        $grnCategoryArray = [];
        while ($rawdata = $inDb->fetch_assoc($result)) {
            $grnCategory = new GrnReportCategory($rawdata);
            $grnCategoryArray[] = $grnCategory;
        }
        $inDb->free_result($result);
        $result = false;

        return $grnCategoryArray;
    }

    /**
     * @param $inDataObj
     *
     * @return GrnReportCategory[]
     */
    public function getReportCategoryListWithNonLocal($inDataObj)
    {
        /** @var CB_DatabaseConnection $inDb */
        $inDb = $inDataObj['db'];
        $inLock = (array_key_exists('lock', $inDataObj)) ? $inDataObj['lock']
            : null;
        $inOffset = (array_key_exists('offset', $inDataObj))
            ? $inDataObj['offset'] : null;
        $inLimit = (array_key_exists('limit', $inDataObj))
            ? $inDataObj['limit'] : null;

        $query
            = "SELECT c._id, c.col_creator_foreign_key, c.col_creator_name, c.col_ctime";
        $query = $query
                 . ", CASE WHEN uc.col_deleted IS NULL THEN c.col_creator END AS col_creator";
        $query = $query
                 . ", c.col_foreign_key, c.col_list_index, c.col_memo, c.col_public_security_model";
        $query = $query
                 . ", CASE WHEN um.col_deleted IS NULL THEN c.col_modifier END AS col_modifier";
        $query = $query
                 . ", c.col_modifier_foreign_key, c.col_modifier_name, c.col_mtime";
        $query = $query . ", c.col_name, c.col_parent, c.col_security_model";
        $query = $query
                 . " FROM tab_grn_report_category c LEFT JOIN tab_cb_user AS uc ON c.col_creator=uc._id LEFT JOIN tab_cb_user AS um ON c.col_modifier=um._id ";
        $query = $query . " ORDER BY c.col_list_index, c._id";
        if ( ! is_null($inOffset)) {
            $query = $inDb->select_format($query, $inOffset, $inLimit, $inLock);
        }

        $result = $inDb->query($query);

        if ($result === false) {
            //Throw Query Error
            $inDb->throwError(['query' => 'query failed: ' . $query]);
        }

        $grnCategoryArray = [];
        while ($rawdata = $inDb->fetch_assoc($result)) {
            $grnCategory = new GrnReportCategory($rawdata);
            $grnCategoryArray[] = $grnCategory;
        }
        $inDb->free_result($result);
        $result = false;

        return $grnCategoryArray;
    }

    /**
     * @param $inDataObj
     * @param $inParentId
     *
     * @return GrnReportCategory[]
     */
    public function getReportCategoryListByParentId($inDataObj, $inParentId)
    {
        /** @var CB_DatabaseConnection $inDb */
        $inDb = $inDataObj['db'];
        $inLock = (array_key_exists('lock', $inDataObj))
            ? $inDataObj['lock'] : null;
        $inOffset = (array_key_exists('offset', $inDataObj))
            ? $inDataObj['offset'] : null;
        $inLimit = (array_key_exists('limit', $inDataObj))
            ? $inDataObj['limit'] : null;
        $inLanguage = (array_key_exists('language', $inDataObj))
            ? $inDataObj['language'] : null;

        $query
            = "SELECT c._id, c.col_creator_foreign_key, c.col_creator_name, c.col_ctime";
        $query = $query
                 . ", CASE WHEN uc.col_deleted IS NULL THEN c.col_creator END AS col_creator";
        $query = $query
                 . ", c.col_foreign_key, c.col_list_index, c.col_memo, c.col_public_security_model";
        $query = $query
                 . ", CASE WHEN um.col_deleted IS NULL THEN c.col_modifier END AS col_modifier";
        $query = $query
                 . ", c.col_modifier_foreign_key, c.col_modifier_name, c.col_mtime";
        $query = $query . ", IFNULL(cl.col_name, c.col_name) AS col_name";
        $query = $query . ", c.col_parent, c.col_security_model";
        $query = $query
                 . " FROM (tab_grn_report_category c LEFT JOIN (tab_grn_report_category_local cl INNER JOIN tab_cb_language_status l ON cl.language_id = l._id AND l.col_language = '"
                 . $inDb->escape($inLanguage) . "') ON c._id = cl.parent_id)";
        $query = $query
                 . " LEFT JOIN tab_cb_user AS uc ON c.col_creator=uc._id LEFT JOIN tab_cb_user AS um ON c.col_modifier=um._id ";
        $query = $query . " WHERE c.col_parent= '" . $inDb->escape($inParentId)
                 . "'";
        $query = $query . " ORDER BY c.col_list_index, c._id";
        if ( ! is_null($inOffset)) {
            $query = $inDb->select_format($query, $inOffset, $inLimit, $inLock);
        }

        $result = $inDb->query($query);

        if ($result === false) {
            //Throw Query Error
            $inDb->throwError(['query' => 'query failed: ' . $query]);
        }

        $grnCategoryArray = [];
        while ($rawdata = $inDb->fetch_assoc($result)) {
            $grnCategory = new GrnReportCategory($rawdata);
            $grnCategoryArray[] = $grnCategory;
        }
        $inDb->free_result($result);
        $result = false;

        return $grnCategoryArray;
    }

    /**
     * @param $inDataObj
     * @param $inParentId
     *
     * @return GrnReportCategory[]
     */
    public function getReportCategoryListByParentIdWithNonLocal(
        $inDataObj,
        $inParentId
    ) {
        /** @var CB_DatabaseConnection $inDb */
        $inDb = $inDataObj['db'];
        $inLock = (array_key_exists('lock', $inDataObj)) ? $inDataObj['lock']
            : null;
        $inOffset = (array_key_exists('offset', $inDataObj))
            ? $inDataObj['offset'] : null;
        $inLimit = (array_key_exists('limit', $inDataObj))
            ? $inDataObj['limit'] : null;

        $query
            = "SELECT c._id, c.col_creator_foreign_key, c.col_creator_name, c.col_ctime";
        $query = $query
                 . ", CASE WHEN uc.col_deleted IS NULL THEN c.col_creator END AS col_creator";
        $query = $query
                 . ", c.col_foreign_key, c.col_list_index, c.col_memo, c.col_public_security_model";
        $query = $query
                 . ", CASE WHEN um.col_deleted IS NULL THEN c.col_modifier END AS col_modifier";
        $query = $query
                 . ", c.col_modifier_foreign_key, c.col_modifier_name, c.col_mtime";
        $query = $query . ", c.col_name, c.col_parent, c.col_security_model";
        $query = $query
                 . " FROM tab_grn_report_category c LEFT JOIN tab_cb_user AS uc ON c.col_creator=uc._id LEFT JOIN tab_cb_user AS um ON c.col_modifier=um._id ";
        $query = $query . " WHERE c.col_parent= '" . $inDb->escape($inParentId)
                 . "'";
        $query = $query . " ORDER BY c.col_list_index, c._id";
        if ( ! is_null($inOffset)) {
            $query = $inDb->select_format($query, $inOffset, $inLimit, $inLock);
        }

        $result = $inDb->query($query);

        if ($result === false) {
            //Throw Query Error
            $inDb->throwError(['query' => 'query failed: ' . $query]);
        }

        $grnCategoryArray = [];
        while ($rawdata = $inDb->fetch_assoc($result)) {
            $grnCategory = new GrnReportCategory($rawdata);
            $grnCategoryArray[] = $grnCategory;
        }
        $inDb->free_result($result);
        $result = false;

        return $grnCategoryArray;
    }

    /**
     * @param $inDataObj
     * @param $inCategoryArray
     *
     * @return GrnReportCategory[]
     */
    public function getReportCategoryListByIds($inDataObj, $inCategoryArray)
    {
        /** @var CB_DatabaseConnection $inDb */
        $inDb = $inDataObj['db'];
        $inLock = (array_key_exists('lock', $inDataObj))
            ? $inDataObj['lock'] : null;
        $inOffset = (array_key_exists('offset', $inDataObj))
            ? $inDataObj['offset'] : null;
        $inLimit = (array_key_exists('limit', $inDataObj))
            ? $inDataObj['limit'] : null;
        $inLanguage = (array_key_exists('language', $inDataObj))
            ? $inDataObj['language'] : null;

        $inEscapeCategoryArray = [];
        foreach ($inCategoryArray as $id) {
            $inEscapeCategoryArray[] = $inDb->escape($id);
        }
        $inCategoryIds = implode("','", $inEscapeCategoryArray);

        $query
            = "SELECT c._id, c.col_creator_foreign_key, c.col_creator_name, c.col_ctime";
        $query = $query
                 . ", CASE WHEN uc.col_deleted IS NULL THEN c.col_creator END AS col_creator";
        $query = $query
                 . ", c.col_foreign_key, c.col_list_index, c.col_memo, c.col_public_security_model";
        $query = $query
                 . ", CASE WHEN um.col_deleted IS NULL THEN c.col_modifier END AS col_modifier";
        $query = $query
                 . ", c.col_modifier_foreign_key, c.col_modifier_name, c.col_mtime";
        $query = $query . ", IFNULL(cl.col_name, c.col_name) AS col_name";
        $query = $query . ", c.col_parent, c.col_security_model";
        $query = $query
                 . " FROM (tab_grn_report_category c LEFT JOIN (tab_grn_report_category_local cl INNER JOIN tab_cb_language_status l ON cl.language_id = l._id AND l.col_language = '"
                 . $inDb->escape($inLanguage) . "') ON c._id = cl.parent_id)";
        $query = $query
                 . " LEFT JOIN tab_cb_user AS uc ON c.col_creator=uc._id LEFT JOIN tab_cb_user AS um ON c.col_modifier=um._id ";
        $query = $query . " WHERE c._id IN ('${inCategoryIds}')";
        $query = $query . " ORDER BY c.col_list_index, c._id";
        if ( ! is_null($inOffset)) {
            $query = $inDb->select_format($query, $inOffset, $inLimit, $inLock);
        }

        $result = $inDb->query($query);

        if ($result === false) {
            //Throw Query Error
            $inDb->throwError(['query' => 'query failed: ' . $query]);
        }

        $grnCategoryArray = [];
        while ($rawdata = $inDb->fetch_assoc($result)) {
            $grnCategory = new GrnReportCategory($rawdata);
            $grnCategoryArray[] = $grnCategory;
        }
        $inDb->free_result($result);
        $result = false;

        return $grnCategoryArray;
    }

    /**
     * @param $inDataObj
     * @param $inParentIdArray
     *
     * @return GrnReportCategory[]
     */
    public function getReportCategoryListByParentIds(
        $inDataObj,
        $inParentIdArray
    ) {
        /** @var CB_DatabaseConnection $inDb */
        $inDb = $inDataObj['db'];
        $inLock = (array_key_exists('lock', $inDataObj))
            ? $inDataObj['lock'] : null;
        $inOffset = (array_key_exists('offset', $inDataObj))
            ? $inDataObj['offset'] : null;
        $inLimit = (array_key_exists('limit', $inDataObj))
            ? $inDataObj['limit'] : null;
        $inLanguage = (array_key_exists('language', $inDataObj))
            ? $inDataObj['language'] : null;

        $inEscapeParentIdArray = [];
        foreach ($inParentIdArray as $id) {
            $inEscapeParentIdArray[] = $inDb->escape($id);
        }
        $inParentIds = implode("','", $inEscapeParentIdArray);

        $query
            = "SELECT c._id, c.col_creator_foreign_key, c.col_creator_name, c.col_ctime";
        $query = $query
                 . ", CASE WHEN uc.col_deleted IS NULL THEN c.col_creator END AS col_creator";
        $query = $query
                 . ", c.col_foreign_key, c.col_list_index, c.col_memo, c.col_public_security_model";
        $query = $query
                 . ", CASE WHEN um.col_deleted IS NULL THEN c.col_modifier END AS col_modifier";
        $query = $query
                 . ", c.col_modifier_foreign_key, c.col_modifier_name, c.col_mtime";
        $query = $query . ", IFNULL(cl.col_name, c.col_name) AS col_name";
        $query = $query . ", c.col_parent, c.col_security_model";
        $query = $query
                 . " FROM (tab_grn_report_category c LEFT JOIN (tab_grn_report_category_local cl INNER JOIN tab_cb_language_status l ON cl.language_id = l._id AND l.col_language = '"
                 . $inDb->escape($inLanguage) . "') ON c._id = cl.parent_id)";
        $query = $query
                 . " LEFT JOIN tab_cb_user AS uc ON c.col_creator=uc._id LEFT JOIN tab_cb_user AS um ON c.col_modifier=um._id ";
        $query = $query . " WHERE c.col_parent IN ('${inParentIds}')";
        $query = $query . " ORDER BY c.col_list_index, c._id";
        if ( ! is_null($inOffset)) {
            $query = $inDb->select_format($query, $inOffset, $inLimit, $inLock);
        }

        $result = $inDb->query($query);

        if ($result === false) {
            //Throw Query Error
            $inDb->throwError(['query' => 'query failed: ' . $query]);
        }

        $grnCategoryArray = [];
        while ($rawdata = $inDb->fetch_assoc($result)) {
            $grnCategory = new GrnReportCategory($rawdata);
            $grnCategoryArray[] = $grnCategory;
        }
        $inDb->free_result($result);
        $result = false;

        return $grnCategoryArray;
    }

    /**
     * @param $inDataObj
     * @param $inCategoryNameArray
     *
     * @return GrnReportCategory[]
     */
    public function getReportCategoryListByNames(
        $inDataObj,
        $inCategoryNameArray
    ) {
        /** @var CB_DatabaseConnection $inDb */
        $inDb = $inDataObj['db'];
        $inLock = (array_key_exists('lock', $inDataObj))
            ? $inDataObj['lock'] : null;
        $inOffset = (array_key_exists('offset', $inDataObj))
            ? $inDataObj['offset'] : null;
        $inLimit = (array_key_exists('limit', $inDataObj))
            ? $inDataObj['limit'] : null;
        $inLanguage = (array_key_exists('language', $inDataObj))
            ? $inDataObj['language'] : null;

        $inEscapeCategoryNameArray = [];
        foreach ($inCategoryNameArray as $name) {
            $inEscapeCategoryNameArray[] = cb_queryf($inDb,
                "(main.col_name LIKE '%@L%')", $name);
        }
        $inCategoryNames = implode(" AND ", $inEscapeCategoryNameArray);

        $query = "SELECT *";
        $query = $query . " FROM (";
        $query = $query
                 . "SELECT c._id, c.col_creator_foreign_key, c.col_creator_name, c.col_ctime";
        $query = $query
                 . ", CASE WHEN uc.col_deleted IS NULL THEN c.col_creator END AS col_creator";
        $query = $query
                 . ", c.col_foreign_key, c.col_list_index, c.col_memo, c.col_public_security_model";
        $query = $query
                 . ", CASE WHEN um.col_deleted IS NULL THEN c.col_modifier END AS col_modifier";
        $query = $query
                 . ", c.col_modifier_foreign_key, c.col_modifier_name, c.col_mtime";
        $query = $query . ", IFNULL(cl.col_name, c.col_name) AS col_name";
        $query = $query . ", c.col_parent, c.col_security_model";
        $query = $query
                 . " FROM (tab_grn_report_category c LEFT JOIN (tab_grn_report_category_local cl INNER JOIN tab_cb_language_status l ON cl.language_id = l._id AND l.col_language = '"
                 . $inDb->escape($inLanguage) . "') ON c._id = cl.parent_id)";
        $query = $query
                 . " LEFT JOIN tab_cb_user AS uc ON c.col_creator=uc._id LEFT JOIN tab_cb_user AS um ON c.col_modifier=um._id ";
        $query = $query . ") main";
        $query = $query . " WHERE ${inCategoryNames}";
        $query = $query . " ORDER BY main.col_list_index, main._id";
        if ( ! is_null($inOffset)) {
            $query = $inDb->select_format($query, $inOffset, $inLimit, $inLock);
        }

        $result = $inDb->query($query);

        if ($result === false) {
            //Throw Query Error
            $inDb->throwError(['query' => 'query failed: ' . $query]);
        }

        $grnCategoryArray = [];
        while ($rawdata = $inDb->fetch_assoc($result)) {
            $grnCategory = new GrnReportCategory($rawdata);
            $grnCategoryArray[] = $grnCategory;
        }
        $inDb->free_result($result);
        $result = false;

        return $grnCategoryArray;
    }

    /**
     * @param $inDataObj
     * @param $inCategoryArray
     * @param $inCategoryNameArray
     *
     * @return GrnReportCategory[]
     */
    public function getReportCategoryListByIds_Names(
        $inDataObj,
        $inCategoryArray,
        $inCategoryNameArray
    ) {
        /** @var CB_DatabaseConnection $inDb */
        $inDb = $inDataObj['db'];
        $inIsCalcFoundRows = $inDataObj['isCalcFoundRows'];
        $inLock = (array_key_exists('lock', $inDataObj))
            ? $inDataObj['lock'] : null;
        $inOffset = (array_key_exists('offset', $inDataObj))
            ? $inDataObj['offset'] : null;
        $inLimit = (array_key_exists('limit', $inDataObj))
            ? $inDataObj['limit'] : null;
        $inLanguage = (array_key_exists('language', $inDataObj))
            ? $inDataObj['language'] : null;
        $isSensitive = (array_key_exists('isSensitive', $inDataObj))
            ? $inDataObj['isSensitive'] : false;

        $inEscapeCategoryArray = [];
        foreach ($inCategoryArray as $id) {
            $inEscapeCategoryArray[] = $inDb->escape($id);
        }
        $inCategoryIds = implode("','", $inEscapeCategoryArray);

        $inEscapeCategoryNameArray = [];
        foreach ($inCategoryNameArray as $name) {
            if ($isSensitive) {
                $inEscapeCategoryNameArray[] = cb_queryf($inDb,
                    "(main.col_name LIKE BINARY '%@L%')", $name);
            } else {
                $inEscapeCategoryNameArray[] = cb_queryf($inDb,
                    "(main.col_name LIKE '%@L%')", $name);
            }
        }
        $inCategoryNames = implode(" AND ", $inEscapeCategoryNameArray);

        $query = ($inIsCalcFoundRows) ? "SELECT SQL_CALC_FOUND_ROWS *"
            : "SELECT *";
        $query = $query . " FROM (";
        $query = $query
                 . "SELECT c._id, c.col_creator_foreign_key, c.col_creator_name, c.col_ctime";
        $query = $query
                 . ", CASE WHEN uc.col_deleted IS NULL THEN c.col_creator END AS col_creator";
        $query = $query
                 . ", c.col_foreign_key, c.col_list_index, c.col_memo, c.col_public_security_model";
        $query = $query
                 . ", CASE WHEN um.col_deleted IS NULL THEN c.col_modifier END AS col_modifier";
        $query = $query
                 . ", c.col_modifier_foreign_key, c.col_modifier_name, c.col_mtime";
        $query = $query . ", IFNULL(cl.col_name, c.col_name) AS col_name";
        $query = $query . ", c.col_parent, c.col_security_model";
        $query = $query
                 . " FROM (tab_grn_report_category c LEFT JOIN (tab_grn_report_category_local cl INNER JOIN tab_cb_language_status l ON cl.language_id = l._id AND l.col_language = '"
                 . $inDb->escape($inLanguage) . "') ON c._id = cl.parent_id)";
        $query = $query
                 . " LEFT JOIN tab_cb_user AS uc ON c.col_creator=uc._id LEFT JOIN tab_cb_user AS um ON c.col_modifier=um._id ";
        $query = $query . " WHERE c._id IN ('${inCategoryIds}')";
        $query = $query . ") main";
        $query = $query . " WHERE ${inCategoryNames}";
        $query = $query . " ORDER BY main.col_list_index, main._id";
        if ( ! is_null($inOffset)) {
            $query = $inDb->select_format($query, $inOffset, $inLimit, $inLock);
        }

        $result = $inDb->query($query);

        if ($result === false) {
            //Throw Query Error
            $inDb->throwError(['query' => 'query failed: ' . $query]);
        }

        $grnCategoryArray = [];
        while ($rawdata = $inDb->fetch_assoc($result)) {
            $grnCategory = new GrnReportCategory($rawdata);
            $grnCategoryArray[] = $grnCategory;
        }
        $inDb->free_result($result);
        $result = false;

        return $grnCategoryArray;
    }

    /**
     * @param $inDataObj
     * @param $inParentId
     *
     * @return int
     */
    public function getCountReportCategoryByParentId($inDataObj, $inParentId)
    {
        /** @var CB_DatabaseConnection $inDb */
        $inDb = $inDataObj['db'];
        $inLock = (array_key_exists('lock', $inDataObj)) ? $inDataObj['lock']
            : null;

        $query = "SELECT COUNT(*) AS count";
        $query = $query . " FROM tab_grn_report_category c";
        $query = $query . " WHERE c.col_parent = '" . $inDb->escape($inParentId)
                 . "'";
        $query = $inDb->select_format($query, 0, -1, $inLock);

        $result = $inDb->query($query);

        if (($result === false) || ($inDb->num_rows($result) != 1)) {
            //Throw Query Error
            $inDb->throwError(['query' => 'query failed: ' . $query]);
        }

        $row = $inDb->fetch_assoc($result);
        $resultCount = $row['count'];

        $inDb->free_result($result);

        return $resultCount;
    }

    /**
     * @param $inDataObj
     * @param $inAccessUserId
     *
     * @return GrnReportCategory[]
     */
    public function getReportCategoryListByAccessUserId(
        $inDataObj,
        $inAccessUserId
    ) {
        /** @var CB_DatabaseConnection $inDb */
        $inDb = $inDataObj['db'];
        $inLock = (array_key_exists('lock', $inDataObj))
            ? $inDataObj['lock'] : null;
        $inOffset = (array_key_exists('offset', $inDataObj))
            ? $inDataObj['offset'] : null;
        $inLimit = (array_key_exists('limit', $inDataObj))
            ? $inDataObj['limit'] : null;
        $inLanguage = (array_key_exists('language', $inDataObj))
            ? $inDataObj['language'] : null;

        $query
            = "SELECT c._id, c.col_creator_foreign_key, c.col_creator_name, c.col_ctime";
        $query = $query
                 . ", CASE WHEN uc.col_deleted IS NULL THEN c.col_creator END AS col_creator";
        $query = $query
                 . ", c.col_foreign_key, c.col_list_index, c.col_memo, c.col_public_security_model";
        $query = $query
                 . ", CASE WHEN um.col_deleted IS NULL THEN c.col_modifier END AS col_modifier";
        $query = $query
                 . ", c.col_modifier_foreign_key, c.col_modifier_name, c.col_mtime";
        $query = $query . ", IFNULL(cl.col_name, c.col_name) AS col_name";
        $query = $query . ", c.col_parent, c.col_security_model";
        $query = $query
                 . " FROM (tab_grn_report_category c LEFT JOIN (tab_grn_report_category_local cl INNER JOIN tab_cb_language_status l ON cl.language_id = l._id AND l.col_language = '"
                 . $inDb->escape($inLanguage) . "') ON c._id = cl.parent_id)";
        $query = $query
                 . " LEFT JOIN tab_cb_user AS uc ON c.col_creator=uc._id LEFT JOIN tab_cb_user AS um ON c.col_modifier=um._id ";
        $query = $query . " , tab_grn_report_categoryaccessuser cau";
        $query = $query . " WHERE c._id = cau.col_object";
        $query = $query . " AND cau.col_target= '"
                 . $inDb->escape($inAccessUserId) . "'";
        $query = $query . " ORDER BY c.col_list_index, c._id";
        if ( ! is_null($inOffset)) {
            $query = $inDb->select_format($query, $inOffset, $inLimit, $inLock);
        }

        $result = $inDb->query($query);

        if ($result === false) {
            //Throw Query Error
            $inDb->throwError(['query' => 'query failed: ' . $query]);
        }

        $grnCategoryArray = [];
        while ($rawdata = $inDb->fetch_assoc($result)) {
            $grnCategory = new GrnReportCategory($rawdata);
            $grnCategoryArray[] = $grnCategory;
        }
        $inDb->free_result($result);
        $result = false;

        return $grnCategoryArray;
    }

    /**
     * @param $inDataObj
     * @param $inAccessDynamicRoleIdArray
     *
     * @return GrnReportCategory[]
     */
    public function getReportCategoryListByAccessDynamicRoleIds(
        $inDataObj,
        $inAccessDynamicRoleIdArray
    ) {
        /** @var CB_DatabaseConnection $inDb */
        $inDb = $inDataObj['db'];
        $inLock = (array_key_exists('lock', $inDataObj))
            ? $inDataObj['lock'] : null;
        $inOffset = (array_key_exists('offset', $inDataObj))
            ? $inDataObj['offset'] : null;
        $inLimit = (array_key_exists('limit', $inDataObj))
            ? $inDataObj['limit'] : null;
        $inLanguage = (array_key_exists('language', $inDataObj))
            ? $inDataObj['language'] : null;

        $inEscapeAccessDynamicRoleIdArray = [];
        foreach ($inAccessDynamicRoleIdArray as $id) {
            $inEscapeAccessDynamicRoleIdArray[] = $inDb->escape($id);
        }
        $inAccessDynamicRoleIds = implode("','",
            $inEscapeAccessDynamicRoleIdArray);

        $query
            = "SELECT c._id, c.col_creator_foreign_key, c.col_creator_name, c.col_ctime";
        $query = $query
                 . ", CASE WHEN uc.col_deleted IS NULL THEN c.col_creator END AS col_creator";
        $query = $query
                 . ", c.col_foreign_key, c.col_list_index, c.col_memo, c.col_public_security_model";
        $query = $query
                 . ", CASE WHEN um.col_deleted IS NULL THEN c.col_modifier END AS col_modifier";
        $query = $query
                 . ", c.col_modifier_foreign_key, c.col_modifier_name, c.col_mtime";
        $query = $query . ", IFNULL(cl.col_name, c.col_name) AS col_name";
        $query = $query . ", c.col_parent, c.col_security_model";
        $query = $query
                 . " FROM (tab_grn_report_category c LEFT JOIN (tab_grn_report_category_local cl INNER JOIN tab_cb_language_status l ON cl.language_id = l._id AND l.col_language = '"
                 . $inDb->escape($inLanguage) . "') ON c._id = cl.parent_id)";
        $query = $query
                 . " LEFT JOIN tab_cb_user AS uc ON c.col_creator=uc._id LEFT JOIN tab_cb_user AS um ON c.col_modifier=um._id ";
        $query = $query . " , tab_grn_report_categoryaccessdynamicrole cadr";
        $query = $query . " WHERE c._id = cadr.col_object";
        $query = $query
                 . " AND cadr.col_target IN ('${inAccessDynamicRoleIds}')";
        $query = $query . " ORDER BY c.col_list_index, c._id";
        if ( ! is_null($inOffset)) {
            $query = $inDb->select_format($query, $inOffset, $inLimit, $inLock);
        }

        $result = $inDb->query($query);

        if ($result === false) {
            //Throw Query Error
            $inDb->throwError(['query' => 'query failed: ' . $query]);
        }

        $grnCategoryArray = [];
        while ($rawdata = $inDb->fetch_assoc($result)) {
            $grnCategory = new GrnReportCategory($rawdata);
            $grnCategoryArray[] = $grnCategory;
        }
        $inDb->free_result($result);
        $result = false;

        return $grnCategoryArray;
    }

    /**
     * @param $inDataObj
     * @param $inAccessStaticRoleIdArray
     *
     * @return GrnReportCategory[]
     */
    public function getReportCategoryListByAccessStaticRoleIds(
        $inDataObj,
        $inAccessStaticRoleIdArray
    ) {
        /** @var CB_DatabaseConnection $inDb */
        $inDb = $inDataObj['db'];
        $inLock = (array_key_exists('lock', $inDataObj))
            ? $inDataObj['lock'] : null;
        $inOffset = (array_key_exists('offset', $inDataObj))
            ? $inDataObj['offset'] : null;
        $inLimit = (array_key_exists('limit', $inDataObj))
            ? $inDataObj['limit'] : null;
        $inLanguage = (array_key_exists('language', $inDataObj))
            ? $inDataObj['language'] : null;

        $inEscapeAccessStaticRoleIdArray = [];
        foreach ($inAccessStaticRoleIdArray as $id) {
            $inEscapeAccessStaticRoleIdArray[] = $inDb->escape($id);
        }
        $inAccessStaticRoleIds = implode("','",
            $inEscapeAccessStaticRoleIdArray);

        $query
            = "SELECT c._id, c.col_creator_foreign_key, c.col_creator_name, c.col_ctime";
        $query = $query
                 . ", CASE WHEN uc.col_deleted IS NULL THEN c.col_creator END AS col_creator";
        $query = $query
                 . ", c.col_foreign_key, c.col_list_index, c.col_memo, c.col_public_security_model";
        $query = $query
                 . ", CASE WHEN um.col_deleted IS NULL THEN c.col_modifier END AS col_modifier";
        $query = $query
                 . ", c.col_modifier_foreign_key, c.col_modifier_name, c.col_mtime";
        $query = $query . ", IFNULL(cl.col_name, c.col_name) AS col_name";
        $query = $query . ", c.col_parent, c.col_security_model";
        $query = $query
                 . " FROM (tab_grn_report_category c LEFT JOIN (tab_grn_report_category_local cl INNER JOIN tab_cb_language_status l ON cl.language_id = l._id AND l.col_language = '"
                 . $inDb->escape($inLanguage) . "') ON c._id = cl.parent_id)";
        $query = $query
                 . " LEFT JOIN tab_cb_user AS uc ON c.col_creator=uc._id LEFT JOIN tab_cb_user AS um ON c.col_modifier=um._id ";
        $query = $query . " , tab_grn_report_categoryaccessstaticrole casr";
        $query = $query . " WHERE c._id = casr.col_object";
        $query = $query
                 . " AND casr.col_target IN ('${inAccessStaticRoleIds}')";
        $query = $query . " ORDER BY c.col_list_index, c._id";
        if ( ! is_null($inOffset)) {
            $query = $inDb->select_format($query, $inOffset, $inLimit, $inLock);
        }

        $result = $inDb->query($query);

        if ($result === false) {
            //Throw Query Error
            $inDb->throwError(['query' => 'query failed: ' . $query]);
        }

        $grnCategoryArray = [];
        while ($rawdata = $inDb->fetch_assoc($result)) {
            $grnCategory = new GrnReportCategory($rawdata);
            $grnCategoryArray[] = $grnCategory;
        }
        $inDb->free_result($result);
        $result = false;

        return $grnCategoryArray;
    }

    /**
     * @param $inDataObj
     * @param $inAccessGroupIdArray
     *
     * @return GrnReportCategory[]
     */
    public function getReportCategoryListByAccessGroupIds(
        $inDataObj,
        $inAccessGroupIdArray
    ) {
        /** @var CB_DatabaseConnection $inDb */
        $inDb = $inDataObj['db'];
        $inLock = (array_key_exists('lock', $inDataObj))
            ? $inDataObj['lock'] : null;
        $inOffset = (array_key_exists('offset', $inDataObj))
            ? $inDataObj['offset'] : null;
        $inLimit = (array_key_exists('limit', $inDataObj))
            ? $inDataObj['limit'] : null;
        $inLanguage = (array_key_exists('language', $inDataObj))
            ? $inDataObj['language'] : null;

        $inEscapeAccessGroupIdArray = [];
        foreach ($inAccessGroupIdArray as $id) {
            $inEscapeAccessGroupIdArray[] = $inDb->escape($id);
        }
        $inAccessGroupIds = implode("','", $inEscapeAccessGroupIdArray);

        $query
            = "SELECT c._id, c.col_creator_foreign_key, c.col_creator_name, c.col_ctime";
        $query = $query
                 . ", CASE WHEN uc.col_deleted IS NULL THEN c.col_creator END AS col_creator";
        $query = $query
                 . ", c.col_foreign_key, c.col_list_index, c.col_memo, c.col_public_security_model";
        $query = $query
                 . ", CASE WHEN um.col_deleted IS NULL THEN c.col_modifier END AS col_modifier";
        $query = $query
                 . ", c.col_modifier_foreign_key, c.col_modifier_name, c.col_mtime";
        $query = $query . ", IFNULL(cl.col_name, c.col_name) AS col_name";
        $query = $query . ", c.col_parent, c.col_security_model";
        $query = $query
                 . " FROM (tab_grn_report_category c LEFT JOIN (tab_grn_report_category_local cl INNER JOIN tab_cb_language_status l ON cl.language_id = l._id AND l.col_language = '"
                 . $inDb->escape($inLanguage) . "') ON c._id = cl.parent_id)";
        $query = $query
                 . " LEFT JOIN tab_cb_user AS uc ON c.col_creator=uc._id LEFT JOIN tab_cb_user AS um ON c.col_modifier=um._id ";
        $query = $query . " , tab_grn_report_categoryaccessgroup cag";
        $query = $query . " WHERE c._id = cag.col_object";
        $query = $query . " AND cag.col_target IN ('${inAccessGroupIds}')";
        $query = $query . " ORDER BY c.col_list_index, c._id";
        if ( ! is_null($inOffset)) {
            $query = $inDb->select_format($query, $inOffset, $inLimit, $inLock);
        }

        $result = $inDb->query($query);

        if ($result === false) {
            //Throw Query Error
            $inDb->throwError(['query' => 'query failed: ' . $query]);
        }

        $grnCategoryArray = [];
        while ($rawdata = $inDb->fetch_assoc($result)) {
            $grnCategory = new GrnReportCategory($rawdata);
            $grnCategoryArray[] = $grnCategory;
        }
        $inDb->free_result($result);
        $result = false;

        return $grnCategoryArray;
    }
}
