<?php

namespace grn\report\dao;

require_once("grn/application.csp");
require_once("report/error_code.csp");

class ReportScheduleRelationDAO
{
    /** @var \CB_DatabaseConnection */
    private $schedule_connection;

    /** @var \CB_DatabaseConnection */
    private $report_connection;

    /**
     *
     */
    public function __construct()
    {
        $this->schedule_connection = \GRN_ApplicationLocator::instance()
                                                            ->getConnection("schedule");
        $this->report_connection = \GRN_ApplicationLocator::instance()
                                                          ->getConnection("report");

    }

    public function commitByReportConnection()
    {
        $this->report_connection->commit();
    }

    /**
     * @param string $query
     *
     * @return bool|resource
     */
    protected function reportQuery($query)
    {
        return $this->report_connection->query($query);
    }

    /**
     * @param string $query
     *
     * @return bool|resource
     */
    protected function scheduleQuery($query)
    {
        return $this->schedule_connection->query($query);
    }

    /**
     * @return array
     */
    protected function getAllScheduleEventId()
    {
        $ids = [];
        $result
            = $this->scheduleQuery("SELECT _id id FROM tab_grn_schedule_event;");
        while (($row = $this->schedule_connection->fetch_assoc($result))) {
            $ids[] = $row["id"];
        }

        return $ids;
    }

    public function removeUnnecessaryReportScheduleRelation()
    {
        $eventId = $this->getAllScheduleEventId();
        if (count($eventId) > 0) {
            $query
                = $this->report_connection->format('DELETE FROM tab_grn_report_reportschedulerelations WHERE col_schedule NOT IN (@A);',
                [$eventId]);
        } else {
            $query = "TRUNCATE TABLE tab_grn_report_reportschedulerelations;";
        }
        $this->reportQuery($query);
    }

    /**
     * @param $id
     */
    public function deleteReportRelationByScheduleId($id)
    {
        //Check Argument
        cb_trim_check($id, E_GRN_RPRT_SCHEDULE_INVALID_ID);  //Schedule ID
        if ( ! is_numeric($id)) {
            cb_throw_error(E_GRN_RPRT_SCHEDULE_INVALID_ID);
        }
        $query
            = $this->report_connection->format('DELETE FROM tab_grn_report_reportschedulerelations WHERE col_schedule="@S";',
            [$id]);
        $this->reportQuery($query);
    }
}
