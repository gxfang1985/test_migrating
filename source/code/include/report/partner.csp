<?php

/**
 * Partner object with login user's accessibility
 */
class GRN_ReportPartnerData
{
    private $address_id;
    private $subject;
    private $company_name;
    private $list_index;
    private $display_name;
    private $value;
    private $accessible;
    private $book_id;

    private function __construct(
        $address_id,
        $subject,
        $company_name = null,
        $list_index = null,
        $accessible = false,
        $book_id = false
    ) {
        $this->address_id = $address_id;
        $this->subject = $subject;
        $this->company_name = $company_name;
        $this->list_index = $list_index;
        $this->display_name = $subject;
        if ( ! is_null($company_name) && strlen($company_name) > 0) {
            $this->display_name .= "({$company_name})";
        }
        $this->value = $address_id;
        if ( ! $address_id) {
            $this->value = GRN_REPORT_INPUT . $subject;
        }
        $this->accessible = $accessible;
        $this->book_id = $book_id;
    }

    /**
     * Get GRN_ReportPartnerData instances from posted values
     *
     * @global CB_LWContainer $G_container_base
     *
     * @param  array          $values
     *
     * @return array<GRN_ReportPartnerData>
     */
    public static function createByValues($values)
    {
        if ( ! is_array($values)) {
            return [];
        }

        // アドレスカードを取得する
        $ids = [];
        foreach ($values as $value) {
            if (strpos($value, GRN_REPORT_INPUT) !== 0) {
                $ids[] = $value;
            }
        }
        require_once('address/view_util.csp');
        $view_util = GRN_Address_ViewUtil::getInstance();
        $address_cards = $view_util->getCardList($ids);

        // 共有アドレスブック一覧を取得する
        $allow_books = [];
        global $G_container_base;
        $uum = $G_container_base->getInstance('uum');
        $login = $uum->getLoginUser();
        require_once('address/application.csp');
        $book_manager = GRN_Address_BookManager::getInstance();
        $books = $book_manager->listSharedAddressBooks();
        if (0 < count($books)) {
            // 共有アドレスブック一覧の閲覧権限を評価する
            $rows = [];
            foreach (array_keys($books) as $book_id) {
                $rows[$book_id] = $books[$book_id]->getRow();
            }
            $authorities = ['browse'];
            $dynamic_roles = $uum->listGrantedRoles();
            require_once('address/access.csp');
            $access_manager = GRN_Address_AccessManager::getInstance();
            $accesses = $access_manager->evaluateAccesses($rows, $login,
                $dynamic_roles, $authorities);

            foreach (array_keys($accesses) as $book_id) {
                $row = $rows[$book_id];
                $security_model = $access_manager->getSecurityModel($row);
                if ($access_manager->isAllowedAccess($accesses[$book_id],
                    $authorities, $security_model)
                ) {
                    $allow_books[$book_id] = $row;
                }
            }
        }

        $partners = [];
        foreach ($values as $value) {
            if (strpos($value, GRN_REPORT_INPUT) === 0) {
                $address_id = 0;
                $subject = substr($value, strlen(GRN_REPORT_INPUT));
                $company_name = '';
                $partners[] = new GRN_ReportPartnerData($address_id, $subject,
                    $company_name);
            } elseif (array_key_exists($value, $address_cards)) {
                $address_id = $value;
                $book_id = $address_cards[$value]['col_book'];
                $subject
                    = $address_cards[$value][GRN_REPORT_COLUMN_SUBJECT];
                $company_name
                    = $address_cards[$value][GRN_REPORT_COLUMN_COMPANY_NAME];
                $accessible = array_key_exists($book_id, $allow_books);
                $partners[] = new GRN_ReportPartnerData($address_id, $subject,
                    $company_name, null, $accessible, $book_id);
            }
        }

        return $partners;
    }

    /**
     * Get GRN_ReportPartnerData instances from table row arrays
     *
     * @param  array $partner_rows
     *
     * @return array<GRN_ReportPartnerData> $partners
     */
    public static function createByRows($partner_rows)
    {
        if ( ! is_array($partner_rows)) {
            return [];
        }

        $values = [];
        foreach ($partner_rows as $row) {
            $values[] = $row[GRN_REPORT_COLUMN_ADDRESS]
                ?: GRN_REPORT_INPUT . $row[GRN_REPORT_COLUMN_SUBJECT];
        }
        $partners = GRN_ReportPartnerData::createByValues($values);

        return $partners;
    }

    public function getAddressId()
    {
        return $this->address_id;
    }

    public function getSubject()
    {
        return $this->subject;
    }

    public function getCompanyName()
    {
        return $this->company_name;
    }

    public function getListIndex()
    {
        return $this->list_index;
    }

    public function getDisplayName()
    {
        return $this->display_name;
    }

    public function getValue()
    {
        return $this->value;
    }

    public function getBookId()
    {
        return $this->book_id;
    }

    public function isAccessible()
    {
        return $this->accessible;
    }
}

