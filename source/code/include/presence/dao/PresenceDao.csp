<?php

namespace grn\presence\dao;

class PresenceDao
{
    private $cache = [];

    private static $instance;

    private function __construct()
    {
        $this->db = cb_get_app_db('presence');
    }

    /**
     * @return PresenceDao
     */
    public static function getInstance()
    {
        if ( ! isset(self::$instance)) {
            self::$instance = new PresenceDao();
        }

        return self::$instance;
    }

    /**
     * @param string        $uid
     * @param array         $presence_info $presence_info['mode'] 'default' or 'custom'
     *                                     $presence_info['status'] 'attend' or 'absence' or other custom statuses
     *                                     $presence_info['memo']
     * @param \CB_TimeStamp $time
     */
    public function setPresence($uid, $presence_info, \CB_TimeStamp $time)
    {
        $mode = $presence_info['mode'];
        $status = $presence_info['status'];
        $memo = $presence_info['memo'];

        $query = $this->db->format(
            "INSERT INTO tab_grn_presence_presence (col_user, col_mode, col_status, col_memo, col_mtime) VALUES ('@S', '@S', '@S', '@S', '@S')"
            . " ON DUPLICATE KEY UPDATE col_mode = '@S', col_status = '@S', col_memo = '@S', col_mtime = '@S'",
            [
                $uid,
                $mode,
                $status,
                $memo,
                $time->unix_ts,
                $mode,
                $status,
                $memo,
                $time->unix_ts
            ]
        );

        $this->db->query($query);

        if (array_key_exists($uid, $this->cache)) {
            unset($this->cache[$uid]);
        }
    }

    /**
     * @param string $uid
     *
     * @return array|false
     */
    public function getPresence($uid)
    {
        if (array_key_exists($uid, $this->cache)) {
            return $this->cache[$uid];
        }

        $query
            = $this->db->format("SELECT * FROM tab_grn_presence_presence WHERE col_user = '@S'",
            [$uid]);

        $result = $this->db->query($query);

        $row = $this->db->fetch_assoc($result);

        $this->db->free_result($result);

        $this->cache[$uid] = $row;

        return $row;
    }

    /**
     * @param array $user_id_list
     */
    public function loadAndCache(array $user_id_list)
    {
        if (empty($user_id_list)) {
            return;
        }

        $query
            = $this->db->format("SELECT * FROM tab_grn_presence_presence WHERE col_user IN (@A)",
            [$user_id_list]);

        $result = $this->db->query($query);

        while (($row = $this->db->fetch_assoc($result))) {
            $this->cache[$row['col_user']] = $row;
        }

        $this->db->free_result($result);
    }
}
