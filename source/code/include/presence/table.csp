<?php
/**
 * Security Model
 */
require_once('grn/access_table.csp');
require_once('presence/resources.csp');

class GRN_Presence_SecurityModel extends GRN_Access_Base
{
    var $_app_id = 'presence';

    function __construct(& $row)
    {
        parent::__construct($row);
    }

    var $col_user
        = [
            'type' => 'relation',
            'to'   => 'CB_User',
            'lazy' => true
        ];                             // ユーザーとのリレーション
    var $col_group
        = [
            'type' => 'relation',
            'to'   => 'CB_Group'
        ];                                          // 組織とのリレーション

    var $col_role
        = [
            'type' => 'relation',
            'to'   => 'CB_Role',
            'lazy' => true
        ];                            // ロールとのリレーション

    /**
     * @param string $col_name
     *
     * @return CB_Row|mixed
     */
    public function get($col_name)
    {
        $result = false;

        $table_info = $this->getTableInfo();
        $col_info = $table_info->getColumnInfo($col_name);
        if (is_null($col_info)) {
            return $result;
        }


        if ($col_name == 'group') {
            $isKeyExists = array_key_exists(CB_DATABASE_COLUMN_PREFIX
                                            . $col_name,
                $this->__row->_rawdata);
            $id = $isKeyExists
                ? $this->__row->_rawdata[CB_DATABASE_COLUMN_PREFIX . $col_name]
                : null;

            if ( ! is_null($id)) {
                require_once('fw/FwFacade.csp');
                require_once('fw/i18n.csp');

                $i18n = CB_I18N::getInstance();
                $table_info = $this->getTableInfo();
                $tableManager = $table_info->getTableManager();
                $relationTableName = $col_info['to'];
                $relationTableInfo
                    = $tableManager->getTableInfo($relationTableName);
                $relationTableLock = $relationTableInfo->_lock;

                $dao = new FwFacade();
                $dataObj = [];
                $dataObj['lock'] = $relationTableLock;
                $dataObj['language'] = $i18n->getCurrentLanguage();

                $groupData = $dao->referGroupById($dataObj, $id);
                $result = $relationTableInfo->getRow($groupData->getId(),
                    $groupData->convertArray());
            } else {
                $result = parent::get($col_name);
            }
        } else {
            $result = parent::get($col_name);
        }

        return $result;
    }
}

