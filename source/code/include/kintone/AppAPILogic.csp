<?php
require_once('kintone/APILogic.csp');
require_once('kintone/Logic.csp');

class GRN_Kintone_AppAPILogic extends GRN_Kintone_APILogic
{
    const APP_ACCESSIBILITY_READ = 'READ';
    const APP_ACCESSIBILITY_EDIT = 'EDIT';

    public function get($kAppID)
    {
        $params = ['app' => $kAppID];

        return parent::execute('dev/app/get.json', false, $params);
    }

    public function listApp(
        $kAppIDList = null,
        $accessibility = self::APP_ACCESSIBILITY_EDIT
    ) {
        $params = [];
        if (is_array($kAppIDList)) {
            $params['apps'] = $kAppIDList;
        }

        if (is_string($accessibility)) {
            $params['accessibility'] = $accessibility;
        }

        // GTM-211 include guest information
        $params['includeGuestInfo'] = true;

        $response = parent::execute('dev/app/list.json', false, $params);

        return $this->convert($response);
    }

    public function add(
        $code,
        $name,
        $description,
        $iconKey,
        $group = GRN_Kintone_Logic::DEFAULT_APPGRPOUP_ID
    ) {
        $params = [];
        $params['code'] = $code;
        $params['name'] = $name;
        $params['description'] = $description;
        $params['template'] = null;
        $params['iconType'] = ($iconKey ? 'BLOB' : 'PRESET');
        $params['iconKey'] = $iconKey;
        $params['appGroup'] = $group;

        return parent::execute('dev/app/add.json', true, $params);
    }

    public function delete($kAppID)
    {
        $params = ['app' => $kAppID];

        return parent::execute('dev/app/delete.json', true, $params);
    }

    public function deploySync($kAppID)
    {
        $params = ['app' => $kAppID];

        return parent::execute('dev/app/deploySync.json', true, $params);
    }

    public function deployApps($kAppIDList)
    {
        $params = [];
        if (is_array($kAppIDList)) {
            $params['apps'] = $kAppIDList;
        }

        return parent::execute('dev/app/deployApps.json', true, $params);
    }

    public function copy(
        $kAppID,
        $appGroup = GRN_Kintone_Logic::DEFAULT_APPGRPOUP_ID
    ) {
        $params = [];
        $params['app'] = $kAppID;
        $params['appGroup'] = $appGroup;

        return parent::execute('dev/app/copy.json', true, $params);
    }

    public function getAppsName($kAppIDList = null)
    {
        $params = [];
        if (is_array($kAppIDList)) {
            $params['apps'] = $kAppIDList;
        }

        return parent::execute('dev/app/getAppsName.json', false, $params);
    }

    private function convert($response)
    {
        if ( ! isset($response['result'])
             || ! isset($response['result']['appList'])
        ) {
            return ['success' => false];
        }

        foreach ($response['result']['appList'] as $idx => $app) {
            if (isset($app['guest']) && $app['guest'] === true) {
                unset($response['result']['appList'][$idx]);
                continue;
            }
            foreach (['FAVICON', 'NORMAL', 'ORIGINAL', 'SMALL'] as $size) {
                $response['result']['appList'][$idx]['icons'][$size]
                    = $this->localhostURL2relativeURI($app['icons'][$size]);
            }
        }

        return $response;
    }

    private function localhostURL2relativeURI($uri)
    {
        if (empty($uri)) {
            return "";
        } else {
            $host = GRN_Kintone_Logic::getKintoneHost();

            return str_replace("https://{$host}/", "/", $uri);
        }
    }
}
