<?php

namespace grn\kintone\dao;

use grn\grn\Validate;
use grn\kintone\bean\GrnKintoneAppRelationSetting;

class GrnKintoneAppRelationSettingDAO
{
    private $_db;

    public function __construct()
    {
        global $G_container_base;
        $this->_db = $G_container_base->getInstance('dbconn');
    }

    /**
     * @param string $page e.g. 'schedule/add'
     *
     * @return array        id => GrnKintoneAppRelationSetting
     */
    public function getAllSettings($page)
    {
        $format
            = "SELECT _id, col_page, col_itemname, col_value, col_view_order FROM tab_grn_kintone_app_relation_setting WHERE col_page = '@S' ORDER BY col_view_order, _id ASC;";
        $query = cb_queryf($this->_db, $format, $page);
        $result = $this->_db->query($query);
        $settings = [];
        while ($row = $this->_db->fetch_assoc($result)) {
            $row['col_itemname'] = cb_unserialize($row['col_itemname'],
                ['allowed_classes' => false]);
            $row['col_value'] = cb_unserialize($row['col_value'],
                ['allowed_classes' => false]);
            $settings[$row['_id']] = new GrnKintoneAppRelationSetting($row);
        }
        $this->_db->free_result($result);

        return $settings;
    }

    public function addSetting(GrnKintoneAppRelationSetting $setting)
    {
        $item_name = $setting->getItemName();
        $value = $setting->getValue();
        if (Validate::isNull($item_name) || Validate::isNull($value)
            || ! is_array($item_name)
            || ! is_array($value)
        ) {
            return false;
        }

        $format
            = "INSERT INTO tab_grn_kintone_app_relation_setting SET col_page = '@S', col_itemname = '@S', col_value = '@S';";
        $query = cb_queryf($this->_db, $format, $setting->getPage(),
            serialize($item_name), serialize($value));
        $result = $this->_db->query($query);

        return $result;
    }

    public function deleteSetting($item_id)
    {
        if ( ! Validate::isNumber($item_id)) {
            return false;
        }

        $query = cb_queryf($this->_db,
            "DELETE FROM tab_grn_kintone_app_relation_setting WHERE _id = '@S';",
            $item_id);
        $result = $this->_db->query($query);

        return $result;
    }

    /**
     * @param $krid
     * @param $page
     *
     * @return GrnKintoneAppRelationSetting
     */
    public function getSettingById($krid, $page)
    {
        $query
            = "SELECT _id, col_page, col_itemname, col_value, col_view_order
                  FROM tab_grn_kintone_app_relation_setting
                  WHERE _id = '@S' AND col_page = '@S';";
        $query = cb_queryf($this->_db, $query, $krid, $page);
        $result = $this->_db->query($query);

        if (($result === false) || ($this->_db->num_rows($result) != 1)) {
            if ($result) {
                $this->_db->free_result($result);
            }

            return false;
        }

        $row = $this->_db->fetch_assoc($result);
        $this->_db->free_result($result);
        $row['col_itemname'] = cb_unserialize($row['col_itemname'],
            ['allowed_classes' => false]);
        $row['col_value'] = cb_unserialize($row['col_value'],
            ['allowed_classes' => false]);
        $setting = new GrnKintoneAppRelationSetting($row);

        return $setting;
    }

    /**
     * @param GrnKintoneAppRelationSetting $setting
     */
    public function updateSettingById(GrnKintoneAppRelationSetting $setting)
    {
        $id = $setting->getId();
        $item_name = $setting->getItemName();
        $value = $setting->getValue();
        if ( ! Validate::isNumber($id) || Validate::isNull($item_name)
             || Validate::isNull($value)
             || ! is_array($item_name)
             || ! is_array($value)
        ) {
            return false;
        }

        $format
            = "UPDATE tab_grn_kintone_app_relation_setting SET col_itemname = '@S', col_value = '@S' WHERE _id = '@S';";
        $query = cb_queryf($this->_db, $format, serialize($item_name),
            serialize($value), $id);
        $result = $this->_db->query($query);

        return $result;
    }

    /**
     * @param GrnKintoneAppRelationSetting $setting
     *
     * @return bool
     */
    public function updateRelationSettingOrder(
        GrnKintoneAppRelationSetting $setting
    ) {
        $id = $setting->getId();
        $view_order = $setting->getViewOrder();
        if (Validate::isNull($id) || ! Validate::isNumber($id)
            || Validate::isNull($view_order)
            || ! Validate::isNumber($view_order)
        ) {
            return false;
        }

        $format
            = "UPDATE tab_grn_kintone_app_relation_setting SET col_view_order = '@S' WHERE _id = '@S';";
        $query = cb_queryf($this->_db, $format, $view_order, $id);
        $result = $this->_db->query($query);

        return $result;
    }
}
