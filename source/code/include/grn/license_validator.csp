<?php

/**
 * ライセンスロジッククラス
 *
 * @package grn.common
 */
class GRN_LicenseValidator
{
    /**
     * @access private
     */
    var $_salt;

    /**
     * @access private
     */
    var $_type;

    /**
     * @access private
     */
    var $_users;

    /**
     * @access private
     */
    var $_customer;

    /**
     * @access private
     */
    var $_limit;

    /**
     * @access private
     */
    var $_license_key;

    /**
     * @access private
     */
    var $_license_code;

    /**
     * @access private
     */
    var $_validate_success = false;

    /**
     * ユーザー数を取得する
     *
     * @return int   ユーザー数
     */
    function getUsers()
    {
        return $this->_users;
    }

    /**
     * お客様IDを取得する
     *
     * @return int   お客様ID
     */
    function getCustomerId()
    {
        return $this->_customer;
    }

    /**
     * ライセンスタイプを取得する
     *
     * @return int   ライセンスタイプ
     */
    function getType()
    {
        return $this->_type;
    }

    /**
     * 期限日時を取得する。
     *
     * @return object   CB_Date   期限日時
     */
    function getLimit()
    {
        $d = new CB_Date;
        $d->parse($this->_limit);

        return $d;
    }

    /**
     * SALTの取得
     *
     * @return string   salt
     */
    function getSalt()
    {
        return $this->_salt;
    }

    /**
     * 設定済みのライセンスキー文字列する。
     *
     * @return string   ライセンスキー
     */
    function getLicenseKey()
    {
        return $this->_license_key;
    }

    /**
     * ライセンスキーを検証する
     *
     * @param string $license ライセンスキー
     *
     * @return bool
     */
    function validate($license)
    {
        $this->_validate_success = grn_license_key_info($license,
            $this->_customer,
            $this->_type,
            $this->_users,
            $this->_limit,
            $this->_salt);
        $this->_license_key = $license;

        return $this->_validate_success;
    }

    /**
     * 表示用キーを取得する
     *
     * @return string 表示キー
     */
    private function getPrettyPrint()
    {
        if ($this->_validate_success) {
            return sprintf(
                'cbgrn%d-%06d-%02x-%s',
                $this->getGaroonMajorVersion(),
                $this->getCustomerId(),
                $this->getType(),
                $this->getSalt()
            );
        }

        return false;
    }

    /**
     * @return int
     */
    private function getGaroonMajorVersion()
    {
        $type = $this->getType();
        if (0 <= $type && $type <= 49) {
            return 2;
        } elseif (50 <= $type && $type <= 59) {
            return 3;
        } else {
            return 4;
        }
    }

    /**
     * ライセンス情報を取得する
     *
     * @return array    ライセンス情報
     */
    function getLicenseInfo()
    {
        if ($this->_validate_success) {
            $info = [];
            $info['customer'] = $this->getCustomerId();
            $info['issue'] = $this->getPrettyPrint();
            $info['key'] = $this->getLicenseKey();
            $info['type'] = $this->getType();
            $info['users'] = $this->getUsers();
            $info['limit'] = $this->getLimit();
            $info['salt'] = $this->getSalt();

            return $info;
        }

        return false;
    }
}


