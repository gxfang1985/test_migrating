<?php

namespace grn\grn\authentication\policy\slash;

use grn\grn\authentication\policy\LoginUserFindPolicyInterface;
use grn\cydec\slash\session\api\SlashSessionManagementAPI;

/**
 * LoginUserFindPolicyInterfaceの(デコレーター|コンポジション)
 * Class SlashSessionManagementAPIDecorator
 *
 * @package grn\grn\authentication\policy
 */
class SlashSessionManagementAPIRunner implements LoginUserFindPolicyInterface
{
    /** @var \grn\grn\authentication\policy\LoginUserFindPolicyInterface */
    private $coreFindPolicy;
    /** @var \grn\cydec\slash\session\api\SlashSessionManagementAPI */
    private $slashSessionManagementAPI;

    /*
     * @param LoginUserFindPolicyInterface $coreFindPolicy
     */
    public function __construct(
        LoginUserFindPolicyInterface $coreFindPolicy,
        SlashSessionManagementAPI $slashSessionManagementAPI
    ) {
        $this->coreFindPolicy = $coreFindPolicy;
        $this->slashSessionManagementAPI = $slashSessionManagementAPI;

    }

    /**
     * @return \CB_User|false ログインを試行しているユーザー
     */
    public function findUser()
    {
        $accountToken = $this->coreFindPolicy->getAccountToken();
        // アカウントトークンが取得できない場合は、APIへの問い合わせを行わない
        if (empty($accountToken)) {
            return false;
        }

        $this->slashSessionManagementAPI->login(
            $this->coreFindPolicy->getAccountToken(),
            $this->coreFindPolicy->getPasswordToken()
        );

        return $this->coreFindPolicy->findUser();
    }

    /**
     * ログイン試行時のパスワードを返します
     *
     * @return string|null
     */
    public function getPasswordToken()
    {
        return $this->coreFindPolicy->getPasswordToken();
    }

    /**
     * @return string
     */
    public function getAccountToken()
    {
        return $this->coreFindPolicy->getAccountToken();
    }
}
