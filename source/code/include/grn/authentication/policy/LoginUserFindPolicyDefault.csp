<?php

namespace grn\grn\authentication\policy;

/**
 * Class LoginUserFindDefaultPolicy
 *
 * @package grn\grn\authentication\policy
 */
class LoginUserFindPolicyDefault implements LoginUserFindPolicyInterface
{
    /** @var \GRN_Uum */
    private $uum;

    /**
     * @return LoginUserFindPolicyInterface
     */
    public static function getInstance()
    {
        return new self();
    }

    private function __construct()
    {
        global $G_container_base;
        /** @var \GRN_Uum $uum */
        $uum = $G_container_base->getInstance('uum');
        $this->uum = $uum;
    }

    /**
     *
     * @return \CB_User|false ログインを試行しているユーザー
     */
    public function findUser()
    {
        global $G_INPUT;
        $accountToken = $this->getAccountToken();
        if ( ! is_null($accountToken)) {
            return $this->uum->getUserByForeignKey($accountToken);
        }

        if (array_key_exists('_uid', $G_INPUT)) {
            return $this->uum->getUser($G_INPUT['_uid']);
        }

        return false;
    }

    /**
     * ログイン試行時のパスワードを返します
     *
     * @return string|null
     */
    public function getPasswordToken()
    {
        global $G_INPUT;

        return cb_at($G_INPUT, '_password', null);
    }


    /**
     * @return string
     */
    public function getAccountToken()
    {
        global $G_INPUT;

        return cb_at($G_INPUT, '_account', null);
    }
}
