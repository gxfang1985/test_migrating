<?php

namespace grn\grn\authentication;

use grn\cydec\yrmcds\SlashSessionClient;


/**
 * Class SessionAuthenticationService
 *
 * @package grn\authentication
 */
class SessionAuthenticationService
{
    /** @var \GRN_UUM */
    private $uum;

    public function __construct()
    {
        global $G_container_base;
        /** @var \GRN_UUM $uum */
        $uum = $G_container_base->getInstance('uum');
        $this->uum = $uum;
    }

    /**
     * @return bool|\CB_User|false
     */
    private function getUser()
    {
        //ケータイ認証は、Slashを経由しないでガルーン独自で認証を行う
        //実装背景に関しては、http://wiki.dev.cybozu.co.jp/x/SoMmAQの特殊な認証を必要とするアプリを参照すること
        if (defined('ON_FOREST') && ! cb_is_cellular_page()) {
            try {
                $slashSessionClient = SlashSessionClient::getInstance();
                $slashSessionObject
                    = $slashSessionClient->getSessionObjectBySessionId();

                return $slashSessionObject->getUser($this->uum);
            } catch (\Exception $e) {
                return false;
            }
        }
        /**
         * In Onpremises environment,
         * processing of restore user from garoon session object
         */
        $session = $this->uum->_sp->getSession();
        $uid = $session->get(CB_UUMSPI_LOGIN_ID);

        return $this->uum->getUser($uid);
    }

    /**
     * @param \GRN_Authentication_Repository_DriverBase $repository
     *
     * @return \CB_User|false  return FALSE when failed authentication
     */
    public function authenticateBySession(
        \GRN_Authentication_Repository_DriverBase $repository
    ) {
        $user = $this->getUser();
        if ( ! $user) {
            return false;
        }
        //Authenticate Only Account
        $account = $user->get('foreign_key');
        $password = null;
        if ( ! $repository->authenticate($account, $password, false)) {
            return false;
        }

        return $user;
    }

    /**
     * @param string $account
     *
     * @return bool
     */
    public function setCredentialToSession($account)
    {
        $user = $this->uum->getUserByForeignKey($account);
        if ( ! $user) {
            return false;
        }

        $session = $this->uum->_sp->getSession();
        $session->set(CB_UUMSPI_LOGIN_ID, $user->getOID());

        return true;
    }

    /**
     * @return bool  TRUE
     */
    public function resetCredentialInSession()
    {
        $session = $this->uum->_sp->getSession();
        $session->unset_by(CB_UUMSPI_LOGIN_ID);

        return true;
    }
}
