<?php
/**
 * Strong Password Validator
 *
 * @author: Huy Nguyen    2009/08
 */

define('GRN_STRONG_PASSWD_OPTION_ALPHA', 1);
define('GRN_STRONG_PASSWD_OPTION_ALPHAMIX', 2);
define('GRN_STRONG_PASSWD_OPTION_NUMERAL', 4);
define('GRN_STRONG_PASSWD_OPTION_SYMBOL', 8);
define('GRN_STRONG_PASSWD_OPTION_BANNEDWORDS', 16);

Class GRN_StrongPasswordValidator
{
    var $_options;
    var $_banned_words = [];
    var $_symbol = '/[`~!@#$%\^&\*\(\)_\+\-=\{\}\|\[\]\\\\:";\'<>\?,\.\/]/';

    function setOptions($options, $value = null)
    {
        $this->_options |= $options;

        if (($options & GRN_STRONG_PASSWD_OPTION_BANNEDWORDS)
            == GRN_STRONG_PASSWD_OPTION_BANNEDWORDS
            && is_array($value)
        ) {
            $this->_banned_words = $value;
        }

        if (($options & GRN_STRONG_PASSWD_OPTION_SYMBOL)
            == GRN_STRONG_PASSWD_OPTION_SYMBOL
            && is_string($value)
        ) {
            $this->_symbol = $value;
        }
    }

    function validate($password)
    {
        $options = $this->_options;

        $errorOption = [];

        if (($options & GRN_STRONG_PASSWD_OPTION_ALPHA)
            == GRN_STRONG_PASSWD_OPTION_ALPHA
            && ! preg_match('/[a-zA-Z]/', $password)
        ) {
            $errorOption['alpha'] = true;
        }

        if (($options & GRN_STRONG_PASSWD_OPTION_ALPHAMIX)
            == GRN_STRONG_PASSWD_OPTION_ALPHAMIX
            && ( ! preg_match('/[a-z]/', $password)
                 || ! preg_match('/[A-Z]/', $password))
        ) {
            $errorOption['alphamix'] = true;
        }

        if (($options & GRN_STRONG_PASSWD_OPTION_NUMERAL)
            == GRN_STRONG_PASSWD_OPTION_NUMERAL
            && ! preg_match('/\d/', $password)
        ) {
            $errorOption['numeral'] = true;
        }

        if (($options & GRN_STRONG_PASSWD_OPTION_SYMBOL)
            == GRN_STRONG_PASSWD_OPTION_SYMBOL
            && ! preg_match($this->_symbol, $password)
        ) {
            $errorOption['symbol'] = true;
        }

        if (($options & GRN_STRONG_PASSWD_OPTION_BANNEDWORDS)
            == GRN_STRONG_PASSWD_OPTION_BANNEDWORDS
        ) {
            foreach ($this->_banned_words as $word) {
                if (strpos($password, $word) !== false) {
                    $errorOption['bannedwords'] = true;
                    break;
                }
            }
        }

        return $errorOption;
    }

    function getOptionsArray()
    {

        $options = $this->_options;

        $optionsArray = [];

        if (($options & GRN_STRONG_PASSWD_OPTION_ALPHA)
            == GRN_STRONG_PASSWD_OPTION_ALPHA
        ) {
            $optionsArray['alpha'] = true;
        }

        if (($options & GRN_STRONG_PASSWD_OPTION_ALPHAMIX)
            == GRN_STRONG_PASSWD_OPTION_ALPHAMIX
        ) {
            $optionsArray['alphamix'] = true;
        }

        if (($options & GRN_STRONG_PASSWD_OPTION_NUMERAL)
            == GRN_STRONG_PASSWD_OPTION_NUMERAL
        ) {
            $optionsArray['numeral'] = true;
        }

        if (($options & GRN_STRONG_PASSWD_OPTION_SYMBOL)
            == GRN_STRONG_PASSWD_OPTION_SYMBOL
        ) {
            $optionsArray['symbol'] = true;
        }

        if (($options & GRN_STRONG_PASSWD_OPTION_BANNEDWORDS)
            == GRN_STRONG_PASSWD_OPTION_BANNEDWORDS
        ) {
            $optionsArray['bannedwords'] = true;
        }

        return $optionsArray;

    }


}

