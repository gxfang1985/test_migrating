<?php

/**
 *  複数ユーザー選択テンプレート用の初期化コード、およびAPI
 *
 * @version    1.0
 * @package    grn.common
 * @author     HATA,Shinya
 *
 *  インクルード元からの引き渡しを想定している変数：
 *  session_name    セッション名（例：'system.user.org_user_assign', 'system.user.role_user_vest'）
 *  ous_params      N件ナビゲーション引き渡し用CGIパラメータ
 *  G_INPUT['poid'] 組織ID
 *  G_INPUT['reset']初期化の可否
 *
 *  本コード実行後に設定されるSmarty変数：
 *  poid            組織ID
 *  org             組織情報
 *  is_root         （ルート）かどうか
 *  is_nogroups     未所属ユーザーかどうか
 *  is_search       検索結果かどうか
 *  user_list       ユーザー一覧
 *  navi_info       N件ナビゲーション情報
 *  selected_list   選択されたユーザーの一覧
 */

use grn\system\sandbox\GRN_Uum_Sandbox;
use grn\system\sandbox\SandboxConstants;

//-- prepare uum and uum_util
if ( ! isset($is_sandbox_page) || $is_sandbox_page !== true) {
    $uum = cb_lwc_uum();
    $sandbox_mode = SandboxConstants::NO_SANDBOX_MODE;
    $tree_class = 'GRN_OrgTree';
} else {
    $uum = GRN_Uum_Sandbox::getInstance();;
    $sandbox_mode = SandboxConstants::SANDBOX_MODE;
    $tree_class = 'grn\system\sandbox\GRN_OrgSandboxTree';
}

global $G_INPUT;
$org_id = cb_at($G_INPUT, 'poid');
if (strlen($org_id) == 0) {
    $org_id = null;
}

require_once('grn/org_util.csp');

require_once('grn/org_util_search.csp');

require_once('grn/org_tree.csp');

$page_name = cb_get_pagename();

$util = GRN_OrgTreeUtil::getInstance();
$tree =& $util->getTree($page_name, $tree_class);

if (is_null($org_id)) {
    $org_id = $tree->getSelectedNode();
}

if (array_key_exists('top', $G_INPUT) || is_null($tree->getRoot())) {
    $tree->initialize();
    $org_id = null;
}
$tree->setSelectedNode($org_id);
$util->setTree($page_name, $tree);
$org = $tree->getRoot();

//--number on page
require_once('grn/ui.csp');
$ucm = GRN_UIConfigManager::getInstance();
$login = $uum->getLoginUser();
$uc = $ucm->getUserConfig($login);
$number_on_page = $uc->getListMax();

$is_search = array_key_exists('search_text', $G_INPUT);
if ($is_search) {
    //search

    //--N-navigation
    $search_text = $G_INPUT['search_text'];
    $condition = grn_get_user_info_search_condition($org_id, $search_text,
        $is_system);
    $count = grn_get_user_info_search_count($org_id, $condition,
        $sandbox_mode);

    $navi_params = $ous_params;
    $navi_params['poid'] = $org_id;
    $navi_params['search_text'] = $search_text;
    $navigation_info = grn_get_user_navigation_info($count,
        $navi_params, $number_on_page);

    //user list
    $user_list =& grn_search_user_info($org_id, $condition, $navigation_info,
        false, null, $sandbox_mode);

    $t->assign('search_text', $search_text);
} elseif ($org_id) {
    //list

    //--N-navigation
    $navi_params = $ous_params;
    $navi_params['poid'] = $org_id;
    $navigation_info = grn_get_user_list_info($org_id, $navi_params,
        $number_on_page, $sandbox_mode);

    //--user list
    $user_list = grn_get_user_list($org_id, $navigation_info, null,
        $sandbox_mode);
} else {
    $navigation_info = [
        'navi' => [
            'number_on_page'               => $number_on_page,
            'previous_page_start_position' => -1,
            'next_page_start_position'     => -1,
        ],
    ];
}

//-- setup the list of selected groups
require_once('fw/session_manager.csp');
$session_manager = CB_SessionManager::getInstance();
$session = $session_manager->getSession($session_name);
$user_ids = $session->get('user_ids');
if ( ! is_array($user_ids)) {
    $user_ids = [];
}

//--reset selected user list
if (@ $G_INPUT['reset']) {
    $user_ids = [];
} //--added user list
elseif (@ $G_INPUT['add']) {
    $aids = @ $G_INPUT['aid'];
    if (is_array($aids) && count($aids)) {
        foreach ($aids as $aid) {
            $user_ids[$aid] = 1;
        }
        $t->assign('add', true);
    }
} //--removed user list
elseif (@ $G_INPUT['remove']) {
    $rids = @ $G_INPUT['rid'];
    if (is_array($rids) && count($rids)) {
        foreach ($rids as $rid) {
            unset($user_ids[$rid]);
        }
    }
}

//--set selected organization list to session
$session->set('user_ids', $user_ids);

//--construct selected user list
$selected_list = [];
foreach (array_keys($user_ids) as $id) {
    $user = $uum->getUsersInfo([$id], [
        'col_display_name',
        'col_foreign_key',
        'col_display_name_language',
        'col_nickname'
    ]);
    if ( ! $user) {
        continue;
    }

    $result = $uum->getNameOf($login, $user[$id]);

    $selected_list[$id] = [
        'uid'          => $id,
        'display_name' => $result,
        'foreign_key'  => $user[$id]['col_foreign_key'],
    ];
}

//-- set variables for view
$t->assign('poid', $org_id);
$t->assign('page_name', $page_name);
$t->assign('org', $org);
$t->assign('is_root', ! $org_id);
$t->assign('is_nogroups', $org_id == '-1');
$t->assign('is_search', $is_search);
$t->assign('user_list', @ $user_list);
$t->assign('navi_info', @ $navigation_info);
$t->assign('selected_list', $selected_list);

