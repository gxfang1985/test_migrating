<?php

function grn_check_table_merged()
{
    global $G_config_common;
    if ($G_config_common->get('Database', 'merged')) {
        return true;
    }

    return false;
}


/**
 * @param  integer $uid
 * @param  string  $table_name
 *
 * @return string
 */
function grn_get_personal_tablename($uid, $table_name)
{
    return grn_get_personal_table_name_with_table_marge_validate($uid,
        $table_name, grn_check_table_merged());
}

/**
 * @param integer $uid
 *
 * @return string
 */
function grn_get_personal_suffix($uid)
{
    return grn_get_personal_suffix_with_num_of_tables($uid,
        cb_get_user_tables());
}

/**
 * @param integer $uid
 * @param string  $table_name
 * @param boolean $is_merged
 *
 * @return string
 */
function grn_get_personal_table_name_with_table_marge_validate(
    $uid,
    $table_name,
    $is_merged
) {
    if ($is_merged) {
        return $table_name;
    }

    return grn_get_personal_table_name_with_suffix($uid, $table_name);
}

/**
 * @param integer $uid
 * @param string  $table_name
 *
 * @return string
 */
function grn_get_personal_table_name_with_suffix($uid, $table_name)
{
    if (is_null($uid) || 0 == strlen($uid) || is_null($table_name)
        || 0 == strlen($table_name)
    ) {
        return '';
    }
    $suffix = grn_get_personal_suffix($uid);

    return $table_name . CB_PERSISTENT_NAMESEPARATOR . $suffix;
}

/**
 * @param integer $uid
 * @param string  $user_tables
 *
 * @return string
 */
function grn_get_personal_suffix_with_num_of_tables($uid, $user_tables)
{

    if (is_null($uid) || 0 == strlen($uid)) {
        return '';
    }

    $partition_id = (int)($uid % $user_tables);

    return CB_DATABASE_USER_TABLE_PREFIX . $partition_id;
}
