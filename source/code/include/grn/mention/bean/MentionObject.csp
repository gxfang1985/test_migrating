<?php

declare(strict_types=1);

namespace grn\grn\mention\bean;

use grn\grn\bean\BeanAbstract;
use grn\grn\MemberLogic;

class MentionObject extends BeanAbstract
{
    /**
     * @var string
     */
    private $type = '';

    /**
     * @var string
     */
    private $name = '';

    /**
     * @var string
     */
    private $value = '';

    public function __construct(array $data = null)
    {
        parent::__construct($data, self::NOT_CHECK_INPUT);

        if ($data == null) {
            return;
        }

        $this->setType((string)($data['type'] ?? MemberLogic::TYPE_USER));
        $this->setName((string)($data['name'] ?? ''));
        $this->setValue((string)($data['value'] ?? ''));
    }

    /**
     * @return string
     */
    public function getType(): string
    {
        return $this->type;
    }

    /**
     * @param string $type
     */
    public function setType(string $type)
    {
        $this->type = $type;
    }

    /**
     * @return string
     */
    public function getName(): string
    {
        return $this->name;
    }

    /**
     * @param string $name
     */
    public function setName(string $name)
    {
        $this->name = $name;
    }

    /**
     * @return string
     */
    public function getValue(): string
    {
        return $this->value;
    }

    /**
     * @param string $value
     */
    public function setValue(string $value)
    {
        $this->value = $value;
    }

    public function toArray(): array
    {
        return [
            'type'  => $this->getType(),
            'name'  => $this->getName(),
            'value' => $this->getValue(),
        ];
    }

    public static function isValidMemberObjectType($type): bool
    {
        $types = [
            MemberLogic::TYPE_USER,
            MemberLogic::TYPE_ORGANIZATION,
            MemberLogic::TYPE_STATIC_ROLE,
        ];

        return array_search($type, $types) !== false;
    }
}
