<?php

namespace grn\grn\customization\logic;

use grn\grn\customization\dao\ResourceDAO;

class ResourceLogic
{
    private $resourceDAO;
    private $module;
    const ACTIVATION_CUSTOMIZATION_ON = 1;
    const ACTIVATION_CUSTOMIZATION_OFF = 0;

    /**
     * ResourceLogic constructor.
     *
     * @param string $module
     */
    public function __construct($module)
    {
        $this->module = $module;
        $this->resourceDAO = new ResourceDAO($module);
    }

    /**
     * @param Resource[] $resources
     *
     * @return int
     */
    public function insert(array $resources)
    {
        return $this->resourceDAO->insert($resources);
    }

    /**
     * @param string $target
     *
     * @return int
     */
    public function deleteByTarget($target)
    {
        return $this->resourceDAO->deleteByTargets([$target]);
    }

    /**
     * @param string[] $targets
     *
     * @return int
     */
    public function deleteByTargets($targets)
    {
        return $this->resourceDAO->deleteByTargets($targets);
    }

    /**
     * @param string[] $targets
     */
    public function deleteResourcesAndFilesByTargets($targets)
    {
        $resources = $this->getByTargets($targets);

        $this->deleteByTargets($targets);

        $delete_file_ids = [];
        foreach ($resources as $resource) {
            if ($resource->getFile() != null) {
                $delete_file_ids[] = $resource->getFile();
            }
        }

        if (count($delete_file_ids)) {
            require_once('grn/customization/file.csp');
            $fm = \GRN_Customization_FileManager::getInstance($this->module);
            $fm->deleteFiles($delete_file_ids);
        }
    }

    /**
     * @param string $target
     *
     * @return \grn\grn\customization\bean\Resource[]
     */
    public function getByTarget($target)
    {
        return $this->resourceDAO->getByTargets([$target]);
    }

    /**
     * @param string[] $targets
     *
     * @return \grn\grn\customization\bean\Resource[]
     */
    public function getByTargets($targets)
    {
        return $this->resourceDAO->getByTargets($targets);
    }

    /**
     * @param string $file_id
     *
     * @return string
     */
    public function getTargetByFileID($file_id)
    {
        return $this->resourceDAO->getTargetByFileID($file_id);
    }
}
