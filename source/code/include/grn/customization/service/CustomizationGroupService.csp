<?php

namespace grn\grn\customization\service;

use grn\grn\customization\bean\CustomizationGroup;
use grn\grn\customization\logic\CustomizationGroupLogic;
use grn\grn\customization\logic\ResourceLogic;

class CustomizationGroupService
{
    private $module;

    public function __construct($module)
    {
        $this->customizationGroupLogic = new CustomizationGroupLogic($module);
        $this->resourceLogic = new ResourceLogic($module);
        $this->module = $module;
    }

    /**
     * @param      $id
     * @param bool $is_throw_error
     *
     * @return \grn\grn\customization\bean\CustomizationGroup|null
     */
    public function getGroup($id, $is_throw_error = true)
    {
        return $this->customizationGroupLogic->get($id, $is_throw_error);
    }

    /**
     * @return \grn\grn\customization\bean\CustomizationGroup[]
     */
    public function getGroupList(): array
    {
        return $this->customizationGroupLogic->getAll();
    }

    /**
     * @param \grn\grn\customization\bean\CustomizationGroup $customization_group
     *
     * @return string
     */
    public function addGroup(CustomizationGroup $customization_group): string
    {
        return $this->customizationGroupLogic->add($customization_group);
    }

    /**
     * @param \grn\grn\customization\bean\CustomizationGroup $customization_group
     *
     * @return string
     */
    public function modifyGroup(CustomizationGroup $customization_group): string
    {
        return $this->customizationGroupLogic->modify($customization_group);
    }

    /**
     * @param string $id
     * @param int    $apply_status
     */
    public function modifyApplyStatus($id, $apply_status)
    {
        $this->customizationGroupLogic->modifyApplyStatus($id, $apply_status);
    }

    /**
     * @param array $ids
     */
    public function modifyOrder(array $ids)
    {
        $this->customizationGroupLogic->modifyOrder($ids);
    }

    /**
     * @param string $id
     */
    public function removeGroup($id)
    {
        $target = CustomizationGroupLogic::CUSTOMIZATION_TARGET_PREFIX . $id;
        $this->resourceLogic->deleteResourcesAndFilesByTargets([$target]);
        $this->customizationGroupLogic->removeGroup($id);
    }
}
