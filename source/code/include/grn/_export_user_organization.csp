<?php

require_once('fw/i18n.csp');
$charset = @$G_INPUT['charset'];
if ( ! $charset) {
    global $G_config_common;
    $charset = $G_config_common->get('I18N', 'default_external_encoding');
}
$put_title = @$G_INPUT['title'];

require_once('fw/csv.csp');
$csv = new CB_CSVWriter($charset);
$uum = $G_container_base->getInstance('uum');

$out = [];
$users = $uum->getUsers();
$user_keys = array_keys($users);
$users_groups = _getUsersGroups($user_keys);
$primarygroup_list = _getPrimaryUsersGroup($user_keys);
foreach ($user_keys as $user_key) {
    $line = [];
    if ( ! isset($users_groups[$user_key])) {
        continue;
    }

    $user = $users[$user_key];
    $line[] = $user->get('foreign_key');

    $groups = $users_groups[$user_key];

    // 優先する組織を左端に書き出す
    if (isset($primarygroup_list[$user_key])) {
        $group = $primarygroup_list[$user_key];
        $line[] = $group = $primarygroup_list[$user_key];
        unset($groups[$group]);
    }
    $line = array_merge($line, $groups);
    $out[] = $line;
}

$args = 3;
if ($put_title) {
    $line = [];
    $line[] = cb_msg('grn.common', 'user_loginname');
    for ($i = 0; $i < $args; $i++) {
        $line[] = cb_msg('grn.common', 'organization_code') . ($i + 1);
    }
    $line[] = cb_msg('grn.common', 'valist');

    $csv->writeLine($line);
}

foreach ($out as $line) {
    $csv->writeLine($line);
    $key = array_shift($line);
    $uum->execInspection('user', 'export_group',
        ['user' => $key, 'groups' => implode(',', $line)]);

}

$csv->close();

function _getUsersGroups($user_id_list)
{
    $users_groups = [];
    global $G_container_base;
    $db = $G_container_base->getInstance('dbconn');
    $query = cb_queryf($db,
        'SELECT r.col_user, g.col_foreign_key FROM tab_cb_usergrouprelation r LEFT JOIN tab_cb_group g ON r.col_group = g._id WHERE col_user IN (@A) ORDER BY r.col_user, r.col_group_list, r.col_group',
        $user_id_list);
    $result = $db->query($query);

    if ($query === false) {
        return $users_groups;
    }

    while ($row = $db->fetch_assoc($result)) {
        if ( ! isset($users_groups[$row['col_user']])) {
            $users_groups[$row['col_user']] = [];
        }

        $users_groups[$row['col_user']][$row['col_foreign_key']]
            = $row['col_foreign_key'];
    }

    return $users_groups;
}

function _getPrimaryUsersGroup($user_id_list)
{
    $users_groups = [];
    global $G_container_base;
    $db = $G_container_base->getInstance('dbconn');
    $query = cb_queryf($db,
        'SELECT i.col_user, g.col_foreign_key FROM tab_grn_userinfo i LEFT JOIN tab_cb_usergrouprelation r ON i.col_primary_group = r._id LEFT JOIN tab_cb_group g ON r.col_group = g._id WHERE i.col_user IN (@A) AND i.col_primary_group IS NOT NULL ORDER BY i.col_user',
        $user_id_list);
    $result = $db->query($query);

    if ($query === false) {
        return $users_groups;
    }

    while ($row = $db->fetch_assoc($result)) {
        $users_groups[$row['col_user']] = $row['col_foreign_key'];
    }

    return $users_groups;
}
