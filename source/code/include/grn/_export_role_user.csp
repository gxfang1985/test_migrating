<?php

require_once('fw/i18n.csp');
$charset = @$G_INPUT['charset'];
if ( ! $charset) {
    global $G_config_common;
    $charset = $G_config_common->get('I18N', 'default_external_encoding');
}
$put_title = @$G_INPUT['title'];

require_once('fw/csv.csp');
$csv = new CB_CSVWriter($charset);

require_once('grn/uum_util.csp');
$uum_util = GRN_UumUtil::getInstance();
$uum =& $G_container_base->getInstance('uum');

$out = [];
$max = 0;
$roles = $uum->listStaticRoles();
$role_keys = array_keys($roles);
foreach ($role_keys as $role_key) {
    $line = [];
    $role =& $roles[$role_key];
    $line[] = $role->get('foreign_key');

    $users = $uum->getRoleUsers($role->getOID());
    $user_keys = array_keys($users);
    $max = $max < count($users) ? count($users) : $max;
    foreach ($user_keys as $user_key) {
        $line[] = $users[$user_key]->get('foreign_key');
    }
    $out[] = $line;
}

$args = 3;
if ($put_title) {
    $line = [];
    $line[] = cb_msg('grn.common', 'role_foreign_key');
    for ($i = 0; $i < $args; $i++) {
        $line[] = cb_msg('grn.common', 'user_loginname') . ($i + 1);
    }
    $line[] = cb_msg('grn.common', 'valist');

    $csv->writeLine($line);
}

foreach ($out as $line) {
    $csv->writeLine($line);
    $role_key = array_shift($line);
    $uum->execInspection('role', 'export_user',
        ['role' => $role_key, 'users' => implode(',', $line)]);
}

$csv->close();


