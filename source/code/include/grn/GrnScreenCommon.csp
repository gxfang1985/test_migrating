<?php

namespace grn\grn;

class GrnScreenCommon
{
    private $main_screen = null;
    private $common_template_file = null;

    /**
     * Constructed function
     *
     * @param GrnGenericScreenBase $main_screen Main screen object
     */
    public function __construct($main_screen)
    {
        $this->main_screen = $main_screen;
    }

    /**
     * Generate HTML
     *
     * @return string
     */
    public function fetch()
    {
        require_once('grn/smarty.csp');
        $smarty = new \GRN_Smarty();

        $this->extendFetch($smarty);

        $smarty->assign('component', $this->getMainScreen());
        $smarty->assign('page_title', $this->getTitle());
        $smarty->assign('site_position', $this->getSitePosition());

        return $smarty->fetch($this->getCommonTemplateFile());
    }

    /**
     * Edit data in the database with the input parameter
     *
     * @param array $parameter Input from the browser.
     */
    public function post($input)
    {
        return $this->getMainScreen()->post($input);
    }

    /**
     * Return the main screen
     *
     * @return GrnGenericScreenBase
     */
    protected function getMainScreen()
    {
        return $this->main_screen;
    }

    /**
     * Get Title from the main screen
     *
     * @return string
     */
    public function getTitle()
    {
        return $this->getMainScreen()->getTitle();
    }

    /**
     * Make site position in main screen
     *
     * @return array
     */
    public function getSitePosition()
    {
        return $this->getMainScreen()->getSitePosition();
    }

    /**
     * Extend featch for subclass.
     * If needed, override it to define specific operation in subclass.
     *
     * @param \GRN_Smarty $smarty
     */
    protected function extendFetch($smarty)
    {
    }

    /**
     * Get common template file
     *
     * @return string
     */
    protected function getCommonTemplateFile()
    {
        return $this->common_template_file;
    }

    /**
     * Use it to set specific common template file in subclass.
     *
     * @param string $common_template_file
     *
     * @return string
     */
    protected function setCommonTemplateFile($common_template_file)
    {
        $this->common_template_file = $common_template_file;
    }
}
