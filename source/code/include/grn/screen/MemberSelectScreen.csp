<?php

namespace grn\grn\screen;

require_once('grn/screen/AbstractMemberSelect.csp');

/**
 * Class MemberSelectScreen
 *
 * @package grn\grn\screen
 */
class MemberSelectScreen extends AbstractMemberSelectScreen
{
    /**
     * browse.
     */
    protected function browse()
    {
        parent::browse();
        $this->filterUserSelectList();
        parent::setCandidate();
        parent::setSelected();
    }

    /**
     * add.
     */
    protected function add()
    {
        parent::add();

        parent::setCandidate();
        parent::setSelected();
    }

    /**
     * remove.
     */
    protected function remove()
    {
        parent::remove();

        parent::setCandidate();
        parent::setSelected();
    }

    /**
     * apply.
     */
    protected function apply()
    {
        parent::apply();

        parent::setCandidate();
        parent::setSelected();
    }

    /**
     * Get candidate when scroll the search list or click select all
     *
     * @return array
     */
    public function ajaxGetCandidate()
    {
        parent::browse();
        if ($this->parameter->s_oid > 0
            && $this->parameter->more_user_limit != -1
        ) {
            foreach ($this->candidate as $id => $candidate) {
                if ($candidate['type'] == "group") {
                    unset($this->candidate[$id]);
                    break;
                }
            }
        }
        if ($this->parameter->more_user_limit != -1) {
            $this->candidate = array_slice($this->candidate,
                $this->parameter->more_user_offset,
                $this->parameter->more_user_limit);
        }

        $candidate_with_item_options = $this->getCandidateWithItemOptions();

        return $candidate_with_item_options;
    }

    /**
     * filter user select list
     */
    private function filterUserSelectList()
    {
        $limit = $this->parameter->more_user_limit;
        if ($this->parameter->s_oid > 0
            && $this->parameter->more_user_limit != -1
        ) {
            foreach ($this->candidate as $id => $candidate) {
                if ($candidate['type'] == "group") {
                    $limit = $this->parameter->more_user_limit + 1;
                    break;
                }
            }
        }
        $this->candidate = array_slice($this->candidate,
            $this->parameter->more_user_offset, $limit);
    }
}
