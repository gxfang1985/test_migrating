<?php
declare(strict_types=1);

namespace grn\grn\screen;

use grn\grn\JSONResponse;
use grn\grn\uum\IncrementalSearch;


class IncrementalSearchMember
{
    public function fetch()
    {
        global $G_INPUT;
        $keyword = $G_INPUT['keyword'] ?? '';

        /**
         * @var  array $access_plugin Params in the following format [name => data, [params] => data].
         * "params" can be specified by the application.
         * Structure example [app_id => data, space_id => 1, foo => 2]
         * Data example:
         * \CB_PluginLoader::encodeParam( [ 'name'   => 'space',
         *                                  'params' => [ 'app_id' => 'space', 'space_id' => 1,
         *                                               'target' => [ MemberLogic::TYPE_USER,
         *                                                             MemberLogic::TYPE_ORGANIZATION,
         *                                                             MemberLogic::TYPE_STATIC_ROLE ] ] ] );
         */

        $access_plugin = [];
        if (isset($G_INPUT['access_plugin_encoded'])) {
            require_once "fw/plugin.csp";
            $access_plugin
                = \CB_PluginLoader::decodeParam($G_INPUT['access_plugin_encoded']);
        }
        $incremental_search = new IncrementalSearch();
        $incremental_search->setKeyword($keyword);
        $incremental_search->setLimit(IncrementalSearch::DEFAULT_ITEM_PER_PAGE);
        $incremental_search->createAccessPlugin($access_plugin);
        $members = $incremental_search->search();
        $json = JSONResponse::create();
        $json->response($members);
    }
}
