<?php

namespace grn\grn\mobile;

class MobileDisplayUserList
{
    const USER_ID = 'id';
    const DISPLAY_NAME = 'displayName';
    const PRIMARY_GROUP_NAME = 'primaryGroupName';
    const FOREST_USER_URL = 'forestUserUrl';
    const IMAGE = 'image';
    const INVALID_USER = 'invalidUser';
    const USING_APP = 'usingApp';
    const IS_LOGIN_USER = 'isLoginUser';
    const DELETED = 'deleted';
    const USER_INFO_LIST = 'user_info_list';

    static public function constructUserList(array $display_ids)
    {
        $login_user = cb_get_login_user();
        $login_user_id = $login_user->getOID();

        $user_list = [];
        require_once('grn/controller.csp');
        $users_info
            = \GRN_ControllerUtil::getUserInfoToShowUserName($display_ids,
            $login_user);
        foreach ($display_ids as $id) {
            $user_info = [];
            if (array_key_exists($id, $users_info)) {
                $user_info[self::USER_ID] = $id;
                $user_info[self::DISPLAY_NAME]
                    = \GRN_ControllerUtil::getUserNameText($login_user_id,
                    $id, $users_info, true);

                require_once('grn/ui.csp');
                $manager = \GRN_UIConfigManager::getInstance();
                $config = $manager->getUserConfig($login_user);
                if ($config->getShowPriorityGroup()
                    && array_key_exists('primary_group', $users_info[$id])
                ) {
                    $primary_group = $users_info[$id]["primary_group"];
                    if ($primary_group !== false
                        && isset($primary_group['col_name'])
                    ) {
                        $user_info[self::PRIMARY_GROUP_NAME]
                            = $primary_group['col_name'];
                    }
                }

                $user_info[self::IMAGE]
                    = \GRN_ControllerUtil::getUserIconPath(\GRN_ControllerUtil::ICON_SIZE_LARGE,
                    $id);

                if (defined('ON_FOREST')) {
                    $user_info[self::FOREST_USER_URL]
                        = \GRN_ControllerUtil::getForestUserProfileURL($users_info[$id]['col_foreign_key']);
                }

                if (array_key_exists('col_valid', $users_info[$id])) {
                    $user_info[self::INVALID_USER]
                        = $users_info[$id]['col_valid'];
                }

                if (array_key_exists('col_using_app', $users_info[$id])) {
                    $user_info[self::USING_APP]
                        = $users_info[$id]['col_using_app'];
                } else {
                    $user_info[self::USING_APP] = true;
                }

                if ($id == $login_user_id) {
                    $user_info[self::IS_LOGIN_USER] = true;
                } else {
                    $user_info[self::IS_LOGIN_USER] = false;
                }
            } else {
                global $G_container_base;
                $uum = $G_container_base->getInstance('uum');
                $deleted_user_info = $uum->getUserInfo($id,
                    ['col_display_name'], 0, 1, null, true);
                $user_info[self::DISPLAY_NAME]
                    = \GRN_ControllerUtil::getDeletedUserNameText($deleted_user_info['col_display_name']);
                $user_info[self::DELETED] = true;
            }

            $user_list[$id] = $user_info;
        }

        return $user_list;
    }
}
