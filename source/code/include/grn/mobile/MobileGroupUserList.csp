<?php

namespace grn\grn\mobile;

use grn\grn\Validate;

use grn\grn\GrnGenericScreenBase;
use grn\grn\MemberLogic;

class MobileGroupUserList extends GrnGenericScreenBase
{

    const REQUEST_PAGE = "mobile/ajax/group_user_list";
    const ARG_NAVIGATION_SP = "sp";
    private $_is_from_ajax;

    function __construct($input)
    {
        //Func on footer
        parent::__construct($input);

        $this->initMobileView();
        $this->setMobileFooterBar();
    }

    public function fetch()
    {
        $org_id = \cb_at($this->getInput(), "gid");

        global $G_container_base;
        $uum = $G_container_base->getInstance('uum');
        $group_info = $uum->getGroupInfo($org_id);

        if ( ! $group_info) {
            cb_throw_error(E_GRN_GROUP_NOT_FOUND);
        }

        $member_referer_key = \cb_at($this->getInput(), "member_referer_key");
        require_once("fw/session_manager.csp");
        $session_manager = \CB_SessionManager::getInstance();
        $session
            = $session_manager->getSession("mobile.member_referer");
        $member_referer = $session->get($member_referer_key);
        if ( ! is_array($member_referer)) {
            cb_throw_error(E_GRN_GROUP_NOT_FOUND);
        }
        $app_id = \cb_at($member_referer, "app_id");
        $page_name = \cb_at($member_referer, "page_name");
        $page_path = \cb_at($member_referer, "page_path");
        $page_params = \cb_at($member_referer, "page_params");
        $access_plugin = \cb_at($member_referer, "access_plugin");
        if ($app_id) {
            $this->setMobileApplicationId($app_id);
        }

        $users_id = $uum->getGroupUsersId($org_id);
        if (isset($access_plugin["name"]) && isset($access_plugin["params"])) {
            $loader = new \CB_PluginLoader("grn.common.user.select");
            $plugin = $loader->loadDriver($access_plugin["name"]);
            if ($plugin) {
                $users_id = $plugin->evalUsers($users_id,
                    $access_plugin["params"]);
            }
        }

        $input = $this->getInput();
        $limit = self::MORE_VIEW_COUNT;
        $offset = $this->getArrayValue(self::ARG_NAVIGATION_SP, $input);
        if ( ! Validate::isNumber($offset)) {
            $offset = 0;
        }

        $loop_times = count($users_id) >= ($limit + $offset) ? ($limit
                                                                + $offset)
            : count($users_id);
        $display_ids = array_slice($users_id, 0, $loop_times);
        $this->setNewOffset($offset, $limit, count($users_id));

        $user_info_list = MemberLogic::getInstance()
                                     ->getDisplayUsersByUserIds($display_ids,
                                         $app_id, true);

        $params = [
            "gid"                => $org_id,
            "member_referer_key" => $member_referer_key
        ];
        require_once("grn/smarty.csp");
        $t = new \GRN_Smarty();
        $t->assign("count", count($users_id));
        $t->assign("request_page", self::REQUEST_PAGE);
        $t->assign(MobileDisplayUserList::USER_INFO_LIST, $user_info_list);
        if ($this->_is_from_ajax) {
            return $t->fetch("grn/mobile_member_list.tpl");
        } else {
            $this->assignBreadcrumbUpperPage($t, $page_name, $page_path,
                $page_params);
            $this->assignBreadcrumbCurrentPage($t,
                cb_msg('grn.mobile', 'organization_details'));
            $t->assign("offset", $this->getNewOffset());
            $t->assign("more_view_args", $params);
            $t->assign("list_title", $group_info["col_name"]);
            $t->assign("isUserToBelong", true);

            return $t->fetch("schedule/mobile/member_index.tpl");
        }
    }

    public function getIsFromAjax()
    {
        return $this->_is_from_ajax;
    }

    public function setIsFromAjax($value)
    {
        $this->_is_from_ajax = $value;
    }

    public function getTitle()
    {
        return 'mobile - ' . cb_msg('grn.mobile', 'organization_details');
    }
}
