<?php

$charset = @$G_INPUT['charset'];
$skip = @$G_INPUT['skip'] ? intval($G_INPUT['skip']) : 0;

if ( ! $charset) {
    global $G_config_common;
    $charset = $G_config_common->get('I18N', 'default_external_encoding');
}

// エラーフックの登録
require_once('fw/csv.csp');
$csv = new CB_CSVReader($charset, $filepath);
$uum =& $G_container_base->getInstance('uum');

//読み込み
require_once("fw/string_util.csp");
while (($line = $csv->readLine()) !== false) {
    if ($skip > 0) {
        $skip--;
        continue;
    }

    if (($len = count($line)) < 1) {
        cb_throw_error(E_GRN_CSV_INVALID_USER_ROLE_COLUMNS,
            ['page' => cb_msg('grn.system.user', 'role_user_import2')]);
    }

    //ロール取得
    if ( ! ($role =& $uum->getStaticRoleByForeignKey(cb_trim($line[0])))) {
        cb_throw_error(E_GRN_CSV_ROLE_FOR_USER_NOT_FOUND,
            ['page' => cb_msg('grn.system.user', 'role_user_import2')],
            ['role' => cb_trim($line[0])]);
    }

    //ユーザーID取得
    $ids = [];
    for ($i = 1; $i < $len; $i++) {

        $user_key = cb_trim($line[$i]);
        if (strlen($user_key) <= 0) {
            continue;
        }

        if ( ! ($user =& $uum->getUserByForeignKey($user_key))) {
            cb_throw_error(E_GRN_CSV_USER_FOR_ROLE_NOT_FOUND,
                ['page' => cb_msg('grn.system.user', 'role_user_import2')],
                ['user' => cb_trim($line[$i])]);
        }
        if ( ! in_array($user->getOID(), $ids)) {
            $ids[] = $user->getOID();
        }
    }

    //セット
    // *** under implementation
    // $uum->setRoleUsers only add users, so temporally the following code exists
    $role_users = $uum->getRoleUsers($role->getOID());
    if (is_array($role_users)) {
        foreach ($role_users as $uid => $user) {
            $uum->removeUserRole($uid, $role->getOID());
        }
    }

    // ***
    $uum->setRoleUsers($role->getOID(), $ids);
    $uum->execInspection('role', 'import_user',
        ['rid' => $role->getOID(), 'uids' => implode(',', $ids)]);
}


