<?php

namespace grn\grn\access\dao;

use grn\grn\access\bean\InternalIpAddress;

class InternalIpAddressDAO
{
    protected $dbConn;

    /**
     * InternalIpAddressDAO constructor.
     */
    function __construct()
    {
        $this->dbConn = cb_get_master_db();
    }

    /**
     * @param InternalIpAddress[] $internal_ip_address
     *
     * @return bool|int
     */
    public function insert($internal_ip_address)
    {
        $query
            = "INSERT INTO tab_grn_internal_ip_address(col_ip_address, col_cidr, col_memo) VALUES ";

        $affected_row = 0;
        $query_value = [];
        foreach ($internal_ip_address as $ip_setting) {
            $query_value[] = cb_queryf($this->dbConn, "('@S', '@S', '@S')",
                $ip_setting->getIpAddress(),
                $ip_setting->getCidr(),
                $ip_setting->getMemo());
        }

        if (count($query_value) > 0) {
            $query .= implode(',', $query_value);
            $this->dbConn->query($query);
            $affected_row = $this->dbConn->affected_rows();
        }

        return $affected_row;
    }

    /**
     * @return int
     */
    public function deleteAll()
    {
        $query = "DELETE FROM tab_grn_internal_ip_address;";
        $this->dbConn->query($query);

        return $this->dbConn->affected_rows();
    }

    /**
     * @return InternalIpAddress[]
     */
    public function getAll()
    {
        $query = "SELECT _id, col_ip_address, col_cidr, col_memo";
        $query .= " FROM tab_grn_internal_ip_address";
        $query .= " ORDER BY _id ASC;";
        $result = $this->dbConn->query($query);
        $ip_settings = [];
        while ($rawData = $this->dbConn->fetch_assoc($result)) {
            $internal_ip_address = new InternalIpAddress($rawData);
            $ip_settings[] = $internal_ip_address;
        }
        $this->dbConn->free_result($result);

        return $ip_settings;

    }

}
