<?php

namespace grn\grn\access\utility;

require_once('grn/application.csp');

class AppAvailabilityUtil
{
    static $appIdsPrefix
        = [
            "space"        => 'space',
            "link"         => 'link',
            "schedule"     => 'schd',
            "message"      => 'mssg',
            "bulletin"     => 'bllt',
            "cabinet"      => 'cbnt',
            "phonemessage" => 'phnm',
            "timecard"     => 'tmcr',
            "address"      => 'addr',
            "mail"         => 'mail',
            "workflow"     => 'wrkf',
            "report"       => 'rprt',
            "cellular"     => 'clll'
        ];
    CONST ACCESS_DENIED = 0;
    CONST ACCESS_ALLOWED = 1;
    CONST APP_USE_PROHIBITED = 0;
    CONST APP_USE_UNPROHIBITED = 1;
    CONST APP_USE_EXTERNAL_PROHIBITED = 2;

    private static $appIdsActivation;


    /**
     * @return string[]
     */
    public static function getAppIdsSupportPrivilege()
    {
        $application_locator = \GRN_ApplicationLocator::instance();
        $app_ids = array_keys(AppAvailabilityUtil::$appIdsPrefix);

        foreach (['workflow', 'report'] as $app_id) {
            if ( ! $application_locator->isLicensed($app_id)) {
                unset($app_ids[array_search($app_id, $app_ids)]);
            }
        }

        return array_slice($app_ids, 0);
    }

    /**
     * @return \string[]
     */
    public static function getActiveAppIds()
    {
        $application_locator = \GRN_ApplicationLocator::instance();
        if (is_null(self::$appIdsActivation)) {
            $app_ids_stand = self::getAppIdsSupportPrivilege();
            $tmp_count = count($app_ids_stand);
            for ($i = 0; $i < $tmp_count; $i++) {
                if ( ! $application_locator->isActive($app_ids_stand[$i])) {
                    unset($app_ids_stand[$i]);
                }
            }
            self::$appIdsActivation = $app_ids_stand;

            return $app_ids_stand;
        } else {
            return self::$appIdsActivation;
        }
    }

    /**
     * @param string $app_id
     *
     * @return bool
     */
    public function isActive($app_id)
    {
        return in_array($app_id, $this->getActiveAppIds());
    }

    /**
     * @return array
     */
    public static function getApplicationIds()
    {
        $application_locator = \GRN_ApplicationLocator::instance();

        return $application_locator->getApplicationIds();
    }

    /**
     * @return array
     *  e.g array('schedule','space',...,'dezielink','job')
     */
    public static function getActiveApplicationIds()
    {
        $application_locator = \GRN_ApplicationLocator::instance();

        return $application_locator->getActiveApplicationIds();
    }

    /**
     * @param null|string[] $app_ids_target
     *
     * @return array
     */
    public static function getAppIdsExtension($app_ids_target = null)
    {
        $active_app_ids = self::getActiveApplicationIds();
        if ( ! isset($app_ids_target)) {
            $app_ids_support_privilege = self::getActiveAppIds();
        } else {
            $app_ids_support_privilege = $app_ids_target;
        }
        $app_ids_extension = array_diff($active_app_ids,
            $app_ids_support_privilege);

        return $app_ids_extension;
    }
}
