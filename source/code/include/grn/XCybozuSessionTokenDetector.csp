<?php

namespace grn\grn;

require_once("fw/cookie.csp");

/**
 * detect X-Cybozu-Session-Token Header.
 * X-Cybozu-Session is used in Rest API ( doc_root/v1/ ) only.
 *
 * @see     http://wiki.dev.cybozu.co.jp/pages/viewpage.action?pageId=19329886
 * - リクエストの情報から、SessionIdの割り出しを行う
 *   Session開始後は、session_id()を使ってsessionIdの取得を行うこと
 * - X-Cybozu-Session-Tokenヘッダが、ついたアクセスかを判定する
 * Class SessionIdDetector
 * @package grn\grn
 */
class XCybozuSessionTokenDetector
{

    private function __construct()
    {
    }

    /**
     * @return bool|string
     */
    private static function getSessionToken()
    {
        $cookie = cb_at($_COOKIE, session_name(), false);
        if ($cookie) {
            return false;
        }
        $header = getenv("HTTP_X_CYBOZU_SESSION_TOKEN");
        if ( ! $header) {
            return false;
        }

        return $header;
    }

    /**
     * detect X-Cybozu-Session-Token.
     * When it is found and Session Cookie is not found, set it as session_id
     */
    public static function detect()
    {
        $token = self::getSessionToken();
        if ($token === false) {
            return;
        }

        // Format is ($session_name)=($session_id). then parse it.
        $cb_cookie = new \CB_Cookie;
        $cb_cookie->parse(null, null, $token);
        if ( ! $cb_cookie->_value) {
            return;
        }

        if ($cb_cookie->_name !== session_name()) {
            return;
        }

        session_id($cb_cookie->_value);
    }

    /**
     * CookieヘッダーとX-Cybozu-Session-Tokenの両方が、ヘッダーに付いているケースは、
     * X-Cybozu-Session-Tokenヘッダつきのアクセスとみなされないことに注意すること
     *
     * @return bool
     */
    public static function isAccessWithXCybozuSessionToken()
    {
        return self::getSessionToken() !== false;
    }
}
