<?php

/**
 * アクセス権ロジック
 *
 * @package grn.common
 * @author  Hideyasu, YOSHIDA 2004/11
 * @version 1.0
 */

require_once('grn/access_table.csp');

/**
 * 抽象データロジッククラス
 *
 * @package grn.common
 */
class GRN_Access_AbstractDataLogic
{
    /**
     * @access private
     */
    var $_table_info = null;

    /**
     * コンストラクタ
     */
    function __construct()
    {
    }

    /**
     * @return GRN_Access_AbstractDataLogic
     */
    public static function getInstance()
    {
        static $_instance = null;
        if (is_null($_instance)) {
            $_instance = new GRN_Access_AbstractDataLogic();
        }

        return $_instance;
    }

    /**
     * テーブル情報を取得する
     *
     * @return object CB_TableInfo
     */
    function getTableInfo()
    {
        if (is_null($this->_table_info)) {
            global $G_container_base;
            $table_manager = $G_container_base->getInstance('table_manager');

            $this->_table_info
                = $table_manager->getTableInfo('grn_access_abstractdata');
        }

        return $this->_table_info;
    }

    /**
     * 抽象データテーブル行を取得する
     *
     * @param int    $object_id オブジェクトID
     * @param string $query     SQL条件文
     * @param int    $lock
     *
     * @return GRN_Access_AbstractData
     */
    function get($object_id, $query = null, $lock = CB_DATABASE_DEFAULT_LOCK)
    {
        $table_info = $this->getTableInfo();

        if (is_null($query)) {
            return $table_info->getRow($object_id);
        }

        $rowset = new CB_RowSet($table_info);
        $rowset->addCondition($query);
        $rowset->setLock($lock);
        $row = $rowset->iterate();
        $rowset->destroy();

        return $row;
    }
}


