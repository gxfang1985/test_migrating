<?php

$charset = @$G_INPUT['charset'];
$skip = @$G_INPUT['skip'] ? intval($G_INPUT['skip']) : 0;

if ( ! $charset) {
    global $G_config_common;
    $charset = $G_config_common->get('I18N', 'default_external_encoding');
}

// エラーフックの登録
require_once('fw/csv.csp');
$csv = new CB_CSVReader($charset, $filepath);
$uum = $G_container_base->getInstance('uum');

//読み込み
require_once("fw/string_util.csp");
while (($line = $csv->readLine()) !== false) {
    if ($skip > 0) {
        $skip--;
        continue;
    }

    if (($len = count($line)) < 1) {
        cb_throw_error(E_GRN_CSV_INVALID_USER_GROUP_COLUMNS,
            ['page' => cb_msg('grn.system.user', 'user_organization_import1')]);
    }

    //ユーザー取得
    if ( ! ($user = $uum->getUserByForeignKey(cb_trim($line[0])))) {
        cb_throw_error(E_GRN_CSV_USER_FOR_ROLE_NOT_FOUND,
            ['page' => cb_msg('grn.system.user', 'user_organization_import1')],
            ['user' => cb_trim($line[0])]);
    }

    //組織ID取得
    $ids = [];
    for ($i = 1; $i < $len; $i++) {

        $group_key = cb_trim($line[$i]);
        if (strlen($group_key) <= 0) {
            continue;
        }

        if ( ! ($group = $uum->getGroupByForeignKey($group_key))) {
            cb_throw_error(E_GRN_CSV_GROUP_FOR_USER_NOT_FOUND,
                [
                    'page' => cb_msg('grn.system.user',
                        'user_organization_import1')
                ],
                ['group' => cb_trim($line[$i])]);
        }
        if ( ! in_array($group->getOID(), $ids)) {
            $ids[] = $group->getOID();
        }
    }

    //セット
    $uum->setUserGroups($user->getOID(), $ids);

    // 優先する組織の設定
    $primary_group = null;
    if (count($ids) > 0) {
        $primary_group = $ids[0];
    }
    // 優先する組織の設定
    $uum->setUserPrimaryGroup($user->getOID(), $primary_group);

    $uum->execInspection('user', 'import_group',
        ['uid' => $user->getOID(), 'gids' => implode(',', $ids)]);
}
    

