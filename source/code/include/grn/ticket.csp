<?php
require_once('grn/inspection.csp');
require_once('grn/server_file.csp');

class GRN_Ticket
{
    public static function create($user_id)
    {
        $uniq_id = uniqid();
        $session_id = session_id();

        return $uniq_id . '-' . self::encrypt($uniq_id . $session_id . $user_id)
               . '-' . $user_id;
    }

    public static function validate($ticket)
    {
        $keys = explode('-', $ticket);

        //チケットが正しい形式でないなら無効
        if (count($keys) !== 3) {
            return false;
        }

        $uniq_id = $keys[0];
        $encrypted_code = $keys[1];
        $user_id = $keys[2];

        // チケットのユーザー ID が現在のログインユーザー ID と同一か調べる。
        global $G_container_base;
        $uum = $G_container_base->getInstance('uum');
        $user = $uum->getLoginUser();
        if ( ! ($user instanceof CB_User) || $user->getOID() != $user_id) {
            return false;
        }

        $expect = self::encrypt($uniq_id . session_id() . $user_id);
        if (strcmp($expect, $encrypted_code) === 0) {
            return true;
        } else {
            return false;
        }
    }

    //チケットの有効期限を取得
    public static function getEffectiveTime()
    {
        //デフォルトを 6 時間とする
        return 60 * 60 * 6;
    }

    /**
     * @param string $str
     *
     * @return string
     */
    public static function encrypt($str)
    {
        return hash_hmac('sha256', $str, 'TheSunIsShine');
    }
}
