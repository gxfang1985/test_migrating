<?php

/**
 * utility functions
 *
 * @package fw.core
 */

/**
 * Get unique identifier.
 *
 * @return string uuid
 */
function cb_get_uuid()
{
    global $G_config_common;
    $app_name = $G_config_common->get('Global', 'app_name');

    $mac = substr(str_replace("-", "", cb_create_uuid()), 0, 12);
    if ($mac === false) {
        return false;
    }
    $mac = implode('', explode(':', $mac));

    return sprintf("%s-%s", $app_name, $mac);
}

/**
 * Remove "(java|vb)script:" schemes, "(script|link|meta|img)" tags, and
 * "on**" event handlers from $html_content.
 *
 * See MSDN for the list of internet schemes and DHTML events.
 * http://msdn.microsoft.com/library/default.asp?url=/library/en-us/wininet/wininet/internet_scheme_enumerated_type.asp
 * http://msdn.microsoft.com/workshop/author/dhtml/reference/events.asp
 *
 * @param  string $html_content HTML text to be washed.
 * @param  bool   $no_pict      Is image display?
 *
 * @return string                       Washed HTML text.
 */
function cb_wash_script($html_content, $no_pict = false)
{
    $len = strlen($html_content);
    $result = '';
    $tag_body = '';
    $in_tag = false;
    for ($i = 0; $i < $len; $i++) {
        $c = $html_content{$i};
        switch ($c) {
            case '<':
                if ($in_tag) {
                    // ignore nested <
                } else {
                    $in_tag = true;
                    $result .= $c;
                }
                break;

            case '>':
                if ($in_tag) {
                    $in_tag = false;

                    ////////////////////////////////////////////////
                    // http://support.microsoft.com/kb/906522/JA/
                    ////////////////////////////////////////////////
                    $t = preg_replace('/&#0*9;?/i', '', $tag_body);

                    // parse and wash tag_body
                    $t = preg_replace('#[[:<:]](java|vb)script:#i',
                        'BADSCHEME:', $t);
                    $t
                        = preg_replace('#[[:<:]]on[a-z]+[[:space:]]*=[[:space:]]*#i',
                        'BADATTR=', $t);

                    if ($no_pict) {
                        $bad_tags = '(script|meta|link|img)';
                    } else {
                        if (preg_match('/rel[[:space:]]*=[[:space:]]*(\"|\'|[[:space:]]*)[[:space:]]*stylesheet/i',
                            $t)
                        ) {
                            $bad_tags = '(script|meta)';
                        } else {
                            $bad_tags = '(script|meta|link)';
                        }
                    }

                    $t = preg_replace('#^' . $bad_tags . '#i', 'BADTAG', $t);
                    $t = preg_replace('#' . $bad_tags . '$#i', 'BADTAG', $t);
                    $t .= $c;

                    $result .= $t;
                    $tag_body = '';
                } else {
                    // escape dangling >
                    $result .= '&gt;';
                }
                break;

            default:
                if ($in_tag) {
                    $tag_body .= $c;
                } else {
                    $result .= $c;
                }
                break;
        }
    }

    return $result;
}


