<?php

/**
 * @package fw.core
 */

define('MICROSOFT_IE_VERSION_11', 11);

/**
 *  get bowser information
 *
 * @param  boolean $force force decision. don't use cache data.
 *
 * @return array   borwser information
 *
 *                  $browser['type'] : browser type('msie'/'netscape'/(null))
 *                  $borwser['ver_major'] : major version number
 *                  $browser['os_type'] : os type('mac'/(null))
 *                  $browser['screen_type'] : screen type('touch'/(null))
 */
function cb_ui_get_browser($force = false)
{
    static $browser_init = false;
    static $browser = [];

    if ($browser_init && ! $force) {
        return $browser;
    }

    $browser_init = true;

    // reset
    $browser['type'] = 'none';
    $browser['ver_major'] = '0';
//    $browser['ver_minor'] = '';
    $browser['os_type'] = '';
    $browser['screen_type'] = '';

    $ua = strtolower(@ $_SERVER['HTTP_USER_AGENT']);

    // specify Microsoft Edge
    if (preg_match('/edge\/(\d{1,2})/', $ua, $matches)) {
        $browser['type'] = 'msie';
        $browser['ver_major'] = $matches[1];
    } // specify IE11
    elseif (preg_match('/trident\/[7,8].\d{1,2}/', $ua)) {
        $browser['type'] = 'msie';
        $browser['ver_major'] = MICROSOFT_IE_VERSION_11;
    } // internet explorer
    elseif ($str = strstr($ua, 'msie')) {
        $browser['type'] = 'msie';
        $browser['ver_major'] = cb_ui_get_version($str, 4);
        /*
                // minor version number
                // 少数第１位まで
                if(count($info) > 1 && strlen($info[1]) > 0)
                {
                    $browser['ver_minor'] = intval($info[1]{0});
                }
                else
                {
                    $browser['ver_minor'] = 0;
                }
        */
    } // specify opera
    elseif (preg_match('/opera/', $ua) && ($str = strstr($ua, 'version/'))) {
        $browser['type'] = 'opera';
        $browser['ver_major'] = cb_ui_get_version($str, 8);
    } // specify OPR/22
    elseif ($str = strstr($ua, 'opr/')) {
        $browser['type'] = 'opera';
        $browser['ver_major'] = cb_ui_get_version($str, 4);
    } // Android
    elseif ($str = strstr($ua, 'android')) {
        $browser['type'] = 'android';
        $browser['ver_major'] = cb_ui_get_version($str, 7);
    } // Firefox
    elseif ($str = strstr($ua, 'firefox/')) {
        $browser['type'] = 'firefox';
        $browser['ver_major'] = cb_ui_get_version($str, 8);
    } // Chrome
    elseif ($str = strstr($ua, 'chrome/')) {
        $browser['type'] = 'chrome';
        $browser['ver_major'] = cb_ui_get_version($str, 7);
    } // Safari
    elseif ($str = strstr($ua, 'safari/')) {
        if (strstr($ua, 'mobile/')) {
            $browser['type'] = 'mobilesafari';
        } else {
            $browser['type'] = 'safari';
        }
        $browser['ver_major'] = cb_ui_get_version($str, 7);
    }

    // touch screen
    if (strstr($ua, 'touch')) {
        $browser['screen_type'] = 'touch';
    }

    // mac or not ?
    if (strstr($ua, 'mac')) {
        $browser['os_type'] = 'mac';
    }

    return $browser;
}

/**
 * @param $str
 * @param $str_len
 *
 * @return int
 */
function cb_ui_get_version($str, $str_len)
{
    $str = substr($str, $str_len);
    $str = trim($str);
    $end = strpos($str, ';');
    if ($end !== false) {
        $str = substr($str, 0, $end);
    }
    $info = explode('.', $str);

    // major version number
    return intval($info[0]);
}

/**
 * @return bool
 */
function cb_ui_is_more_modern_theme()
{
    require_once('grn/ui.csp');
    $manager = GRN_UIConfigManager::getInstance();
    assert('is_object( $manager ) && is_a( $manager, \'GRN_UIConfigManager\' )');
    $logged_in = cb_get_login_user();
    if ( ! $logged_in) {
        return $logged_in;
    }

    return $manager->getUserConfig($logged_in)->getDesign() === 'Design-mm';
}
