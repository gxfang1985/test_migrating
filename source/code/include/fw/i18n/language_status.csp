<?php

class CB_LanguageStatus
{
    protected $_id = null;
    protected $col_language;
    protected $col_status;

    public static $USERNAME_AVAILABLE = 1;
    public static $USERNAME_UNAVAILABLE = 0;
    public static $LANGUAGE_AVAILABLE = 1;
    public static $LANGUAGE_UNAVAILABLE = 0;

    public static function getTableName()
    {
        return "tab_cb_language_status";
    }

    public function __construct($array)
    {
        if (array_key_exists("_id", $array)) {
            $this->setId($array["_id"]);
        }
        $this->setLanguage($array["col_language"]);
        $this->setStatus($array["col_status"]);
    }

    public function getId()
    {
        return $this->_id;
    }

    public function setId($id)
    {
        $this->_id = $id;
    }

    public function getLanguage()
    {
        return $this->col_language;
    }

    public function setLanguage($language_code)
    {
        $this->col_language = $language_code;
    }

    public function getStatus()
    {
        return $this->col_status;
    }

    public function setStatus($status)
    {
        $this->col_status = $status;
    }

    public function isAvailable()
    {
        return ((int)$this->getStatus() & self::$LANGUAGE_AVAILABLE)
               === self::$LANGUAGE_AVAILABLE;
    }

    public function insert(CB_DatabaseConnection $dbconn = null)
    {
        if (is_null($dbconn)) {
            global $G_container_base;
            $dbconn = $G_container_base->getInstance("dbconn");
        }

        $query = "INSERT INTO tab_cb_language_status SET "
                 . sprintf("col_language = '%s', ",
                $dbconn->escape($this->getLanguage()))
                 . sprintf("col_status = '%s';",
                $dbconn->escape($this->getStatus()));
        $dbconn->query($query);
        $this->_id = $dbconn->get_insert_id();
    }

    public function update(CB_DatabaseConnection $dbconn = null)
    {
        if (is_null($dbconn)) {
            global $G_container_base;
            $dbconn = $G_container_base->getInstance("dbconn");
        }

        $query = "UPDATE tab_cb_language_status SET "
                 . sprintf("col_language = '%s', ",
                $dbconn->escape($this->getLanguage()))
                 . sprintf("col_status = '%s' ",
                $dbconn->escape($this->getStatus()))
                 . sprintf("WHERE _id = '%s';",
                $dbconn->escape($this->getId()));
        $dbconn->query($query);
    }

    public function delete(CB_DatabaseConnection $dbconn = null)
    {
        if (is_null($dbconn)) {
            global $G_container_base;
            $dbconn = $G_container_base->getInstance("dbconn");
        }
        $query = sprintf("DELETE FROM tab_cb_language_status WHERE _id = '%s';",
            $dbconn->escape($this->getId()));
        $dbconn->query($query);
    }

    static public function createTable(CB_DatabaseConnection $dbconn = null)
    {
        if (is_null($dbconn)) {
            global $G_container_base;
            $dbconn = $G_container_base->getInstance("dbconn");
        }
        $query = "DROP TABLE IF EXISTS tab_cb_language_status;";
        $dbconn->query($query);

        $query = "CREATE TABLE `tab_cb_language_status` ("
                 . "`_id` bigint(20) NOT NULL AUTO_INCREMENT,"
                 . "`col_language` char(100) COLLATE utf8_general_cs NOT NULL,"
                 . "`col_status` int(11) NOT NULL,"
                 . "PRIMARY KEY (`_id`), "
                 . "UNIQUE KEY idx_language (`col_language`)"
                 . ") ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8 COLLATE=utf8_general_cs";
        $dbconn->query($query);
    }

    public static function initialize(CB_DatabaseConnection $dbconn = null)
    {
        require_once("fw/i18n/locale.csp");
        foreach (
            CB_LanguageManager::getAllowedLanguagesByConfigurationFile() as $l
        ) {
            $language_status = new CB_LanguageStatus([
                "col_language" => $l,
                "col_status"   => static::$LANGUAGE_AVAILABLE
            ]);
            $language_status->insert();
        }

        // id changed when after initializetion.
        CB_LanguageManager::clear();
    }

    public static function selectByLanguage(
        $language_code,
        CB_DatabaseConnection $dbconn = null
    ) {
        if (is_null($dbconn)) {
            global $G_container_base;
            $dbconn = $G_container_base->getInstance("dbconn");
        }

        $escaped_language_code = $dbconn->escape($language_code);
        $query
            = "SELECT * FROM tab_cb_language_status WHERE col_language='{$escaped_language_code}';";

        $result = $dbconn->query($query);
        $row = $dbconn->fetch_assoc($result);
        $dbconn->free_result($result);

        if ($row === false) {
            return null;
        }

        return new CB_LanguageStatus($row);
    }

    /**
     * @static
     *
     * @param CB_DatabaseConnection|null $dbconn
     *
     * @return CB_LanguageStatus[]
     */
    public static function selectAll(CB_DatabaseConnection $dbconn = null)
    {
        if (is_null($dbconn)) {
            global $G_container_base;
            $dbconn = $G_container_base->getInstance("dbconn");
        }

        $query = "SELECT * FROM tab_cb_language_status;";

        $result = $dbconn->query($query);
        $ret = [];
        while ($row = $dbconn->fetch_assoc($result)) {
            $ret[] = new CB_LanguageStatus($row);
        }
        $dbconn->free_result($result);

        return $ret;
    }
}
