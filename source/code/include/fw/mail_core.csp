<?php
/**
 * Mail Core Interfaces.
 *
 * @author  Mizuno, Kuniaki     2004/07
 * @author  Miyabe, Tatsuhiko   2004/09
 * @version 1.0
 * @package fw.mail
 */

require_once('fw/transaction.csp');

/** Default timeout seconds. */
define('CB_MAIL_DEFAULT_TIMEOUT', 60);
define('CB_MAIL_DEFAULT_CHECK_TIMEOUT', 3);

/**
 * Interface for mail error listeners.
 *
 * @abstract
 * @package fw.mail
 */
class CB_MailErrorListener
{
    /**
     * Notify an error.
     *
     * @param string $errno An error code that associated with the error.
     *                      Positive number as protocol error or -1 as otherwise.
     * @param string $msg   Human readable message text.
     */
    function error($errno, $msg)
    {
    }
}

/**
 * Abstract class for mail connection services.
 *
 * @abstract
 * @package fw.mail
 */
class CB_MailService implements CB_Transactional
{
    /**
     * The logger object.
     *
     * @var object CB_Logger
     * @access private
     */
    var $_logger = null;

    /**
     * Set protocol logger.
     *
     * @param object $logger Instance of {@link CB_Logger}
     */
    function setLogger($logger)
    {
        $this->_logger = $logger;
    }

    /**
     * The error listener.
     *
     * @var object CB_ErrorListener
     * @access private
     */
    var $_listener = null;

    /**
     * Set error listener object.
     *
     * @param object $listener Instance of {@link CB_MailErrorListener}
     */
    function setErrorListener($listener)
    {
        $this->_listener = $listener;
    }

    /**
     * Constructor.
     */
    function __construct()
    {
    }

    /**
     * Opens a connection to the server.
     *
     * $info_array may have these keys:
     *   'hostname' => server hostname,
     *   'port'     => TCP port number,
     *   'uid'      => connecting user name,
     *   'domain'   => client domain name (e.g. domain name part of client mail address). default to 'localhost',
     *   'password' => credential,
     *   'timeout'  => timeout duration in seconds,
     *   'auth'     => implementation specific authentication mechanism.
     *
     * @param  array $info_array
     *
     * @return boolean    TRUE if the connect succeeds; otherwise FALSE.
     */
    function connect($info_array)
    {
    }

    /**
     * Checks connection status.
     *
     * @return boolean    TRUE if the system's connected; otherwise FALSE.
     */
    function isConnected()
    {
    }


    /**
     * Checks whether the service is available or not
     *
     * @param  array $info_array
     *   'hostname' => server hostname,
     *   'port'     => TCP port number,
     *   'timeout'  => timeout duration in seconds,
     *   'auth'     => implementation specific authentication mechanism.
     *
     * @return boolean
     */
    function isAvailable($info_array)
    {
    }

    public function commit()
    {
        return false;
    }

    public function abort()
    {
    }
}


