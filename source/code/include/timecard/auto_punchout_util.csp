<?php


/**
 * 日付の切り替わり時刻を取得する
 * システム設定の値はログイン直後、もしくは1時間に1回だけ参照する
 * 毎アクセスでシステム設定を参照するべきだが、負荷対策のための処置
 * 設定変更直後に最長1時間だけ自動打刻が行われない可能性がある
 * しかしそれによる実害はないとみて、パフォーマンスを優先する
 */
function __grn_timecard_change_of_day()
{
    require_once('fw/session_manager.csp');
    $session_manager = CB_SessionManager::getInstance();
    $session = $session_manager->getSession('timecard');

    $cod = $session->get('change_of_day');

    if ( ! is_null($cod)) {
        $update_timestamp = $session->get('change_of_day_update_timestamp');

        if ( ! is_null($update_timestamp)) {
            $tm = time() - $update_timestamp;

            if ($tm >= 0 && $tm < 3600) {
                // システム設定の値を参照するのは1時間に1回のみ
                $t = new CB_Time();
                $t->hour = $cod;
                $t->minute = 0;
                $t->second = 0;

                return $t;
            }
        }
    }

    require_once('timecard/config.csp');
    $config = GRN_Timecard_SystemConfig::getInstance();
    $change_of_day = $config->getChangeOfDay();

    $session->set('change_of_day', $change_of_day->hour);
    $session->set('change_of_day_update_timestamp', time());

    return $change_of_day;
}

/**
 * 同一日付のタイムスタンプかどうか判定する
 */
function grn_timecard_is_same_day($ts1, $ts2)
{
    require_once('fw/date.csp');

    $ts = new CB_TimeStamp();

    $ts->unix_ts = $ts1;
    $tsex1 = new CB_TimeStampEx($ts);
    $ts->unix_ts = $ts2;
    $tsex2 = new CB_TimeStampEx($ts);

    $change_of_day = __grn_timecard_change_of_day();

    $dt1 = $tsex1->getDateTime();
    $d1 = $dt1->getDate();

    $dt2 = $tsex2->getDateTime();
    $d2 = $dt2->getDate();

    $t1 = $dt1->getTime();

    if ($t1->compare($change_of_day) < 0) {
        $d1->moveDays(-1);
    }

    $t2 = $dt2->getTime();

    if ($t2->compare($change_of_day) < 0) {
        $d2->moveDays(-1);
    }

    return $d1->compare($d2) === 0;
}


