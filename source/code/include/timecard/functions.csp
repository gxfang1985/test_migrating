<?php


/**
 * 日付時刻クラスをTimeStampへ変換
 */
function grn_timecard_convert2timestamp($date)
{
    if (is_null($date)) {
        require_once('fw/date.csp');
        $date = new CB_TimeStampEx();

        return $date;
    }
    if (is_a($date, 'cb_date')) {
        require_once('fw/date.csp');
        $ts = new CB_TimeStampEx();
        $dt = $ts->getDateTime();
        $dt->setDate($date);
        $ts->setDateTime($dt);

        return $ts;
    }
    if (is_a($date, 'cb_datetime')) {
        require_once('fw/date.csp');
        $ts = new CB_TimeStampEx();
        $ts->setDateTime($date);

        return $ts;
    }
    if (is_a($date, 'cb_timestamp')) {
        if ( ! is_a($date, 'cb_timestampex')) {
            require_once('fw/date.csp');
            $date = new CB_TimeStampEx($date);
        }

        return $date;
    }

    return null;
}

/**
 * 日付時刻クラスをDateTimeへ変換
 */
function grn_timecard_convert2datetime($date)
{
    if (is_null($date)) {
        require_once('fw/date.csp');
        $date = new CB_TimeStampEx();

        return $date->getDateTime();
    }
    if (is_string($date)) {
        require_once('fw/date.csp');
        $dt = new CB_DateTime();
        $dt->parse($date);
        $date = new CB_DateTimeEx($dt);

        return $date;
    }
    if (is_a($date, 'cb_date')) {
        require_once('fw/date.csp');
        $dt = new CB_DateTime();
        $dt = new CB_DateTimeEx($dt);
        $dt->setDate($date);

        return $dt;
    }
    if (is_a($date, 'cb_datetime')) {
        if ( ! is_a($date, 'cb_datetimeex')) {
            require_once('fw/date.csp');
            $date = new CB_DateTimeEx($date);
        }

        return $date;
    }
    if (is_a($date, 'cb_timestamp')) {
        if ( ! is_a($date, 'cb_timestampex')) {
            require_once('fw/date.csp');
            $date = new CB_TimeStampEx($date);
        }

        return $date->getDateTime();
    }

    return null;
}

/**
 * 日付時刻クラスをDateへ変換
 */
function grn_timecard_convert2date($date)
{
    if (is_null($date)) {
        require_once('fw/date.csp');
        $date = new CB_TimeStampEx();

        return $date->getDate();
    }
    if (is_string($date)) {
        require_once('fw/date.csp');
        $d = new CB_Date();
        $d->parse($date);
        $date = new CB_DateEx($d);

        return $date;
    }
    if (is_a($date, 'cb_date')) {
        if ( ! is_a($date, 'cb_dateex')) {
            require_once('fw/date.csp');
            $date = new CB_DateEx($date);
        }

        return $date;
    }
    if (is_a($date, 'cb_datetime')) {
        if ( ! is_a($date, 'cb_datetimeex')) {
            require_once('fw/date.csp');
            $date = new CB_DateTimeEx($date);
        }

        return $date->getDate();
    }
    if (is_a($date, 'cb_timestamp')) {
        if ( ! is_a($date, 'cb_timestampex')) {
            require_once('fw/date.csp');
            $date = new CB_TimeStampEx($date);
        }

        return $date->getDate();
    }

    return null;
}

/**
 * 時刻のUIパラメータをTimeStampへ変換する
 */
function grn_timecard_argtime2timestamp($prefix, $date = null)
{
    global $G_INPUT;

    if ( ! array_key_exists($prefix . '_hour', $G_INPUT)
         && ! array_key_exists($prefix . '_minute', $G_INPUT)
    ) {
        return false;
    }

    if ( ! array_key_exists($prefix . '_hour', $G_INPUT)
         || strlen($G_INPUT[$prefix . '_hour']) < 1
    ) {
        if ( ! array_key_exists($prefix . '_minute', $G_INPUT)
             || strlen($G_INPUT[$prefix . '_minute']) < 1
        ) {
            return null;
        }

        require_once('fw/date.csp');
        $ts = new CB_TimeStampEx();
        $dt = $ts->getDateTime();

        if ( ! is_null($date)) {
            $dt->setDate($date);
        }

        $tm = new CB_Time();
        $tm->hour = 0;
        $tm->minute = intval($G_INPUT[$prefix . '_minute']);
        $tm->second = 0;
        $dt->setTime($tm);

        $ts->setDateTime($dt);

        return $ts;
    }

    require_once('fw/date.csp');
    $ts = new CB_TimeStampEx();
    $dt = $ts->getDateTime();

    $tm = new CB_Time();
    $tm->hour = intval($G_INPUT[$prefix . '_hour']);

    if (array_key_exists($prefix . '_minute', $G_INPUT)
        && strlen($G_INPUT[$prefix . '_minute']) > 0
    ) {
        $tm->minute = intval($G_INPUT[$prefix . '_minute']);
    }
    $tm->second = 0;

    if ( ! is_null($date)) {
        $dt->setDate($date);
    }

    static $_change_of_day = null;

    if (is_null($_change_of_day)) {
        require_once('timecard/config.csp');
        $config = GRN_Timecard_SystemConfig::getInstance();
        $_change_of_day = $config->getChangeOfDay();
    }

    if ($_change_of_day->hour > 0
        && (0 <= $tm->hour
            && $tm->hour < $_change_of_day->hour)
    ) {
        // 日付の切り替わり時刻を過ぎていれば1日進める
        $dt->moveDays(1);
    }

    $dt->setTime($tm);

    $ts->setDateTime($dt);

    return $ts;
}

/**
 * 日付のUIパラメータをDateへ変換する
 */
function grn_timecard_argdate($prefix)
{
    global $G_INPUT;

    if ( ! array_key_exists($prefix . '_year', $G_INPUT)) {
        return null;
    }
    if ( ! array_key_exists($prefix . '_month', $G_INPUT)) {
        return null;
    }
    if ( ! array_key_exists($prefix . '_day', $G_INPUT)) {
        return null;
    }

    $date = new CB_Date();
    $date->year = intval($G_INPUT[$prefix . '_year']);
    $date->month = intval($G_INPUT[$prefix . '_month']);
    $date->day = intval($G_INPUT[$prefix . '_day']);

    require_once('fw/date.csp');
    $date = new CB_DateEx($date);

    return $date;
}

/**
 * タイムカードトップへ戻る際の日付引数を生成する
 */
function grn_timecard_index_date($date)
{
    require_once('timecard/application.csp');
    $app = GRN_Timecard::getInstance();
    $config =& $app->getSystemConfig();

    $offset = $config->getOffsetDay();

    if (is_string($date)) {
        $str = $date;
        $date = new CB_Date();
        $date->parse($str);
    }

    if (is_null($date) || ! is_a($date, 'cb_date')) {
        require_once('fw/date.csp');
        $ts = new CB_TimeStampEx();
        $date = $ts->getDate();
        $date->day = $offset;

        return $date->format();
    }

    if ($offset > 1 && $date->day >= $offset) {
        if ( ! is_a($date, 'cb_dateex')) {
            require_once('fw/date.csp');
            $date = new CB_DateEx($date);
        }
        $date->moveMonths(1);
        $date->day = 1;
    }

    return $date->format();
}


/**
 * CSVに項目名を書き出す
 */
function grn_timecard_write_csv_header(& $writer)
{
    require_once('fw/i18n.csp');

    $header = [];
    $header[] = cb_msg('grn.timecard', 'csv_header_user_foreign_key');
    $header[] = cb_msg('grn.timecard', 'csv_header_user_display_name');
    $header[] = cb_msg('grn.timecard', 'csv_header_date');
    $header[] = cb_msg('grn.timecard', 'csv_header_record_in');
    $header[] = cb_msg('grn.timecard', 'csv_header_record_in_ip');
    $header[] = cb_msg('grn.timecard', 'csv_header_record_out');
    $header[] = cb_msg('grn.timecard', 'csv_header_record_out_ip');

    require_once('timecard/config.csp');
    $config = GRN_Timecard_SystemConfig::getInstance();
    $absence_max = $config->getAbsenceMax();

    for ($i = 0; $i < $absence_max; ++$i) {
        $header[] = cb_msg('grn.timecard', 'csv_header_absence_out');
        $header[] = cb_msg('grn.timecard', 'csv_header_absence_out_ip');
        $header[] = cb_msg('grn.timecard', 'csv_header_absence_in');
        $header[] = cb_msg('grn.timecard', 'csv_header_absence_in_ip');
    }

    $header[] = cb_msg('grn.timecard', 'csv_header_record_description');

    $writer->writeLine($header);
}


