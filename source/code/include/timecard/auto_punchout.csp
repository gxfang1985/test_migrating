<?php
/**
 *
 * タイムカードの自動打刻
 *
 */

use grn\grn\access\service\AppAccess;

global $G_INPUT;
global $G_config_common;

if ( ! cb_is_init_process()) {
    $login = cb_get_login_user();
    $can_use_timecard = AppAccess::isAppAvailable('timecard');

    // 引数による自動打刻回避をサポート
    if (( ! array_key_exists('_notimecard', $G_INPUT)
          || ! $G_INPUT['_notimecard'])
        && ! array_key_exists('WSDL', $G_INPUT)
        && $can_use_timecard
    ) {
        if (is_a($login, 'CB_User')) {
            $page_parts = explode('/', strtolower(cb_get_pagename()));
            if (count($page_parts) < 1 || $page_parts[0] == 'index') {
                $page_parts = ['portal', 'index'];
            }

            // code/doc_root/grn 以下は自動打刻しない
            if (strcmp($page_parts[0], 'grn') != 0) {
                require_once('grn/application.csp');
                $locator = GRN_ApplicationLocator::instance();

                $app_config = $locator->getConfig($page_parts[0]);

                $enable_punchout = true;

                if (isset($app_config['auto_punchout'])) {
                    $cfg = $app_config['auto_punchout'];

                    if (strcasecmp($cfg, 'plugin') == 0) {
                        // プラグインに実行の可否を判断させる
                        require_once('fw/plugin.csp');
                        $punchout_plugin = new CB_PluginLoader('grn.'
                                                               . $page_parts[0]);
                        $funcs
                            = $punchout_plugin->loadHooks('auto_punchout');
                        foreach ($funcs as $func) {
                            $result = $func();

                            if ( ! $result) {
                                $enable_punchout = false;
                                break;
                            }
                        }
                        unset($punchout_plugin, $funcs, $func, $result);
                    } else {
                        if (strlen($cfg) < 1 || $cfg == '0') {
                            $enable_punchout = false;
                        }
                    }
                    unset($cfg);
                }

                if ($enable_punchout) {
                    require_once('fw/session_manager.csp');
                    $session_manager = CB_SessionManager::getInstance();
                    $session = $session_manager->getSession('timecard');

                    // このセッションで自動打刻したかどうかをチェック
                    // @see code/plugin/fw/uum/logout/auto_punchout.csp
                    if ( ! ($auto_punchout_timestamp
                        = $session->get('auto_punchout_timestamp'))
                    ) {
                        // タイムカードが使用可能かチェック
                        // タイムカードへのアクセスの場合は既にアクセス可能と判定されている
                        // プロファイルを参照されるのでギリギリまで「isActive()」を遅らせている
                        if ($page_parts[0] == 'timecard'
                            || $locator->isActive('timecard')
                        ) {
                            require_once('timecard/config.csp');
                            $config = GRN_Timecard_SystemConfig::getInstance();

                            // 自動打刻機能のON/OFFを確認
                            if ($config->getEnableAutoPunchOut()) {
                                require_once('timecard/logic.csp');
                                $logic = GRN_Timecard_Logic::getInstance();
                                $logic->punchOut($login,
                                    GRN_TIMECARD_AUTO_PUNCHOUT);

                                // 自動打刻した時刻をセッションに記録
                                $session->set('auto_punchout_timestamp',
                                    time());

                                unset($logic);
                            }
                            unset($config);
                        }
                    } else {
                        // ログインしっぱなしの場合があるので日付の切り替わりを判定する

                        $last_timestamp
                            = $session->get('last_access_timestamp');

                        if ($last_timestamp) {
                            $now = time();

                            // 最後の自動打刻から日付が変わっているかチェック
                            require_once('timecard/auto_punchout_util.csp');

                            if ( ! grn_timecard_is_same_day($auto_punchout_timestamp,
                                $now)
                            ) {
                                // タイムカードの使用設定を判別
                                if ($page_parts[0] == 'timecard'
                                    || $locator->isActive('timecard')
                                ) {
                                    require_once('timecard/config.csp');
                                    $config
                                        = GRN_Timecard_SystemConfig::getInstance();

                                    // 自動打刻機能のON/OFFを確認
                                    if ($config->getEnableAutoPunchOut()) {
                                        require_once('timecard/logic.csp');
                                        $logic
                                            = GRN_Timecard_Logic::getInstance();
                                        $logic->punchOut($login,
                                            GRN_TIMECARD_AUTO_PUNCHOUT);
                                        $session->set('auto_punchout_timestamp',
                                            $now);
                                        unset($logic);
                                    }
                                    unset($config);
                                }
                            } // 最後のアクセスから5分以上経過していればタイムスタンプを更新
                            elseif (($now - $last_timestamp) > 300) {
                                // タイムカードの使用設定を判別
                                if ($page_parts[0] == 'timecard'
                                    || $locator->isActive('timecard')
                                ) {
                                    require_once('timecard/config.csp');
                                    $config
                                        = GRN_Timecard_SystemConfig::getInstance();

                                    // 自動打刻機能のON/OFFを確認
                                    if ($config->getEnableAutoPunchOut()) {
                                        require_once('timecard/last_access.csp');
                                        $ts = new CB_TimeStamp();
                                        $ts->unix_ts = $now;
                                        grn_timecard_update_last_access($login);
                                    }
                                    unset($config);
                                }
                            }
                            unset($now);
                        } else {
                            // タイムカードの使用設定を判別
                            if ($page_parts[0] == 'timecard'
                                || $locator->isActive('timecard')
                            ) {
                                require_once('timecard/config.csp');
                                $config
                                    = GRN_Timecard_SystemConfig::getInstance();

                                // 自動打刻機能のON/OFFを確認
                                if ($config->getEnableAutoPunchOut()) {
                                    require_once('timecard/last_access.csp');
                                    grn_timecard_update_last_access($login);
                                }
                                unset($config);
                            }
                        }
                        unset($last_timestamp);
                    }
                    unset($session_manager, $session);
                }
                unset($locator, $app_config, $enable_punchout);
            }
            unset($page_parts);
        }
        unset($login);
    }
}


