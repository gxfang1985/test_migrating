<?php

namespace grn\bulletin\logic;

require_once("bulletin/BulletinFacade.csp");

class BulletinAdjustSubscribeLogic
{
    private static $_instance = null;

    /**
     * Constructor
     */
    public function __construct()
    {

    }

    /**
     * @return BulletinAdjustSubscribeLogic
     */
    public static function getInstance()
    {
        if ( ! isset(self::$_instance)) {
            $c = __CLASS__;
            self::$_instance = new $c;
        }

        return self::$_instance;
    }

    /**
     *
     * @param string $category_id
     * @param string $parent_category_id
     */
    public function applySubscribeFromParentCategory(
        $category_id,
        $parent_category_id
    ) {
        if ( ! $category_id || ! $parent_category_id) {
            return;
        }

        $category_ids = [];
        $category_ids[] = $category_id;
        $category_ids[] = $parent_category_id;

        $dao = new \BulletinFacade();
        $category_force_notify
            = $dao->selectCategoryForceNotify($category_ids);
        $dynamic_roles_notification_category
            = $dao->selectDynamicRolesNotificationCategory($category_ids);
        $roles_notification_category
            = $dao->selectRolesNotificationCategory($category_ids);
        $groups_notification_category
            = $dao->selectGroupsNotificationCategory($category_ids);
        $users_notification_category
            = $dao->selectUsersNotificationCategory($category_ids);

        $parent_category_user_ids = [];
        $category_user_ids = [];

        $parent_category_user_ids += $roles_notification_category[$parent_category_id];
        $category_user_ids += $roles_notification_category[$category_id];

        $parent_category_user_ids += $groups_notification_category[$parent_category_id];
        $category_user_ids += $groups_notification_category[$category_id];

        $parent_category_user_ids += $users_notification_category[$parent_category_id];
        $category_user_ids += $users_notification_category[$category_id];

        $subscribe_category_user_ids
            = $dao->selectCategorySubscribeByCategoryId($parent_category_id);
        $dao->insertFromParentCategorySubscribe($category_id,
            $subscribe_category_user_ids);

        if ($category_force_notify[$parent_category_id]) {
            if ($dynamic_roles_notification_category[$parent_category_id]) {
                $not_in_user_ids = $category_user_ids;
                $dao->insertFromParentCategorySubscribeAllUser($category_id,
                    $not_in_user_ids);
            } else {
                $user_ids = array_diff($parent_category_user_ids,
                    $category_user_ids);
                $dao->insertFromParentCategorySubscribe($category_id,
                    $user_ids);
            }
        } else {
            $unsubscribe_category_user_ids
                = $dao->selectUnSubscribeCategoryUserByCategoryId($parent_category_id);
            if ($dynamic_roles_notification_category[$parent_category_id]) {
                $not_in_user_ids = $unsubscribe_category_user_ids
                                   + $category_user_ids;
                $dao->insertFromParentCategorySubscribeAllUser($category_id,
                    $not_in_user_ids);
            } else {
                $user_ids = array_diff($parent_category_user_ids,
                    $unsubscribe_category_user_ids);
                $dao->insertFromParentCategorySubscribe($category_id,
                    $user_ids);
            }
        }
    }

    /**
     * @param string $user_id
     * @param array  $category_ids             ['category_id'=>'other',... ]
     * @param array  $unsubscribe_category_ids ['category_id'=>'category_id', ...]
     *
     * @return array
     */
    public function evaluateSubscribeCategoryIds(
        $user_id,
        array $category_ids,
        array $unsubscribe_category_ids
    ) {
        if (count($category_ids) === 0
            || count($unsubscribe_category_ids) === 0
        ) {
            return $category_ids;
        }

        $subscribe_category_ids = array_keys($category_ids);

        $dao = new \BulletinFacade();
        $category_force_notify
            = $dao->selectCategoryForceNotify($subscribe_category_ids);
        $dynamic_roles_notification_category
            = $dao->selectDynamicRolesNotificationCategory($subscribe_category_ids);
        $roles_notification_category
            = $dao->selectRolesNotificationCategory($subscribe_category_ids);
        $groups_notification_category
            = $dao->selectGroupsNotificationCategory($subscribe_category_ids);
        $users_notification_category
            = $dao->selectUsersNotificationCategory($subscribe_category_ids);

        foreach ($subscribe_category_ids as $subscribe_category_id) {
            if ( ! isset($unsubscribe_category_ids[$subscribe_category_id])) {
                continue;
            }
            if ( ! $category_force_notify[$subscribe_category_id]
                 && (isset($dynamic_roles_notification_category[$subscribe_category_id])
                     || isset($roles_notification_category[$subscribe_category_id][$user_id])
                     || isset($groups_notification_category[$subscribe_category_id][$user_id])
                     || isset($users_notification_category[$subscribe_category_id][$user_id]))
            ) {
                unset($category_ids[$subscribe_category_id]);
            }
        }

        return $category_ids;
    }
}
