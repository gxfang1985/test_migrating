<?php

namespace grn\bulletin\screen;

use grn\grn\dialog\screen\AbstractAjaxMemberDialogScreen;

/**
 * Class AjaxMaintainerDialogScreen
 *
 * @package grn\bulletin\screen
 */
class AjaxMaintainerDialogScreen extends AbstractAjaxMemberDialogScreen
{
    /** Input parameter : Primary key for search */
    private $input_primary_key;
    /** Input parameter : Display page number */
    private $input_want_page;
    /** Input parameter : Search word */
    private $input_search_word;
    /** Input parameter : Access plugin */
    private $input_access_plugin;
    /** Input parameter : Application ID */
    private $input_app_id;

    /**
     * AjaxMaintainerDialogScreen constructor.
     *
     * @param $input
     */
    function __construct($input)
    {
        parent::__construct($input);

        $this->setInput($input);
    }

    /**
     * Set Input.
     *
     * @param $input array
     */
    private function setInput($input)
    {
        $anchor_id = cb_at($input, 'anchor_id', '');
        $this->input_primary_key = str_replace('maintainer_list_dialog_', '',
            $anchor_id);

        $this->input_want_page = cb_at($input, 'want_page', 1);

        $this->input_search_word = cb_at($input, 'search_word', '');

        $this->input_app_id = cb_at($input, 'app_id', '');

        $this->keep_no_privilege_user = true;
    }

    /**
     * @return int
     */
    protected function getWantPage()
    {
        return $this->input_want_page;
    }

    /**
     * @return string
     */
    protected function getSearchWord()
    {
        return $this->input_search_word;
    }

    /**
     * @return string
     */
    protected function getPrimaryKey()
    {
        return $this->input_primary_key;
    }

    /**
     * @return mixed
     */
    protected function getAccessPlugin()
    {
        return $this->input_access_plugin;
    }

    /**
     * @return string
     */
    protected function getAppId()
    {
        return $this->input_app_id;
    }

    /**
     * @return boolean
     */
    protected function useSearchItem()
    {
        return false;
    }

    /**
     * @return boolean
     */
    protected function isSearch()
    {
        if (strlen($this->input_search_word) > 0) {
            return true;
        }

        return false;
    }

    /**
     * @return bool
     */
    public function useBackButton()
    {
        return false;
    }

    /**
     * @return bool
     */
    protected function useSwitchTab()
    {
        return false;
    }

    /**
     * @return array()
     */
    protected function getSwitchTabCaption()
    {
        return null;
    }

    /**
     * @param boolean $include_search
     *
     * @return array
     */
    protected function _setDisplayMembersId($include_search = false)
    {
        require_once('grn/application.csp');
        $locator = \GRN_ApplicationLocator::instance();
        if ( ! ($G_bulletin = $locator->getInstance('bulletin'))) {
            cb_throw_error(E_GRN_BULLETIN_DEACTIVATED);
        }

        /** @var \GRN_Bulletin_Article $article */
        if ( ! ($article = $G_bulletin->getArticle($this->login_user,
            $this->getPrimaryKey()))
        ) {
            cb_throw_error(E_GRN_BULLETIN_ARTICLE_NOT_FOUND);
        }

        // 変更権限をチェック
        $article->isModifiable($this->login_user, true);

        $user_ids = [];

        // Add creator id
        $user_ids[] = $article->getId('creator');

        require_once('grn/controller.csp');
        require_once('bulletin/BulletinFacade.csp');
        $dao = new \BulletinFacade();
        $maintainer_list = $dao->getOperatorListByArticleId([],
            $article->getOID(), false);

        foreach ($maintainer_list as $maintainer_id => $maintainer) {
            $user_ids[] = $maintainer_id;
        }

        // Remove deleted user.
        global $G_container_base;
        $uum = $G_container_base->getInstance('uum');
        $users_info = $uum->getUsersInfo($user_ids);

        foreach (array_keys($users_info) as $id) {
            $this->addUser($id);
        }
    }

    /**
     * @return string
     */
    protected function createDialogTitle()
    {
        $count = count($this->getDisplayMembersId(false));

        return cb_msg('grn.bulletin', 'maintainer_dialog_title',
            ['count' => $count]);
    }
}
