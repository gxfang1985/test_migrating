<?php

/**
 * 掲示板、記事ユーティリティ
 *
 * @author  Tanaka, Yoshiaki        2004/11
 * @package grn.bulletin
 */

require_once('fw/i18n.csp');
require_once('bulletin/BulletinFacade.csp');
require_once('bulletin/base_util.csp');
require_once('bulletin/article.csp');
require_once('bulletin/article_condition.csp');
require_once('bulletin/bean/GrnBulletinArticleCondition.csp');
require_once('grn/application.csp');

class GRN_Bulletin_ArticleListBase
{
    private $_articleTableInfo = null;
    /** @var GrnBulletinArticleCondition */
    private $_conditionObj = null;
    private $_lock_mode = CB_DATABASE_DEFAULT_LOCK;
    private $_count = 0;

    protected function __construct($conditionObj)
    {
        $this->_setConditionObj($conditionObj);

        $app_locator = GRN_ApplicationLocator::instance();
        $tm = $app_locator->getTableManager('bulletin');
        $tableInfoObj = $tm->getTableInfo('GRN_Bulletin_ArticleEntity');

        $this->_setArticleTableInfo($tableInfoObj);
    }

    public function getLockMode()
    {
        return $this->_lock_mode;
    }

    public function setLockMode($value)
    {
        $this->_lock_mode = $value;
    }

    protected function _setConditionObj($conditionObj)
    {
        $this->_conditionObj = $conditionObj;
    }

    protected function _getConditionObj()
    {
        return $this->_conditionObj;
    }

    protected function _setArticleTableInfo($tableInfo)
    {
        $this->_articleTableInfo = $tableInfo;
    }

    protected function _getArticleTableInfo()
    {
        return $this->_articleTableInfo;
    }

    protected function setCount($value)
    {
        $this->_count = $value;
    }

    /**
     * 一覧件数を取得する
     */
    public function count()
    {
        return $this->_count;
    }

    /**
     * @return GRN_Bulletin_Article[] | GrnBulletinArticle[]
     *
     * @param $convertResultToArticleArray boolean
     */
    public function searchExecute($convertResultToArticleArray = true)
    {
        if ($this->checkAuthority() === false) {
            return [];
        }
        $articleList = $this->_getArticleList();
        if ($convertResultToArticleArray) {
            $resultArray = [];
            $factory = GRN_Bulletin_ArticleFactory::getInstance();
            foreach ($articleList as $article) {
                $row = $this->_getArticleTableInfo()
                            ->getRow($article->getId(),
                                $article->convertArray());
                $articleId = $row->getOID();
                $resultArray[$articleId] = $factory->row2object($row);
            }

            return $resultArray;
        }

        return $articleList;
    }


    public function listDatas()
    {
        if ($this->checkAuthority() === false) {
            return [];
        }

        $articleList = $this->_getArticleList(false);

        return $this->createDisplayArticleData($articleList);
    }


    /**
     * 設定された一覧順序で指定データの直前のデータIDを取得する
     *
     * @return string
     */
    public function getPreviousID()
    {
        if (is_null($this->_getConditionObj()->getArticle())
            || $this->checkAuthority() === false
        ) {
            return false;
        }

        $i18n = CB_I18N::getInstance();
        $dao = new BulletinFacade();
        $dataObj = [];
        $dataObj['lock'] = $this->getLockMode();
        $dataObj['language'] = $i18n->getCurrentLanguage();

        $article = $dao->referBulletinPreviousArticleByCondition($dataObj,
            $this->_getConditionObj());

        return ($article === false) ? false : $article->getId();
    }


    /**
     * 設定された一覧順序で指定データの直後のデータIDを取得する
     *
     * @return bool
     */
    public function getNextID()
    {
        if (is_null($this->_getConditionObj()->getArticle())
            || $this->checkAuthority() === false
        ) {
            return false;
        }

        $i18n = CB_I18N::getInstance();
        $dao = new BulletinFacade();
        $dataObj = [];
        $dataObj['lock'] = $this->getLockMode();
        $dataObj['language'] = $i18n->getCurrentLanguage();

        $article = $dao->referBulletinNextArticleByCondition($dataObj,
            $this->_getConditionObj());

        return ($article === false) ? false : $article->getId();
    }

    protected function checkAuthority()
    {
        //サブクラスに実装を任せる
        return false;
    }

    protected function createDisplayArticleData($inArticleList)
    {
        //サブクラスに実装を任せる
        return [];
    }

    /**
     * 検索結果行を表示データへ変換する
     *
     * @param GrnBulletinArticle $articleObj
     *
     * @return array|null
     */
    protected function _convertDisplayData($articleObj)
    {
        if ( ! $articleObj) {
            return null;
        }

        require_once('fw/date.csp');

        $result = [];

        $result['aid'] = $articleObj->getId();
        $result['title'] = $articleObj->getSubject();
        $result['start_is_datetime'] = $articleObj->getStartIsDatetime();
        $result['col_end_is_datetime'] = $articleObj->getEndIsDatetime();
        $result['data'] = $articleObj->getData();
        $result['html'] = $articleObj->getHtml();
        $result['creator_uid'] = $articleObj->getCreator();
        $result['creator_name'] = $articleObj->getCreatorName();
        $result['modifier_uid'] = $articleObj->getModifier();
        $result['modifier_name'] = $articleObj->getModifierName();
        $result['notifier_uid'] = $articleObj->getNotifier();
        $result['notifier_name'] = $articleObj->getNotifierName();
        $result['cid'] = $articleObj->getCategory();
        $result['category_name'] = $articleObj->getCategoryName();
        $result['group_name'] = $articleObj->getGroupName();
        $result['manually_enter_sender']
            = $articleObj->getManuallyEnterSenderName();

        $startUnixts = $articleObj->getStartTimestamp();
        $result['stime'] = ($startUnixts)
            ? cb_timestamp_to_datetime($startUnixts) : null;

        $endUnixts = $articleObj->getEndTimestamp();
        $result['etime'] = ($endUnixts) ? cb_timestamp_to_datetime($endUnixts)
            : null;

        $now = time();
        if (is_null($startUnixts) || ($startUnixts <= $now)) {
            $result['published'] = 1;

            if ( ! is_null($endUnixts) && ($endUnixts < $now)) {
                $result['expired'] = 1;
            }
        }

        $t = new CB_TimeStamp();
        $t->unix_ts = $articleObj->getCtime();
        $result['ctime'] = $t;

        $t = new CB_TimeStamp();
        $t->unix_ts = $articleObj->getMtime();
        $result['mtime'] = $t;

        $t = new CB_TimeStamp();
        $t->unix_ts = $articleObj->getNtime();
        $result['ntime'] = $t;

        $t = new CB_TimeStamp();
        $t->unix_ts = $articleObj->getReadTimestamp();
        if (is_null($t->unix_ts)) {
            $result['unread'] = -1;
        } elseif ($result['ntime']->unix_ts > $t->unix_ts) {
            $result['unread'] = 1;
        } else {
            $result['unread'] = 0;
        }

        return $result;
    }

    private function _getArticleList($setCalcFoundRows = true)
    {
        $i18n = CB_I18N::getInstance();

        $dao = new BulletinFacade();
        $dao->setCalcFoundRows($setCalcFoundRows);

        $dataObj = [];
        $dataObj['lock'] = $this->getLockMode();
        $dataObj['language'] = $i18n->getCurrentLanguage();

        $articleList = $dao->getBulletinArticleListByCondition($dataObj,
            $this->_getConditionObj());

        //--- 検索ヒット数 ---
        $articleSearchAllCount = $dao->getCalcFoundRows($dataObj);
        $this->setCount($articleSearchAllCount);

        return $articleList;
    }
}


/**
 * 掲示記事一覧
 *
 * @package grn.bulletin
 */
class GRN_Bulletin_ArticleList extends GRN_Bulletin_ArticleListBase
{
    public function __construct($conditionObj)
    {
        parent::__construct($conditionObj);
    }

    protected function checkAuthority()
    {
        if (is_null($this->_getConditionObj()->getUser())) {
            return false;
        }

        /**
         * システム設定用に全カテゴリでの一覧を許可しているので
         * カテゴリ指定がない場合は管理者権限をチェック
         */
        if (is_null($this->_getConditionObj()->getCategory())
            || $this->_getConditionObj()->getArticleTerm() != 'published'
        ) {
            require_once('bulletin/access.csp');
            $acc = GRN_Bulletin_AccessManager::getInstance();

            if ( ! $acc->isSuperAdmin($this->_getConditionObj()->getUser())) {
                $user = $this->_getConditionObj()->getUser();
                $category = $this->_getConditionObj()->getCategory();
                if (is_null($this->_getConditionObj()->getCategory())
                    || ! $acc->isAdmin($user, $category)
                ) {
                    return false;
                }
            }
        }

        return true;
    }

    public function createDisplayArticleData($inArticleList)
    {
        $resultArray = [];
        $articleIds = [];
        foreach ($inArticleList as $article) {
            $articleArray = $this->_convertDisplayData($article);
            $articleId = $article->getId();
            $articleIds[] = $articleId;

            $resultArray[$articleId] = $articleArray;
        }

        if (count($resultArray) <= 0) {
            return $resultArray;
        }

        $app_locator = GRN_ApplicationLocator::instance();
        $db = $app_locator->getConnection('bulletin');

        $conditions = [];
        $conditions[] = "col_follow IS NULL";
        $conditions[] = "col_file IS NOT NULL";
        $conditions[] = cb_queryf($db, "col_article IN (@A)",
            array_values($articleIds));

        $query
            = "SELECT DISTINCT col_article FROM tab_grn_bulletin_filerelation WHERE "
              . implode(' AND ', $conditions) . ";";

        if (cb_is_db_result(($result = $db->query($query)))) {
            while (($row = $db->fetch_row($result)) !== false) {
                $resultArray[$row[0]]['file_attached'] = 1;
            }
            $db->free_result($result);
        }

        return $resultArray;
    }
}

/**
 * 掲示期間前の記事一覧
 *
 * @package grn.bulletin
 */
class GRN_Bulletin_ArticleBeforeList extends GRN_Bulletin_ArticleListBase
{
    public function __construct($conditionObj)
    {
        parent::__construct($conditionObj);
    }

    protected function checkAuthority()
    {
        if (is_null($this->_getConditionObj()->getUser())) {
            return false;
        }

        if ($this->_getConditionObj()->isPersonal() == false) {
            /**
             * システム設定用に全一覧を許可しているので
             * ユーザー指定がない場合は管理者権限をチェック
             */
            require_once('bulletin/access.csp');
            $acc = GRN_Bulletin_AccessManager::getInstance();
            if ( ! $acc->isSuperAdmin($this->_getConditionObj()->getUser())) {
                $user = $this->_getConditionObj()->getUser();
                $category = $this->_getConditionObj()->getCategory();
                if (is_null($this->_getConditionObj()->getCategory())
                    || ! $acc->isAdmin($user, $category)
                ) {
                    return false;
                }
            }
        }

        return true;
    }

    protected function createDisplayArticleData($inArticleList)
    {
        $resultArray = [];
        $articleIds = [];

        require_once('bulletin/access.csp');
        $acc = GRN_Bulletin_AccessManager::getInstance();

        foreach ($inArticleList as $article) {
            $articleArray = $this->_convertDisplayData($article);
            $articleId = $article->getId();
            $articleIds[] = $articleId;

            $resultArray[$articleId] = $articleArray;

            if ($resultArray[$articleId]['cid']) {
                $user = $this->_getConditionObj()->getUser();
                $auth = $acc->getAuthorities($user,
                    $resultArray[$articleId]['cid']);

                if ( ! $auth['read']) {
                    $resultArray[$articleId]['category_name'] = null;
                }
                if ( ! $auth['write']) {
                    $resultArray[$articleId]['cid'] = null;
                }
            } else {
                $resultArray[$articleId]['cid'] = 'deleted';
            }
        }

        if (count($resultArray) <= 0) {
            return $resultArray;
        }

        $app_locator = GRN_ApplicationLocator::instance();
        $db = $app_locator->getConnection('bulletin');

        // 添付ファイル有無
        $conditions = [];
        $conditions[] = "col_follow IS NULL";
        $conditions[] = "col_file IS NOT NULL";
        $conditions[] = cb_queryf($db, "col_article IN (@A)",
            array_values($articleIds));

        $query
            = "SELECT DISTINCT col_article FROM tab_grn_bulletin_filerelation WHERE "
              . implode(' AND ', $conditions) . ";";

        if (cb_is_db_result(($result = $db->query($query)))) {
            while (($row = $db->fetch_row($result)) !== false) {
                $resultArray[$row[0]]['file_attached'] = 1;
            }
            $db->free_result($result);
        }

        return $resultArray;
    }
}

/**
 * 掲示期間を過ぎた記事の一覧
 *
 * @package grn.bulletin
 */
class GRN_Bulletin_ArticleExpiredList extends GRN_Bulletin_ArticleListBase
{
    public function __construct($conditionObj)
    {
        parent::__construct($conditionObj);
    }

    protected function checkAuthority()
    {
        /**
         * システム設定用に全カテゴリでの一覧を許可しているので
         * カテゴリ指定がない場合は管理者権限をチェック
         */
        if (is_null($this->_getConditionObj()->getCategory())) {
            require_once('bulletin/access.csp');
            $acc = GRN_Bulletin_AccessManager::getInstance();
            if ( ! $acc->isSuperAdmin($this->_getConditionObj()->getUser())) {
                return false;
            }
        }

        return true;
    }
}

/**
 * 更新されていない記事の一覧
 *
 * @package grn.bulletin
 */
class GRN_Bulletin_ArticleDerelictList extends GRN_Bulletin_ArticleListBase
{
    public function __construct($conditionObj)
    {
        parent::__construct($conditionObj);
    }

    protected function checkAuthority()
    {
        /**
         * システム設定用に全カテゴリでの一覧を許可しているので
         * カテゴリ指定がない場合は管理者権限をチェック
         */
        if (is_null($this->_getConditionObj()->getCategory())) {
            require_once('bulletin/access.csp');
            $acc = GRN_Bulletin_AccessManager::getInstance();
            if ( ! $acc->isSuperAdmin($this->_getConditionObj()->getUser())) {
                return false;
            }
        }

        return true;
    }
}


