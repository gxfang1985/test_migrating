<?php

/**
 * カテゴリ検索ロジック
 *
 * @author  panfeng        2015/10
 * @package grn.bulletin
 */
require_once('grn/application.csp');

class GRN_Bulletin_FtsSearchBase
{
    /**
     * @var CB_TableInfo|null
     */
    private $_tab_category = null;
    /**
     * @var null
     */
    private $_user = null;

    /**
     * @var int
     */
    private $_count = 0;
    /**
     * @var GrnBulletinCategoryCondition $_bulletinConditionBean
     */
    private $_bulletinConditionBean = null;


    /**
     * @param object                       $inUser
     * @param GrnBulletinCategoryCondition $inConditionBean
     */
    protected function __construct($inUser, $inConditionBean)
    {
        $this->_tab_category = cb_class2table('grn_bulletin_categoryentity');
        $this->setUser($inUser);
        $this->setBulletinConditionBean($inConditionBean);
    }

    /**
     * @return CB_TableInfo|null
     */
    protected function getCategoryTableInfo()
    {
        return $this->_tab_category;
    }

    /**
     * @param object $value
     */
    protected function setUser($value)
    {
        $this->_user = $value;
    }

    /**
     * @return object
     */
    protected function getUser()
    {
        return $this->_user;
    }

    /**
     * @param GrnBulletinCategoryCondition $value
     */
    private function setBulletinConditionBean($value)
    {
        $this->_bulletinConditionBean = $value;
    }

    /**
     * @return GrnBulletinCategoryCondition
     */
    protected function getBulletinConditionBean()
    {
        return $this->_bulletinConditionBean;
    }

    // BulletinCategoryConditionBean accessor adapter   start
    protected function getCategoryId()
    {
        return $this->getBulletinConditionBean()->getCategoryId();
    }

    protected function getText()
    {
        return $this->getBulletinConditionBean()->getText();
    }

    protected function isSearchAll()
    {
        return $this->getBulletinConditionBean()->isSearchAll();
    }

    protected function setOffset($offset)
    {
        $this->getBulletinConditionBean()->setOffset($offset);
    }

    protected function getOffset()
    {
        return $this->getBulletinConditionBean()->getOffset();
    }

    protected function getLimit()
    {
        return $this->getBulletinConditionBean()->getLimit();
    }
    // BulletinCategoryConditionBean accessor adapter   end

    /**
     * @param $value
     */
    protected function setCount($value)
    {
        $this->_count = $value;
    }

    /**
     * @return int
     */
    public function count()
    {
        return $this->_count;
    }

    /**
     * 検索対象カテゴリを取得
     *
     * @return array array( [ObjectID] => 1 )
     */
    protected function _getSearchTargetCategoryList()
    {
        $categoryArray = [];

        require_once('bulletin/category.csp');
        $factory = GRN_Bulletin_CategoryFactory::getInstance();

        $startCategoryId = $this->isSearchAll() ? GRN_BULLETIN_ROOT_CATEGORY_ID
            : $this->getCategoryId();
        if ( ! ($category = $factory->get($startCategoryId))) {
            return null;
        }

        $categoryArray[$startCategoryId] = $category;
        $this->_getSubCategoriesRecursive($categoryArray, $categoryArray);

        require_once('bulletin/access.csp');
        $user = $this->getUser();
        $acc = GRN_Bulletin_AccessManager::getInstance();
        $folderIds = $acc->evaluateCategories($user, $categoryArray,
            GRN_BULLETIN_ACCESS_R);

        return array_keys($folderIds);
    }

    /**
     * 再帰的にサブカテゴリを取得
     *
     * @param $inCategoryIds
     * @param $outCategories
     */
    private function _getSubCategoriesRecursive(
        $inCategoryIds,
        & $outCategories
    ) {
        if ( ! is_array($inCategoryIds) || count($inCategoryIds) < 1) {
            return;
        }

        $childCategoryArray = $this->_getSubCategories($inCategoryIds,
            $outCategories);

        if (count($childCategoryArray) < 1) {
            return;
        }

        $this->_getSubCategoriesRecursive($childCategoryArray, $outCategories);
    }

    /**
     * 親カテゴリIDよりサブカテゴリを取得
     *
     * @param $inCategoryIds
     * @param $outCategories
     *
     * @return array
     */
    private function _getSubCategories($inCategoryIds, & $outCategories)
    {
        if ( ! $inCategoryIds) {
            return [];
        }

        require_once('bulletin/BulletinFacade.csp');
        require_once('fw/i18n.csp');
        require_once('bulletin/category.csp');

        $i18n = CB_I18N::getInstance();
        $table_info = $this->getCategoryTableInfo();

        $dao = new BulletinFacade();
        $dataObj = [];
        $dataObj['lock'] = $table_info->_lock;
        $dataObj['language'] = $i18n->getCurrentLanguage();
        $categoryIdArray = array_keys($inCategoryIds);

        $categoryList = $dao->getBulletinCategoryListByParentIds($dataObj,
            $categoryIdArray);

        $factory = GRN_Bulletin_CategoryFactory::getInstance();
        $childCategoryArray = [];
        foreach ($categoryList as $category) {
            $row = $table_info->getRow($category->getId(),
                $category->convertArray());
            $categoryId = $row->getOID();
            $outCategories[$categoryId] = $factory->row2object($row);
            $childCategoryArray[$categoryId] = 1;
        }

        return $childCategoryArray;
    }
}

class GRN_Bulletin_CategoryFtsSearch extends GRN_Bulletin_FtsSearchBase
{
    /**
     * @param object                       $inUser
     * @param GrnBulletinCategoryCondition $inConditionBean
     */
    public function __construct($inUser, $inConditionBean)
    {
        parent::__construct($inUser, $inConditionBean);
    }

    /**
     * Like検索でカテゴリ全文検索を行う
     *
     * @return array
     */
    public function searchExecute()
    {
        require_once('bulletin/BulletinFacade.csp');
        require_once('fw/i18n.csp');
        require_once('bulletin/category.csp');

        $i18n = CB_I18N::getInstance();
        $table_info = $this->getCategoryTableInfo();

        $dataObj = [];
        $dataObj['lock'] = $table_info->_lock;
        $dataObj['language'] = $i18n->getCurrentLanguage();
        $dataObj['offset'] = $this->getOffset();
        $dataObj['limit'] = $this->getLimit();

        $categoryNameArray = $this->getText();
        $categoryIdArray = $this->_getSearchTargetCategoryList();

        $dao = new BulletinFacade();
        $categoryList = $dao->getBulletinCategoryListByIds_Names($dataObj,
            $categoryIdArray, $categoryNameArray);

        $factory = GRN_Bulletin_CategoryFactory::getInstance();
        $app_path = cb_get_app_path();
        $result_docs = [];
        foreach ($categoryList as $category) {
            $current_category = $table_info->getRow($category->getId(),
                $category->convertArray());

            $doc = [];
            $doc['category_id'] = $category->getId();
            $doc['category_name'] = htmlspecialchars($category->getName());
            $doc['category_icon'] = $app_path
                                    . "/grn/image/cybozu/image-app-search/category16.png";
            $doc['category_link']
                = self::getCategoryLinkUrl($category->getId());

            $parent_category = $factory->row2object($current_category)
                                       ->get('parent');
            if ($parent_category) {
                $parent_category_id = $parent_category->getOID();
                $doc['parent_category_path']
                    = htmlspecialchars(grn_bulletin_get_category_path_string($parent_category));
                $doc['parent_category_link']
                    = self::getCategoryLinkUrl($parent_category_id);
                $doc['app_icon'] = $app_path
                                   . "/grn/image/cybozu/bulletin20.gif";
            } else {
                $doc['parent_category_path'] = '';
                $doc['parent_category_link'] = '';
                $doc['app_icon'] = '';
            }

            $result_docs[] = $doc;
        }

        return $result_docs;
    }

    private function getCategoryLinkUrl($category_id)
    {
        $param_key = $category_id == GRN_BULLETIN_ROOT_CATEGORY_ID ? 'top'
            : 'cid';

        return cb_pageurl('bulletin/index', [$param_key => $category_id]);
    }

}
