<?php

namespace grn\bulletin\dao;

/**
 * BulletinSubscribeCategory Access Object Class
 */
class BulletinSubscribeCategoryDAO
{
    const COLUMN_USER = "col_user";//bigint(20) NOT NULL,

    private static $instance = null;

    /**
     * Constructor
     */
    public function __construct()
    {

    }

    /**
     * Get Instance(Singleton pattern)
     *
     * @return BulletinSubscribeCategoryDAO $instance
     */
    public static function getInstance()
    {
        if ( ! isset(self::$instance)) {
            $c = __CLASS__;
            self::$instance = new $c;
        }

        return self::$instance;
    }

    /**
     * @param string $category_id
     * @param array  $user_ids
     * @param array  $dao_params
     */
    public function insertFromParentCategorySubscribe(
        $category_id,
        array $user_ids,
        array $dao_params
    ) {
        if (count($user_ids) === 0) {
            return;
        }

        $db = $dao_params['db'];

        $query
            = <<<SQL
INSERT tab_grn_bulletin_subscribecategory
 (col_user, col_category) 
SELECT
 col_user AS col_user,
 "@S" AS col_category 
FROM
 tab_cb_user AS user
LEFT JOIN tab_grn_bulletin_profiledata AS bulletin_profiledata
 ON bulletin_profiledata.col_user = user._id
WHERE
 bulletin_profiledata.col_subscribe = 1
 AND bulletin_profiledata.col_user IN(@A)
SQL;
        $query = $db->format($query, [$category_id, $user_ids]);

        $query .= " ON DUPLICATE KEY UPDATE col_user = VALUES(col_user);";
        $db->query($query);
    }

    /**
     * @param string $category_id
     * @param array  $not_in_user_ids
     * @param array  $dao_params
     */
    public function insertFromParentCategorySubscribeAllUser(
        $category_id,
        array $not_in_user_ids,
        array $dao_params
    ) {
        $db = $dao_params['db'];

        $query
            = <<<SQL
INSERT tab_grn_bulletin_subscribecategory
 (col_user, col_category) 
SELECT
 col_user AS col_user,
 "@S" AS col_category 
FROM
 tab_cb_user AS user
LEFT JOIN tab_grn_bulletin_profiledata AS bulletin_profiledata
 ON bulletin_profiledata.col_user = user._id
WHERE
 bulletin_profiledata.col_subscribe = 1
SQL;
        if (count($not_in_user_ids) > 0) {
            $query .= " AND bulletin_profiledata.col_user NOT IN(@A)";
            $query = $db->format($query, [$category_id, $not_in_user_ids]);
        } else {
            $query = $db->format($query, [$category_id]);
        }

        $query .= " ON DUPLICATE KEY UPDATE col_user = VALUES(col_user);";

        $db->query($query);
    }

    /**
     * @param string $category_id
     * @param array  $dao_params
     *
     * @return array
     */
    public function selectCategorySubscribeByCategoryId(
        $category_id,
        array $dao_params
    ) {
        $db = $dao_params['db'];
        $offset = cb_at($dao_params, "lock", 0);
        $limit = cb_at($dao_params, "limit", -1);
        $lock = cb_at($dao_params, "lock", CB_DATABASE_DEFAULT_LOCK);

        $query
            = <<<SQL
SELECT
 bulletin_subscribecategory.col_user,
 bulletin_subscribecategory.col_category
FROM
 tab_grn_bulletin_subscribecategory AS bulletin_subscribecategory
WHERE
 bulletin_subscribecategory.col_category = "@S"
SQL;
        $query = $db->format($query, [$category_id]);
        $query = $db->select_format($query, $offset, $limit, $lock);
        $result = $db->query($query);

        $rows = [];
        while ($row = $db->fetch_assoc($result)) {
            $col_user = $row[self::COLUMN_USER];
            $rows[$col_user] = $col_user;
        }
        $db->free_result($result);

        return $rows;
    }

}
