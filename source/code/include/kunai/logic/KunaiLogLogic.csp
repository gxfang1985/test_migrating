<?php

namespace grn\kunai\logic;

use grn\space\common\data\LogInterface;

class KunaiLogLogic
{
    private $loggerName;

    public function __construct($loggerName)
    {
        $this->setLoggerName($loggerName);
    }

    private function setLoggerName($loggerName)
    {
        $this->loggerName = $loggerName;
    }

    private function getLoggerName()
    {
        return $this->loggerName;
    }

    private function getLogger()
    {
        require_once('grn/logger.csp');
        $logger_manager = \CB_LoggerManager::getInstance();

        return $logger_manager->getLogger($this->getLoggerName());
    }

    /**
     * 一般情報
     *
     * @param LogInterface $log
     */
    public function info(LogInterface $log)
    {
        $logger = $this->getLogger();
        $param_list = $log->getParameters();
        $logger->infoEx($log->getAction(), $log->getObject(), $param_list);
    }

    /**
     * 重要情報
     *
     * @param LogInterface $log
     */
    public function notice(LogInterface $log)
    {
        $logger = $this->getLogger();
        $param_list = $log->getParameters();
        $logger->noticeEx($log->getAction(), $log->getObject(), $param_list,
            ['user', 'group', 'static_role', 'dynamic_role']);
    }
}
