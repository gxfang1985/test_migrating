<?php

namespace grn\kunai\data\bean;

use grn\grn\Validate;
use grn\space\common\data\bean\BeanAbstract;

class KunaiAvailabilityStaticRole extends BeanAbstract
{
    const CREATE_TIME = 'col_ctime';
    const STATIC_ROLE = 'col_static_role';
    const APP_STATUS = 'col_app_status';

    /**
     * create time
     *
     * @var int
     */
    private $_create_time;

    /**
     * static role id
     *
     * @var int
     */
    private $_static_role_id;

    /**
     * application status
     *
     * @var array
     */
    private $_app_status;

    /**
     * @param array   $init_data initial data
     * @param boolean $is_input_check
     */
    public function __construct(
        array $init_data = null,
        $is_input_check = self::CHECK_INPUT
    ) {
        parent::__construct($init_data, $is_input_check);

        if (is_null($init_data)) {
            $this->setCreateTime(time());
            $this->setStaticRoleId('');
            $this->setAppStatus('');
        } else {
            $this->setCreateTime((array_key_exists(self::CREATE_TIME,
                $init_data)) ? $init_data[self::CREATE_TIME] : time());
            $this->setStaticRoleId((array_key_exists(self::STATIC_ROLE,
                $init_data)) ? $init_data[self::STATIC_ROLE] : '');
            $this->setAppStatus((array_key_exists(self::APP_STATUS, $init_data))
                ? $init_data[self::APP_STATUS] : '');
        }
    }

    public function convertArray()
    {
        $result = parent::convertArray();

        $result[self::CREATE_TIME] = $this->getCreateTime();
        $result[self::STATIC_ROLE] = $this->getStaticRoleId();
        $result[self::APP_STATUS] = $this->getAppStatus();

        return $result;
    }

    public function getCreateTime()
    {
        return $this->_create_time;
    }

    public function setCreateTime($value)
    {
        $this->isInputNumber($value);
        $this->_create_time = $value;
    }

    public function getStaticRoleId()
    {
        return $this->_static_role_id;
    }

    public function setStaticRoleId($value)
    {
        $this->_static_role_id = $value;
    }

    public function getAppStatus()
    {
        return $this->_app_status;
    }

    public function setAppStatus($value)
    {
        if (is_array($value)) {
            $this->_app_status = $value;
        }
    }

    /**
     * @param     int $valid_type VALID_TYPE_CREATE, VALID_TYPE_MODIFY, VALID_TYPE_SELECT
     *
     * @return    boolean       TRUE : valid   FALSE: invalid
     */
    protected function checkValidate($valid_type)
    {
        if (parent::checkValidate($valid_type) === false) {
            return false;
        }
        if ( ! Validate::isNumber($this->getStaticRoleId())) {
            return false;
        }
        if ( ! is_array($this->getAppStatus())) {
            return false;
        }
        if ($valid_type == self::VALID_TYPE_CREATE) {
            global $G_container_base;
            $uum = $G_container_base->getInstance('uum');
            if ( ! $uum->getStaticRole($this->getStaticRoleId())) {
                return false;
            }
        }

        return true;
    }
}
