<?php
require_once("message/bean/GrnMessageFilter.csp");
require_once("message/bean/GrnMessageFilterCondition.csp");

class GrnMessageFilterDAO
{
    /**
     * @return string
     */
    private function getQuery()
    {
        return "SELECT "
               . " f._id, col_and_or, col_folder, col_name, col_user, col_view_order,"
               . " fc._id AS fc_id, fc.col_condition AS fc_col_condition, fc.col_data_class AS fc_col_data_class,"
               . " fc.col_filter AS fc_col_filter, fc.col_string AS fc_col_string "
               . " FROM "
               . " tab_grn_message_filters f , tab_grn_message_filterconditions fc "
               . " WHERE "
               . " fc.col_filter = f._id "
               . " AND f.col_folder IS NOT NULL "
               . " AND f.col_user IN (@A)"
               . " ORDER BY "
               . " f.col_view_order, f._id";
    }

    /**
     * @param $row
     *
     * @return GrnMessageFilterCondition
     */
    private function fetchFilterCondition($row)
    {
        $filterCondition = new GrnMessageFilterCondition();
        $filterCondition->setId($row["fc_id"]);
        $filterCondition->setCondition($row["fc_col_condition"]);
        $filterCondition->setDataClass($row["fc_col_data_class"]);
        $filterCondition->setFilter($row["fc_col_filter"]);
        $filterCondition->setString($row["fc_col_string"]);

        return $filterCondition;
    }

    /**
     *
     * @param array  $inDataObj
     * @param string $inUserID
     *
     * @return GrnMessageFilter[]
     */
    public function selectFilterAndFilterConditionListByUserId(
        $inDataObj,
        $inUserID
    ) {
        /** @var $inDB CB_DatabaseConnection */
        $inDB = $inDataObj['db'];
        $query = $this->getQuery();

        /** @var GrnMessageFilter[] $ret */
        $ret = [];

        $result = $inDB->query($inDB->format($query, [[$inUserID]]));
        while ($row = $inDB->fetch_assoc($result)) {
            $iterFilterID = $row["_id"];
            $iterFilterCondition = $this->fetchFilterCondition($row);

            if ( ! array_key_exists($iterFilterID, $ret)) {
                $ret[$iterFilterID] = new GrnMessageFilter($row);
            }

            $ret[$iterFilterID]->addFilterCondition($iterFilterCondition);

        }
        $inDB->free_result($result);

        return $ret;
    }

    /**
     * @param array $userIds
     *
     * @return GrnMessageFilter[]
     */
    public function getFiltersHashedByUserId(array $userIds)
    {
        $db = cb_get_app_db("message");
        $query = $this->getQuery();
        $result = $db->query($db->format($query, [$userIds]));

        $filters = [];
        while ($row = $db->fetch_assoc($result)) {
            $filterCondition = $this->fetchFilterCondition($row);
            /** @var $filter GrnMessageFilter */
            $filter = isset($filters[$row["col_user"]][$row["_id"]]) ?
                $filters[$row["col_user"]][$row["_id"]]
                : new GrnMessageFilter($row);
            $filter->addFilterCondition($filterCondition);
            $filters[$row["col_user"]][$row["_id"]] = $filter;
        }

        return $filters;
    }
}
