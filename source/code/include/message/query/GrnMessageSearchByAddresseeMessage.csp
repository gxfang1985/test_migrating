<?php
require_once("message/table_utility.csp");
require_once("grn/GrnAbstractQuery.csp");

class GrnMessageSearchByAddresseeMessage extends GrnAbstractQuery
{
    private $messageIdList;

    public function setmessagedList($messageIdList)
    {
        $this->messageIdList = $messageIdList;
    }

    public function getMessageIdList()
    {
        return $this->messageIdList;
    }

    /**
     *
     * @return string
     */
    protected function getMessageIdListCsv()
    {
        if (count($this->getMessageIdList()) == 0) {
            return false;
        }
        $databaseConnection = $this->getDatabaseConnection();
        $escapedMessageIdList = [];
        foreach ($this->getMessageIdList() as $messageId) {
            $escapedMessageIdList[] = "'"
                                      . $databaseConnection->escape($messageId)
                                      . "'";
        }

        return implode(",", $escapedMessageIdList);
    }

    /** @var string */
    private $startTimestamp;

    public function setStartTimestamp($startTimestamp)
    {
        $this->startTimestamp = $startTimestamp;
    }

    public function getStartTimestamp()
    {
        return $this->startTimestamp;
    }

    /** @var string */
    private $endTimestamp;

    public function setEndTimestamp($endTimestamp)
    {
        $this->endTimestamp = $endTimestamp;
    }

    public function getEndTimestamp()
    {
        return $this->endTimestamp;
    }

    /** @var string */
    private $keyword;

    public function setKeyword($keyword)
    {
        $this->keyword = $keyword;
    }

    public function getKeyword()
    {
        return $this->keyword;
    }

    public function getQuery()
    {
        $db = $this->getDatabaseConnection();

        $message_id_list_condition = '';
        if (count($this->getMessageIdList()) > 0) {
            $message_id_list_condition
                = " AND tab_grn_message_messages._id IN ({$this->getMessageIdListCsv()}) ";
        }
        $query = "SELECT tab_grn_message_messages._id AS _id"
                 . " FROM "
                 . "("
                 . " tab_grn_message_messages "
                 . " INNER JOIN tab_grn_message_addressees AS a ON tab_grn_message_messages._id = a.col_message "
                 . ")"
                 . " LEFT JOIN "
                 . " tab_cb_user AS u ON a.col_addressee = u._id AND u.col_deleted IS NULL "
                 . "WHERE "
                 . "("
                 . " a.col_is_sender = " . GRN_MESSAGE_ADDRESSEE_NOT_SENDER
                 . " "
                 . " AND "
                 . "("
                 . " {$this->queryf(" a.col_addressee_name LIKE '%@L%' ", [$this->getKeyword()])} "
                 . " OR "
                 . "("
                 . " {$this->queryf(" u.col_display_name LIKE '%@L%' ", [$this->getKeyword()])} "
                 . " OR "
                 . " {$this->queryf(" u.col_nickname LIKE '%@L%' ", [$this->getKeyword()])} "
                 . ")"
                 . ")"
                 . " AND "
                 . " tab_grn_message_messages.col_last_mtime >= '{$db->escape($this->getStartTimestamp())}' "
                 . " AND "
                 . " tab_grn_message_messages.col_last_mtime <= '{$db->escape($this->getEndTimestamp())}' "
                 . " AND "
                 . " tab_grn_message_messages.col_message_type = "
                 . GRN_MESSAGE_TYPE_GENERAL
                 . $message_id_list_condition
                 . ")";

        return $query;
    }
}
