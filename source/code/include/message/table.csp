<?php
/**
 * メッセージのテーブルクラス定義
 *
 * @author   Eiji TAEN   2005/04
 * @package  grn.message
 */
require_once('fw/persistent.csp');
require_once('message/file.csp');
require_once('message/table_utility.csp');

/**
 * database table manager class
 *
 * @package   grn.message
 */
class GRN_Message_TableManager
{
    /**
     * @access   private
     */
    private $_manager = null;

    /**
     * @access   private
     */
    private $_tables = null;

    function __construct()
    {
        $app_locator = GRN_ApplicationLocator::instance();
        $this->_manager = $app_locator->getTableManager('message');
        $this->_tables = [];
    }

    /**
     * get instance
     *
     * @return   GRN_Message_TableManager
     */
    private static $_instance = null;

    /**
     * @static
     * @return GRN_Message_TableManager
     */
    public static function getInstance()
    {
        if ( ! isset(self::$_instance)) {
            $c = __CLASS__;
            self::$_instance = new $c;
        }

        return self::$_instance;
    }

    /**
     * get specified table info
     *
     * @param    string $table_name table name
     *
     * @return   object   CB_TableInfo
     */
    function getTableInfo($table_name)
    {
        if ( ! array_key_exists($table_name, $this->_tables)) {
            $this->_tables[$table_name]
                = $this->_manager->getTableInfo($table_name);
        }

        return $this->_tables[$table_name];
    }
}

/**
 * メッセージテーブルクラス
 *
 * @package  grn.message
 */
class GRN_Message_Messages extends CB_PersistentBase
{
    function __construct($row)
    {
        parent::__construct($row);
    }

    var $_app_id = 'message';

    // 差出人リレーション
    var $col_creator = ['type' => 'weak_relation', 'to' => 'CB_User'];
    // 差出人名
    var $col_creator_name = ['type' => 'char', 'notnull' => true];
    // 送信日時
    var $col_ctime = ['type' => 'timestamp', 'notnull' => true];
    // 更新者リレーション
    var $col_modifier = ['type' => 'weak_relation', 'to' => 'CB_User'];
    // 更新者名
    var $col_modifier_name = ['type' => 'char'];
    // 更新日時
    var $col_mtime = ['type' => 'timestamp'];
    // 権限被委譲者リレーション
    var $col_delegator = ['type' => 'weak_relation', 'to' => 'CB_User'];
    // 権限被委譲者名
    var $col_delegator_name = ['type' => 'char'];
    // 権限委譲日時
    var $col_dtime = ['type' => 'timestamp'];
    // 表題
    var $col_subject = ['type' => 'char'];
    // 本文
    var $col_data
        = [
            'type'   => 'char',
            'length' => '1048575',
            'lazy'   => true
        ];
    // HTML本文
    var $col_html_data
        = [
            'type'   => 'char',
            'length' => '1048575',
            'lazy'   => true
        ];
    // 閲覧確認フラグ
    var $col_confirm
        = [
            'type'    => 'char',
            'length'  => '1',
            'notnull' => true
        ];
    // 最終更新日時
    var $col_last_mtime = ['type' => 'timestamp', 'notnull' => true];
    // 最終操作日時(最新フォロー削除でも更新)
    var $col_last_otime = ['type' => 'timestamp', 'notnull' => true];
    // last modifier relation
    var $col_last_modifier
        = [
            'type' => 'weak_relation',
            'to'   => 'CB_User'
        ];
    // last follow id
    var $col_last_follow_id = ['type' => 'int', 'notnull' => true];
    // フォローを含めた添付ファイル数
    var $col_file_num = ['type' => 'int', 'notnull' => true];
    // フォローを含めた添付ファイルサイズ
    var $col_file_size
        = [
            'type'     => 'double',
            'unsigned' => true,
            'notnull'  => true
        ];
    // スナップショットがあるか
    var $col_has_snapshot
        = [
            'type'    => 'char',
            'length'  => '1',
            'notnull' => true
        ];
    // オリジナルメッセージリレーション
    var $col_original_message
        = [
            'type' => 'relation',
            'to'   => 'GRN_Message_Messages'
        ];
    // message type (0: general message, 2: draft)
    var $col_message_type
        = [
            'type'    => 'char',
            'length'  => '1',
            'notnull' => true
        ];

    // reserved columns 
    var $col_reserve_text1 = ['type' => 'char', 'lazy' => true];
    var $col_reserve_text2 = ['type' => 'char', 'lazy' => true];
    var $col_reserve_text3 = ['type' => 'char', 'lazy' => true];
    var $col_reserve_int1 = ['type' => 'int', 'lazy' => true];
    var $col_reserve_int2 = ['type' => 'int', 'lazy' => true];
    var $col_reserve_int3 = ['type' => 'int', 'lazy' => true];
    var $col_reserve_blob1 = ['type' => 'blob', 'lazy' => true];
    var $col_reserve_blob2 = ['type' => 'blob', 'lazy' => true];
    var $col_reserve_blob3 = ['type' => 'blob', 'lazy' => true];

    // indexes
    var $idx_creator_ctime = ['cols' => ['creator', 'ctime']];
    var $idx_creator_last_mtime = ['cols' => ['creator', 'last_mtime']];
    var $idx__id_ctime = ['cols' => [null, 'ctime']];
    var $idx_confirm_creator = ['cols' => ['confirm', 'creator']];
    var $idx_confirm_last_mtime = ['cols' => ['confirm', 'last_mtime']];
    var $idx__id_confirm = ['cols' => [null, 'confirm']];
    var $idx_last_mtime__id = ['cols' => ['last_mtime', null]];
}

/**
 * 宛先テーブルクラス
 *
 * @package  grn.message
 */
class GRN_Message_Addressees extends CB_PersistentBase
{
    function __construct($row)
    {
        parent::__construct($row);
    }

    var $_app_id = 'message';

    // メッセージリレーション
    var $col_message
        = [
            'type' => 'relation',
            'to'   => 'GRN_Message_Messages'
        ];
    // 宛先人リレーション
    var $col_addressee = ['type' => 'weak_relation', 'to' => 'CB_User'];
    // 宛先人名
    var $col_addressee_name = ['type' => 'char', 'notnull' => true];
    // 表示順序
    var $col_view_order = ['type' => 'int', 'notnull' => true];
    // 削除日時
    var $col_dtime = ['type' => 'timestamp', 'notnull' => true];
    // 削除フラグ
    var $col_delete_flag
        = [
            'type'    => 'char',
            'length'  => '1',
            'notnull' => true
        ];
    // 閲覧確認フラグ
    var $col_view_flag
        = [
            'type'    => 'char',
            'length'  => '1',
            'notnull' => true
        ];
    // 閲覧確認日時
    var $col_rtime = ['type' => 'timestamp'];
    // is sender 0: addressee, 1: sender
    var $col_is_sender = ['type' => 'char', 'length' => '1', 'notnull' => true];
    // is operator 0: normal user, 1: operator
    var $col_is_operator
        = [
            'type'    => 'char',
            'length'  => '1',
            'notnull' => true
        ];
    // last voice relation
    var $col_follow
        = [
            'type' => 'weak_relation',
            'to'   => 'GRN_Message_Follows'
        ];
    // finish view (0: finish yet, 1: finished)
    var $col_finish_view_flag
        = [
            'type'    => 'char',
            'length'  => '1',
            'notnull' => true
        ];

    // reserved columns 
    var $col_reserve_text1 = ['type' => 'char', 'lazy' => true];
    var $col_reserve_text2 = ['type' => 'char', 'lazy' => true];
    var $col_reserve_text3 = ['type' => 'char', 'lazy' => true];
    var $col_reserve_int1 = ['type' => 'int', 'lazy' => true];
    var $col_reserve_int2 = ['type' => 'int', 'lazy' => true];
    var $col_reserve_int3 = ['type' => 'int', 'lazy' => true];
    var $col_reserve_blob1 = ['type' => 'blob', 'lazy' => true];
    var $col_reserve_blob2 = ['type' => 'blob', 'lazy' => true];
    var $col_reserve_blob3 = ['type' => 'blob', 'lazy' => true];

    // index
    var $idx_addressee_view_order_message
        = [
            'cols' => ['addressee', 'view_order', 'message']
        ];
    var $idx_message_view_order__id_is_sender_dtime_follow
        = [
            'cols' => [
                'message',
                'view_order',
                null,
                'is_sender',
                'dtime',
                'follow'
            ]
        ];
    var $idx__id_message_is_sender_view_order_dtime_rtime
        = [
            'cols' => [null, 'is_sender', 'view_order', 'dtime', 'rtime']
        ];
    var $idx_message_addressee__id_is_sender_view_order_dtime
        = [
            'cols' => [
                'message',
                'addressee',
                null,
                'is_sender',
                'view_order',
                'dtime'
            ]
        ];
    var $idx_addressee_view_flag
        = [
            'cols' => ['addressee', 'view_flag']
        ];
    var $idx_message_view_flag_addressee
        = [
            'cols' => ['message', 'view_order', 'addressee']
        ];
    var $idx_message_addressee_is_sender
        = [
            'cols'   => ['message', 'addressee', 'is_sender'],
            'unique' => true
        ];
}

/**
 * フォローテーブル
 *
 * @package  grn.message
 */
class GRN_Message_Follows extends CB_PersistentBase
{
    function __construct($row)
    {
        parent::__construct($row);
    }

    var $_app_id = 'message';

    // メッセージリレーション
    var $col_message
        = [
            'type' => 'relation',
            'to'   => 'GRN_Message_Messages'
        ];
    // follow id
    var $col_id = ['type' => 'int'];
    // 発言者リレーション
    var $col_creator = ['type' => 'weak_relation', 'to' => 'CB_User'];
    // 発言者名
    var $col_creator_name = ['type' => 'char', 'notnull' => true];
    // 発言日時
    var $col_ctime = ['type' => 'timestamp', 'notnull' => true];
    // 本文
    var $col_data
        = [
            'type'   => 'char',
            'length' => '1048575',
            'lazy'   => true
        ];
    // HTML本文
    var $col_html_data
        = [
            'type'   => 'char',
            'length' => '1048575',
            'lazy'   => true
        ];

    // reserved columns 
    var $col_reserve_text1 = ['type' => 'char', 'lazy' => true];
    var $col_reserve_text2 = ['type' => 'char', 'lazy' => true];
    var $col_reserve_text3 = ['type' => 'char', 'lazy' => true];
    var $col_reserve_int1 = ['type' => 'int', 'lazy' => true];
    var $col_reserve_int2 = ['type' => 'int', 'lazy' => true];
    var $col_reserve_int3 = ['type' => 'int', 'lazy' => true];
    var $col_reserve_blob1 = ['type' => 'blob', 'lazy' => true];
    var $col_reserve_blob2 = ['type' => 'blob', 'lazy' => true];
    var $col_reserve_blob3 = ['type' => 'blob', 'lazy' => true];

    // index
    var $idx_message_ctime_creator
        = [
            'cols' => [
                'message',
                'ctime',
                'creator'
            ]
        ];
    var $idx__id_mesasge_id = ['cols' => [null, 'message', 'id']];

    var $idx_message_id__id_creator = ['cols' => ['message', 'id', null]];
}

/**
 * 添付ファイルテーブルクラス
 *
 * @package  grn.message
 */
class GRN_Message_AttachedFiles extends CB_PersistentBase
{
    var $_app_id = 'message';

    // メッセージリレーション
    var $col_message
        = [
            'type' => 'relation',
            'to'   => 'GRN_Message_Messages',
            'lazy' => true
        ];
    // フォローリレーション
    var $col_follow
        = [
            'type' => 'relation',
            'to'   => 'GRN_Message_Follows',
            'lazy' => true
        ];
    // relation to GRN_Message_File
    var $col_file
        = [
            'type' => 'weak_relation',
            'to'   => 'GRN_Message_File',
            'lazy' => true
        ];
    // a publicly file or not
    var $col_publicly
        = [
            'type'    => 'char',
            'length'  => '1',
            'notnull' => true
        ];

    // reserved columns 
    var $col_reserve_text1 = ['type' => 'char', 'lazy' => true];
    var $col_reserve_text2 = ['type' => 'char', 'lazy' => true];
    var $col_reserve_text3 = ['type' => 'char', 'lazy' => true];
    var $col_reserve_int1 = ['type' => 'int', 'lazy' => true];
    var $col_reserve_int2 = ['type' => 'int', 'lazy' => true];
    var $col_reserve_int3 = ['type' => 'int', 'lazy' => true];

    // indexes
    var $idx_message_follow__id = ['cols' => ['message', 'follow', null]];
    var $idx_message_publicly = ['cols' => ['message', 'publicly']];
    var $idx_follow_publicly = ['cols' => ['follow', 'publicly']];

    function __construct($row)
    {
        parent::__construct($row);
    }
}

/**
 * フォルダテーブルクラス
 *
 * @package  grn.message
 */
class GRN_Message_Folders extends CB_PersistentBase
{
    function __construct($row)
    {
        parent::__construct($row);
    }

    var $_app_id = 'message';

    // ユーザーリレーション
    var $col_user = ['type' => 'relation', 'to' => 'CB_User'];
    // フォルダ種別
    var $col_folder_type
        = [
            'type'   => 'char',
            'length' => '1'
        ];
    // フォルダ名
    var $col_folder_name = ['type' => 'char', 'notnull' => true];
    // メモ
    var $col_memo = ['type' => 'char', 'length' => '65535'];
    // 表示順序
    var $col_view_order = ['type' => 'int', 'notnull' => true];
    //作成時刻
    var $col_ctime = ['type' => 'timestamp'];
    // 更新日時
    var $col_mtime = ['type' => 'timestamp'];
    // 親フォルダリレーション
    var $col_parent_folder
        = [
            'type' => 'relation',
            'to'   => 'GRN_Message_Folders'
        ];
    // 購読フラグ
    var $col_subscription_flag
        = [
            'type'    => 'char',
            'length'  => '1',
            'notnull' => true
        ];
    // 階層レベル
    var $col_level = ['type' => 'int', 'notnull' => true];

    // reserved columns 
    var $col_reserve_text1 = ['type' => 'char', 'lazy' => true];
    var $col_reserve_text2 = ['type' => 'char', 'lazy' => true];
    var $col_reserve_text3 = ['type' => 'char', 'lazy' => true];
    var $col_reserve_int1 = ['type' => 'int', 'lazy' => true];
    var $col_reserve_int2 = ['type' => 'int', 'lazy' => true];
    var $col_reserve_int3 = ['type' => 'int', 'lazy' => true];

    // index
    var $idx_user_folder_type = ['cols' => ['user', 'folder_type'], 'unique' => true];
    var $idx_user_parent_folder_view_order
        = [
            'cols' => [
                'user',
                'parent_folder',
                'view_order'
            ]
        ];
    var $idx__id_folder_type = ['cols' => [null, 'folder_type']];
    var $idx_user_level_view_order
        = [
            'cols' => [
                'user',
                'level',
                'view_order'
            ]
        ];
    var $idx__id_user = ['cols' => [null, 'user']];
    var $idx_parent_folder_view_order
        = [
            'cols' => [
                'parent_folder',
                'view_order'
            ]
        ];
}

/**
 * フォルダメッセージリレーションテーブルクラス
 *
 * @package  grn.message
 */
class GRN_Message_FolderMessageRelations extends CB_PersistentBase
{
    function __construct($row)
    {
        parent::__construct($row);
    }

    var $_app_id = 'message';

    // ユーザーリレーション
    var $col_user
        = [
            'type'                  => 'weak_relation',
            'to'                    => 'CB_User',
            'no_foreign_key_create' => true
        ];
    // フォルダリレーション
    var $col_folder
        = [
            'type' => 'relation',
            'to'   => 'GRN_Message_Folders'
        ];
    // メッセージリレーション
    var $col_message
        = [
            'type' => 'relation',
            'to'   => 'GRN_Message_Messages'
        ];
    // 最終閲覧日時
    var $col_last_vtime = ['type' => 'timestamp', 'notnull' => true];
    // 購読フラグ
    var $col_subscription_flag
        = [
            'type'    => 'char',
            'length'  => '1',
            'notnull' => true
        ];
    // sent message flag
    var $col_sent_message_flag
        = [
            'type'    => 'char',
            'length'  => '1',
            'notnull' => true
        ];
    // moving time (use only for deleting message)
    var $col_mtime = ['type' => 'timestamp'];
    // スナップショットメッセージリレーション
    var $col_snapshot_message
        = [
            'type' => 'weak_relation',
            'to'   => 'GRN_Message_Messages'
        ];

    // reserved columns 
    var $col_reserve_text1 = ['type' => 'char', 'lazy' => true];
    var $col_reserve_text2 = ['type' => 'char', 'lazy' => true];
    var $col_reserve_text3 = ['type' => 'char', 'lazy' => true];
    var $col_reserve_int1 = ['type' => 'int', 'lazy' => true];
    var $col_reserve_int2 = ['type' => 'int', 'lazy' => true];
    var $col_reserve_int3 = ['type' => 'int', 'lazy' => true];

    // indexes
    var $idx_user_folder_message_snapshot_message
        = [
            'cols' => ['user', 'folder', 'message', 'snapshot_message']
        ];
    var $idx_user_folder_mtime = ['cols' => ['user', 'folder', 'mtime']];
    var $idx_user_folder_message_last_vtime
        = [
            'cols' => [
                'user',
                'folder',
                'message',
                'last_vtime'
            ]
        ];
    var $idx_user_message_sent_message_flag
        = [
            'cols' => [
                'user',
                'message',
                'sent_message_flag'
            ]
        ];
    var $idx_user_folder_message__id
        = [
            'cols' => [
                'user',
                'folder',
                'message',
                null
            ]
        ];
    var $idx__id_user_folder_mtime
        = [
            'cols' => [
                null,
                'user',
                'folder',
                'mtime'
            ]
        ];
    var $idx_user_sent_message_flag_message_folder__id
        = [
            'cols' => [
                'user',
                'sent_message_flag',
                'message',
                'folder',
                null
            ]
        ];
    var $idx_user_sent_message_flag_message
        = [
            'cols'   => [
                'user',
                'sent_message_flag',
                'message'
            ],
            'unique' => true
        ];
}

/**
 * filters table class
 *
 * @package   grn.message
 */
class GRN_Message_Filters extends CB_PersistentBase
{
    var $_app_id = 'message';

    // user relation
    var $col_user = ['type' => 'relation', 'to' => 'CB_User'];
    // classification name
    var $col_name = ['type' => 'char', 'notnull' => true];
    // folder relation
    var $col_folder
        = [
            'type' => 'weak_relation',
            'to'   => 'GRN_Message_Folders'
        ];
    // a combination of conditions (and/or)
    var $col_and_or
        = [
            'type'    => 'char',
            'length'  => '1',
            'notnull' => true
        ];
    // view order
    var $col_view_order = ['type' => 'list_index'];

    // reserved columns 
    var $col_reserve_text1 = ['type' => 'char', 'lazy' => true];
    var $col_reserve_text2 = ['type' => 'char', 'lazy' => true];
    var $col_reserve_text3 = ['type' => 'char', 'lazy' => true];
    var $col_reserve_int1 = ['type' => 'int', 'lazy' => true];
    var $col_reserve_int2 = ['type' => 'int', 'lazy' => true];
    var $col_reserve_int3 = ['type' => 'int', 'lazy' => true];

    // indexes
    var $idx_user_view_order__id = ['cols' => ['user', 'view_order', null]];

    function GRN_Message_Filter($row)
    {
        parent::__construct($row);
    }
}

/**
 * filter conditions table class
 *
 * @package   grn.message
 */
class GRN_Message_FilterConditions extends CB_PersistentBase
{
    var $_app_id = 'message';

    // filter relation
    var $col_filter
        = [
            'type' => 'relation',
            'to'   => 'GRN_Message_Filters'
        ];
    // data class
    var $col_data_class
        = [
            'type'    => 'char',
            'length'  => '1',
            'notnull' => true
        ];
    // matched string
    var $col_string = ['type' => 'char'];
    // matched condition
    var $col_condition
        = [
            'type'    => 'char',
            'length'  => '1',
            'notnull' => true
        ];

    // reserved columns 
    var $col_reserve_text1 = ['type' => 'char', 'lazy' => true];
    var $col_reserve_text2 = ['type' => 'char', 'lazy' => true];
    var $col_reserve_text3 = ['type' => 'char', 'lazy' => true];
    var $col_reserve_int1 = ['type' => 'int', 'lazy' => true];
    var $col_reserve_int2 = ['type' => 'int', 'lazy' => true];
    var $col_reserve_int3 = ['type' => 'int', 'lazy' => true];

    // indexes
    var $idx__id_filter = ['cols' => [null, 'filter']];

    function __construct($row)
    {
        parent::__construct($row);
    }
}

/**
 *
 */
class GRN_Message_MessageBoxes extends CB_PersistentBase
{
    var $_app_id = 'message';

    // user relation
    var $col_user = ['type' => 'relation', 'to' => 'CB_User'];

    // message relation
    var $col_message = ['type' => 'relation', 'to' => 'GRN_Message_Messages'];

    // snapshot message relation
    var $col_snapshot_message
        = [
            'type' => 'relation',
            'to'   => 'GRN_Message_Messages'
        ];

    // reserved columns 
    var $col_reserve_text1 = ['type' => 'char', 'lazy' => true];
    var $col_reserve_text2 = ['type' => 'char', 'lazy' => true];
    var $col_reserve_text3 = ['type' => 'char', 'lazy' => true];
    var $col_reserve_int1 = ['type' => 'int', 'lazy' => true];
    var $col_reserve_int2 = ['type' => 'int', 'lazy' => true];
    var $col_reserve_int3 = ['type' => 'int', 'lazy' => true];

    // indexes
    var $idx__id_user = ['cols' => [null, 'user']];
    var $idx_user_message = ['cols' => ['user', 'message'], 'unique' => true];

    var $idx_user__id = ['cols' => ['user', null]];

    function __construct($row)
    {
        parent::__construct($row);
    }
}

function grn_drop_personal_message($uid, $except_admin = true, $nocache = false)
{
    if (is_null($uid) || 0 == strlen($uid)) {
        return false;
    }
    $user_id = $uid;
    if ($except_admin == true && $user_id == 1) {
        return true;
    }

    $suffix = grn_get_personal_suffix_message($user_id);
    $table_list = [
        'grn_message_foldermessagerelations',
    ];

    foreach ($table_list as $value) {
        $table = cb_class2table($value, $suffix);

        $rowset = new CB_RowSet($table);
        $rowset->addCondition($rowset->queryf("col_user = '@S'", $uid));

        $rowset->deleteAllMatched();
    }

    return true;
}


