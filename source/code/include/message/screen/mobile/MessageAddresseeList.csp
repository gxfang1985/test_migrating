<?php

namespace grn\message\screen\mobile;

use grn\grn\mobile\MobileDisplayUserList;

class MessageAddresseeList extends MobileMessageScreenBase
{
    const REQUEST_PAGE = 'message/mobile/ajax/addressee_list';
    private $_is_from_ajax;

    public function __construct($input)
    {
        parent::__construct($input);

        $this->setMobileFooterBar();
    }

    public function fetch()
    {
        //get message
        $message = $this->getMessageForView();
        $mid = null;
        $members = [];
        if (array_key_exists('message_id', $message)) {
            $mid = $message['message_id'];
        }
        if (array_key_exists('addressees', $message)) {
            foreach ($message['addressees'] as $address) {
                if ($address['dtime']->unix_ts == 0
                    && $address['delete_flag'] == 0
                ) {
                    $members[] = $address['id'];
                }
            }
        }
        $display_info = $this->getDisplayInfo($members);

        require_once('grn/smarty.csp');
        $t = new \GRN_Smarty();
        $t->assign('count', count($members));
        $t->assign('request_page', self::REQUEST_PAGE);
        $t->assign(MobileDisplayUserList::USER_INFO_LIST, $display_info);
        if ($this->_is_from_ajax) {
            return $t->fetch('grn/mobile_userinfo_list.tpl');
        } else {
            $url = 'message/mobile/view';
            if ($message['message_type'] == '2') {
                $url = 'message/mobile/draft_view';
            }

            $input = $this->getInput();
            $sp = 0;
            if (array_key_exists('sp', $input)) {
                $sp = $input['sp'];
            }

            $this->assignBreadcrumbUpperPage($t,
                cb_msg('grn.mobile', 'detail_title'), $url, [
                    self::ARG_CATEGORY_ID => $this->getCategoryId(),
                    self::ARG_RELATION_ID => $this->getRelationId(),
                    self::ARG_MESSAGE_ID  => $mid,
                    'sp'                  => $sp
                ]);
            $this->assignBreadcrumbCurrentPage($t,
                cb_msg('grn.message', 'GRN_MSG-215'));
            $t->assign('offset', $this->getNewOffset());
            $t->assign('more_view_args', ['mid' => $mid]);

            return $t->fetch('message/mobile/userinfo_index.tpl');
        }
    }

    public function getIsFromAjax()
    {
        return $this->_is_from_ajax;
    }

    public function setIsFromAjax($value)
    {
        $this->_is_from_ajax = $value;
    }

    public function getTitle()
    {
        $message = $this->getMessageForView();

        return $message['subject'] . ' - ' . cb_msg('grn.message',
                'GRN_MSG-215');
    }
}
