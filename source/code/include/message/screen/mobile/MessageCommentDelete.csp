<?php

namespace grn\message\screen\mobile;

class MessageCommentDelete extends MobileMessageScreenBase
{
    public function fetch()
    {
        $input = $this->getInput();
        $category_id = cb_at($input, self::ARG_CATEGORY_ID);
        $relation_id = cb_at($input, self::ARG_RELATION_ID);
        $message_id = cb_at($input, self::ARG_MESSAGE_ID);
        $follow_id = cb_at($input, self::ARG_FOLLOW_ID);
        $login = cb_get_login_user();
        $login_id = $login->getOID();

        require_once('message/message_logic.csp');
        $message_logic = new \GRN_Message_Logic();
        if ( ! ($follow = $message_logic->getFollowDetail($message_id,
            $follow_id))
        ) {
            cb_throw_error(E_GRN_MESSAGE_FOLLOW_NOT_FOUND);
        }
        if (( ! is_array($follow))
            || ( ! array_key_exists('creator_id', $follow))
            || $follow['creator_id'] != $login_id
        ) {
            cb_throw_error(E_GRN_MESSAGE_DO_NOT_DELETE_FOLLOW);
        }

        require_once('grn/smarty.csp');
        $t = new \GRN_Smarty();
        $t->assign('cid', $category_id);
        $t->assign('rid', $relation_id);
        $t->assign('mid', $message_id);
        $t->assign('follow_id', $follow_id);

        $this->assignBreadcrumbUpperPage($t,
            cb_msg('grn.mobile', 'detail_title'), 'message/mobile/view',
            [
                self::ARG_CATEGORY_ID => $category_id,
                self::ARG_RELATION_ID => $relation_id,
                self::ARG_MESSAGE_ID  => $message_id
            ]);
        $this->assignBreadcrumbCurrentPage($t,
            cb_msg('grn.mobile', 'comment_delete'));

        return $t->fetch('message/mobile/comment_delete.tpl');
    }

    public function post($input)
    {
        $category_id = cb_at($input, self::ARG_CATEGORY_ID);
        $relation_id = cb_at($input, self::ARG_RELATION_ID);
        $message_id = cb_at($input, self::ARG_MESSAGE_ID);
        $follow_id = cb_at($input, self::ARG_FOLLOW_ID);
        $login = cb_get_login_user();
        $login_id = $login->getOID();

        if ($category_id == '' || $relation_id == '' || $message_id == '') {
            cb_throw_error(E_GRN_MESSAGE_MESSAGE_NOT_FOUND,
                ['app_name' => $this->getMessageName()],
                ['app_name' => $this->getMessageName()],
                ['app_name' => $this->getMessageName()]);
        }

        require_once('message/message_logic.csp');
        $message_logic = new \GRN_Message_Logic();
        if ( ! ($follow = $message_logic->getFollowDetail($message_id,
            $follow_id))
        ) {
            cb_throw_error(E_GRN_MESSAGE_FOLLOW_NOT_FOUND);
        }
        if (( ! is_array($follow))
            || ( ! array_key_exists('creator_id', $follow))
            || $follow['creator_id'] != $login_id
        ) {
            cb_throw_error(E_GRN_MESSAGE_DO_NOT_DELETE_FOLLOW);
        }

        $ret = $message_logic->deleteFollow($login, $follow_id);
        if ( ! $ret) {
            cb_throw_error(E_GRN_MESSAGE_FOLLOW_NOT_FOUND);
        }
    }

    public function getTitle()
    {
        $message = $this->getMessageForView();
        if (is_array($message) && array_key_exists('subject', $message)) {
            return $message['subject'] . ' - ' . cb_msg('grn.mobile',
                    'comment_delete');
        }

        return cb_msg('grn.mobile', 'comment_delete');
    }
}
