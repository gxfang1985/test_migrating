<?php

namespace grn\message\screen\mobile;

use grn\message\screen\mobile\MobileMessageScreenBase;
use grn\grn\Validate;
use grn\grn\GrnException;

require_once 'fw/i18n.csp';

class MessageDraftView extends MobileMessageScreenBase
{
    public function __construct($input)
    {
        parent::__construct($input);
        $this->setMobileFooterBar();
    }

    public function fetch()
    {
        require_once("grn/smarty.csp");
        $smarty = new \GRN_Smarty;

        $login = cb_get_login_user();

        $category_id = $this->getCategoryId();
        $relation_id = $this->getRelationId();
        $message_id = $this->getMessageId();
        $smarty->assign('rid', $relation_id);

        $message = $this->getMessageForView();

        if ( ! $message) {
            require_once('message/error_code.csp');
            cb_throw_error(E_GRN_MESSAGE_MESSAGE_NOT_FOUND,
                ['app_name' => $this->getMessageName()],
                ['app_name' => $this->getMessageName()],
                ['app_name' => $this->getMessageName()]);
        }

        if ($message['message_type'] != '2') {
            require_once('message/error_code.csp');
            cb_throw_error(E_GRN_MESSAGE_MESSAGE_NOT_FOUND,
                ['app_name' => $this->getMessageName()],
                ['app_name' => $this->getMessageName()],
                ['app_name' => $this->getMessageName()]);
        }

        $assign_message_map = [
            'mid'           => 'message_id',
            'data'          => 'data',
            'subscribe'     => 'subscription',
            'creator_uid'   => 'creator_id',
            'creator_name'  => 'creator_name',
            'ctime'         => 'ctime',
            'mtime'         => 'mtime',
            'update'        => 'read_flag',
            'cid'           => 'folder_id',
            'modifier_uid'  => 'modifier_id',
            'modifier_name' => 'modifier_name',
            'need_confirm'  => 'need_confirm',
            'confirmed'     => 'confirmed',
            'type'          => 'message_type',
            'is_snapshot'   => 'is_snapshot',
            'delete_time'   => 'delete_time',
            'format_type'   => 'format_type',
        ];

        $message_for_view = [];
        foreach ($assign_message_map as $view_name => $data_name) {
            $message_for_view[$view_name] =& $message[$data_name];
        }
        $message_for_view['subject'] = $message['subject'];

        $uids = [];
        if (count($message_for_view['creator_uid']) > 0) {
            $uids[] = $message_for_view['creator_uid'];
        }

        if (count($message_for_view['modifier_uid']) > 0) {
            $uids[] = $message_for_view['modifier_uid'];
        }

        // attached files
        $file_list =& $message['files'];
        if (count($file_list) > 0) {
            $file_info = _grn_message_attached_files($file_list);
            $message_for_view['attach_files'] = $file_info['files'];
            $message_for_view['del_file_num'] = $file_info['del_file_num'];
        }

        // addressees
        $addressee_list =& $message['addressees'];
        $addressee_num = count($addressee_list);

        $addressees = [];
        $counter = 0;
        foreach ($addressee_list as $addressee) {
            if ($counter > 2) {
                break;
            }
            $counter++;
            $_addressee = [];
            $_addressee['id'] = $addressee['id'];
            $uids[] = $addressee['id'];
            $_addressee['name'] = $addressee['name'];
            $addressees[] = $_addressee;
        }
        $message_for_view['addressee'] = $addressees;
        $message_for_view['addressee_num'] = $addressee_num;

        require_once("grn/controller.csp");
        $users_info = \GRN_ControllerUtil::getUserInfoToShowUserName($uids,
            $login);

        $folder_info = $this->getFolderInfo($category_id);

        //star
        require_once('star/logic.csp');
        $star_logic = \GRN_Star_StarLogic::getInstance();
        $use_star = $star_logic->isActive();
        $use_star = $use_star
                    && ($folder_info['folder_type']
                        != GRN_MESSAGE_GARBAGEFOLDER);
        $smarty->assign('use_star', $use_star);
        if ($use_star) {
            $smarty->assign('star_infos',
                $star_logic->getStatusByIDs($login, GRN_MESSAGE_MODULEID,
                    [$message_id]));
        }

        $this->assignBreadcrumbUpperPage($smarty,
            $folder_info["folder_name"],
            "message/mobile/message_list",
            [
                self::ARG_CATEGORY_ID => $category_id,
                self::ARG_RELATION_ID => $relation_id,
                self::ARG_MESSAGE_ID  => $message_id
            ]);
        $this->assignBreadcrumbCurrentPage($smarty, cb_msg('grn.message', 'draft_view_mobile'));

        require_once('message/message_logic.csp');
        $message_logic = new \GRN_Message_Logic();
        $message_logic->markAsReadMessages($login, [$relation_id]);

        $smarty->assign('message', $message_for_view);
        $smarty->assign('users_info', $users_info);
        $smarty->assign('folder_type', $folder_info['folder_type']);

        return $smarty->fetch(cb_get_pagename() . '.tpl');
    }

    public function getTitle()
    {
        $message = $this->getMessageForView(0, 0, true);

        return $message['subject'];
    }
}
