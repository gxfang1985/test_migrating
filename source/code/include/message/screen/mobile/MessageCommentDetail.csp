<?php

namespace grn\message\screen\mobile;

use grn\space\screen\mobile\MobileGenericScreenBase;
use grn\grn\mention\MentionController;
use grn\grn\MemberLogic;

class MessageCommentDetail extends MobileMessageScreenBase
{
    const ARG_IS_REPLY_ALL = 'is_reply_all';

    private $isReplyAll = false;

    /**
     * @return bool
     */
    public function isReplyAll(): bool
    {
        return $this->isReplyAll;
    }

    /**
     * @param bool $is_reply_all
     */
    protected function setIsReplyAll(bool $is_reply_all)
    {
        $this->isReplyAll = $is_reply_all;
    }

    public function __construct($input)
    {
        parent::__construct($input);
        $follow_id = cb_at($input, self::ARG_FOLLOW_ID);

        $message = $this->getMessageForView(0, -1);
        if ( ! array_key_exists($follow_id, $message['follows'])) {
            cb_throw_error(E_GRN_MESSAGE_FOLLOW_NOT_FOUND);
        }

        $is_reply_all = $input[self::ARG_IS_REPLY_ALL] ?? false;
        $this->setIsReplyAll(boolval($is_reply_all));
    }

    public function fetch()
    {
        require_once('grn/smarty.csp');
        $t = new \GRN_Smarty();

        $message = $this->getMessageForView();

        $input = $this->getInput();
        $category_id = cb_at($input, self::ARG_CATEGORY_ID);
        $relation_id = cb_at($input, self::ARG_RELATION_ID);
        $message_id = cb_at($input, self::ARG_MESSAGE_ID);
        $follow_id = cb_at($input, self::ARG_FOLLOW_ID);

        $login = cb_get_login_user();
        $login_id = $login->getOID();

        if (array_key_exists($follow_id, $message['follows'])) {
            $follow = $message['follows'][$follow_id];
        } else {
            cb_throw_error(E_GRN_MESSAGE_FOLLOW_NOT_FOUND);
        }

        //get plain text follow
        require_once('message/message_logic.csp');
        $message_logic = new \GRN_Message_Logic();
        $follow_plain_text = $message_logic->getFollowDetail($message_id,
            $follow_id);
        if (is_array($follow_plain_text)
            && array_key_exists('data', $follow_plain_text)
        ) {
            $follow['data'] = $follow_plain_text['data'];
        }

        require_once('grn/controller.csp');
        $users_info
            = \GRN_ControllerUtil::getUserInfoToShowUserName([$follow['creator_id']],
            $login);
        $users_info = $this->getUsersInfoType($users_info);
        $t->assign('users_info', $users_info);

        $follow['creator_type'] = $users_info[$follow['creator_id']]['valid'];
        $follow['creator_url']
            = \GRN_ControllerUtil::getUserProfileURL($follow['creator_id']);
        $follow['cid'] = $category_id;
        $follow['rid'] = $relation_id;
        $follow['mid'] = $message_id;
        $follow['follow_id'] = $follow_id;
        $follow['can_follow'] = $this->checkFollowEnable();
        $follow[self::ARG_IS_REPLY_ALL] = $this->isReplyAll();

        /** @var \grn\grn\mention\bean\MentionObjectCollection $mention */
        $mention = $message_logic->getMention($follow_id);
        $mention_count = $mention->count();
        if ($mention_count > 0) {
            $offset_member
                = MobileGenericScreenBase::DEFAULT_OFFSET_DISPLAY_MEMBER;
            $max_member
                = MobileGenericScreenBase::MAX_NUM_DISPLAY_MEMBER;
            $mention_list
                = MentionController::createMemberListsForView([$mention],
                $offset_member, $max_member);
            $follow['mention'] = $mention_list[0] ?? [];
            $follow['mention_count'] = $mention_count;
        }

        $t->assign('comment', $follow);

        require_once('fw/plugin.csp');
        $mention_access_plugin_encoded = \CB_PluginLoader::encodeParam(
            [
                'name'   => 'message',
                'params' => [
                    'app_id'      => 'message',
                    'message_id'  => $message_id,
                    'target'      => [MemberLogic::TYPE_USER],
                    'relation_id' => $relation_id,
                ]
            ]
        );
        $t->assign('mention_access_plugin_encoded',
            $mention_access_plugin_encoded);

        $params = [
            self::ARG_CATEGORY_ID => $category_id,
            self::ARG_RELATION_ID => $relation_id,
            self::ARG_MESSAGE_ID  => $message_id
        ];
        $this->assignBreadcrumbUpperPage($t,
            cb_msg('grn.mobile', 'detail_title'), 'message/mobile/view',
            $params);
        $this->assignBreadcrumbCurrentPage($t,
            cb_msg('grn.mobile', 'comment_reply_title'));

        return $t->fetch('message/mobile/comment_detail.tpl');
    }

    public function getTitle()
    {
        $message = $this->getMessageForView();
        if (is_array($message) && array_key_exists('subject', $message)) {
            return $message['subject'] . ' - ' . cb_msg('grn.mobile',
                    'comment_reply_title');
        }

        return cb_msg('grn.mobile', 'comment_reply_title');
    }
}
