<?php

namespace grn\cydec\yrmcds;

require_once('fw/cydec.csp');
require_once('fw/slash_util.csp');

/**
 * Class SlashSessionClient
 * ReadOnly:SlashSessionObject
 *
 * @package grn\cydec\yrmcds
 */
class SlashSessionClient
{
    /** @var self */
    private static $instance;
    /** @var \grn\cydec\yrmcds\SessionClient */
    private $client;

    private function __construct(SessionClient $client)
    {
        $this->client = $client;
    }

    /**
     * @var string $prefix session key prefix
     * session key format : <domainId>/session/<sessionId>
     * @return SlashSessionClient
     */
    public static function getInstance()
    {
        if (self::$instance instanceOf self) {
            return self::$instance;
        }

        $cydec = \CB_CyDECUtil::getInstance();
        $domainId = $cydec->getDomainId();
        $slash = \CB_SlashDB::getInstance();
        $expire = $slash->getSessionTimeoutSeconds();
        $prefix = "{$domainId}/session/";
        self::$instance = new self($cydec->getYrmcdsSessionClient($prefix,
            $expire));

        return self::$instance;
    }

    /**
     * @param $id
     *
     * @return SlashSessionObject
     */
    public function getSessionObject($id)
    {
        try {
            $is_expire = ! \CB_CyDECUtil::getIsSessionNoProlonging();
            $jsonLiteral = $this->client->read($id, $is_expire);
        } catch (\Exception $e) {
            $jsonLiteral = "";
        }

        return SlashSessionObject::getInstance($jsonLiteral);
    }

    /**
     * @return SlashSessionObject
     */
    public function getSessionObjectBySessionId()
    {
        return $this->getSessionObject(session_id());
    }

} 
