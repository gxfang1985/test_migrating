<?php

use grn\system\sandbox\SandboxProfileData;

cb_lwc_uum()->execInspection("sandbox", "apply sched", []);

// setup execution data
$basedir = cb_basedir();
$php = cb_get_cli_path();
$filePath = [$basedir, "code", "command", "apply_sandbox.csp"];
$command = cb_get_fopen_execute_path($php,
    implode($filePath, DIRECTORY_SEPARATOR));

// start apply
$startTime = time();
$trialLimit = 3600 * 6; // 6 hour
$numOfTrial = 1;
$success = false;
while ($numOfTrial <= 10 && (time() - $startTime) < $trialLimit) {
    $output = [];
    $exitCode = null;

    echo "[Apply sandbox({$numOfTrial})]" . PHP_EOL;
    exec($command, $output, $exitCode);
    echo implode(PHP_EOL, $output) . PHP_EOL;

    if ($exitCode === CB_EXIT_SUCCESS) {
        $success = true;
        break;
    } else {
        echo "[Apply sandbox({$numOfTrial}) failed. Sleeping take a while]"
             . PHP_EOL;
        sleep(5);
    }
    $numOfTrial++;

}

// re-connect DB ( avoiding the connection timeout caused by mysql long sleep )
$db = cb_get_master_db();
$db->reconnect();

// check result
$applyResult = SandboxProfileData::getInstance();
$applyResult->setApplyResult($success, new CB_TimeStampEx());

if ( ! $success) {
    echo "[Apply sandbox failed completely]" . PHP_EOL;
    cb_safe_exit(CB_EXIT_ERROR);
}

echo "[Apply sandbox success]" . PHP_EOL;
