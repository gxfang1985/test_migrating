<?php

require_once('grn/rss.csp');
require_once('rss/system.csp');
require_once('grn/application.csp');

$rss_manager = GRN_RSS_Manager::getInstance();
$service = GRN_RSS_Service::getInstance();
$system = GRN_RSS_SystemLogic::getInstance();

// parameters
$interval = intval($system->getCacheIntervalAttribute()) * 60;
$max_channel_num = intval($system->getTargetChannelNumAttribute());
$subscribed_user_num = $system->getMaxUserNumAttribute();
$timeout = intval($system->getSchedulingTimeoutAttribute());

$app_locator = GRN_ApplicationLocator::instance();
$db = $app_locator->getConnection('rss');

$rss_app = $app_locator->getInstance('rss', false);
$utime = time() - $interval;

if ($rss_app instanceof GRN_RSS_Reader) {
    // UNION 内部のサブクエリでは本来 ORDER BY, LIMIT を指定すべきではないが
    // パフォーマンス面を考慮し追加した
    // DISTINCT は現状不要だが、将来的にフォルダ階層をサポートした場合に同一
    // のチャネルを別のフォルダに登録することが考えれるため、指定している

// 更新されていない共有チャネル
    $query1
        = 'SELECT DISTINCT c.col_id cid, c.col_utime utime FROM tab_grn_rss_channel AS c INNER JOIN tab_grn_rss_sharedchannelinfo AS s ON c._id = s.col_channel AND col_utime < '
          . $utime . ' ORDER BY utime LIMIT 0, ' . $max_channel_num;

// 更新されていない共有人数 $subscribed_user_num 人以上のチャネル
    $query2
        = 'SELECT col_id cid, col_utime utime FROM tab_grn_rss_channel WHERE col_user_num > '
          . $subscribed_user_num
          . ' AND col_utime < ' . $utime . ' ORDER BY utime LIMIT 0, '
          . $max_channel_num;

    $query = '(' . $query1 . ') UNION (' . $query2
             . ') ORDER BY utime LIMIT 0, ' . $max_channel_num;

    $result = $db->query($query);

    while ($row = $db->fetch_assoc($result)) {
        $service->syncData($row['cid'], $timeout);
    }
}


