<?php

require_once('grn/license.csp');

// 1,2,3ヶ月前、期限切れ、サービス停止日に通知
$t = [-30, 0, 30, 60, 90];

$lm = GRN_LicenseManager::getInstance();
$license_info = $lm->getLicense(GRN_LICENSE_BASESYSTEM);

if ($license_info !== false && ! $lm->isDemoLicense($license_info['type'])) {
    require_once('grn/outside_application.csp');

    global $G_container_base;
    $uum = $G_container_base->getInstance('uum');
    $admin = $uum->getUser(GRN_UUM_ADMINISTRATION_USER);

    // サービス期限の残り日
    $remind_days = $lm->getRemindDays($license_info['service_limit']);
    $module_id = GRN_NOTIFICATION_CYBOZU_INFORMATION;
    $unique_id = 'grn.common.license';

    require_once('fw/profile.csp');
    $notify_remind_day = null;
    $profile = cb_get_system_profile($unique_id);
    $profile->getAttribute('notify', $notify_remind_day);

    // ライセンスが更新されている場合
    if ( ! is_null($notify_remind_day)) {
        if ($remind_days > $notify_remind_day) {
            $profile->removeAttribute('notify');
            $notify_remind_day = null;
        }
    }

    // 既に通知すみの場合
    if ( ! is_null($notify_remind_day)) {
        // 通知済みの部分を削除
        foreach (array_keys($t) as $key) {
            if ($t[$key] >= $notify_remind_day) {
                unset($t[$key]);
            }
        }
    }

    // 指定日時の場合
    if (in_array($remind_days, $t)) {

        $ns = GRN_Notification_Service::getInstance();

        /////////////////////
        // 通知データ作成
        /////////////////////
        $data = new GRN_Notification_Data;
        $data->setModuleId($module_id);
        $data->setUniqueId($unique_id);
        $subject = cb_msg('grn.common.information.message', 'name');
        $contents = cb_msg('grn.common.information.message',
            'about_license_term');

        $data->setSubjectData($subject, null, null, 'system/index',
            'notify_cybozu20');
        $data->setAbstractData($contents);
        $data->setOrgDataString('');
        $data->setSenderData($admin->get('display_name'),
            $admin->getOID());

        $ts = new CB_TimeStamp();
        $ts->unix_ts = time();
        $data->setTimeStampData($ts);
        $data->setStatusToUnread();
        $data->setAutoConfirmFlag(true);

        $users = $uum->getRoleUsers(GRN_UUM_ADMINISTRATION_ROLE);
        foreach (array_keys($users) as $uid) {
            $ns->modifyNotifyData($users[$uid], $data, true);
        }

        if ( ! is_null($notify_remind_day)) {
            $profile->updateAttribute('notify', $remind_days);
        } else {
            $profile->createAttribute('notify', $remind_days);
        }
    }
}


