<?php

/////////////////////////////////////////////
//  テンポラリディレクトリのクリーンアップ
/////////////////////////////////////////////
$temp = cb_tmpdir();
_delete($temp, '_condition', true);
$upload_temp = get_cfg_var('upload_tmp_dir');
_delete($upload_temp, '_condition', true);


/////////////////////////////////////////////
//  cleanup applications
/////////////////////////////////////////////
grn_cleanup_applications();


/////////////////////////////////////////////
//  Remove expired uploaded files
/////////////////////////////////////////////
require_once('grn/upload.csp');
GRN_UploadFile::removeIneffectiveFiles();


/**
 * @access private
 */
function _condition($file)
{
    $info = stat($file);
    $now = time();
    if ($now > $info['mtime'] + 86400) {
        return true;
    }

    return false;
}

/**
 * @access private
 */
function _delete($dir, $condition_func, $is_root)
{
    if (($dh = @opendir($dir)) !== false) {
        while (($r = @readdir($dh)) !== false) {
            if (($r != '.') && ($r != '..')) {
                $child = "$dir/$r";
                if (is_dir($child)) {
                    _delete($child, $condition_func, false);
                } else {
                    if (call_user_func($condition_func, $child)) {
                        @unlink($child);
                    }
                }
            }
        }
        @closedir($dh);

        if (_isEmptyDir($dir) && ! $is_root) {
            @rmdir($dir);
        }
    }
}

/**
 * @access private
 */
function _isEmptyDir($dir)
{
    $ret = true;
    if (($dh = @opendir($dir)) !== false) {
        while (($file = @readdir($dh)) !== false) {
            if (($file != '.') && ($file != '..')) {
                $ret = false;
                break;
            }
        }
    }
    @closedir($dh);

    return $ret;
}

function grn_cleanup_applications()
{
    require_once('grn/application.csp');
    $app_locator = GRN_ApplicationLocator::instance();

    $available_only = false;
    $cleanup_applications = $app_locator->getInstancesWithMethod('cleanup',
        $available_only);
    foreach (array_keys($cleanup_applications) as $app_id) {
        $instance = $cleanup_applications[$app_id];
        $instance->cleanup();
    }
}
