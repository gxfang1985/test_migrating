<?php

cb_require_role('LoginUser');

// API execution permissions may limited to some roles
// Check if this user has the role to execute API
require_once('util_api/logic.csp');
$has_sysapi_setting = grn_util_role_check_for_api('sysapi_roles');

// when common.ini does not have sysapi execution setting, check the
// default role 'Administrators'
if ( ! $has_sysapi_setting) {
    global $G_container_base;
    $grn_uum = $G_container_base->getInstance('uum');
    $login_user = $grn_uum->getLoginUser();
    require_once('grn/system_logic.csp');
    $system = GRN_System::getInstance();
    if ( ! $system->isSuperAdmin($login_user)) {
        cb_throw_error(E_GRN_NO_SYSTEM_PRIVILEGE);
    }
}

$page_path = strtolower(cb_get_pagename());
$page_parts = explode('/', $page_path);
$app_id = $page_parts[1];

require_once('grn/application.csp');
$locator = GRN_ApplicationLocator::instance();
$app_ids = $locator->getApplicationIds();

$is_application = true;
if ( ! in_array($app_id, $app_ids)) {
    $app_id = 'common';
    $is_application = false;
}

if ($is_application && $app =& $locator->getInstance($app_id)) {
    global $G_container_base;
    $uum =& $G_container_base->getInstance('uum');
    // Check application license.
    if ($redirect = $app->forceRedirect($page_parts) !== false) {
        cb_throw_error(E_GRN_UTIL_API_LICENSE_EXPIRED);
    }
    // availability check
    if ( ! $app->isAvailableFor($uum->getLoginUser())) {
        require_once('grn/error_code.csp');
        cb_throw_error(E_GRN_APPLICATION_NOT_AVAILABLE);
    }
} else {
    // activity check
    if (in_array($app_id, $app_ids)) {
        require_once('grn/error_code.csp');
        cb_throw_error(E_GRN_APPLICATION_NOT_ACTIVE);
    }
}

// execute SOAP action
require_once('util_api/logic.csp');
grn_util_api_service_execute();


