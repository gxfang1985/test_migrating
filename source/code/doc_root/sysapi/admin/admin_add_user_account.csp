<?php
/** @var GRN_Util_Api_Service $sysapi_service */
/** @var GRN_Uum $uum */
if (isset($sysapi_service) && ! defined('ON_FOREST')) {
    require_once('cbpapi/util.csp');

    // Get parameters from the xml
    $request_params = $sysapi_service->getRequestParameters();

    global $G_container_base;
    $uum = $G_container_base->getInstance('uum');

    $values = $sysapi_service->selectSingleNode($request_params,
        'user_info');
    $user_info = $values;

    // 組み込み項目を取得する
    $builtin_parameters = $sysapi_service->getBuiltinParameters($user_info);

    // カスタマイズ項目を取得する
    $extended_parameters = $sysapi_service->getExtendedParameters($user_info);

    // ユーザー作成用のプロパティを用意する
    $basic_properties = $sysapi_service->getBasicProperties($request_params,
        $user_info);

    $user = $uum->addUser($basic_properties);
    $userId = $user->getOID();

    // Set password using password_raw parameter
    $passwd_raw = $sysapi_service->getPasswordParameter($request_params);
    require_once('grn/uum_util.csp');
    $uum_util = GRN_UumUtil::getInstance();
    if ($uum_util->isValidPassword($passwd_raw)) {
        $uum->changePassword($userId, null, $passwd_raw, true, true);
    }

    // 表示優先度
    $value = $sysapi_service->getAttribute($user_info, 'position');
    if ($value !== false && $value > 0) {
        $uum->setUserProperties($userId, ['position' => $value]);
    }

    // 組み込み項目のプロパティを変更する
    require_once('grn/controller.csp');
    $controller_util = new GRN_ControllerUtil();
    $builtin_items = $sysapi_service->getBuiltinProperties();
    $controller_util->setBuiltinItemProperties($builtin_items, $user,
        $builtin_parameters);

    // カスタマイズ項目のプロパティを変更する
    $extended_items = $sysapi_service->getExtendedProperties();
    $controller_util->setExtendedItemProperties($extended_items, $user,
        $extended_parameters);

    // 組織へ追加
    $values = $sysapi_service->selectNodesValue($user_info, 'organization');
    $org_ids = [];
    if (is_array($values) && count($values) > 0) {
        foreach ($values as $org_id) {
            $org_ids[$org_id] = $org_id;
        }
        if (is_array($org_ids) && count($org_ids) > 0) {
            $groups = $uum->getGroupInfoList($org_ids);
            if (is_array($groups) && count($groups) > 0) {
                $uum->setUserGroups($userId, array_keys($groups));
            }
        }
    }

    // 優先する組織の設定
    $value = $sysapi_service->getAttribute($user_info, 'primary_group');
    if ($value !== false && array_key_exists($value, $org_ids)) {
        $uum->setUserPrimaryGroup($userId, $value);
    }

    // ロケールの設定
    $locale_id = $sysapi_service->getAttribute($user_info, 'locale');
    if ($locale_id !== false) {
        require_once("fw/i18n/locale.csp");
        CB_LocaleManager::setUserLocaleSetting($userId, $locale_id);
    } else {
        require_once("fw/i18n/locale.csp");
        CB_LocaleManager::setUserLocaleSetting($userId, null);
    }

    // 拠点の設定
    $base_id = $sysapi_service->getAttribute($user_info, 'base');
    if ($base_id !== false) {
        require_once('fw/i18n/base.csp');
        CB_BaseManager::setUserBaseSetting($userId, $base_id);
    }

    $uum->execInspection('user', 'create', [
        'uid'     => $userId,
        'name'    => $user->get('display_name'),
        'account' => $user->get('foreign_key'),
        'memo'    => 'Edited by SysAPI'
    ]);

    require_once('grn/smarty.csp');
    $t = new GRN_Smarty;

    $t->assign('login_name', $user->get('foreign_key'));
    $t->assign('display_name', $user->get('display_name'));
    $t->assign('userId', $userId);

    $t->assign('xml_namespaces',
        "xmlns:admin=\"http://wsdl.cybozu.co.jp/admin/2008\"");
    grn_util_api_response($t, __FILE__);
}
