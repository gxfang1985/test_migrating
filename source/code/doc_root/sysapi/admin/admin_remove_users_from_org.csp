<?php
/** @var GRN_Util_Api_Service $sysapi_service */
/** @var GRN_Uum $uum */
if (isset($sysapi_service) && ! defined('ON_FOREST')) {
    // Get parameters from the xml
    $request_params = $sysapi_service->getRequestParameters();

    $values = $sysapi_service->selectNodesValue($request_params, 'orgId', true);
    $orgId = $values[0];

    // If root org, return 0 because a root org of Garoon does not have users
    require_once('sysapi/logic.csp');
    if ($orgId === GRN_SYSAPI_ROOT_ORGID) {
        require_once('grn/smarty.csp');
        $t = new GRN_Smarty;

        $t->assign('affected_orgId', GRN_SYSAPI_ROOT_ORGID);
        $t->assign('affected_userIds', null);

        $t->assign('xml_namespaces',
            "xmlns:admin=\"http://wsdl.cybozu.co.jp/admin/2008\"");
        grn_util_api_response($t, __FILE__);

        return;
    }

    $userIds = $sysapi_service->selectNodesValue($request_params, 'userId',
        true);

    global $G_container_base;
    $uum = $G_container_base->getInstance('uum');

    // Check existence of orgId, if not exist return an error message
    $org = $uum->getGroupInfo($orgId);
    if (is_null($org) || ! $org) {
        require_once('sysapi/error_code.csp');
        cb_throw_error(E_GRN_SYSAPI_INVALID_ORG, null, ['orgId' => $orgId],
            ['orgId' => $orgId]);
    }

    $cur_users = $uum->getGroupUsers($orgId);
    $affected_userIds = [];
    foreach ($userIds as $userId) {
        if (array_key_exists($userId, $cur_users)) {
            unset($cur_users[$userId]);
            $affected_userIds[] = $userId;
        }
    }
    $result = $uum->setGroupUsers($orgId, array_keys($cur_users));
    if ($result) {
        $uum->execInspection('group', 'delete_assign',
            [
                'gid'  => $orgId,
                'uids' => implode(',', array_keys($cur_users)),
                'memo' => 'Edited by SysAPI'
            ]);
    } else {
        require_once('sysapi/logic.csp');
        $orgId = GRN_SYSAPI_INVALID_ORGID;
        $affected_userIds = [];
    }

    require_once('grn/smarty.csp');
    $t = new GRN_Smarty;

    $t->assign('affected_orgId', $orgId);
    $t->assign('affected_userIds', $affected_userIds);

    $t->assign('xml_namespaces',
        "xmlns:admin=\"http://wsdl.cybozu.co.jp/admin/2008\"");
    grn_util_api_response($t, __FILE__);
}
