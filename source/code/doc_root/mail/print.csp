<?php

use grn\mail\HtmlMailInlineContents;
use grn\mail\HtmlMailProcessor;

global $G_INPUT;
$uum = cb_lwc_uum();
$user = $uum->getLoginUser();
$user_id = $user->getOID();
if ( ! is_object($user)) {
    cb_throw_error(E_COMMON_AUTHENTICATION_FAILED);
}

global $G_state_set;
$G_state_set->set('copyright_should_be_written', false);
$G_state_set->set('html_should_be_closed', false);

// Smarty をインスタンス化
require_once("grn/smarty.csp");
$t = new GRN_Smarty;

require_once('mail/utility.csp');
$utility = GRN_Mail_Utility::getInstance();
$mail_logic = $utility->getMailLogic();
$system_config = $utility->getSystemConfig();

$mail_id = @ $G_INPUT['mid'];
$mail_data = $mail_logic->getMailData($mail_id, true);

//------------------

// インライン表示設定
require_once('grn/ui.csp');
$uim = GRN_UIConfigManager::getInstance();
$system_ui_config = $uim->getSystemConfig();
$user_ui_config = $uim->getUserConfig($user);
unset($uim);
$inline = $user_ui_config->getInlineSetting();

//------------------

$from = $mail_data['from'];
$to = $mail_data['to'];
$cc = $mail_data['cc'];
$bcc = $mail_data['bcc'];

// メール情報
$mail_for_view = [
    'mid'       => $mail_id,
    'from'      => $from,
    'ctime'     => $mail_data['send_ts'], //送信日時
    'to'        => $to,
    'cc'        => $cc,
    'bcc'       => $bcc,
    'subject'   => $mail_data['subject'],
    'data'      => $mail_data['data'],
    'sent'      => $mail_data['sent'],
    'html_data' => strlen($mail_data['html_data']) > 0,
];

$can_show_html = true;
$system_config->getGeneralSetting($general_settings);
if ((strcmp($mail_data['sent'], '1') != 0)
    && $general_settings['mail_display_plaintext']
) {
    $can_show_html = false;
}
$t->assign('can_show_html', $can_show_html);

if ($mail_for_view['html_data']) {
    $show_picture = $utility->isHtmlMailShowPicture($user_id, $mail_id,
        $mail_data['sent']);
    $files = new HtmlMailInlineContents(cb_at($mail_data, 'files',
        []), $mail_id);
    $htmlMailProcessor = new HtmlMailProcessor();
    $html = $htmlMailProcessor->process($mail_data['html_data'],
        $files, $show_picture);
    $inline_file_ids = $htmlMailProcessor->getInlineFileIds();

    if ($can_show_html) {
        $mail_for_view['data'] = $html;
    }
} else {
    $inline_file_ids = [];
}

// 添付ファイル
if (array_key_exists('files', $mail_data)) {
    $mail_for_view['inline_files'] = [];
    $mail_for_view['attach_files'] = [];
    foreach ($mail_data['files'] as $key => $file) {
        if (in_array($file['fid'], $inline_file_ids)) {
            $mail_for_view['inline_files'][$key] = $file;
        } else {
            $mail_for_view['attach_files'][$key] = $file;
        }
    }
}

$mail_for_view['attach_file_type'] = $mail_data['source_flag'] ? 1 : 2;

$t->assign('inline', $inline);
$t->assign('name_format', 'full');

// set_data
$t->assign('mail', $mail_for_view);

$t->assign("mid", $mail_id);

// page title
$page_title = grn_get_current_page_display_name(['app_name' => $G_mail_name]);
$t->assign('page_title', $page_title);

// site position
$t->assign(
    'site_position', [
        [
            'page' => '',
            'name' => $page_title
        ]
    ]
);

// Smarty実行
$doc_name = cb_get_pagename();
$t->display("{$doc_name}.tpl");


