<?php

$bid = @ $G_INPUT['bid'];

require_once('cellular/controller.csp');
$controller_util = new GRN_Cellular_ControllerUtil();

require_once('address/application.csp');
$app_locator = GRN_ApplicationLocator::instance();
/** @var GRN_Address_Application $app */
$app = $app_locator->getInstance(GRN_ADDRESS_APPLICATION_ID);
$book_manager = $app->getBookManager();

require_once('address/access.csp');
$access_manager = GRN_Address_AccessManager::getInstance();
if ( ! ($row = $access_manager->getAbstractData(GRN_ADDRESS_AVAILABLE))) {
    assert('FALSE');
}

require_once('address/config.csp');
$config_manager = GRN_Address_ConfigManager::getInstance();

require_once('address/view_util.csp');
$view_util = GRN_Address_ViewUtil::getInstance();

// ログインユーザーIDを取得する
$login_id = $G_login_user->getOID();

// ダイナミックロールを取得する
$dynamic_roles = $G_uum->listGrantedRoles();
$authorities = ['private_address', 'shared_address'];
$security_model = $access_manager->getSecurityModel($row);
$access = $access_manager->evaluateAccess($row, $G_login_user,
    $dynamic_roles, $authorities, $security_model);

$book = null;
if (0 > $bid) {
    // 個人アドレス帳の使用権限を評価する
    $authorities = ['private_address'];
    $access_private_address = $access_manager->isAllowedAccess($access,
        $authorities, $security_model);

    // 個人アドレスブックの使用権限を評価する
    if ( ! $access_private_address) {
        cb_throw_error(E_GRN_ADDRESS_ACCESS_DENY_PRIVATE_ADDRESS);
    }

    // 個人アドレスブックを取得する
    if ( ! ($book = $book_manager->getPrivateAddressBookByUserId($login_id))) {
        if ( ! ($book = $book_manager->addPrivateAddressBook('cyde', $login_id,
            []))
        ) {
            cb_throw_error(E_GRN_ADDRESS_PRIVATE_ADDRESS_BOOK_NOT_FOUND);
        }
    }
} elseif (0 < $bid) {
    // 共有アドレス帳の使用権限を評価する
    $authorities = ['shared_address'];
    $access_shared_address = $access_manager->isAllowedAccess($access,
        $authorities, $security_model);

    // 共有アドレス帳の使用権限を評価する
    if ( ! $access_shared_address) {
        cb_throw_error(E_GRN_ADDRESS_ACCESS_DENY_SHARED_ADDRESS);
    }

    // 共有アドレスブック一覧を取得する
    $shared_address_books = $book_manager->listSharedAddressBooks();

    // 共有アドレス帳の有無を調べる
    if ( ! @$shared_address_books[$bid]) {
        cb_throw_error(E_GRN_ADDRESS_INVALID_BOOK_ID);
    }

    $allow_books = [];
    if (0 < count($shared_address_books)) {
        // アクセス可能な共有アドレスブック一覧を取得する
        $rows = [];
        foreach (array_keys($shared_address_books) as $book_id) {
            $book = $shared_address_books[$book_id];
            $rows[$book_id] = $book->getRow();
        }
        $authorities = ['browse'];
        $allow_books = $access_manager->pickAllowedObjects($rows, $G_login_user,
            $dynamic_roles, $authorities);
    }
    // アクセス可能な共有アドレス帳の有無を調べる
    if ( ! @$allow_books[$bid]) {
        cb_throw_error(E_GRN_ADDRESS_ACCESS_DENY_BROWSE);
    }

    $book = $shared_address_books[$bid];
}

if ( ! $book) {
    cb_throw_error(E_GRN_ADDRESS_INVALID_BOOK_ID);
}

// アドレスを取得する
$card_id = $add_address['address'];
if ( ! ($data = $book->getData($card_id))) {
    cb_throw_error(E_GRN_ADDRESS_INVALID_CARD_ID);
}

// 選択ユーザー情報一覧を生成する
$display_name = $data->getProperty('subject');
$email_address = $data->getProperty('email_address');
if (0 < strlen($display_name) && 0 < strlen($email_address)) {
    $selected_users = [
        'display_name'  => $display_name,
        'email_address' => $email_address
    ];
}


