<?php
// Smarty をインスタンス化
require_once('cellular/smarty.csp');
$smarty = new GRN_Cellular_Smarty;
// ページタイトル
$smarty->assign('pagetitle', grn_get_current_page_display_name());
// パス情報
$smarty->assign('pagepath', $G_pagepath);
//------------------------------------------------------------------
// SmartyValidate should be initialized when an input form is there.
require_once('SmartyValidate.class.php');
SmartyValidate::connect($smarty);
$form_name = 'mail/cellular/create';
SmartyValidate::register_form($form_name, true);
$smarty->assign('form_name', $form_name);
//------------------------------------------------------------------
require_once('mail/utility.csp');
$utility = GRN_Mail_Utility::getInstance();
$system_config = $utility->getSystemConfig();
$personal_config = $utility->getPersonalConfig($G_login_user);
$folder_logic = $utility->getFolderLogic();
$mail_logic = $utility->getMailLogic();
$send_logic = $utility->getSendLogic();

$account_id = isset($G_INPUT['aid']) ? $G_INPUT['aid'] : null;
$category_id = isset($G_INPUT['cid']) ? $G_INPUT['cid'] : null;
$mail_id = isset($G_INPUT['mid']) ? $G_INPUT['mid'] : null;
$to_mail_address = isset($G_INPUT['m_add']) ? $G_INPUT['m_add'] : null;

$sess_mail_add = $G_cellular_session->get('sess_mail_add');

//送信確認の修正からきたとき。
if ($sess_mail_add) {
    $subj = isset($sess_mail_add['subject']) ? $sess_mail_add['subject'] : null;
    $subj = preg_replace(['/&lt;/', '/&gt;/', '/&quot;/'], ['<', '>', '"'],
        $subj);
    $smarty->assign('subject', $subj);
    $smarty->assign('data',
        isset($sess_mail_add['data']) ? $sess_mail_add['data'] : null);
    $smarty->assign('to',
        isset($sess_mail_add['to']) ? $sess_mail_add['to'] : null);
    $smarty->assign('cc',
        isset($sess_mail_add['cc']) ? $sess_mail_add['cc'] : null);
    $smarty->assign('bcc',
        isset($sess_mail_add['bcc']) ? $sess_mail_add['bcc'] : null);
    $smarty->assign('empty_flag',
        isset($sess_mail_add['empty_flag']) ? $sess_mail_add['empty_flag']
            : null);
    $G_cellular_session->unset_by('sess_mail_add');
} else {
    //本文が長い時
    if (isset($G_INPUT['content']) && mb_strlen($G_INPUT['content']) > 1024) {
        $content = mb_substr($G_INPUT['content'], 0, 1024);
    } else {
        $content = (isset($G_INPUT['content'])) ? $G_INPUT['content'] : null;
    }
    $subj = isset($G_INPUT['title']) ? $G_INPUT['title'] : null;
    $subj = preg_replace(['/&lt;/', '/&gt;/', '/&quot;/'], ['<', '>', '"'],
        $subj);
    $smarty->assign('subject', $subj);
    $smarty->assign('data', isset($content) ? $content : null);
    $smarty->assign('to', isset($G_INPUT['to']) ? $G_INPUT['to'] : null);
    $smarty->assign('cc', isset($G_INPUT['cc']) ? $G_INPUT['cc'] : null);
    $smarty->assign('bcc', isset($G_INPUT['bcc']) ? $G_INPUT['bcc'] : null);

}
include('_account_common.csp');

//検索から引数を持って戻ってきたとき
if (isset($G_INPUT['add']) || isset($G_INPUT['add_b'])
    || isset($G_INPUT['add_raw'])
) {
    $add_address['address'] = isset($G_INPUT['add']) ? $G_INPUT['add'] : null;
    $add_address['book'] = isset($G_INPUT['add_b']) ? $G_INPUT['add_b']
        : null;
    $add_address['raw'] = isset($G_INPUT['add_raw']) ? $G_INPUT['add_raw']
        : null;
}
if (isset($add_address) && count($add_address) > 0) {
    //アドレス帳検索から戻ったとき。
    $from = ($sess_mail_add['from']) ? $sess_mail_add['from'] : 'to';
    $to_list = '';
    if ($add_address['address']) {
        include('_create_common.csp');
        $add_user_address = &$selected_users['email_address'];

    } elseif ($add_address['raw']) {
        $add_user_address = $add_address['raw'];
    } elseif ($add_address['book']) {
        $add_user_obj = $G_uum->getUser($add_address['book']);;
        $add_user_address = $add_user_obj->get('email_address');
    }

    if (@$sess_mail_add['from'] == 'to') {
        $to_list = ($sess_mail_add['to']) ? $sess_mail_add['to'] . ",\n" : "";
    } elseif (@$sess_mail_add['from'] == 'cc') {
        $to_list = ($sess_mail_add['cc']) ? $sess_mail_add['cc'] . ",\n" : "";
    } elseif (@$sess_mail_add['from'] == 'bcc') {
        $to_list = ($sess_mail_add['bcc']) ? $sess_mail_add['bcc'] . ",\n" : "";
    }
    $to_list .= $add_user_address;
    $smarty->assign($from, $to_list);

}//返信
elseif ($mail_id) {
    //メールデータを取得。
    $mail_data = $mail_logic->getMailData($mail_id, true);
    $category_id = $mail_data['folder_id'];
    $folder_data = $folder_logic->getFolderData($category_id, false, true);
    $account_id = $folder_data['account_id'];


    if (isset($G_INPUT['reply'])) {
        // 返信本文取得
        $except_emails = [];
        $from_email_array
            = GRN_Mail_Utility::static_formatAddressString($mail_data['from'],
            false, false, true, true, 'array');
        foreach ($from_email_array as $temp_array) {
            $temp_email = $temp_array['email'];
            $except_emails[] = $temp_email;
        }
        $except_emails[] = $account_info->email;
        $reply_cc = $send_logic->makeReplyCc($mail_data, $except_emails);
    } else {
        // 返信本文取得
        $reply_cc = '';
    }
    $reply_to = $send_logic->makeReplyTo($mail_data);
    $reply_subject = $send_logic->makeReplySubject($mail_data);
    $reply_data = $send_logic->makeReplyData($mail_data, false, false);

    $smarty->assign('subject', $reply_subject);
    $smarty->assign('data', "\r\n" . $reply_data['data']);
    $smarty->assign('to', $reply_to);
    $smarty->assign('cc', $reply_cc);
} elseif ($to_mail_address) {
    $from = ($sess_mail_add['from']) ? $sess_mail_add['from'] : 'to';

    $to_list = '';
    if (@$sess_mail_add['from'] == 'to') {
        $to_list = ($sess_mail_add['to']) ? $sess_mail_add['to'] . ",\n" : "";
    } elseif (@$sess_mail_add['from'] == 'cc') {
        $to_list = ($sess_mail_add['cc']) ? $sess_mail_add['cc'] . ",\n" : "";
    } elseif (@$sess_mail_add['from'] == 'bcc') {
        $to_list = ($sess_mail_add['bcc']) ? $sess_mail_add['bcc'] . ",\n" : "";
    }
    $to_list .= urldecode($to_mail_address);
    $smarty->assign($from, $to_list);
}

// 署名情報取得
$signature_list = [];
$signature = [];
foreach (array_keys($account_list_for_view) as $temp_account_id) {
    // アカウントの署名設定リストを取得
    $signature_list[$temp_account_id]
        = $personal_config->getSignatureDataList($temp_account_id, true);
    if (is_array($signature_list[$temp_account_id])) {
        // 署名ループ
        foreach (array_keys($signature_list[$temp_account_id]) as $temp_sign_id) {
            $sign_data =& $signature_list[$temp_account_id][$temp_sign_id];
            // 署名データリスト
            if (($account_id == $temp_account_id)) {
                $data = $sign_data['data'];
                array_push($signature, [
                    'id'       => $temp_sign_id,
                    'name'     => $sign_data['name'],
                    'selected' => ($temp_sign_id
                                   == @$sess_mail_add['signature']) ? true
                        : false,
                ]);
            }
        }
    }
}

// アカウントごとの署名名称リスト
$smarty->assign('user_sign', $signature);
$smarty->assign('uid', $G_login_user->getOID());
$smarty->assign('aid', $account_id);
$smarty->assign('cid', $category_id);

$G_cellular_session->unset_by('sess_mail_add');

$smarty->display(cb_get_pagename() . '.tpl');

