<?php

require_once('grn/application.csp');
$app_locator = GRN_ApplicationLocator::instance();

/** @var GRN_Address_Application $address_app */
if ($address_app = $app_locator->getInstance('address')) {
    require_once('address/access.csp');
    $access_manager = GRN_Address_AccessManager::getInstance();
    if ( ! ($row = $access_manager->getAbstractData(GRN_ADDRESS_AVAILABLE))) {
        assert('FALSE');
    }

    require_once('address/config.csp');
    $config_manager = GRN_Address_ConfigManager::getInstance();
    require_once('address/view_util.csp');
    $view_util = GRN_Address_ViewUtil::getInstance();

    // アドレス帳を取得する
    $book_manager = $address_app->getBookManager();

    // ログインユーザーを取得する
    $login_id = $G_login_user->getOID();

    // アドレス帳の設定を取得する
    $system_config = $config_manager->getSystemConfig();
    $personal_config = $config_manager->getPersonalConfig($G_login_user);

    // ダイナミックロールを取得する
    $dynamic_roles = $G_uum->listGrantedRoles();

    require_once('fw/string_util.csp');

    $authorities = ['private_address', 'shared_address'];
    $security_model = $access_manager->getSecurityModel($row);
    $access = $access_manager->evaluateAccess($row, $G_login_user,
        $dynamic_roles, $authorities, $security_model);

    // 個人アドレス帳の使用権限を評価する
    $authorities = ['private_address'];
    $access_private_address = $access_manager->isAllowedAccess($access,
        $authorities, $security_model);

    // 共有アドレス帳の使用権限を評価する
    $authorities = ['shared_address'];
    $access_shared_address = $access_manager->isAllowedAccess($access,
        $authorities, $security_model);

    $temp_bid = isset($G_INPUT['bid']) ? $G_INPUT['bid'] : null;

    if (mb_substr($temp_bid, 0, 1) == 'm') {
        $menu_listing = true;
        $bid = 0;
        $menu_pg = mb_substr($temp_bid, 1);
    } else {
        $bid = $temp_bid;
        $menu_pg = (isset($G_INPUT['me_pg'])) ? $G_INPUT['me_pg'] : 1;
    }

    // 個人アドレスブックを取得する
    if ( ! ($book = $book_manager->getPrivateAddressBookByUserId($login_id))) {
        if ( ! ($book = $book_manager->addPrivateAddressBook('cyde', $login_id,
            []))
        ) {
            cb_throw_error(E_GRN_ADDRESS_PRIVATE_ADDRESS_BOOK_NOT_FOUND);
        }
    }

    // 共有アドレスブック一覧を取得する
    $books = [];
    $allow_books = [];
    if ($access_shared_address) {
        $books = $book_manager->listSharedAddressBooks();
        if (0 < count($books)) {
            // 閲覧権限を持つ共有アドレスブック一覧を取得する
            $rows = [];
            foreach (array_keys($books) as $book_id) {
                $book_shared = $books[$book_id];
                $rows[$book_id] = $book_shared->getRow();
            }
            $authorities = ['browse'];
            $allow_books = $access_manager->pickAllowedObjects($rows,
                $G_login_user, $dynamic_roles, $authorities);
        }
    }

    if (0 > $bid) {
        // 個人アドレスブックの使用権限を評価する
        if ( ! $access_private_address) {
            cb_throw_error(E_GRN_ADDRESS_ACCESS_DENY_PRIVATE_ADDRESS);
        }
    }
    if (0 < $bid) {
        // 共有アドレスブックの使用権限を評価する
        if ( ! $access_shared_address) {
            cb_throw_error(E_GRN_ADDRESS_ACCESS_DENY_SHARED_ADDRESS);
        }
        if ( ! isset($allow_books[$bid])) {
            cb_throw_error(E_GRN_ADDRESS_ACCESS_DENY_SHARED_ADDRESS);
        }
        // 共有アドレスブックを取得する
        $book = $books[$bid];
    }
    // ブックオプション一覧を取得する
    $book_options = [];
    if ($access_private_address) {
        $book_options[] = [
            'value'    => -1,
            'label'    => cb_msg('grn.address.cellular',
                'private_address_book'),
            'selected' => -1 == $bid
        ];
    }
    $shared_book_options = $view_util->listBookOptions($allow_books, $book,
        false);
    $book_options = array_merge($book_options, $shared_book_options);
}


