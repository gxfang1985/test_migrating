<?php
// Smartyをインスタンス化
require_once('cellular/smarty.csp');
$smarty = new GRN_Cellular_Smarty;

// アドレス帳を取得する
require_once('address/application.csp');
$app_locator = GRN_ApplicationLocator::instance();
/** @var GRN_Address_Application $app */
$app = $app_locator->getInstance(GRN_ADDRESS_APPLICATION_ID);
if ( ! is_object($app) || ! is_a($app, 'Grn_Address_Application')) {
    cb_throw_error(E_GRN_APPLICATION_NOT_AVAILABLE);
}
$book_manager = $app->getBookManager();

// 使用権限を取得する
require_once('address/access.csp');
$access_manager = GRN_Address_AccessManager::getInstance();
if ( ! ($row = $access_manager->getAbstractData(GRN_ADDRESS_AVAILABLE))) {
    assert('FALSE');
}

// ダイナミックロールを取得する
$dynamic_roles = $G_uum->listGrantedRoles();

// 使用権限を評価する
$authorities = ['private_address', 'shared_address'];
$security_model = $access_manager->getSecurityModel($row);
$access = $access_manager->evaluateAccess($row, $G_login_user,
    $dynamic_roles, $authorities, $security_model);

// 共有アドレス帳の使用権限を評価する
$authorities = ['shared_address'];
$access_for_view['shared_address'] = $access_manager->isAllowedAccess($access,
    $authorities, $security_model);

$builtin_items = [];
$shared_address_books = [];
$allowed_books = [];
$books_for_view = [];
if ($access_for_view['shared_address']) {
    // 共有アドレスブック一覧を取得する
    $shared_address_books = $book_manager->listSharedAddressBooks();

    if (0 < count($shared_address_books)) {
        // 閲覧権限を持つ共有アドレスブック一覧を取得する
        $rows = [];
        foreach (array_keys($shared_address_books) as $book_id) {
            $book = $shared_address_books[$book_id];
            $rows[$book_id] = $book->getRow();
        }
        $authorities = ['browse'];
        $allowed_books = $access_manager->pickAllowedObjects($rows,
            $G_login_user, $dynamic_roles, $authorities);
    }
}

// ページタイトル
$smarty->assign('pagetitle', grn_get_current_page_display_name());

// パス情報
$smarty->assign('pagepath', $G_pagepath);

// メールアドレスを表示する幅の指定。この幅を超えた部分は「...」で表示する
require_once('grn/application.csp');
$locator = GRN_ApplicationLocator::instance();
$cellular = $locator->getInstance('cellular');
$uconfig = $cellular->getUserConfig($G_login_user);
$width = $uconfig->getSubjectWidth();
$smarty->assign('width', $width);


$cid = isset($G_INPUT['cid']) ? $G_INPUT['cid'] : null;
$aid = isset($G_INPUT['aid']) ? $G_INPUT['aid'] : null;
$smarty->assign('cid', $cid);
$smarty->assign('aid', $aid);

// Groups list
require_once('address/mygroup_logic.csp');

$mygroup = GRN_Address_MyGroup_Logic::getInstance();
$mygroups_for_view = $mygroup->getMyGroupList($G_login_user);
$smarty->assign('address_mygroups', $mygroups_for_view);

// // Group Data
$groupdata_for_view = null;
$mygroup_id = array_key_exists('group_id', $G_INPUT)
    ? $G_INPUT['group_id'] : null;
if ($mygroup_id != null) {
    $smarty->assign('group_id', $mygroup_id);

    require_once('address/mygroup_data_logic.csp');
    $mygroup_data = GRN_Address_MyGroupData_Logic::getInstance();
    if ( ! $group = $mygroup->getMyGroup($G_login_user, $mygroup_id)) {
        // 存在しないMyアドレスグループのIDを指定した場合
        cb_throw_error(E_GRN_ADDRESS_MYGROUP_NOT_FOUND);
    }
    $groupdata_for_view = $mygroup_data->listGroupData($group, $allowed_books);
}

$smarty->assign('group_users', $groupdata_for_view);

$smarty->display(cb_get_pagename() . '.tpl');


