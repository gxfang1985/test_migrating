<?php
// Smarty をインスタンス化
require_once('cellular/smarty.csp');
$smarty = new GRN_Cellular_Smarty;

// ページタイトル
$smarty->assign('pagetitle', grn_get_current_page_display_name());
// パス情報
$smarty->assign('pagepath', $G_pagepath);

require_once('mail/utility.csp');
$utility = GRN_Mail_Utility::getInstance();
$system_config = $utility->getSystemConfig();
$personal_config = $utility->getPersonalConfig($G_login_user);
$folder_logic = $utility->getFolderLogic();
$mail_logic = $utility->getMailLogic();

$mail_id = isset($G_INPUT['mid']) ? $G_INPUT['mid'] : null;
$body_page = isset($G_INPUT['bp']) ? $G_INPUT['bp'] : null;

// 既読処理
$mail_logic->readMail($mail_id);

$mail_data = $mail_logic->getMailData($mail_id, true);

$category_id = $mail_data['folder_id'];
$folder_data = $folder_logic->getFolderData($category_id);
$account_id = $folder_data['account_id'];


// アカウント情報
include('_account_common.csp');
// フォルダ情報
$folder_detail = true;
include('_folder_common.csp');
//使用アカウントのemail address.
$user_email = $account_data['account_info']->email;

$smarty->assign('cid', $category_id);
$smarty->assign('aid', $account_id);

$from = GRN_Mail_Utility::static_formatAddressString($mail_data['from'], true,
    true, true, true, 'array');
//送信者が自分なのかどうかの判断。
$user_flag = null;
if (count($from) > 0) {
    $user_flag = preg_match("/" . $user_email . "/", $from[0]['email']);
}

$to = GRN_Mail_Utility::static_formatAddressString($mail_data['to'], true, true,
    true, true, 'array');

if (array_key_exists('cc', $mail_data)) {
    $cc = GRN_Mail_Utility::static_formatAddressString($mail_data['cc'], true,
        true, true, true, 'array');
}
// メール情報
$mail_for_view = [
    'aid'       => $account_id, //user_acount_ID
    'cid'       => $category_id, //category_ID
    'mid'       => $mail_id,
    'from'      => $from,
    'user_flag' => $user_flag,
    'ctime'     => $mail_data['send_ts'], //送信日時
    'subject'   => $mail_data['subject'],
    'data'      => $mail_data['data'],

];

// 添付ファイルがあるかどうかの判断。
if (array_key_exists('files', $mail_data)) {
    $mail_for_view['existence_attach_files'] = true;
}

//宛先リスト
$to_list = [];
$search = ["/</", "/>/"];
$replace = ["", ""];

foreach ($to as $key => $value) {
    array_push($to_list, [
            'no'         => $key,
            'type'       => 'to',
            'name'       => $value['name'],
            'email'      => $value['email'],
            'urlencoded' => urlencode(preg_replace($search, $replace,
                $value['email'])),
            'view_flag'  => (preg_match("/" . $user_email . "/",
                $value['email'])) ? true : false,
            'caption'    => $value['name'] . $value['email'],
        ]
    );
}

if (isset($cc)) {
    foreach ($cc as $key => $value) {

        array_push($to_list, [
                'no'         => $key,
                'type'       => 'cc',
                'name'       => $value['name'],
                'email'      => $value['email'],
                'urlencoded' => urlencode(preg_replace($search, $replace,
                    $value['email'])),
                'view_flag'  => (preg_match("/" . $user_email . "/",
                    $value['email'])) ? true : false,
                'caption'    => $value['name'] . $value['email'],
            ]
        );
    }
}

if (array_key_exists('bcc', $mail_data)) {
    $bcc = GRN_Mail_Utility::static_formatAddressString($mail_data['bcc'], true,
        true, true, true, 'array');
    foreach ($bcc as $key => $value) {
        array_push($to_list, [
                'no'         => $key,
                'type'       => 'bcc',
                'name'       => $value['name'],
                'email'      => $value['email'],
                'urlencoded' => urlencode(preg_replace($search, $replace,
                    $value['email'])),
                'view_flag'  => (preg_match("/" . $user_email . "/",
                    $value['email'])) ? true : false,
                'caption'    => $value['name'] . $value['email'],
            ]
        );
    }
}

//宛先が５以上の場合全てを見ると言うページに遷移する。
$to_list_count = 5;
if (count($to_list) > $to_list_count) {
    $view_all_to_list = true;
    $smarty->assign('view_all_to_list', $view_all_to_list);
    $temp_to_list = [];
    for ($i = 0; $i < $to_list_count && $i < count($to_list); $i++) {
        array_push($temp_to_list, $to_list[$i]);
    }
    $smarty->assign('to_list', $temp_to_list);
} else {
    $smarty->assign('to_list', $to_list);
}

$smarty->assign('mail_info', $mail_for_view);

$from_info = [];
if (count($mail_for_view['from']) > 0) {
    $from_info = [
        'name'       => $mail_for_view['from'][0]['name'],
        'email'      => $mail_for_view['from'][0]['email'],
        'urlencoded' => urlencode(preg_replace($search, $replace,
            $mail_for_view['from'][0]['email'])),
    ];
}
$smarty->assign('from_info', $from_info);
$smarty->assign('bp', $body_page);

// 送受信記録機能の使用が許可されているか
$smarty->assign('use_history', $system_config->canUserUseHistory());

$smarty->display(cb_get_pagename() . '.tpl');


