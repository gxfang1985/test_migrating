<?php
// Smarty をインスタンス化
require_once('cellular/smarty.csp');
$smarty = new GRN_Cellular_Smarty;
// ページタイトル
$smarty->assign('pagetitle', grn_get_current_page_display_name());
// パス情報
$smarty->assign('pagepath', $G_pagepath);

if (@$G_cellular_session->get('sess_mail_add')) {
    $G_cellular_session->unset_by('sess_mail_add');
}
require_once('mail/utility.csp');
$utility = GRN_Mail_Utility::getInstance();
$system_config = $utility->getSystemConfig();
$personal_config = $utility->getPersonalConfig($G_login_user);
$folder_logic = $utility->getFolderLogic();
$mail_logic = $utility->getMailLogic();
$recv_logic = $utility->getRecvLogic();

// config
require_once('grn/application.csp');
$locator = GRN_ApplicationLocator::instance();
$cellular_app = $locator->getInstance('cellular');
$user_config = $cellular_app->getUserConfig($G_login_user);

$list_limit = $user_config->getListMax();
$width = $user_config->getSubjectWidth();
$menu_limit = 20;

$smarty->assign('width', $width);

$received = @ $G_INPUT['receive'];
$account_id = @ $G_INPUT['aid'];
$category_id = @ $G_INPUT['cid'];

// cid 解析
$menu_page = 0;
if (strlen($category_id)) {
    if (($p = strpos($category_id, ':')) !== false) {
        $menu_page = substr($category_id, $p + 1);
        if ( ! strlen($menu_page)) {
            $menu_page = 0;
        }
        $category_id = substr($category_id, 0, $p);
    }
}

require_once('mail/resources.csp');
$status_id = GRN_MAIL_STATUS_CODE_ALL;

$account_flag = false;
$category_flag = false;
if ( ! is_null($account_id) && (strlen($account_id) > 0)) {
    $account_flag = true;
}
if ( ! is_null($category_id) && (strlen($category_id) > 0)) {
    $category_flag = true;
}

// ユーザーの総メールサイズを取得
$user_id = $G_login_user->getOID();
$system_config->getSizeUserLimitSetting($size_settings, $user_id);

// ユーザーの総メールサイズを取得
$mail_size = $personal_config->getMailSize(null);

// 総サイズチェック
$size_over = false;
if (($size_settings['user_limit_' . $user_id] != -1)
    && ($mail_size >= $size_settings['user_limit_' . $user_id] * 1024 * 1024)
) {
    $size_over = true;
    $smarty->assign('user_limit_error',
        cb_msg('grn.mail.cellular', 'list_size_over', [
            'user_limit' => $size_settings['user_limit_' . $user_id]
        ]));
}

// アカウント設定数を取得する
$account_data_count = $personal_config->getAccountDataCount();
// サーバー設定数を取得する
$server_data_count = $system_config->getServerDataCount();
if ($account_data_count == 0 || $server_data_count == 0) {
    //サーバーの設定が行ってない場合、
    //またはアカウントの設定がされてない場合の画面の為の処理
    $no_account_server_data = true;
    $smarty->assign('no_account_server_data', $no_account_server_data);
} else {
    $account_new_mails = true;                  // アカウントの新着メール件数表示フラグ
    if ( ! $account_flag && $category_flag) {
        // フォルダ情報
        $folder_detail = true;
        include('_folder_common.csp');

        // アカウント情報
        include('_account_common.csp');
    } else {
        // アカウント情報
        include('_account_common.csp');

        // フォルダ情報
        $folder_detail = true;
        include('_folder_common.csp');
    }

    $smarty->assign('account_id', $account_id);
    $smarty->assign('category_id', $category_id);

    // アカウントチェック
    $cannot_send = true;
    $cannot_recv = true;
    $no_account_for_send = $no_server_for_send = false;
    $no_account_for_recv = $no_server_for_recv = false;
    if ( ! is_null($account_id) && ! $size_over) {
        $cannot_send = ! $personal_config->checkAccountForSend($account_id,
            $no_account_for_send, $no_server_for_send);
        $cannot_recv = ! $personal_config->checkAccountForReceive($account_id,
            $no_account_for_recv, $no_server_for_recv);
    }

    // フォルダ情報取得
    $folders_for_view = [];

    // 受信箱 選択肢追加
    $folders_for_view[] = [
        'cid'  => $folder_logic->translateFolderId($account_id,
            GRN_MAIL_FOLDER_CODE_INBOX),
        'name' => cb_msg('grn.mail.cellular', 'translate_folder_prefix')
                  . cb_msg('grn.mail', GRN_MAIL_FOLDER_CODE_INBOX),
    ];
    // 送信箱 選択肢追加
    $folders_for_view[] = [
        'cid'  => $folder_logic->translateFolderId($account_id,
            GRN_MAIL_FOLDER_CODE_SENTBOX),
        'name' => cb_msg('grn.mail.cellular', 'translate_folder_prefix')
                  . cb_msg('grn.mail', GRN_MAIL_FOLDER_CODE_SENTBOX),
    ];
    // 下書き 選択肢追加
    $folders_for_view[] = [
        'cid'  => $folder_logic->translateFolderId($account_id,
            GRN_MAIL_FOLDER_CODE_UNSENT),
        'name' => cb_msg('grn.mail.cellular', 'translate_folder_prefix')
                  . cb_msg('grn.mail', GRN_MAIL_FOLDER_CODE_UNSENT),
    ];
    // 指定されたフォルダチェック
    $current_folder_data = $folder_logic->getFolderData($category_id, true,
        true);
    if ($folder_logic->translateFolderId($account_id,
            $current_folder_data['code']) == $current_folder_data['code']
    ) {
        // root 選択肢追加
        $folders_for_view[] = [
            'cid'  => $folder_logic->translateFolderId($account_id,
                GRN_MAIL_FOLDER_CODE_ROOT),
            'name' => cb_msg('grn.cellular.common', 'selectbox_root',
                ['rootname' => cb_msg('grn.mail', GRN_MAIL_FOLDER_CODE_ROOT)])
        ];
        // 一つ上へ 選択肢追加
        $folders_for_view[] = [
            'cid'  => $current_folder_data['parent_id'],
            'name' => cb_msg('grn.cellular.common', 'selectbox_up')
        ];
        // カレント 選択肢追加
        $folders_for_view[] = [
            'cid'  => $current_folder_data['id'],
            'name' => $current_folder_data['name']
        ];
        $subfolders = $folder_logic->getFolderDataList($account_id,
            $category_id, true, true);
    } else {
        $subfolders = $folder_logic->getFolderDataList($account_id, null, true,
            true);
    }

    $menu_prev = null;
    $menu_next = null;
    if ( ! is_null($subfolders)) {
        if (count($subfolders) > $menu_limit) {
            $_chunk = array_chunk($subfolders, $menu_limit, true);
            if ( ! is_null($category_id)) {
                foreach ($_chunk as $_page => $_folders) {
                    if (array_key_exists($category_id, $_folders)) {
                        $menu_page = $_page;
                    }
                }
            }
            if (array_key_exists($menu_page - 1, $_chunk)) {
                $menu_prev = $menu_page - 1;
            }
            if (array_key_exists($menu_page + 1, $_chunk)) {
                $menu_next = $menu_page + 1;
            }
            $folders_list = &$_chunk[$menu_page];
        } else {
            $folders_list = &$subfolders;
        }

        if ( ! is_null($menu_prev)) {
            $folders_for_view[] = [
                'cid'  => $category_id . ':' . $menu_prev,
                'name' => cb_msg('grn.cellular.common', 'selectbox_back')
            ];
        }
        foreach ($folders_list as $_id => $_item) {
            $folders_for_view[] = [
                'cid'  => $_item['id'],
                'name' => cb_msg('grn.cellular.common', 'selectbox_tree')
                          . $_item['name']
            ];
        }
        if ( ! is_null($menu_next)) {
            $folders_for_view[] = [
                'cid'  => $category_id . ':' . $menu_next,
                'name' => cb_msg('grn.cellular.common', 'selectbox_next')
            ];
        }
    }

    // ごみ箱を利用するか
    if ($personal_config->useTrash()) {
        // ごみ箱 選択肢追加
        $folders_for_view[] = [
            'cid'  => $folder_logic->translateFolderId($account_id,
                GRN_MAIL_FOLDER_CODE_TRASH),
            'name' => cb_msg('grn.mail.cellular', 'translate_folder_prefix')
                      . cb_msg('grn.mail', GRN_MAIL_FOLDER_CODE_TRASH),
        ];
    }

    // メール未読件数を取得
    $folder_id_list = [];
    foreach (array_keys($folders_for_view) as $index) {
        if (is_numeric($folders_for_view[$index]['cid'])) {
            $folder_id_list[] = $folders_for_view[$index]['cid'];
        }
    }
    $unread_mail_num_list = $folder_logic->getMailNum($folder_id_list, true);
    foreach (array_keys($folders_for_view) as $index) {
        if (array_key_exists($folders_for_view[$index]['cid'],
            $unread_mail_num_list)
        ) {
            $folders_for_view[$index]['unread_num']
                = $unread_mail_num_list[$folders_for_view[$index]['cid']];
        }
    }

    $smarty->assign('folders_count', count($folders_for_view));
    $smarty->assign('folders', $folders_for_view);

    // N件ナビゲーション
    require_once("cellular/controller.csp");
    $controller_util = new GRN_Cellular_ControllerUtil();

    // 現在位置
    $current_start_position = $controller_util->getNaviStartPosition();
    // セッションに保存
    $controller_util->setNaviStartPosition($current_start_position);

    // メールデータ数取得
    $number_of_all = $mail_logic->getMailDataCount($G_login_user,
        $category_id,
        $status_id);
    $mail_list = $mail_logic->getMailDataList($G_login_user,
        $category_id,
        false,
        false,
        'send_ts',
        true,
        $current_start_position,
        $list_limit);
    // n件ナビゲーション情報を取得する
    $navigation_info
        = $controller_util->makeNaviInformation($current_start_position,
        $list_limit,
        $number_of_all,
        [
            'aid' => $account_id,
            'cid' => $category_id
        ]);
    //------------------
    // 一覧に表示する形式
    $disp_name = 'from_name';
    $disp_email = 'from_email';
    if (($folder_code == GRN_MAIL_FOLDER_CODE_SENTBOX)
        || ($folder_code == GRN_MAIL_FOLDER_CODE_UNSENT)
    ) {
        $disp_name = 'to_name';
        $disp_email = 'to_email';
    }

    $mail_list_for_view = [];
    if (is_array($mail_list)) {
        $temp_time = null;
        foreach (array_keys($mail_list) as $mail_id) {
            $mail_data =& $mail_list[$mail_id];

            //日付の表示
            $time = $mail_data['send_ts'];
            $tsex = new CB_TimeStampEx($time);
            $this_time = $tsex->getDate();

            $time_view_flag = false;  //日付の表示判断フラグ。
            if ($temp_time != $this_time) {
                $time_view_flag = true;
                $temp_time = $this_time;
            }
            unset($tsex);

            //subjectの整形
            $subject = $mail_data['subject'];
            if (is_null($subject)) {
                $subject = '';
            } else {
                $subject = cb_trim($subject);
            }

            //既読フラグ
            $read_ts = $mail_data['read_ts'];
            $b_unread = ( ! is_object($read_ts) || ($read_ts->unix_ts == 0));

            //email形式
            $mail_with_tag_flag = false;
            if (mb_substr($mail_data[$disp_email], 0, 1) == '<') {
                $mail_with_tag_flag = true;
            }
            $mail_list_for_view[$mail_id] = [
                'time_view_flag'     => $time_view_flag,
                'maid'               => $mail_id,
                'type'               => $mail_data['sent'] ? '1' : '0',
                'unread'             => $b_unread,
                'aid'                => $account_id,
                'cid'                => $category_id,
                'time'               => $mail_data['send_ts'],
                'subject'            => $subject,
                'name'               => $mail_data[$disp_name],
                'email'              => $mail_data[$disp_email],
                'mail_with_tag_flag' => $mail_with_tag_flag,
            ];
        }
    }

    $smarty->assign('cannot_send', $cannot_send);

    // 次、前のページ遷移
    $smarty->assign('navi', $navigation_info['navi']);
    // メールデータリスト
    $smarty->assign('mails', $mail_list_for_view);

    // カレントフォルダ
    $smarty->assign('category', $category_for_view);

    // サイズエラーで受信できなかったメールが存在する
    $size_error = $recv_logic->getPop3ErrorMailDataCount($account_id);
    $smarty->assign('size_error', $size_error);

    if (isset($received) && ! is_null($received) && $received) {
        if ( ! $size_over) {
            $new_mails = is_array($account_data) ? $account_data['new_mails']
                : 0;
            if (($new_mails > 0) && ($size_error != $new_mails)) {
                $smarty->assign('remaining', 1);
            }
        }

        if (isset($G_INPUT['ncnt'])) {
            $smarty->assign('notify_count', $G_INPUT['ncnt']);
        }
    }

    $account_info = [
        'account_name' => $account_data['title'],
        'email'        => $account_data['account_info']->email,
        'aid'          => $account_data['id'],
    ];

    $smarty->assign('account_info', $account_info);
}

$smarty->display(cb_get_pagename() . '.tpl');

