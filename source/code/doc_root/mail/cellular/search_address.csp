<?php

require_once('grn/application.csp');
$locator = GRN_ApplicationLocator::instance();

if ( ! ($address_app = $locator->getInstance('address'))) {
    require_once('grn/error_code.csp');
    cb_throw_error(E_GRN_APPLICATION_NOT_AVAILABLE);
}


// Smarty をインスタンス化
require_once('cellular/smarty.csp');
$smarty = new GRN_Cellular_Smarty;

// ページタイトル
$smarty->assign('pagetitle', grn_get_current_page_display_name());
// パス情報
$smarty->assign('pagepath', $G_pagepath);

$cid = isset($G_INPUT['cid']) ? $G_INPUT['cid'] : null;
$aid = isset($G_INPUT['aid']) ? $G_INPUT['aid'] : null;
$smarty->assign('cid', $cid);
$smarty->assign('aid', $aid);

$dbconn = $locator->getConnection('mail');

// config
$cellular_app = $locator->getInstance('cellular');
$user_config = $cellular_app->getUserConfig($G_login_user);
$width = $user_config->getSubjectWidth();

$smarty->assign('width', $width);

include('_search_common.csp');
$smarty->assign('bid', $bid);

if (mb_substr($temp_bid, 0, 1) != 'm') {
    // GET/POSTされた検索パラメータを取得する
    $search_for_view = [];
    $search_for_view['s_name'] = isset($G_INPUT['s_name']) ? $G_INPUT['s_name']
        : '';

    // n件ナビゲーション情報を取得する
    require_once('cellular/controller.csp');
    $controller_util = new GRN_Cellular_ControllerUtil();

    $offset = $controller_util->getNaviStartPosition();
    $controller_util->setNaviStartPosition($offset);
    $limit = (int)($user_config->getListMax());

    // アドレス一覧を取得する
    $order_by = 'col_subject, _id';
    $conditions[]
        = "( col_email_address IS NOT NULL ) AND ( col_email_address <> '' )";

    $datas_for_view = [];
    if (0 < strlen($search_for_view['s_name'])) {
        $smarty->assign('s_name', $search_for_view['s_name']);

        require_once('fw/string_util.csp');
        $texts = cb_parse_search_text($search_for_view['s_name']);

        foreach ($texts as $text) {
            $text = $dbconn->escapeLike($text);
            $conditions[]
                = "( col_subject LIKE '%$text%' ) OR ( col_email_address LIKE '%$text%' )";
        }
    } else {

        assert('isset($access_private_address)');

        //search keyに何も入ってない場合すべてのリストを取得。
        $books_for_view = [];
        // ブックを取得する
        if (0 < $bid || (0 > $bid && false === $access_private_address)) {
            if (array_key_exists($bid, $allow_books)) {
                assert('isset($books)');
                assert('is_array( $books )');
                assert('array_key_exists( $bid, $books )');

                // 共有アドレスブックを取得する
                $book = $books[$bid];
            } else {
                assert('isset($allow_books)');
                assert('is_array($allow_books)');

                $indices = array_keys($allow_books);
                if (0 < count($indices)) {
                    assert('isset($books)');
                    assert('is_array( $books )');
                    assert('array_key_exists( $bid, $books )');

                    // 表示順番が最初の共有アドレスブックを取得する
                    $bid = $indices[0];
                    $book = $books[$bid];
                } else {
                    // 個人アドレスブックを取得する
                    $bid = -1;
                }
            }

            if (0 < $bid) {
                assert('isset($books)');
                assert('is_array( $books )');
                assert('array_key_exists( $bid, $books )');

                // 共有アドレスブックの閲覧、編集権限を評価する
                $book = $books[$bid];
            }
        }
        if (0 > $bid) {
            if ($access_private_address) {
                assert('isset($book_manager)');
                assert('is_object($book_manager)');

                // 個人アドレスブックを取得する
                if ( ! ($book
                    = $book_manager->getPrivateAddressBookByUserId($G_login_user->getOID()))
                ) {
                    if ( ! ($book = $book_manager->addPrivateAddressBook('cyde',
                        $G_login_user->getOID(), []))
                    ) {
                        cb_throw_error(E_GRN_ADDRESS_PRIVATE_ADDRESS_BOOK_NOT_FOUND);
                    }
                }
            }
        }
    }

    if (isset($book)) {
        $condition = implode(' AND ', $conditions);
        $datas = $book->listDatas($offset, $limit, $order_by, $condition);

        // n件ナビゲーション情報を取得する
        $data_count = $book->countDatas($condition);
        $params = ['bid' => $bid];

        if ( ! isset($controller_util)) {
            require_once('cellular/controller.csp');
            $controller_util = new GRN_Cellular_ControllerUtil();
        }

        $view_set = $controller_util->makeNaviInformation($offset, $limit,
            $data_count, $params);

        $datas_for_view = $view_util->listDatas($datas, $bid);

        $book_data = [];
        foreach ($datas_for_view as $key => $value) {
            if ( ! $value['email_address']) {
                continue;
            }

            $tel = isset($value['personal_telephone_number'])
                ? $value['personal_telephone_number']
                : $value['company_telephone_number'];

            array_push($book_data, [
                    'cid'     => $value['sso']['cid'],
                    'subject' => $value['subject'],
                    'tel'     => $tel,
                    'email'   => @$value['email_address'],
                    'bid'     => $value['sso']['bid'],
                ]
            );
        }

        $smarty->assign('navi', $view_set['navi']);
        $smarty->assign('book_data', $book_data);
    }
}

if ( ! isset($book_options)) {
    $book_options = [];
}

//pulldownの次、前への遷移
$smarty->assign('me_pg', $menu_pg);
$menu_count_per_page = 30;
$menu_count = count($book_options);
if ($menu_count <= $menu_count_per_page) {
    $smarty->assign('book_options', $book_options);
} else {
    $menu_page = (isset($menu_pg)) ? $menu_pg : 1;
    $menu_list_per_page = $menu_count_per_page - 2;

    if (($menu_count % ($menu_count_per_page - 2)) == 0) {
        $total_pages = $menu_count / ($menu_count_per_page - 2);
    } else {
        $total_pages = 1 + (int)($menu_count / ($menu_count_per_page - 2));
    }
    $menu_start_point = ($menu_page - 1) * $menu_list_per_page;
    $menu_end_point = $menu_page * $menu_list_per_page;

    $temp_menu = [];

    if ($menu_page != 1) {
        array_push($temp_menu, [
                'value' => 'm' . ($menu_page - 1),
                'label' => cb_msg('grn.cellular.common', 'link_back')
            ]
        );
    }
    for ($i = $menu_start_point; $i < $menu_end_point; $i++) {
        if ( ! isset($book_options[$i])) {
            continue;
        }
        array_push($temp_menu, $book_options[$i]);
    }
    if ($total_pages != $menu_page) {
        array_push($temp_menu, [
                'value' => 'm' . ($menu_page + 1),
                'label' => cb_msg('grn.cellular.common', 'link_next')
            ]
        );
    }
    $smarty->assign('book_options', $temp_menu);
}

$smarty->display(cb_get_pagename() . '.tpl');

