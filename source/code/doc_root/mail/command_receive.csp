<?php

use grn\grn\JSONResponse;

global $G_INPUT;
$account_id = @ $G_INPUT['aid'];
$category_id = @ $G_INPUT['cid'];
$command = @ $G_INPUT['cmd'];
$pane = array_key_exists('pane', $G_INPUT) ? $G_INPUT['pane'] : null;
$terminal = array_key_exists('terminal', $G_INPUT) ? $G_INPUT['terminal']
    : null;
$page = array_key_exists('page', $G_INPUT) ? $G_INPUT['page'] : null;

if (0 == strcasecmp(@ $_SERVER['REQUEST_METHOD'], 'POST')) {
    if ($pane == 3 || $terminal === "mobile") {
        $json = JSONResponse::create();
    } else {
        require_once('fw/session_manager.csp');
        $session_manager = CB_SessionManager::getInstance();
        $session
            =& $session_manager->getSession('grn.mail.index_3pane');
        $session_object = $session->get('session_object');
        if ( ! is_null($session_object)) {
            $session->unset_by('session_object');
        }
    }

    global $G_container_base;
    $uum = $G_container_base->getInstance('uum');
    $user = $uum->getLoginUser();
    $user_id = $user->getOID();
    if ( ! is_object($user)) {
        cb_throw_error(E_COMMON_AUTHENTICATION_FAILED);
    }

    require_once('mail/utility.csp');
    $utility = GRN_Mail_Utility::getInstance();
    $recv_logic = $utility->getRecvLogic();
    $personal_config = $utility->getPersonalConfig($user);

    // メールのサイズ制限に対するチェック
    $system_config = $utility->getSystemConfig();
    // 現在の保存メールサイズ
    $mail_size = $personal_config->getMailSize(null);
    // システムで設定されている保存メールサイズの取得
    $system_config->getSizeUserLimitSetting($size_settings, $user_id);
    // 既に受信している保存メールサイズが、制限値をオーバーしているかチェック
    if (($size_settings['user_limit_' . $user_id] >= 0)
        && ($mail_size >= $size_settings['user_limit_' . $user_id] * 1024
                          * 1024)
    ) {
        // 何もせずにメールの一覧に遷移
        if ($pane == 3) {
            $json->response(['aid' => $account_id, 'cid' => $category_id]);
            cb_safe_exit();
        }
        if ($terminal === "mobile") {
            if ($page === "mail_list") {
                $json->response([
                    'redirect' => cb_format_url('mail/mobile/mail_list',
                        ['aid' => $account_id, 'cid' => $category_id])
                ]);
            } else {
                $json->response([
                    'redirect' => cb_format_url('mail/mobile/index',
                        ['aid' => $account_id, 'cid' => $category_id])
                ]);
            }
            cb_safe_exit();
        } else {
            cb_redirect('mail/index',
                ['aid' => $account_id, 'cid' => $category_id]);
        }
    }

    $app = $utility->getMailApp();
    $max_receive_count = $app->getMaxReceiveCount();                // 最大受信件数

    // 外部通知設定取得
    require_once('notification/application.csp');
    $use_notify_mail = false;
    $locator = GRN_ApplicationLocator::instance();
    $notify_app = $locator->getInstance(GRN_NOTIFICATION_APP_ID);
    if ( ! is_null($notify_app)) {
        $temp = false;
        $notify_config = $notify_app->getPersonalConfig($user);
        $notify_config->getNotUseNotify($temp);
        if ( ! is_null($notify_config)
             && $notify_config->getNotUseNotify($temp)
        ) {
            $use_notify_mail = ! $temp;
        }
    }

    $received_sum = 0;                                              // 受信したメール総数
    $remaining_num
        = 0;                                             // 受信できなかったメール総数
    $notify_received_num
        = 0;                                       // 受信した外部通知メール数

    $receive_flag = '';
    if ($command === 'new_mail') {
        $receive_flag = 1;

        // 受信可能なアカウントかチェック
        $no_account = $no_server = true;
        if ($personal_config->checkAccountForReceive($account_id, $no_account,
            $no_server)
        ) {
            // 特定アカウントのメール受信
            $remaining = 0;
            // メール受信
            $mail_ids = $recv_logic->recvMails($user, $account_id,
                $use_notify_mail, $max_receive_count, $remaining,
                $notify_received_num);
            $remaining_num = $remaining;
        }

        if ($pane == 3) {
            $json->response([
                'aid'     => $account_id,
                'cid'     => $category_id,
                'receive' => $receive_flag,
                'ncnt'    => $notify_received_num
            ]);
            cb_safe_exit();
        }
        if ($terminal === "mobile") {
            if ($page === "mail_list") {
                $json->response([
                    'redirect' => cb_format_url('mail/mobile/mail_list', [
                        'aid'     => $account_id,
                        'cid'     => $category_id,
                        'receive' => $receive_flag,
                        'ncnt'    => $notify_received_num
                    ])
                ]);
            } else {
                $json->response([
                    'redirect' => cb_format_url('mail/mobile/index', [
                        'aid'     => $account_id,
                        'cid'     => $category_id,
                        'receive' => $receive_flag,
                        'ncnt'    => $notify_received_num
                    ])
                ]);
            }
            cb_safe_exit();
        } else {
            cb_redirect('mail/index', [
                'aid'     => $account_id,
                'cid'     => $category_id,
                'receive' => $receive_flag,
                'ncnt'    => $notify_received_num
            ]);
        }
    } elseif ($command === 'new_all_mail') {
        // 一括メール受信が使用可か
        $system_config = $utility->getSystemConfig();
        if ($system_config->canUserAllReceiveMail()) {
            // 全アカウントのメール受信
            $receive_flag = 2;

            // アカウントデータリスト
            $cannot_receive = true;
            $account_list = $personal_config->getAccountDataList(false);
            if (is_array($account_list)) {
                foreach (array_keys($account_list) as $temp_account_id) {
                    $account_data =& $account_list[$temp_account_id];

                    // 受信可能なアカウントかチェック
                    $no_account = $no_server = true;
                    if ($personal_config->checkAccountForReceive($temp_account_id,
                        $no_account, $no_server)
                    ) {
                        $cannot_receive = false;
                        $remaining = 0;

                        // メール受信
                        $mail_ids = $recv_logic->recvMails($user,
                            $temp_account_id, $use_notify_mail,
                            $max_receive_count, $remaining,
                            $tmp_notify_received_num);

                        $received_count = is_array($mail_ids)
                            ? count($mail_ids) : 0;
                        $received_sum += $received_count;
                        $remaining_num += $remaining;
                        $notify_received_num += $tmp_notify_received_num;

                        $max_receive_count -= $received_count;
                    }

                    if ($max_receive_count <= 0) {
                        // 最大受信件数に達した
                        break;
                    }
                }
            }

            if ($cannot_receive) {
                // 1つも受信可能なアカウントがない
            }

            if ($pane == 3) {
                $json->response([
                    'aid'     => $account_id,
                    'cid'     => $category_id,
                    'receive' => $receive_flag,
                    'ncnt'    => $notify_received_num
                ]);
                cb_safe_exit();
            }
            cb_redirect('mail/index', [
                'aid'     => $account_id,
                'cid'     => $category_id,
                'receive' => $receive_flag,
                'ncnt'    => $notify_received_num
            ]);
        }
    }
}

if ($pane == 3) {
    $json->response(['aid' => $account_id, 'cid' => $category_id]);
    cb_safe_exit();
}
if ($terminal === "mobile") {
    if ($page === "mail_list") {
        $json->response([
            'redirect' => cb_format_url('mail/mobile/mail_list',
                ['aid' => $account_id, 'cid' => $category_id])
        ]);
    } else {
        $json->response([
            'redirect' => cb_format_url('mail/mobile/index',
                ['aid' => $account_id, 'cid' => $category_id])
        ]);
    }
    cb_safe_exit();
} else {
    cb_redirect('mail/index', ['aid' => $account_id, 'cid' => $category_id]);
}

