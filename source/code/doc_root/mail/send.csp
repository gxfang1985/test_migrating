<?php
global $G_INPUT;
global $G_container_base;
$uum = $G_container_base->getInstance('uum');
$user = $uum->getLoginUser();
$user_id = $user->getOID();
if ( ! is_object($user)) {
    cb_throw_error(E_COMMON_AUTHENTICATION_FAILED);
}

require_once('mail/utility.csp');
$utility = GRN_Mail_Utility::getInstance();
$system_config = $utility->getSystemConfig();
$personal_config = $utility->getPersonalConfig($user);
$folder_logic = $utility->getFolderLogic();

// 総メールサイズをチェック
$system_config->getSizeUserLimitSetting($size_settings, $user_id);
$mail_size = $personal_config->getMailSize(null);
if ((0 <= $size_settings['user_limit_' . $user_id])
    && ($mail_size >= $size_settings['user_limit_' . $user_id] * 1024 * 1024)
) {
    cb_throw_error(E_GRN_MAIL_LIMIT, null,
        ['limit' => $size_settings['user_limit_' . $user_id] . 'MB']);
}

// メールの使用が許可されているか
$system_config->getGeneralSetting($general_settings);
$disable_mail = $general_settings['disable_mail'];
$check_mail_on_login = $general_settings['check_mail_on_login'];
if ($disable_mail) {
    // メール使用停止中
    cb_throw_error(E_GRN_MAIL_CANNOT_USE);
}

// 送信前確認を行う
$personal_config->getGeneralSetting($personal_general_settings);
$b_preview = $personal_general_settings['preview'];

// 開封確認設定
$send_set = $system_config->canUserUseConfirm()
            && ($personal_config->useConfirmMail());

//------------------

// Smarty をインスタンス化
require_once("grn/smarty.csp");
$t = new GRN_Smarty;

$t->assign('app_name', $G_mail_name);

$account_id = @ $G_INPUT['aid'];
$category_id = @ $G_INPUT['cid'];
$to = isset($G_INPUT['to']) ? $G_INPUT['to'] : null;

// ユーザー情報
$user_for_view = [
    'uid'  => $user->getOID(),
    'name' => $user->get('display_name')
];


$mail = [];
$mail['sign'] = '';

$page_index = 'mail/index';
$page_title
    = grn_get_current_page_display_name(['app_name' => $G_mail_name]);
$site_position = [];
$site_position[] = $utility->getIndexSitePosition($user, $account_id);

// 書き戻しの場合と整合性を取るために定義
$sign_id = '';

//------------------

// アカウント設定数を取得する
$account_data_count = $personal_config->getAccountDataCount();
if ($account_data_count == 0) {
    // サーバー設定数を取得する
    $server_data_count = $system_config->getServerDataCount();
    if (($account_data_count == 0) && ($server_data_count == 0)) {
        $no_setting = '3';
    } elseif ($account_data_count == 0) {
        $no_setting = '2';
    } elseif ($server_data_count == 0) {
        $no_setting = '1';
    } else {
        $no_setting = '0';
    }
} else {
    $doc_name = cb_get_pagename();
    // SmartyValidate should be initialized when an input form is there.
    require('SmartyValidate.class.php');
    SmartyValidate::connect($t);
    SmartyValidate::register_form($doc_name, true);

    $b_sign_display_none = true;
    include('_send.csp');

    $mail['sign'] = $signature_default_data;

    // カレントフォルダ
    $t->assign('category', $category_for_view);

    // アカウントリスト
    foreach ($account_list_for_view as $key => $account) {
        $account_list_for_view[$key]['label'] = '"'
                                                . $account_from_list_for_view[$key]['from']
                                                . '" <'
                                                . $account_from_list_for_view[$key]['email']
                                                . '>';
    }
    $t->assign('user_account', $account_list_for_view);
    // 差出人データリス
    $t->assign('from_data', $account_from_list_for_view);

    // 署名データリスト
    $t->assign('sign_value', $signature_data_list_for_view);

    // position list signature
    $t->assign('sign_position', $signature_position_list_for_view);

    // アカウントごとの署名名称リスト
    $t->assign('user_sign', $account_signature_name_list_for_view);

    $t->assign('position', $signature_default_position);

    if (count($account_signature_name_list_for_view) > 0) {
        $t->assign('sign_set', 1); //サインの設定がある:1 なし:0
    }

    $site_position[] = [
        'page' => $page_index,
        'name' => $page_folder,
        'aid'  => $account_id,
        'cid'  => $category_id
    ];
}

$site_position[] = [
    'page' => '',
    'name' => $page_title
];

//--------------------------------------------------------------

$t->assign('uid', $user->getOID());

// 0はOK、1はメールサーバーがまだ 2はアカウントがまだ 3は両方まだ
$t->assign('no_setting', $no_setting);

// page title
$t->assign('page_title', $page_title);

// user_data
$t->assign('user', $user_for_view);

$t->assign('aid', $account_id);
$t->assign('cid', $category_id);
$t->assign('preview', $b_preview);

if ( ! is_null($to) && (strlen($to) > 0)) {
    $mail['to'] = $to;
}

if (array_key_exists('cc', $G_INPUT)) {
    $mail['cc'] = $G_INPUT['cc'];
}
if (array_key_exists('bcc', $G_INPUT)) {
    $mail['bcc'] = $G_INPUT['bcc'];
}

$t->assign('mail', $mail);
$t->assign('send_set', $send_set); //開封確認メール使用許可設定 on:1 off:0

$t->assign('site_position', $site_position);

// リッチエディタ
$t->assign('use_editor', $utility->checkAvailableForRicheditor());

require_once('grn/ui.csp');
$cm = GRN_UIConfigManager::getInstance();
$ui_config = $cm->getUserConfig($user);
$t->assign('rows', $ui_config->getAreaHeight());
$t->assign('cols', $ui_config->getAreaWidth() * 2 - 3);

$t->assign('page_send', true);
//generate upload ticket
include('grn/_upload_prepend.csp');

// Smarty実行
$t->display(cb_get_pagename() . ".tpl");

