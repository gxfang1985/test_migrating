<?php
global $G_INPUT;
global $G_container_base;
$uum = $G_container_base->getInstance('uum');
$user = $uum->getLoginUser();
if ( ! is_object($user)) {
    cb_throw_error(E_COMMON_AUTHENTICATION_FAILED);
}

require_once('mail/utility.csp');
$utility = GRN_Mail_Utility::getInstance();
$system_config = $utility->getSystemConfig();
$personal_config = $utility->getPersonalConfig($user);

//-- instantiate smarty object
require_once("grn/smarty.csp");
$t = new GRN_Smarty;

$t->assign('app_name', $G_mail_name);

$mail_id = @ $G_INPUT['mid'];
if ( ! is_null($mail_id)) {
    // 迷惑メールを振り分ける
    $folder_logic = $utility->getFolderLogic();
    $mail_logic = $utility->getMailLogic();

    $mail_data = $mail_logic->getMailData($mail_id, true);
    $category_id = $mail_data['folder_id'];
    $folder_data = $folder_logic->getFolderData($category_id, false, true);
    $account_id = $folder_data['account_id'];

    $status_id = null;
    $save_address_history = false;

    // ごみ箱
    if ($personal_config->useTrash()) {
        $trash_data = $folder_logic->getSpecialFolderData($account_id,
            GRN_MAIL_FOLDER_CODE_TRASH, false);
        $destination_folder_id = $trash_data['id'];
    } else {
        $destination_folder_id = null;
    }

    $from_array
        = GRN_Mail_Utility::static_formatAddressString($mail_data['from'], true,
        false, true, false, 'array');
    if (is_array($from_array) && isset($from_array[0])) {
        $from_name = $from_array[0]['name'];
        $from_email
            = GRN_Mail_Utility::static_addEmailBracket($from_array[0]['email'],
            'remove');
    } else {
        $from_name = $mail_data['from'];
        $from_email = $from_name;
    }

    if (strlen($from_name) == 0) {
        $from_name = $from_email;
    }

    $filter_data_for_view = [
        'mfid'  => null,
        'title' => $from_name,
        'cid'   => $destination_folder_id,
        'kind'  => 1, //1:全ての条件,2:いずれかの条件
    ];

    // 条件
    $filter_data_for_view['condition'] = [];
    $filter_data_for_view['condition'][] = [
        'object' => 'FR',
        'value'  => $from_email,
        'type'   => 'CO'
    ];

    // filter
    $t->assign('filter', $filter_data_for_view);
} else {
    $account_id = @ $G_INPUT['aid'];
    $account_data = $personal_config->getAccountData($account_id, false, true);
    if ( ! is_array($account_data)
         || ! array_key_exists('user_id', $account_data)
         || $account_data['user_id'] != $user->getOID()
    ) {
        require_once('mail/error_code.csp');
        cb_throw_error(E_GRN_MAIL_GET_FILTER_DATA_NOT_FOUND);
    }
    $status_id = null;
    $save_address_history = true;
}

//------------------

//-- SmartyValidate should be initialized when an input form is there.
require('SmartyValidate.class.php');
SmartyValidate::connect($t);
SmartyValidate::register_form('mail/personal/filter_add', true);

//-- include sharing code
include('_filter_add.csp');

// set_data
$t->assign(
    'set', [
        'aid'                  => $account_id,
        'account'              => $account_data['title'],
        'stop'                 => $account_data['disabled'], //アカウント停止中か否か
        'use_garbage'          => $use_trash, //ごみ箱を使っているか否か
        'status_id'            => $status_id,
        'save_address_history' => $save_address_history
    ]
);

// page title
$page_title = grn_get_current_page_display_name();
$t->assign('page_title', $page_title);

// site position
$t->assign(
    'site_position', [
        [
            'page' => "mail/personal/filter",
            'name' => grn_get_page_display_name("mail/personal/filter"),
            'aid'  => $account_id
        ],
        [
            'page' => "",
            'name' => $page_title
        ]
    ]
);

// filter set Number
$t->assign('filter_set_num', 1);

//-- show page
$t->display(cb_get_pagename() . '.tpl');


