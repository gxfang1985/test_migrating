<?php
global $G_INPUT;
global $G_container_base;
$uum = $G_container_base->getInstance('uum');
$user = $uum->getLoginUser();
if ( ! is_object($user)) {
    cb_throw_error(E_COMMON_AUTHENTICATION_FAILED);
}

$account_id = @ $G_INPUT['naccount'];
$category_id = @ $G_INPUT['ncid'];
$format = @ $G_INPUT['format'];

if (strcasecmp(@ $_SERVER['REQUEST_METHOD'], 'POST') == 0) {
    // instantiate an Smarty object
    require_once("grn/smarty.csp");
    $t = new GRN_Smarty;

    // Validation check
    require_once('SmartyValidate.class.php');
    SmartyValidate::connect($t);
    $target_name = 'mail/personal/import1';
    SmartyValidate::register_form($target_name);

    // validate after a POST
    if (SmartyValidate::is_valid($G_INPUT, $target_name)) {

        require_once('fw/session_manager.csp');
        $session_manager = CB_SessionManager::getInstance();
        $session = $session_manager->getSession($target_name);
        $file_infos = $session->getFiles('import_files');
        if (is_array($file_infos)) {
            foreach (array_keys($file_infos) as $id) {
                $session->unsetFile('import_files', $id);
            }
        }

        $filename = $session->get('import_filename');
        if ( ! is_null($filename)) {
            $session->unset_by('import_filename');
        }

        $file = $_FILES['file'];
        if ($file['error']) {
            cb_throw_error(E_GRN_MAIL_FILE_NOT_FOUND);
        }

        // セッションにファイルを一時保存
        $file_id = $session->addFile('import_files', $file);
        $session->set('import_filename', $file['name']);

        // the validation session is finished
        if (SmartyValidate::is_registered_form($target_name)) {
            SmartyValidate::unregister_form($target_name);
        }

        cb_redirect('mail/personal/import2', [
            'aid'    => $account_id,
            'cid'    => $category_id,
            'format' => $format,
            'file'   => $file_id
        ]);

    } else {
        //-- if error, show the source form

        $t->setPageInfo($target_name);

        require_once('mail/utility.csp');
        $utility = GRN_Mail_Utility::getInstance();
        $personal_config = $utility->getPersonalConfig($user);
        $folder_logic = $utility->getFolderLogic();

        require('_mail_import1.csp');

        $t->assign('format', $format);

        // page title
        $page_title = grn_get_current_page_display_name();
        $t->assign('page_title', $page_title);

        // site position
        $t->assign('site_position', [['page' => '', 'name' => $page_title]]);

        //-- show page
        $t->display('mail/personal/import1.tpl');
    }
}


