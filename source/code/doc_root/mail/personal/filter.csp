<?php
global $G_INPUT;
global $G_container_base;
$uum = $G_container_base->getInstance('uum');
$user = $uum->getLoginUser();
if ( ! is_object($user)) {
    cb_throw_error(E_COMMON_AUTHENTICATION_FAILED);
}

require_once('mail/utility.csp');
$utility = GRN_Mail_Utility::getInstance();
$personal_config = $utility->getPersonalConfig($user);
$folder_logic = $utility->getFolderLogic();

//-- instantiate Smarty object
require_once("grn/smarty.csp");
$t = new GRN_Smarty;

//------------------

$t->assign('app_name', $G_mail_name);

$account_id = @ $G_INPUT['aid'];
$account_disabled = false;

if (strlen($account_id) == 0) {
    // デフォルトアカウントID取得
    $account_id = $personal_config->getDefaultAccountId(false, true);
} else {
    $account_data = $personal_config->getAccountData($account_id, false, true);
    if ( ! is_array($account_data)
         || ! array_key_exists('user_id', $account_data)
         || $account_data['user_id'] != $user->getOID()
    ) {
        require_once('mail/error_code.csp');
        cb_throw_error(E_GRN_MAIL_GET_FILTER_DATA_NOT_FOUND);
    }
}

// アカウントデータリスト
$account_data = null;
$account_list_for_view = [];
$account_list = $personal_config->getAccountDataList(false);
if (is_array($account_list)) {
    foreach (array_keys($account_list) as $key) {
        $temp_data =& $account_list[$key];
        $temp_account_info = $temp_data['account_info'];
        $temp_title = $temp_data['title'];
        $account_list_for_view[$key] = [
            'value' => $key,
            'label' => $temp_title
        ];

        if ($key == $account_id) {
            $account_list_for_view[$key]['selected'] = true;
            $account_data =& $temp_data;
            if ($account_data['disabled']) {
                $account_disabled = true;
            }
        }
    }
}

// カレントアカウント
if (is_null($account_data)) {
    $account_id = null;
}

//------------------

$no_setting = '0';
$account_data_count = count($account_list_for_view);
if (count($account_list_for_view) == 0) {
    // サーバー設定数を取得する
    $system_config = $utility->getSystemConfig();
    $server_data_count = $system_config->getServerDataCount();
    if (($account_data_count == 0) && ($server_data_count == 0)) {
        $no_setting = '3';
    } elseif ($account_data_count == 0) {
        $no_setting = '2';
    } elseif ($server_data_count == 0) {
        $no_setting = '1';
    }
}

// 0はOK、1はメールサーバーがまだ 2はアカウントがまだ 3は両方まだ
$t->assign('no_setting', $no_setting);

//------------------

// ごみ箱を使用する設定
$use_trash = $personal_config->useTrash();

// ごみ箱のID
if ( ! is_null($account_id)) {
    $trash_id = $folder_logic->translateFolderId($account_id,
        GRN_MAIL_FOLDER_CODE_TRASH);
}

// 振り分け設定取得
$filter_list_for_view = [];
if ( ! is_null($account_id)) {
    $filter_list = $personal_config->getFilterDataList($account_id, false);
    if (is_array($filter_list)) {
        require_once('mail/status.csp');

        foreach (array_keys($filter_list) as $key) {
            $temp_data =& $filter_list[$key];
            $temp_folder_id = $temp_data['folder_id'];

            $available = (is_null($temp_folder_id)
                          || (($temp_folder_id === $trash_id) && ! $use_trash))
                ? 0 : 1;

            $filter_list_for_view[$key] = [
                'mfid'                 => $key,
                'title'                => $temp_data['name'],
                'cid'                  => $temp_folder_id,
                'save_address_history' => $temp_data['save_address_history'],
                'status'               => grn_mail_get_status($temp_data['status_id']),
                'available'            => $available //利用可能（保存先フォルダがあるか否か）
            ];
        }
    }
}

//------------------

// アカウントリスト
$t->assign('user_account', $account_list_for_view);

// set_data
$t->assign(
    'set', [
        'aid'  => $account_id,
        'stop' => $account_disabled, //アカウント停止中か否か
    ]
);

// filter_set
$t->assign('filters', $filter_list_for_view);

$t->assign('disabled_change_order',
    count($filter_list_for_view) < 2 ? true : false);

// page title
$page_title = grn_get_current_page_display_name();
$t->assign('page_title', $page_title);

// site position
$t->assign('site_position', [['page' => '', 'name' => $page_title]]);

//-- show page
$t->display(cb_get_pagename() . ".tpl");


