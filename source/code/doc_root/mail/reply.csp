<?php
global $G_INPUT;
global $G_container_base;
$uum = $G_container_base->getInstance('uum');
$user = $uum->getLoginUser();
$user_id = $user->getOID();
if ( ! is_object($user)) {
    cb_throw_error(E_COMMON_AUTHENTICATION_FAILED);
}

// Smarty をインスタンス化
require_once("grn/smarty.csp");
$t = new GRN_Smarty;

require_once('mail/utility.csp');
$utility = GRN_Mail_Utility::getInstance();
$system_config = $utility->getSystemConfig();
$system_config->getGeneralSetting($general_settings);
$personal_config = $utility->getPersonalConfig($user);
$folder_logic = $utility->getFolderLogic();
$mail_logic = $utility->getMailLogic();
$send_logic = $utility->getSendLogic();

// 総メールサイズをチェック
$system_config->getSizeUserLimitSetting($size_settings, $user_id);
$mail_size = $personal_config->getMailSize(null);
if ((0 <= $size_settings['user_limit_' . $user_id])
    && ($mail_size >= $size_settings['user_limit_' . $user_id] * 1024 * 1024)
) {
    cb_throw_error(E_GRN_MAIL_LIMIT, null,
        ['limit' => $size_settings['user_limit_' . $user_id] . 'MB']);
}

// 送信前確認を行う
$personal_config->getGeneralSetting($personal_general_settings);
$b_preview = $personal_general_settings['preview'];

// 開封確認設定
$send_set = $system_config->canUserUseConfirm()
            && ($personal_config->useConfirmMail());

//------------------

$mail_id = @ $G_INPUT['mid'];
$mail_data = $mail_logic->getMailData($mail_id, true);
$category_id = $mail_data['folder_id'];
$folder_data = $folder_logic->getFolderData($category_id, false, true);
$account_id = $folder_data['account_id'];

// 返信本文取得
$reply_to = $send_logic->makeReplyTo($mail_data);
$reply_to = GRN_Mail_Utility::static_formatAddressString($reply_to, true,
    true, true, false, 'string', true);
$reply_cc = '';
$reply_subject = $send_logic->makeReplySubject($mail_data);
$use_editor = $utility->checkAvailableForRicheditor();

if ($general_settings['mail_display_plaintext']) {
    $reply_data = $send_logic->makeReplyData($mail_data, false, false);
} else {
    $show_pict = $utility->isHtmlMailShowPicture($user_id, $mail_id,
        $mail_data['sent']);
    $reply_data = $send_logic->makeReplyData($mail_data, $show_pict,
        $use_editor);
}

//------------------

$page_index = 'mail/index';
$page_root = 'mail/root';
$page_inbox = 'mail/inbox';
$page_outbox = 'mail/outbox';
$page_draftbox = 'mail/draftbox';
$page_garbagebox = 'mail/garbagebox';
$page_category_list = 'mail/category_list';

$folder_code = is_array($folder_data) ? $folder_data['code'] : '';

switch ($folder_code) {
    case GRN_MAIL_FOLDER_CODE_ROOT:
        $folder_type = '0';
        $page_folder = grn_get_page_display_name($page_root);
        break;
    case GRN_MAIL_FOLDER_CODE_INBOX:
        $folder_type = '1';
        $page_folder = grn_get_page_display_name($page_inbox);
        break;
    case GRN_MAIL_FOLDER_CODE_SENTBOX:
        $folder_type = '2';
        $page_folder = grn_get_page_display_name($page_outbox);
        break;
    case GRN_MAIL_FOLDER_CODE_UNSENT:
        $folder_type = '3';
        $page_folder = grn_get_page_display_name($page_draftbox);
        break;
    case GRN_MAIL_FOLDER_CODE_TRASH:
        $folder_type = '4';
        $page_folder = grn_get_page_display_name($page_garbagebox);
        break;
    default:
        $folder_type = '5';
        $page_folder = grn_get_page_display_name($page_category_list);
        break;
}

$category_for_view = [];
$category_for_view['type'] = $folder_type;
$category_for_view['title'] = $page_folder;
$category_for_view['aid'] = $account_id;
$category_for_view['cid'] = $category_id;
$category_for_view['parent_id'] = $folder_data['parent_id'];
$category_for_view['subscribed'] = $folder_data['subscribed'];

//------------------

$t->assign('app_name', $G_mail_name);

$page_title = grn_get_current_page_display_name(['app_name' => $G_mail_name]);
$site_position = [];
$site_position[] = $utility->getIndexSitePosition($user, $account_id);

//------------------

// アカウント設定数を取得する
$account_data_count = $personal_config->getAccountDataCount();
if ($account_data_count == 0) {
    // サーバー設定数を取得する
    $server_data_count = $system_config->getServerDataCount();
    if (($account_data_count == 0) && ($server_data_count == 0)) {
        $no_setting = '3';
    } elseif ($account_data_count == 0) {
        $no_setting = '2';
    } elseif ($server_data_count == 0) {
        $no_setting = '1';
    } else {
        $no_setting = '0';
    }
} else {
    $doc_name = cb_get_pagename();
    // SmartyValidate should be initialized when an input form is there.
    require('SmartyValidate.class.php');
    SmartyValidate::connect($t);
    SmartyValidate::register_form($doc_name, true);

    $b_sign_display_none = true;
    include('_reply.csp');

    // アカウントリスト
    foreach ($account_list_for_view as $key => $account) {
        $account_list_for_view[$key]['label'] = '"'
                                                . $account_from_list_for_view[$key]['from']
                                                . '" <'
                                                . $account_from_list_for_view[$key]['email']
                                                . ">";
    }
    $t->assign('user_account', $account_list_for_view);

    $site_position[] = [
        'page' => $page_index,
        'name' => $page_folder,
        'aid'  => $account_id,
        'cid'  => $category_id
    ];

    $mail_for_view = [
        'aid'            => $account_id, //user_acount_ID
        'cid'            => $category_id, //category_ID
        'mid'            => $mail_id,
        'to'             => $reply_to,
        'cc'             => $reply_cc,
        'bcc'            => '',
        'subject'        => $reply_subject,
        'data'           => $reply_data['data'],
        'attached_files' => null,
        'html_data'      => $reply_data['html_data']
    ];

    if (isset($signature_default_data)) {
        $mail_for_view['sign'] = $signature_default_data;
    }

    // 差出人データリス
    $t->assign('from_data', $account_from_list_for_view);

    if (count($account_signature_name_list_for_view) > 0) {
        $t->assign('sign_set', 1); //サインの設定がある:1 なし:0
    }

    // set_data
    $t->assign('mail', $mail_for_view);

    // 署名データリスト
    $t->assign('sign_value', $signature_data_list_for_view);

    // position list signature
    $t->assign('sign_position', $signature_position_list_for_view);
    $t->assign('position', $signature_default_position);

    // アカウントごとの署名名称リスト
    $t->assign('user_sign', $account_signature_name_list_for_view);
}

$site_position[] = [
    'page' => '',
    'name' => $page_title
];

//--------------------------------------------------------------

$t->assign('category', $category_for_view);

// page title
$t->assign('page_title', $page_title);

$t->assign('site_position', $site_position);

// user_data
$t->assign('user', $user_for_view);

// no_setting_data
$t->assign('no_setting', $no_setting); //0はOK、1はメールサーバーがまだ 2はアカウントがまだ 3は両方まだ

$t->assign('aid', $account_id);
$t->assign('cid', $category_id);
$t->assign('preview', $b_preview);
$t->assign('send_set', $send_set);

$t->assign('mid', $mail_id);
$t->assign('action', 'reply');

// リッチエディタ
$t->assign('use_editor', $use_editor);

require_once('grn/ui.csp');
$cm = GRN_UIConfigManager::getInstance();
$ui_config = $cm->getUserConfig($user);
$t->assign('rows', $ui_config->getAreaHeight());
$t->assign('cols', $ui_config->getAreaWidth());

//generate upload ticket
include('grn/_upload_prepend.csp');

// Smarty実行
$t->display("{$doc_name}.tpl");

