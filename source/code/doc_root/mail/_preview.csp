<?php

use grn\grn\access\service\AppAccess;

// アドレス帳
if ( ! AppAccess::isAppAvailable('address')) {
    $t->assign('disable_address', 1);
}

//------------------

// アカウント情報
$check_for_send = true;

// アカウントデータ取得
$account_data = $personal_config->getAccountData($preview_account_id, true,
    false);

$account_info = null;
if (is_array($account_data)) {
    if ( ! array_key_exists('user_id', $account_data)
         || ($account_data['user_id'] != $user->getOID())
    ) {
        cb_throw_error(E_GRN_MAIL_ACCOUNT_DATA_NOT_FOUND);
    }

    $account_info = $account_data['account_info'];
}

//------------------

// アカウントデータリスト
$account_list_for_view = [];
$account_from_list_for_view = [];
$can_send_account_count = 0;
$can_recv_account_count = 0;
$account_list = $personal_config->getAccountDataList(false);
if (is_array($account_list)) {
    foreach (array_keys($account_list) as $key) {
        $temp_no_account = $temp_no_server = true;

        // 送信可能なアカウントかチェック
        $can_send = $personal_config->checkAccountForSend($key,
            $temp_no_account, $temp_no_server);
        if ($can_send) {
            $can_send_account_count++;
        }

        // 受信可能なアカウントかチェック
        $can_recv = $personal_config->checkAccountForReceive($key,
            $temp_no_account, $temp_no_server);
        if ($can_recv) {
            $can_recv_account_count++;
        }

        if (isset($check_for_send) && $check_for_send) {
            $check_result = $can_send;
        } elseif (isset($check_for_recv) && $check_for_recv) {
            $check_result = $can_recv;
        } else {
            $check_result = true;
        }

        if ($check_result) {
            $temp_data =& $account_list[$key];
            $temp_account_info = $temp_data['account_info'];

            $temp_title = $temp_data['title'];
            if (isset($account_new_mails) && $account_new_mails
                && ! $temp_data['disabled']
            ) {
                $temp_title .= ' ( ' . $temp_data['new_mails'] . ' )';
            }
            $account_list_for_view[$key] = [
                'value'       => $key,
                'label'       => $temp_title,
                'cannot_send' => ! $can_send,
                'cannot_recv' => ! $can_recv
            ];

            $from_name = $temp_account_info->getFrom($user);
            $account_from_list_for_view[$key] = [
                'aid'   => $key,
                'from'  => $from_name,
                'email' => $temp_account_info->email
            ];

            if ($key == $preview_account_id) {
                $account_list_for_view[$key]['selected'] = true;
            }
        }
    }

    unset($check_result, $temp_no_account, $temp_no_server, $temp_data, $key);
}


if ($account_data['disabled']) {
    // アカウント停止中
    cb_throw_error(E_GRN_MAIL_DISABLED_ACCOUNT);
}

if ( ! is_null($account_info)) {
    $user_for_view['from'] = $account_info->getFrom($user);
    $user_for_view['email'] = $account_info->email;
}

// 送信可能なアカウントかチェック
$no_account = $no_server = true;
$personal_config->checkAccountForSend($preview_account_id, $no_account,
    $no_server);

if (count($account_list_for_view) == 0) {
    $no_account = true;
}

if ($no_account && $no_server) {
    $no_setting = '3';
} elseif ($no_account) {
    $no_setting = '2';
} elseif ($no_server) {
    $no_setting = '1';
} else {
    $no_setting = '0';
}

// 署名情報取得
$signature_list = [];
$signature_data_list_for_view = [];
$signature_position_list_for_view = [];
$account_signature_name_list_for_view = [];
$signature_default_data = null;
$signature_default_position = null;

foreach (array_keys($account_list_for_view) as $temp_account_id) {
    // アカウントの署名設定リストを取得
    $signature_list[$temp_account_id]
        = $personal_config->getSignatureDataList($temp_account_id, true);

    // アカウントごとの署名名称リスト
    $account_signature_name_list_for_view[$temp_account_id] = [];
    $account_signature_name_list_for_view[$temp_account_id]['aid']
        = $temp_account_id;

    if (is_array($signature_list[$temp_account_id])
        && (count($signature_list[$temp_account_id]) > 0)
    ) {
        $account_signature_name_list_for_view[$temp_account_id]['menu'] = [];

        // 署名ループ
        foreach (array_keys($signature_list[$temp_account_id]) as $temp_sign_id) {
            $sign_data =& $signature_list[$temp_account_id][$temp_sign_id];
            if ($sign_data['position'] === null
                || ($sign_data['position'] == "")
            ) {
                $sign_data['position'] = 'bottom';
            }

            $selected = false;
            if ($preview_account_id == $temp_account_id
                && $sign_id == $temp_sign_id
            ) {
                $selected = true;
            }

            // アカウントごとの署名名称リスト
            $account_signature_name_list_for_view[$temp_account_id]['menu'][]
                = [
                'value'    => $temp_sign_id,
                'label'    => $sign_data['name'],
                'selected' => $selected
            ];

            // 署名データリスト
            if (is_null($signature_default_data) && $selected) {
                $signature_default_data = $sign_data['data'];
                $signature_default_position = $sign_data['position'];
            }

            $data = $sign_data['data'];
            $signature_data_list_for_view[$temp_sign_id] = $data;
            if ($sign_data['position'] == 'top') {
                $sign_data['data'] = cb_msg('grn.mail.personal',
                    'GRN_MAIL_PE-258');
            } else {
                $sign_data['data'] = cb_msg('grn.mail.personal',
                    'GRN_MAIL_PE-259');
            }
            $signature_position_list_for_view[$temp_sign_id]['position']
                = $sign_data['position'];
            $signature_position_list_for_view[$temp_sign_id]['data']
                = $sign_data['data'];
        }

        // なしを表示
        if (isset($b_sign_display_none) && $b_sign_display_none) {
            $selected = false;
            if ($account_id == $temp_account_id
                && strcmp($sign_id, '-1') === 0
            ) {
                $selected = true;
                $signature_default_data = '';
                if (isset($sign_value)) {
                    $signature_default_data = $sign_value;
                    $signature_default_position = $sign_data['position'];
                }
            }

            $mail_app = $utility->getMailApp();
            $account_signature_name_list_for_view[$temp_account_id]['menu'][]
                = [
                'value'    => '-1',
                'label'    => cb_msg($mail_app->getModuleId(), 'no_signature'),
                'selected' => $selected
            ];
            $signature_data_list_for_view['-1']
                = '';
            $signature_position_list_for_view['-1']
                = [];
        }

    }
}

//------------------

// フォルダ情報
include('_folder_common.csp');

// auto compleate
$utility = GRN_Mail_Utility::getInstance();
$t->assign('incremental_search',
    $utility->checkAvailableForIncrementalSearch($book_ids));
unset($s_config, $g_settings);

