<?php
global $G_INPUT;
global $G_container_base;
$uum = $G_container_base->getInstance('uum');
$user = $uum->getLoginUser();
if ( ! is_object($user)) {
    cb_throw_error(E_COMMON_AUTHENTICATION_FAILED);
}

// Smarty をインスタンス化
require_once("grn/smarty.csp");
$t = new GRN_Smarty;

//------------------
if (0 == strcasecmp(@ $_SERVER['REQUEST_METHOD'], 'POST')) {
}

require_once('mail/utility.csp');
$mail_utility = GRN_Mail_Utility::getInstance();
$mail_app = $mail_utility->getMailApp();
$personal_config = $mail_utility->getPersonalConfig($user);
$system_config = $mail_utility->getSystemConfig();
$folder_logic = $mail_utility->getFolderLogic();

$account_id = @ $G_INPUT['aid'];
$category_id = @ $G_INPUT['cid'];

//------------------

// 表示する件数取得
require_once("grn/ui.csp");
$ui_config_manager = GRN_UIConfigManager::getInstance();
$ui_config = $ui_config_manager->getUserConfig($user);

// 一覧表示件数を取得する
$number_on_page = $ui_config->getListMax();
if (is_null($number_on_page)) {
    $number_on_page = 20;
}
// 文字列の長さを取得する
$subject_cols = $ui_config->getSubjectWidth();
if (is_null($subject_cols)) {
    $subject_cols = 30;
}
$truncate_cols = $ui_config->getTruncateWidth();
if (is_null($truncate_cols)) {
    $truncate_cols = 30;
}
$name_cols = $ui_config->getNameWidth();
if (is_null($name_cols)) {
    $name_cols = 30;
}

// ごみ箱を利用するか
$use_garbage_folder = $personal_config->useTrash();

// 名前を表示する形式
$name_format = $personal_config->getListNameFormatSetting();

// 送受信記録を使用する設定
$name_type = null;
if ($system_config->canUserUseHistory()) {
    $name_type = 'history';
}

//------------------

require_once('grn/controller.csp');
$utility = new GRN_ControllerUtil();
$session = $utility->getSession();

$folder_id = null;
$selected_hid = [];

if (@ $G_INPUT['sf']) {
    $saccount = $session->get('saccount');
    $search_text = $session->get('search_text');
    $keywords = $session->get('search_keys');
    $folder_id = $session->get('folder_id');
    $all_account = $session->get('all_account');
    $folder_title = $session->get('folder_title');
    $default_search_term = $session->get('search_term');
    $sort_time = $session->get('sort_time');

    if (is_null($saccount) || ! $saccount) {
        $saccount = $account_id;
    }

    if (is_null($folder_id)) {
        $folder_id = $category_id;
    }
} else {
    $saccount = @ $G_INPUT['saccount'];
    $search_text = @ $G_INPUT['search_text'];
    $keywords = @ $G_INPUT['search_keys'];
    $optional_search = @ $G_INPUT['optional_search'];
    $all_account = @ $G_INPUT['all_account'];

    // ソート設定をプロファイルからロード
    $sort = $sort_time = $reverse = null;
    $personal_config->getSortCondition($sort, $sort_time, $reverse);

    if ($all_account) {
        $saccount = @ $G_INPUT['said'];
        if (is_null($saccount) || ! $saccount) {
            $saccount = $account_id;
        }

        $subfolder = true;
        if ( ! is_array($keywords)) {
            $keywords = [];
        }

        $keywords[] = 'sub';

        $folder_id = @ $G_INPUT['shid'];
        if (is_null($folder_id)) {
            $folder_id = $category_id;
        }

        $selected_hid[$saccount] = $folder_id;
    } else {
        if (is_null($saccount) || ! $saccount) {
            $saccount = $account_id;
        }

        // フォルダID
        foreach ($G_INPUT as $key => $value) {
            if (strpos($key, 'scid') !== false) {
                if (is_numeric($number = substr($key, 4))) {
                    $selected_hid[$number] = $value;
                    if ($number == $saccount) {
                        $folder_id = $value;
                    }
                }
            }
        }
    }

    if (is_null($folder_id)) {
        $folder_id = $category_id;

        if ( ! is_null($account_id) && $account_id != -1) {
            $selected_hid[$account_id] = $folder_id;
        }
    }

    // フォルダ名
    $folder_title = $folder_logic->getFolderName($folder_id);

    $default_search_term = 3;

    // simple search
    if (is_null($optional_search) || ! strlen($optional_search)) {
        $keywords = ['subject', 'data', 'from', 'to', 'cc', 'bcc'];
    }
}

//------------------

if ( ! is_null($saccount) && $saccount) {
    $selected_aid = $saccount;
} else {
    $saccount = $selected_aid = $account_id;
}

//------------------

// アカウントデータリスト
$account_list_for_view = [];
$account_list = $personal_config->getAccountDataList(false, false, -1,
    -1, false, false);
if (is_array($account_list)) {
    foreach (array_keys($account_list) as $key) {
        $temp_data =& $account_list[$key];
        $account_list_for_view[$key] = [
            'value' => $key,
            'label' => $temp_data['title']
        ];

        if ($key == $selected_aid) {
            $account_list_for_view[$key]['selected'] = true;
        }
    }
}

//------------------

// フォルダデータリスト
$folder_list_for_view = [];
$folder_list_for_view['data'] = [];

if (is_array($account_list)) {
    foreach (array_keys($account_list) as $key) {
        $temp_data =& $account_list[$key];

        if (isset($selected_hid[$key])) {
            $temp_cid = $selected_hid[$key];
        } else {
            // 受信箱データ取得
            $temp_data = $folder_logic->getSpecialFolderData($key,
                GRN_MAIL_FOLDER_CODE_INBOX, false);
            $temp_cid = $temp_data['id'];
            $selected_hid[$key] = $temp_cid;
        }

        if ($key == $saccount && cb_at($G_INPUT, 'sf')) {
            $temp_cid = $folder_id;
        }
        $folder_list_for_view['data'][] = ['aid' => $key, 'cid' => $temp_cid];
    }
    $folder_list_for_view['selected'] = $saccount;
}

// folder_select_data
$t->assign('folder_list', $folder_list_for_view);
$t->assign('root_caption_key', 'all_folder');

$t->assign('aid', $account_id);
$t->assign('cid', $category_id);

// アカウントリスト
$t->assign('user_account', $account_list_for_view);

if (count($account_list_for_view) > 1) {
    $t->assign('show_another_account', 1);
}

//------------------


// 検索期間を決定する
$search_term = @ $G_INPUT['search_term'];
if (empty($start_ts) && empty($last_ts)) {
    if (is_null($search_term) || 0 == strlen($search_term)) {
        $search_term = $default_search_term;
    }
    $search_term = intval($search_term);

    if (0 < $search_term) {
        require_once('fw/date.csp');

        $ts = new CB_TimeStamp();
        $ts->unix_ts = time();

        $start_ts = new CB_TimeStampEx($ts);
        $last_ts = new CB_TimeStampEx($ts);

        $datetime = $last_ts->getDateTime();
        $datetime->hour = 0;
        $datetime->minute = 0;
        $datetime->second = 0;

        $datetime->moveMonths(-$search_term);
        $start_ts->setDateTime($datetime);
    } else {
        $start_ts = null;
        $last_ts = null;
    }
}

// Smartyに割り当てる検索項目を列挙する
$search_keys = [];
if (is_array($keywords)) {
    foreach ($keywords as $keyword) {
        $search_keys[$keyword] = true;
    }
}

// assign parameters to session.
$session->set('saccount', $saccount);
$session->set('search_text', $search_text);
$session->set('search_keys', $keywords);
$session->set('search_term', $search_term);
$session->set('folder_id', $folder_id);
$session->set('folder_title', $folder_title);
$session->set('all_account', $all_account);
$session->set('sort_time', $sort_time);
//$session->set( 'target_account', $target_account);
//$session->set( 'target_folder', $target_folder);

$search_logic = $mail_utility->getSearchLogic();

if ( ! isset($subfolder)) {
    if (is_null($subfolder = @$search_keys['sub'])) {
        $subfolder = false;
    }
}

if ( ! is_null($all_account) && $all_account) {
    $aid = '-1';
} elseif (isset($G_INPUT['saccount'])) {
    $aid = @ $G_INPUT['saccount'];
} else {
    $aid = $account_id;
}

// 全フォルダを検索する場合にはフォルダIDを「1」にセットする
is_null($folder_id) ? $hid = 1 : $hid = $folder_id;

// 全フォルダを検索する場合には強制的にサブフォルダ検索もONにする
require_once('mail/resources.csp');
$folder_data = $folder_logic->getFolderData($folder_id, false);
if (array_key_exists('code', $folder_data)
    && strcmp($folder_data['code'], GRN_MAIL_FOLDER_CODE_ROOT) === 0
) {
    $subfolder = true;
}
/*
if( $target_folder === 'all' )
    $hid = '-1';
*/
$number_of_all = $search_logic->getSearchItemCount($user,
    $search_keys, $search_text,
    $sort_time, $start_ts, $last_ts,
    $aid, $hid, $subfolder);


$navi_params = ['sf' => 1, 'aid' => $account_id, 'cid' => $category_id];

$start_position = $utility->getNaviStartPosition();
$navi_information = $utility->makeNaviInformation($start_position,
    $number_on_page,
    $number_of_all,
    $navi_params);

$search_count = $navi_information['end_count']
                - $navi_information['start_count'] + 1;

$retval = $search_logic->getSearchItems($user,
    $search_keys, $search_text,
    $start_position, $search_count,
    $sort_time, $start_ts, $last_ts,
    $aid, $hid, $subfolder);

$_site_position = $mail_utility->getIndexSitePosition($user,
    $account_id);
$_site_position['cid'] = $category_id;

$page_index = 'mail/index';
$t->assign(
    'site_position',
    [
        $_site_position,
        [
            'page' => '',
            //'name' => grn_get_current_page_display_name( array( 'app_name' => $G_mail_name ) ),
            'name' => grn_get_current_page_display_name(['app_name' => $mail_app->getName()]),
        ],
    ]
);

// Smartyにページタイトルを割り当てる
$page_title
    = grn_get_current_page_display_name(['app_name' => $mail_app->getName()]);
$t->assign('page_title', $page_title);

$t->assign('search', [
        'search_item' => $retval,
        'all_id'      => $number_of_all,
    ]
);

$t->assign('search_text', $search_text);
$t->assign('search_keys', $search_keys);
$t->assign('search_term', $search_term);

/*
$t->assign( 'subject_cols', $subject_cols );
$t->assign( 'truncate_cols', $truncate_cols );
$t->assign( 'name_cols', $name_cols );
*/
$t->assign('navi', $navi_information);

//    $t->assign( 'target_folder', $target_folder );
$t->assign('folder', [
    'id'    => $folder_id,
    'title' => $folder_title
]);

$t->assign('all_account', $all_account);
//$t->assign( 'ssub', $subfolder == 1 ? 1 : 0 );
$t->assign('said', $saccount);
//$t->assign( 'shids', $selected_hid );
$t->assign('shid', $folder_id);
$t->assign('hide_garbage_folder', ! $use_garbage_folder);

$t->assign('sort', $sort_time);
$t->assign('name_format', $name_format);
$t->assign('name_type', $name_type);

// 表示文字数
$t->assign(
    'characters', [
        'subject' => $subject_cols,
        'data'    => $truncate_cols,
        'name'    => $name_cols
    ]
);
$search_in_garbage = false;
$folder_code = is_array($folder_data) ? $folder_data['code'] : '';
switch ($folder_code) {
    case GRN_MAIL_FOLDER_CODE_ROOT:
        $folder_type = '0';
        break;
    case GRN_MAIL_FOLDER_CODE_INBOX:
        $folder_type = '1';
        break;
    case GRN_MAIL_FOLDER_CODE_SENTBOX:
        $folder_type = '2';
        break;
    case GRN_MAIL_FOLDER_CODE_UNSENT:
        $folder_type = '3';
        break;
    case GRN_MAIL_FOLDER_CODE_TRASH:
        $folder_type = '4';
        $search_in_garbage = true;
        break;
    default:
        $folder_type = '5';
        break;
}

// delete multi
$delete_info_multi = [
    'title'        => grn_get_page_display_name('mail/delete_multi',
        ['app_name' => $G_mail_name]),
    'page'         => 'mail/delete_multi.tpl',
    'no_confirm'   => false,
    'data'         => [
        'category'       => [
            'type' => $folder_type,
            'cid'  => $category_id,
            'aid'  => $account_id
        ],
        'use_garbagebox' => $use_garbage_folder,
        'search'         => true
    ],
    'handler'      => ['btn_delete_multi1', 'btn_delete_multi2'],
    'multi_target' => 'ids[]',
    'form_target'  => 'mail/search_cmd',
];
$t->assign('delete_info_multi', $delete_info_multi);
// Smarty実行
$doc_name = cb_get_pagename();
$t->display("{$doc_name}.tpl");

