<?php

global $G_INPUT;
$account_id = @ $G_INPUT['aid'];
$category_id = @ $G_INPUT['cid'];
$status_id = @ $G_INPUT['sid'];
$change_status_id = @ $G_INPUT['cs_value'];
$command = @ $G_INPUT['cmd'];

if (0 == strcasecmp(@ $_SERVER['REQUEST_METHOD'], 'POST')) {
    global $G_container_base;
    /** @var CB_Uum $uum */
    $uum = $G_container_base->getInstance('uum');
    $user = $uum->getLoginUser();
    if ( ! is_object($user)) {
        cb_throw_error(E_COMMON_AUTHENTICATION_FAILED);
    }

    if ($command === 'delete_account') {
        // アカウントの削除画面へ
        cb_redirect('mail/account_delete',
            ['aid' => $account_id, 'cid' => $category_id, 'sid' => $status_id]);
    } else {
        // チェックした項目
        $mail_ids = @ $G_INPUT['ids'];
        if (is_array($mail_ids) && (count($mail_ids) > 0)) {
            if ($command === 'move') {
                $new_category_id = @ $G_INPUT['move_value'];
                if ($new_category_id === 'another_account') {
                    require_once('fw/session_manager.csp');
                    $sm = CB_SessionManager::getInstance();
                    $session = $sm->getSession('mail/index');

                    // セッションに処理するメールデータIDリストを保存
                    $session->set('mail_ids', $mail_ids);

                    // 他のアカウントのフォルダ移動画面へ
                    cb_redirect('mail/move_another',
                        ['aid' => $account_id, 'cid' => $category_id]);
                } else {
                    // メールの移動
                    require_once('mail/utility.csp');
                    $utility = GRN_Mail_Utility::getInstance();
                    $mail_logic = $utility->getMailLogic();
                    $mail_logic->moveMailDatas($mail_ids, $new_category_id);
                }
            } elseif ($command === 'delete') {
                require_once('fw/session_manager.csp');
                $sm = CB_SessionManager::getInstance();
                $session = $sm->getSession('mail/index');

                // セッションに処理するメールデータIDリストを保存
                $session->set('mail_ids', $mail_ids);

                // 削除確認画面へ
                cb_redirect('mail/delete_multi',
                    ['aid' => $account_id, 'cid' => $category_id]);
            } elseif ($command === 'change_status') {
                //複数ステータスの変更
                require_once('mail/status.csp');
                grn_mail_set_status_multi($user, $mail_ids, $change_status_id);
            } elseif ($command === 'read') {
                require_once('mail/utility.csp');
                $utility = GRN_Mail_Utility::getInstance();
                $mail_logic = $utility->getMailLogic();

                $timestamp = new CB_TimeStampEx();
                foreach ($mail_ids as $mail_id) {
                    $mail_logic->readMail($mail_id, $timestamp, false, true);
                }
            } elseif ($command === "unread") {
                require_once('mail/utility.csp');
                $utility = GRN_Mail_Utility::getInstance();
                $mail_logic = $utility->getMailLogic();
                $mail_logic->unreadMails($user, $mail_ids);
            }
        }
    }
}

cb_redirect('mail/index',
    ['aid' => $account_id, 'cid' => $category_id, 'sf' => 1]);


