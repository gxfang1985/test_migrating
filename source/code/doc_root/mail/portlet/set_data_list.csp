<?php

require_once('portal/error_code.csp');
if ( ! isset($portlet)) {
    cb_throw_error(E_GRN_PRTL_PORTLET_INVALID_ACCESS);
}

//Get Smarty Instance
require_once("grn/smarty.csp");
$t = new GRN_Smarty;

// ----------

require_once('mail/utility.csp');
$utility = GRN_Mail_Utility::getInstance();
$app = $utility->getMailApp();

$settings = @ $portlet['settings'];
$folder_id = @ $settings['dcid'];

$system_flag = ($display == 'set-system' || $display == 'set-operation');

// font options
$font_options_for_view = [
    [
        'value' => 'small',
        'label' => cb_msg($app->getModuleId(), 'font_size_small')
    ],
    [
        'value' => 'normal',
        'label' => cb_msg($app->getModuleId(), 'font_size_normal')
    ],
    [
        'value' => 'large',
        'label' => cb_msg($app->getModuleId(), 'font_size_large')
    ],
];
switch (@ $settings['font_size']) {
    case 'small':
        $font_options_for_view[0]['selected'] = true;
        break;
    case 'normal':
        $font_options_for_view[1]['selected'] = true;
        break;
    case 'large':
        $font_options_for_view[2]['selected'] = true;
        break;
    default:
        $font_options_for_view[1]['selected'] = true;
        break;
}
$t->assign('font_options', $font_options_for_view);

if ( ! $system_flag) {
    global $G_container_base;
    $uum = $G_container_base->getInstance('uum');
    $user = $uum->getLoginUser();
    if ( ! $user) {
        require_once('grn/error_code.csp');
        cb_throw_error(E_GRN_USER_NOT_FOUND);
    }

    // ----------

    $folder_logic = $utility->getFolderLogic();
    $personal_config = $utility->getPersonalConfig($user);

    $account_id = null;

    // アカウント一覧
    $account_list = $personal_config->getAccountDataList(false, false, -1, -1,
        false, false);
    if ( ! is_array($account_list) || (count($account_list) == 0)) {
        $account_list = null;
    }

    // ----------

    // フォルダ
    $folder_data = null;

    if (is_null($folder_id) || (strlen($folder_id) == 0)) {
        // デフォルトアカウントID
        $account_id = $personal_config->getDefaultAccountId();

        // 受信箱
        if ( ! is_null($account_id)) {
            $folder_data = $folder_logic->getSpecialFolderData($account_id,
                GRN_MAIL_FOLDER_CODE_INBOX, false);
        }
    } else {
        // フォルダデータ
        $folder_data = $folder_logic->getFolderData($folder_id, false, false);
        if ( ! is_null($folder_data) && ! is_null($folder_data['account_id'])
             && $personal_config->checkAccountForOwner($folder_data['account_id'])
        ) {
            $account_id = $folder_data['account_id'];
        } else {
            $folder_data = null;
            // デフォルトアカウントID
            $account_id = $personal_config->getDefaultAccountId();

            // 受信箱
            if ( ! is_null($account_id)) {
                $folder_data = $folder_logic->getSpecialFolderData($account_id,
                    GRN_MAIL_FOLDER_CODE_INBOX, false);
            }
        }
    }

    if ( ! is_null($folder_data)) {
        $folder_id = $folder_data['id'];
    }

    if ( ! is_null($account_list)) {
        if ( ! is_null($account_id)) {
            // アカウントデータリスト
            $account_list_for_view = [];

            // 全アカウントのフォルダ情報取得
            $folder_list_for_view = [];
            $folder_list_for_view['data'] = [];

            foreach (array_keys($account_list) as $key) {
                $temp_data =& $account_list[$key];
                $temp_account_info = $temp_data['account_info'];
                $account_list_for_view[$key] = [
                    'value' => $key,
                    'label' => $temp_data['title']
                ];

                if ($key == $account_id) {
                    $temp_cid = $folder_id;
                } else {
                    // 受信箱データ取得
                    $temp_data = $folder_logic->getSpecialFolderData($key,
                        GRN_MAIL_FOLDER_CODE_INBOX, false);
                    $temp_cid = $temp_data['id'];
                }
                $folder_list_for_view['data'][] = [
                    'aid' => $key,
                    'cid' => $temp_cid
                ];
                if ($key == $account_id) {
                    $account_list_for_view[$key]['selected'] = true;
                }
            }
            $t->assign('user_account', $account_list_for_view);

            $folder_list_for_view['selected'] = $account_id;
            $has_sibling_folders
                = $folder_logic->siblingFolderExists($folder_id);
            $t->assign('folder_list', $folder_list_for_view);
        }
    }

    $t->assign('account', $account_id);

    if ( ! is_null($folder_data)) {
        $t->assign('folder', $folder_id);
    }
} else {
    if (($folder_id == GRN_MAIL_FOLDER_CODE_ROOT)
        || ($folder_id == GRN_MAIL_FOLDER_CODE_INBOX)
        || ($folder_id == GRN_MAIL_FOLDER_CODE_SENTBOX)
        || ($folder_id == GRN_MAIL_FOLDER_CODE_UNSENT)
        || ($folder_id == GRN_MAIL_FOLDER_CODE_TRASH)
    ) {
        // デフォルトアカウントID
        $t->assign('folder', $folder_id);
    }
}

// display columns
$display_keys = ['sender', 'time', 'remarks', 'status'];
if (is_array($settings)) {
    foreach ($display_keys as $key) {
        if (array_key_exists($key, $settings)) {
            $t->assign($key, $settings[$key]);
        } else {
            $t->assign($key, true);
        }
    }
} else {
    foreach ($display_keys as $key) {
        $t->assign($key, true);
    }
}

// order
$order_for_view = ['sent' => false, 'recept' => false];
switch (@ $settings['order']) {
    case 'recept':
        $order_for_view['recept'] = true;
        break;

    case 'sent':
    default:
        $order_for_view['sent'] = true;
        break;
}
$t->assign('order', $order_for_view);

// row number

$t->assign(
    'select1', [
        'name'    => 'rows',
        'options' => [
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20
        ],
        'padding' => '&nbsp;',
    ]
);

$settings_for_view = [];
$rows_for_view = @ $settings['rows'];
if ($rows_for_view == '') {
    $rows_for_view = 5;
}
$settings_for_view['rows'] = $rows_for_view;
$t->assign('settings', $settings_for_view);

// ----------

//Assign include_php Parameter
$t->assign('portlet', $portlet);
$t->assign('display', $display);

// Ignore Licence Warnning
$t->skipWarning();

//Display Smarty Template
$doc_name = 'mail/portlet/set_data_list';
$t->display("{$doc_name}.tpl");


