<?php

require_once('portal/error_code.csp');
if ( ! isset($portlet)) {
    cb_throw_error(E_GRN_PRTL_PORTLET_INVALID_ACCESS);
}

//Get Smarty Instance
require_once("grn/smarty.csp");
$t = new GRN_Smarty;

//----------

require_once('mail/utility.csp');
$utility = GRN_Mail_Utility::getInstance();
$app = $utility->getMailApp();
$system_config = $utility->getSystemConfig();

$settings = @ $portlet['settings'];
$system_flag = ($display == 'set-system' || $display == 'set-operation');

// font options
$font_options_for_view = [
    [
        'value' => 'small',
        'label' => cb_msg($app->getModuleId(), 'font_size_small')
    ],
    [
        'value' => 'normal',
        'label' => cb_msg($app->getModuleId(), 'font_size_normal')
    ],
    [
        'value' => 'large',
        'label' => cb_msg($app->getModuleId(), 'font_size_large')
    ],
];
switch (@ $settings['font_size']) {
    case 'small':
        $font_options_for_view[0]['selected'] = true;
        break;
    case 'normal':
        $font_options_for_view[1]['selected'] = true;
        break;
    case 'large':
        $font_options_for_view[2]['selected'] = true;
        break;
    default:
        $font_options_for_view[1]['selected'] = true;
        break;
}
$t->assign('font_options', $font_options_for_view);

// ----------

$height_options_for_view = [];
for ($i = 1; $i <= 20; $i += 1) {
    $height_options_for_view[] = $i;
}
$t->assign('height_options', $height_options_for_view);

// ----------

// アカウント
$user_account = @ $settings['user_account'];

if ( ! $system_flag) {
    global $G_container_base;
    $uum = $G_container_base->getInstance('uum');
    $user = $uum->getLoginUser();
    if ( ! $user) {
        require_once('grn/error_code.csp');
        cb_throw_error(E_GRN_USER_NOT_FOUND);
    }

    $account_for_view = [];

    if (is_null($user_account)) {
        if ($system_flag) {
            $personal_config = $utility->getPersonalConfig($user);
            $user_account = [$personal_config->getDefaultAccountId()];
        }
    }

    $t->assign('user_account', $user_account);
} else {
    $account_for_view = ['all' => false, 'default' => false];
    if ($user_account == 'all') {
        $account_for_view['all'] = true;
    } else {
        $account_for_view['default'] = true;
    }

    $t->assign('user_account', $account_for_view);
}

// ----------

// 新着メールチェックが使用不可かどうか
if ( ! $system_config->canUserCheckMail()) {
    $t->assign('cannot_check_mails', 1);
}

// 新着メールチェックを行う設定
$check_mails = @ $settings['check_mails'];
$check_mails = is_null($check_mails) ? GRN_MAIL_DEFAULT_CHECK_MAIL
    : (int)$check_mails;
if (($check_mails != 0) && ($check_mails != 1)) {
    $check_mails = GRN_MAIL_DEFAULT_CHECK_MAIL;
}
$t->assign('check_mails', $check_mails);

// 新着メールチェックを行う間隔の設定
$check_span = @ $settings['check_span'];
$check_span = is_null($check_span) ? GRN_MAIL_DEFAULT_CHECK_MAIL_SPAN
    : (int)$check_span;
if (($check_span < GRN_MAIL_MIN_CHECK_MAIL_SPAN)
    || ($check_span > GRN_MAIL_MAX_CHECK_MAIL_SPAN)
) {
    $check_span = GRN_MAIL_DEFAULT_CHECK_MAIL_SPAN;
}
$check_span /= 60;  // 秒→分

$check_span_options_for_view = [];
$mim_minutes = GRN_MAIL_MIN_CHECK_MAIL_SPAN
               / 60;       // sec -> min
$max_minutes = GRN_MAIL_MAX_CHECK_MAIL_SPAN
               / 60;       // sec -> min
for ($i = $mim_minutes; $i <= $max_minutes; $i += 5) {
    $check_span_options_for_view[] = $i;
}
$t->assign('check_span_options', $check_span_options_for_view);
$t->assign('check_span', $check_span);

// ----------

//Assign include_php Parameter
$t->assign('portlet', $portlet);
$t->assign('display', $display);

require_once('grn/application.csp');
require_once('mail/resources.csp');
$app_locator = GRN_ApplicationLocator::instance();
$app_name = $app_locator->getName(GRN_MAIL_APP_ID);
$t->assign('app_name', $app_name);

// Ignore Licence Warnning
$t->skipWarning();

//Display Smarty Template
$doc_name = 'mail/portlet/set_news';
$t->display("{$doc_name}.tpl");


