<?php

require_once('portal/error_code.csp');
if ( ! isset($portlet)) {
    cb_throw_error(E_GRN_PRTL_PORTLET_INVALID_ACCESS);
}

// ユーザー取得
global $G_container_base;
$uum = $G_container_base->getInstance('uum');
$user = $uum->getLoginUser();
if ( ! $user) {
    require_once('grn/error_code.csp');
    cb_throw_error(E_GRN_USER_NOT_FOUND);
}

//Get Smarty Instance
require_once("grn/smarty.csp");
$t = new GRN_Smarty;

require_once('mail/utility.csp');
$utility = GRN_Mail_Utility::getInstance();
$app = $utility->getMailApp();
$personal_config = $utility->getPersonalConfig($user);
$folder_logic = $utility->getFolderLogic();
$mail_logic = $utility->getMailLogic();


// 一覧に表示する形式
$name_format = $personal_config->getListNameFormatSetting();

// 開封確認設定使用権限
$system_config = $utility->getSystemConfig();
$can_use_confirm = $system_config->canUserUseConfirm();


//------------------

// 表示する件数取得
require_once("grn/ui.csp");
$ui_config_manager = GRN_UIConfigManager::getInstance();
$ui_config = $ui_config_manager->getUserConfig($user);
$subject_cols = $ui_config->getSubjectWidth();
$name_cols = $ui_config->getNameWidth();

//------------------

$portlet_settings = array_key_exists('settings', $portlet)
    ? $portlet['settings'] : [];
$sort = array_key_exists('order', $portlet_settings)
    ? $portlet_settings['order'] : '';
if ( ! is_null($sort) && ($sort == 'recept')) {
    $sort = 'recept';
} else {
    $sort = 'sent';
}

$rows = array_key_exists('rows', $portlet_settings) ? $portlet_settings['rows']
    : '';
if (is_null($rows) || (strlen($rows) == 0)) {
    $rows = 5;
}
$font_size = array_key_exists('font_size', $portlet_settings)
    ? $portlet_settings['font_size'] : '';
if (is_null($font_size) || (strlen($font_size) == 0)) {
    $font_size = 'normal';
}
$sender = array_key_exists('sender', $portlet_settings)
    ? $portlet_settings['sender'] : '';
if (is_null($sender) || (strlen($sender) == 0)) {
    $sender = 1;
}
$time = array_key_exists('time', $portlet_settings) ? $portlet_settings['time']
    : '';
if (is_null($time) || (strlen($time) == 0)) {
    $time = 1;
}
$remarks = array_key_exists('remarks', $portlet_settings)
    ? $portlet_settings['remarks'] : '';
if (is_null($remarks) || (strlen($remarks) == 0)) {
    $remarks = 1;
}
$status = array_key_exists('status', $portlet_settings)
    ? $portlet_settings['status'] : '';
if (is_null($status) || (strlen($status) == 0)) {
    $status = 1;
}

$settings_for_view = [
    'font_size' => $font_size,
    'sender'    => $sender,
    'time'      => $time,
    'remarks'   => $remarks,
    'order'     => $sort,
    'status'    => $status,
    'rows'      => $rows
];

$account_id = null;
$account_data = null;
$category_id = array_key_exists('dcid', $portlet_settings)
    ? $portlet_settings['dcid'] : '';
$folder_name = null;
$folder_data = null;

if (is_null($category_id) || (strlen($category_id) == 0)) {
    // デフォルトアカウントID
    $account_id = $personal_config->getDefaultAccountId();
    if ( ! is_null($account_id)) {
        // 受信箱
        $folder_data = $folder_logic->getSpecialFolderData($account_id,
            GRN_MAIL_FOLDER_CODE_INBOX, false);
    }
} elseif (($category_id == GRN_MAIL_FOLDER_CODE_ROOT)
          || ($category_id == GRN_MAIL_FOLDER_CODE_INBOX)
          || ($category_id == GRN_MAIL_FOLDER_CODE_SENTBOX)
          || ($category_id == GRN_MAIL_FOLDER_CODE_UNSENT)
          || ($category_id == GRN_MAIL_FOLDER_CODE_TRASH)
) {
    // デフォルトアカウントID
    $account_id = $personal_config->getDefaultAccountId();
    if ( ! is_null($account_id)) {
        // 特殊フォルダ
        $folder_data = $folder_logic->getSpecialFolderData($account_id,
            $category_id, false);
    }
} else {
    $folder_data = $folder_logic->getFolderData($category_id, false, false);
    if ( ! is_null($folder_data) && ! is_null($folder_data['account_id'])
         && $personal_config->checkAccountForOwner($folder_data['account_id'])
    ) {
        $account_id = $folder_data['account_id'];
    } else {
        $folder_data = null;
        // デフォルトアカウントID
        $account_id = $personal_config->getDefaultAccountId();

        // 受信箱
        if ( ! is_null($account_id)) {
            $folder_data = $folder_logic->getSpecialFolderData($account_id,
                GRN_MAIL_FOLDER_CODE_INBOX, false);
        }
    }
}

if ( ! is_null($folder_data)) {
    $category_id = $folder_data['id'];
} else {
    $category_id = null;
}

// フォルダ名取得
$folder_type = '';
$folder_name = '';
if (is_array($folder_data) && $app != null) {
    $folder_code = is_array($folder_data) ? $folder_data['code'] : '';
    switch ($folder_code) {
        case GRN_MAIL_FOLDER_CODE_ROOT:
            $folder_type = '0';
            $folder_name = cb_msg($app->getModuleId(), 'root');
            break;
        case GRN_MAIL_FOLDER_CODE_INBOX:
            $folder_type = '1';
            $folder_name = cb_msg($app->getModuleId(), 'inbox');
            break;
        case GRN_MAIL_FOLDER_CODE_SENTBOX:
            $folder_type = '2';
            $folder_name = cb_msg($app->getModuleId(), 'outbox');
            break;
        case GRN_MAIL_FOLDER_CODE_UNSENT:
            $folder_type = '3';
            $folder_name = cb_msg($app->getModuleId(), 'draftbox');
            break;
        case GRN_MAIL_FOLDER_CODE_TRASH:
            $folder_type = '4';
            $folder_name = cb_msg($app->getModuleId(), 'garbagebox');
            break;
        default:
            $folder_type = '5';
            $folder_name = htmlspecialchars($folder_data['name']);
            break;
    }
}

if ( ! is_null($account_id)) {
    $account_data = $personal_config->getAccountData($account_id, false, false);
}

if (is_null($account_data)) {
    $account_id = null;
    $category_id = null;
    $folder_name = null;
    $folder_data = null;
} else {
    $account_name = $account_data['title'];
    $t->assign('account_name', $account_name);
}

$t->assign('aid', $account_id);
$t->assign('cid', $category_id);
$t->assign('sent_folder', ($folder_code == GRN_MAIL_FOLDER_CODE_SENTBOX));

if ( ! is_null($folder_data)) {
    $settings_for_view['folder'] = $category_id;
    $folder_name = preg_replace([
        '/&lt;/',
        '/&gt;/',
        '/&quot;/',
        '/&amp;/'
    ], ['<', '>', '"', '&'], $folder_name);
    $settings_for_view['folder_name'] = $folder_name;

    // folder properties
    $t->assign('category', [
        'type'          => $folder_type,
        'is_subscribed' => $folder_data['subscribed']
    ]);
}

//------------------

if ( ! is_null($account_id) && ! is_null($category_id)) {
    $sort_key = ($sort == 'sent') ? 'ctime' : 'rtime';

    // メール一覧
    $mail_list = $mail_logic->getMailDataList($user, $category_id, false, true,
        $sort_key, true, 0,
        $rows/*, $status_id = null, $start_ts = null, $last_ts = null, $sub_query = null*/);

    if (is_array($mail_list) && (count($mail_list) > 0)) {
        $t->assign('has_mails', true);

        if (($folder_code == GRN_MAIL_FOLDER_CODE_SENTBOX)
            || ($folder_code == GRN_MAIL_FOLDER_CODE_UNSENT)
        ) {
            $disp_name = 'to';
        } else {
            $disp_name = 'from';
        }

        $mail_list_for_view = [];
        foreach (array_keys($mail_list) as $mail_id) {
            $mail_data =& $mail_list[$mail_id];

            $read_ts = $mail_data['read_ts'];
            $b_unread = ( ! is_object($read_ts) || ($read_ts->unix_ts == 0));

            $mail_list_for_view[$mail_id] = [
                'mid'          => $mail_id,
                'type'         => $mail_data['sent'] ? '1' : '0',
                'unread'       => $b_unread,
                'aid'          => $mail_data['account_id'],
                'cid'          => $category_id,
                'name'         => $mail_data[$disp_name],
                'time'         => ($sort == 'sent') ? $mail_data['send_ts']
                    : $mail_data['timestamp'],
                'to'           => $mail_data['to'],
                'subject'      => $mail_data['subject'],
                'data'         => $mail_data['data'],
                'attach_file'  => $mail_data['attached'],
                'status_color' => $mail_data['status_color'],
                'status_name'  => $mail_data['status_name'],
            ];

            if ( ! $mail_data['sent']) {
                // 受信メール
                if ($mail_data['confirmation_response']) {
                    // 開封通知
                    $mail_list_for_view[$mail_id]['open'] = '4';    // 開封通知
                } else {
                    // 受信メール
                    if (is_null($mail_data['confirmation_status'])) {
                        // まだ返信してない
                        $mail_list_for_view[$mail_id]['open'] = '3';
                    }
                    if (($mail_data['confirmation_status'] == 'none')
                        || ($mail_data['confirmation_status'] == 'opened')
                    ) {
                        // 無視した
                        $mail_list_for_view[$mail_id]['open'] = '1';
                    } elseif (strncasecmp($mail_data['confirmation_status'],
                            'sent', 4) == 0
                    ) {
                        // 開封確認返信済み
                        $mail_list_for_view[$mail_id]['open'] = '2';
                    }
                }
            } else {
                // 送信メール
                if ($mail_data['confirmation_request']) {
                    // 開封確認要求
                    $mail_list_for_view[$mail_id]['open'] = '3';
                } elseif ($mail_data['confirmation_response']) {
                    // 開封確認
                    $mail_list_for_view[$mail_id]['open'] = '4';
                }
            }

            $size = (int)$mail_data['size'];
            if (($size > 0) && ($size < 1024)) {
                // 1KB未満の場合は1KBと表示させる
                $mail_list_for_view[$mail_id]['size'] = 1024;
            } else {
                $mail_list_for_view[$mail_id]['size'] = $size;
            }

            // 操作した内容（1:返信 2:全員に返信 3:転送）
            switch ($mail_data['action']) {
                case 'reply':
                    $mail_list_for_view[$mail_id]['action'] = '1';
                    break;
                case 'reply-all':
                    $mail_list_for_view[$mail_id]['action'] = '2';
                    break;
                case 'forward':
                    $mail_list_for_view[$mail_id]['action'] = '3';
                    break;
            }

            if ($use_star
                && ($star_logic->isMarked($user, GRN_MAIL_MODULE_ID, $mail_id))
            ) {
                $mail_list_for_view[$mail_id]['star_on'] = true;
            }
        }

        $t->assign('mails', $mail_list_for_view);
        // star infomations
        require_once('star/logic.csp');
        $star_logic = GRN_Star_StarLogic::getInstance();
        $t->assign('use_star', ($use_star = $star_logic->isActive()));
        if ($use_star) {
            $t->assign('star_infos',
                $star_logic->getStatusByIDs($user, GRN_MAIL_MODULE_ID,
                    array_keys($mail_list)));
        }
        //--- end star
    }
}

$t->assign('settings', $settings_for_view);

// 送受信記録を使用する設定
$use_address_history = $system_config->canUserUseHistory();

$name_type = null;
if ($use_address_history) {
    $name_type = 'history';
}
$t->assign('name_type', $name_type);


// 表示文字数
$t->assign(
    'characters', [
        'subject' => $subject_cols, //表題
        'name'    => $name_cols //名前＋Email
    ]
);

//Assign include_php Parameter
$t->assign('portlet', $portlet);

//Set Page Title
if ($portlet['title'] === '') {
    require_once('grn/application.csp');
    $app_locator = GRN_ApplicationLocator::instance();
    $app_name = $app_locator->getName('mail');
    $page_title = cb_plain_msg('grn.mail', 'portlet_view_data_list',
        ['app_name' => $app_name]);
} else {
    $page_title = $portlet['title'];
}
$t->assign('name_format', $name_format);
$t->assign('page_title', $page_title);
$t->assign('display_name_mode', $portlet['display_name_mode']);

$t->assign('use_confirm', $can_use_confirm);  // 開封確認使用権限

//Ignore Licence Warnning
$t->skipWarning();

//Display Smarty Template
$t->display("mail/portlet/view_data_list.tpl");


