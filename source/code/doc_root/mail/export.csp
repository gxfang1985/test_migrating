<?php
global $G_INPUT;
global $G_container_base;
$uum = $G_container_base->getInstance('uum');
$user = $uum->getLoginUser();
if ( ! is_object($user)) {
    cb_throw_error(E_COMMON_AUTHENTICATION_FAILED);
}

// Smarty をインスタンス化
require_once("grn/smarty.csp");
$t = new GRN_Smarty;

//------------------

require_once('mail/utility.csp');
$utility = GRN_Mail_Utility::getInstance();
$mail_logic = $utility->getMailLogic();
$folder_logic = $utility->getFolderLogic();

$mail_id = @ $G_INPUT['mid'];
$mail_data = $mail_logic->getMailData($mail_id, true);
$category_id = $mail_data['folder_id'];
$folder_data = $folder_logic->getFolderData($category_id, false, true);
$account_id = $folder_data['account_id'];

//------------------

// フォルダ
$page_index = 'mail/index';
$folder_code = is_array($folder_data) ? $folder_data['code'] : '';
switch ($folder_code) {
    case GRN_MAIL_FOLDER_CODE_ROOT:
        $page_folder = grn_get_page_display_name('mail/root');
        break;
    case GRN_MAIL_FOLDER_CODE_INBOX:
        $page_folder = grn_get_page_display_name('mail/inbox');
        break;
    case GRN_MAIL_FOLDER_CODE_SENTBOX:
        $page_folder = grn_get_page_display_name('mail/outbox');
        break;
    case GRN_MAIL_FOLDER_CODE_UNSENT:
        $page_folder = grn_get_page_display_name('mail/draftbox');
        break;
    case GRN_MAIL_FOLDER_CODE_TRASH:
        $page_folder = grn_get_page_display_name('mail/garbagebox');
        break;
    default:
        $page_folder = grn_get_page_display_name('mail/category_list');
        break;
}

$position = [
    $utility->getIndexSitePosition($user, $account_id),
    [
        'page' => $page_index,
        'name' => $page_folder,
        'aid'  => $account_id,
        'cid'  => $category_id
    ],
    [
        'page' => 'mail/view',
        'name' => grn_get_page_display_name('mail/view',
            ['app_name' => $G_mail_name]),
        'mid'  => $mail_id
    ]
];

// 出力文字コードを取得
require_once('grn/ui.csp');
$charset = grn_ui_export_charset($user, 'mail/view', $position);
assert('!is_null($charset)');

//$charset = $mail_data['charset'];

//------------------

$from = $mail_data['from'];
$to = $mail_data['to'];
$cc = $mail_data['cc'];
$bcc = $mail_data['bcc'];
require_once('mail/utility.csp');
// メール情報
$mail_for_view = [
    'mid'     => $mail_id,
    'from'    => $from,
    'ctime'   => $mail_data['send_ts'], //送信日時
    'to'      => $to,
    'cc'      => $cc,
    'bcc'     => $bcc,
    'subject' => $mail_data['subject'],
    'data'    => GRN_Mail_Utility::htmlEntityDecodeExt($mail_data['data']),
    'sent'    => $mail_data['sent'],
];

// 添付ファイル
if (array_key_exists('files', $mail_data)) {
    $mail_for_view['attach_files'] = $mail_data['files'];
}

$t->assign('name_format', 'full');

// Ogreで送信したメールを受信するとどういうわけか文末に「x0Dx0D」というコードが入る
// この不具合に対応しておくので、後で削除すること

$t->assign('mail', $mail_for_view);

cb_prepare_download('notitle.txt', 'text/plain', false);

echo grn_ui_export_content($t, cb_get_pagename(), $charset);

cb_safe_exit();


