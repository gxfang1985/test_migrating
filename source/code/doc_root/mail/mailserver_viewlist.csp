<?php

//-- instantiate Smarty object
require_once("grn/smarty.csp");
$t = new GRN_Smarty;

global $G_state_set;
$G_state_set->set('copyright_should_be_written', false);
$G_state_set->set('html_should_be_closed', false);

//------------------
require_once('mail/system_config.csp');

// メールサーバー一覧
$system_config = GRN_Mail_SystemConfig::getInstance();
$data_list = $system_config->getServerDataList(false);

$mail_servers = [];
foreach (array_keys($data_list) as $key) {
    $data =& $data_list[$key];
    $server_info = $data['server_info'];

    //type of encrypted connection
    $use_SSL = $server_info->smtpOverSsl();
    $use_TLS = $server_info->smtpOverTls();
    if ($use_SSL) {
        $type_encrypted = cb_msg('grn.mail.system', 'use_ssl');
    } elseif ($use_TLS) {
        $type_encrypted = cb_msg('grn.mail.system', 'use_tls');
    } else {
        $type_encrypted = cb_msg('grn.mail.lang', 'unused_encrypted');
    }

    $mail_servers[$key] = [
        'msid'                      => $key,
        'title'                     => $data['name'],
        'smtp_server'               => $server_info->getSmtp(),
        'smtp_port'                 => $server_info->getSmtpPort(),
        'smtp_auth'                 => $server_info->getSmtpAuth(),
        'is_pop_before_smtp'        => $server_info->isPopBeforeSmtp(),
        'pop_before_smtp_wait'      => $server_info->getPopBeforeSmtpWaitTime(),
        'smtp_account_set'          => $server_info->usingSmtpAccount(),
        'received_protocol'         => $server_info->getRetrieveProtocol(),
        'received_server'           => $server_info->getRetrieve(),
        'received_port'             => $server_info->getRetrievePort(),
        'apop'                      => $server_info->getRetrieveAuth()
                                       == GRN_MAIL_RETRIEVE_AUTH_APOP,
        // GRN2-2651
        'smtp_ssl'                  => $server_info->smtpOverSsl(),
        'smtp_tls'                  => $server_info->smtpOverTls(),
        'received_ssl'              => $server_info->retrieveOverSsl(),
        'type_encrypted_connection' => $type_encrypted,
    ];
}

//------------------

// mailserver_set
$t->assign('mailservers', $mail_servers);

// page title
$page_title = grn_get_current_page_display_name();
$t->assign('page_title', $page_title);

// site position
$t->assign(
    'site_position', [
        [
            'page' => 'mail/system/mailserver',
            'name' => grn_get_page_display_name('mail/system/mailserver')
        ],
        [
            'page' => '',
            'name' => $page_title
        ]
    ]
);

//-- show page
$t->display(cb_get_pagename() . ".tpl");

