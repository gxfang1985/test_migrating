<?php

use grn\grn\ThumbnailUtil;

require_once('_file_prepare_download.csp');

global $G_INPUT;

if (is_a($file_body, 'CB_ServerFile')) {
    // 送信メール
    $body = $file_body;
    require_once('grn/_file_download_for_thumbnail.csp');
    $file_body->download(true);
} elseif (is_a($file_body, 'CB_MailSinglePart')) {
    // 受信メール
    $filename = $file_body->getFilename();
    $filebody = $file_body->getContent();

    $content_type = '';
    $ext = substr(strrchr($filename, '.'), 1);
    if (strlen($ext) > 0) {
        require_once('grn/mime.csp');
        $mcm = GRN_MIMEConfigManager::getInstance();
        $content_type = $mcm->getMIMEType($ext);
    }
    if ( ! is_string($content_type) || strlen($content_type) == 0) {
        $content_type = $file_body->getContentType();
        if ( ! is_string($content_type) || strlen($content_type) == 0) {
            $content_type = 'application/octet-stream';
        }
    }

    $output_expires = false;
    if (isset($G_INPUT['hash'])
        && sha1($filebody) === $G_INPUT['hash']
    ) {
        $output_expires = true;
    }

    if (strcmp(strtolower($content_type),
            'message/disposition-notification') === 0
    ) {
        require_once('fw/i18n.csp');
        require_once('grn/controller.csp');
        require_once('mail/resources.csp');
        $filename = cb_msg(GRN_MAIL_MODULE_ID, 'no_filename');
        $filebody = grn_wash_script($filebody);
    }

    $thumbnail = array_key_exists('thumbnail', $G_INPUT) ? $G_INPUT['thumbnail']
        : null;
    cb_prepare_download($filename, $content_type, true, $output_expires);

    if ($thumbnail == 1 && ThumbnailUtil::isEnableInlineThumbnail()) {
        $util = new ThumbnailUtil();
        $util->setAspectRatio(ThumbnailUtil::ASPECT_RATIO_FIX);
        $result = $util->makeThumbnailByImageData($filebody, 450, 450);
        if ($result === false) {
            echo $filebody;
        }
    } else {
        echo $filebody;
    }
}

cb_safe_exit();

