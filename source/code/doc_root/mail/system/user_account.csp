<?php
//-- instantiate Smarty object
require_once("grn/smarty.csp");

use grn\grn\access\service\AppAccess;

$t = new GRN_Smarty;

$t->assign('app_name', $G_mail_name);

//-- get parameters from URL parameters
$org_id = @ $G_INPUT['oid'];

//-- prepare uum and uum_util
global $G_container_base;
$uum = $G_container_base->getInstance('uum');

require_once('grn/org_util.csp');
require_once('grn/org_tree.csp');

$page_name = cb_get_pagename();

$util = GRN_OrgTreeUtil::getInstance();
$tree = $util->getTree($page_name);

if (is_null($org_id)) {
    $org_id = $tree->getSelectedNode();
}

if (array_key_exists('top', $G_INPUT) || is_null($tree->getRoot())) {
    $tree->initialize();
    $org_id = null;
}
$tree->setSelectedNode($org_id);
$util->setTree($page_name, $tree);
$org = $tree->getRoot();

require_once('mail/system_config.csp');
$system_config = GRN_Mail_SystemConfig::getInstance();

// ソート
$sort_params = ['sort' => 'size', 'reverse' => '', 'disabled' => true];
$sort = array_key_exists('sort', $G_INPUT) ? $G_INPUT['sort'] : null;
$sort_reverse = '';
if ($sort === 'size') {
    if (array_key_exists('reverse', $G_INPUT)) {
        $sort_reverse = $G_INPUT['reverse'] === '0' ? '1' : '';
    }
}

$search_text = array_key_exists('search_text', $G_INPUT)
    ? cb_trim($G_INPUT['search_text']) : '';
$is_search = strlen($search_text) > 0 ? true : false;
if ($is_search) {
    // search
    require_once('grn/org_util_search.csp');

    //--N-navigation
    $condition = grn_get_user_info_search_condition($org_id, $search_text,
        true);
    $count = grn_get_user_info_search_count($org_id, $condition);

    $navi_params = ['oid' => $org_id, 'search_text' => $search_text];
    $navigation_info = grn_get_user_navigation_info($count, $navi_params);

    $t->assign('search_text', $search_text);

    $user_list = $system_config->getUsersAccountList($org_id, $navigation_info,
        $search_text, $sort, $sort_reverse);

    $sort_params['search_text'] = $search_text;
} elseif ($org_id) {
    //list

    //--N-navigation
    $navi_params = ['oid' => $org_id];
    $navigation_info = grn_get_user_list_info($org_id, $navi_params);

    $user_list = $system_config->getUsersAccountList($org_id, $navigation_info,
        $search_text, $sort, $sort_reverse);
} else {
    $user_list = [];
    $navigation_info = null;
}

// ソートのパラメータ
if ($sort === 'size') {
    $navigation_info['navi']['params']['sort'] = $sort;
    $sort_params['disabled'] = false;
    $sort_params['sort'] = $sort;
    switch ($sort_reverse) {
        case '1':
            $navigation_info['navi']['params']['reverse'] = '0';
            $sort_params['reverse'] = '1';
            $sort_params['sort'] = '';
            break;
        default:
            $sort_params['reverse'] = '0';
            break;
    }
}
$t->assign('sort', $sort_params);

//set navigation
if (is_array($navigation_info) && array_key_exists('offset', $navigation_info)
    && array_key_exists('limit', $navigation_info)
) {
    $offset = $navigation_info['offset'];
    $limit = $navigation_info['limit'];
    if ( ! is_numeric($offset) || ! is_numeric($limit)) {
        cb_throw_error(E_COMMON_INTERNAL);
    }
    if ($limit < 0) {
        $limit = '18446744073709551615';
    }
    $limit = $limit + $offset;
}

// optimize extract item
$user_ids = array_keys($user_list);
if (count($user_ids) > 0) {
    $user_list_tmp = [];
    for ($i = $offset; $i < $limit; $i++) {
        if (array_key_exists($i, $user_ids)) {
            $user_list_tmp[$user_ids[$i]] = $user_list[$user_ids[$i]];
        }
    }
    $user_list = $user_list_tmp;
}

//--user account information
$user_ids = array_keys($user_list);
$users_id_using_mail = AppAccess::filterUserIdsInternalAccessByAppId($user_ids,
    'mail');
$users_id_checked = array_replace(array_fill_keys($user_ids, false),
    array_fill_keys($users_id_using_mail, true));

foreach ($user_ids as $uid) {
    unset($user_list[$uid]['row']);
    unset($user_list[$uid]['position']);

    $valid_date = $user_list[$uid]['valid'];
    if (is_null($valid_date)) {
        $user_list[$uid]['valid'] = true;
    } else {
        $user_list[$uid]['valid'] = false;
    }
    unset($valid_date);

    $user_list[$uid]['col_using_app'] = $users_id_checked[$uid];

    $user_list[$uid]['account_list'] = [];
    $account_list
        = $system_config->getAccountDataListByUserID($uid,
        true);
    if ( ! is_array($account_list) || 0 === count($account_list)) {
        continue;
    }

    $mail_size = 0;
    foreach (array_keys($account_list) as $account_id) {
        $account_data =& $account_list[$account_id];
        if (is_array($account_data)) {
            $account_name = $account_data['title'];
            $size = $account_data['mail_size'];
        } else {
            $account_name = '';
            $size = 0;
        }

        $mail_size += $size;

        $user_list[$uid]['account_list'][$account_id] = [
            'aid'   => $account_id,
            'title' => $account_name,
            'size'  => $size
        ];
    }

    if (($mail_size > 0) && ($mail_size < 1024)) {
        $mail_size = 1024;
    }
    $user_list[$uid]['mail_size'] = $mail_size;
}

//-- set variables for view
$t->assign('org_id', $org_id);
$t->assign('org', $org);
$t->assign('page_name', $page_name);
$t->assign('is_nogroups', 0 > $org_id);
$t->assign('is_root', ! $org_id);
$t->assign('is_search', $is_search);
if ($is_search || $org_id) {
    $t->assign('user_list', $user_list);
    $t->assign('navi_info', $navigation_info);
} else {
    $t->assign('group_count', $uum->getGroupCount());
    $t->assign('user_count', $uum->getUserCount());
}

// Smartyにページタイトルを割り当てる
$page_title = grn_get_current_page_display_name();
$t->assign('page_title', $page_title);


// site position
$t->assign(
    'site_position', [
        [
            'page' => '',
            'name' => $page_title
        ]
    ]
);

//-- show page
$t->display(cb_get_pagename() . '.tpl');
