<?php
global $G_INPUT;
global $G_container_base;
$uum = $G_container_base->getInstance('uum');
$user = $uum->getLoginUser();
if ( ! is_object($user)) {
    cb_throw_error(E_COMMON_AUTHENTICATION_FAILED);
}

require_once('mail/utility.csp');
$utility = GRN_Mail_Utility::getInstance();
$system_config = $utility->getSystemConfig();
$personal_config = $utility->getPersonalConfig($user);
$folder_logic = $utility->getFolderLogic();
$mail_logic = $utility->getMailLogic();
$send_logic = $utility->getSendLogic();

// メールの使用が許可されているか
$system_config->getGeneralSetting($general_settings);
$disable_mail = $general_settings['disable_mail'];
$check_mail_on_login = $general_settings['check_mail_on_login'];
if ($disable_mail) {
    // メール使用停止中
    cb_throw_error(E_GRN_MAIL_CANNOT_USE);
}

// 送信前確認を行う
$personal_config->getGeneralSetting($personal_general_settings);
$b_preview = $personal_general_settings['preview'];

// 開封確認設定
$send_set = $system_config->canUserUseConfirm()
            && ($personal_config->useConfirmMail());

// Smarty をインスタンス化
require_once("grn/smarty.csp");
$t = new GRN_Smarty;

//------------------
$doc_name = cb_get_pagename();

$mail_id = @ $G_INPUT['mid'];

$mail_data = $mail_logic->getMailData($mail_id, true);
$category_id = $mail_data['folder_id'];
$folder_data = $folder_logic->getFolderData($category_id);
$account_id = $folder_data['account_id'];

// 再送信用ファイル情報取得
require_once('grn/controller.csp');
$tmp_key = grn_get_temporary_key();
$t->assign('tmp_key', $tmp_key);
$reuse_files = grn_init_attached_file($doc_name . $tmp_key,
    $send_logic->makeReuseFiles($mail_data));

$mail_for_view = [
    'aid'             => $account_id, //user_acount_ID
    'cid'             => $category_id, //category_ID
    'mid'             => $mail_id,
    'to'              => $mail_data['to'],
    'cc'              => $mail_data['cc'],
    'bcc'             => $mail_data['bcc'],
    'subject'         => $mail_data['subject'],
    'data'            => $mail_data['data'],
    'html_data'       => $mail_data['html_data'],
    'attached_files'  => $reuse_files,
    'sign'            => $mail_data['sign_data'],
    'give_open_check' => $mail_data['confirmation_request'],
];
$sign_id = $mail_data['sign_id'];
$mail_for_view['sign_id'] = $sign_id;

//------------------

$page_index = 'mail/index';
$page_root = 'mail/root';
$page_inbox = 'mail/inbox';
$page_outbox = 'mail/outbox';
$page_draftbox = 'mail/draftbox';
$page_garbagebox = 'mail/garbagebox';
$page_category_list = 'mail/category_list';

$folder_code = is_array($folder_data) ? $folder_data['code'] : '';

switch ($folder_code) {
    case GRN_MAIL_FOLDER_CODE_ROOT:
        $folder_type = '0';
        $page_folder = grn_get_page_display_name($page_root);
        break;
    case GRN_MAIL_FOLDER_CODE_INBOX:
        $folder_type = '1';
        $page_folder = grn_get_page_display_name($page_inbox);
        break;
    case GRN_MAIL_FOLDER_CODE_SENTBOX:
        $folder_type = '2';
        $page_folder = grn_get_page_display_name($page_outbox);
        break;
    case GRN_MAIL_FOLDER_CODE_UNSENT:
        $folder_type = '3';
        $page_folder = grn_get_page_display_name($page_draftbox);
        break;
    case GRN_MAIL_FOLDER_CODE_TRASH:
        $folder_type = '4';
        $page_folder = grn_get_page_display_name($page_garbagebox);
        break;
    default:
        $folder_type = '5';
        $page_folder = grn_get_page_display_name($page_category_list);
        break;
}

$category_for_view = [];
$category_for_view['type'] = $folder_type;
$category_for_view['title'] = $page_folder;
$category_for_view['aid'] = $account_id;
$category_for_view['cid'] = $category_id;
$category_for_view['parent_id'] = $folder_data['parent_id'];
$category_for_view['subscribed'] = $folder_data['subscribed'];

$page_title = grn_get_current_page_display_name();

//------------------

// ユーザー情報
$user_for_view = [
    'uid'  => $user->getOID(),
    'name' => $user->get('display_name')
];


$page_index = 'mail/index';
$page_title = grn_get_current_page_display_name();
$site_position = [];
$site_position[] = $utility->getIndexSitePosition($user, $account_id);

//------------------

// アカウント設定数を取得する
$account_data_count = $personal_config->getAccountDataCount();
if ($account_data_count == 0) {
    // サーバー設定数を取得する
    $server_data_count = $system_config->getServerDataCount();
    if (($account_data_count == 0) && ($server_data_count == 0)) {
        $no_setting = '3';
    } elseif ($account_data_count == 0) {
        $no_setting = '2';
    } elseif ($server_data_count == 0) {
        $no_setting = '1';
    } else {
        $no_setting = '0';
    }
} else {
    // SmartyValidate should be initialized when an input form is there.
    require('SmartyValidate.class.php');
    SmartyValidate::connect($t);
    SmartyValidate::register_form($doc_name, true);

    $b_sign_display_none = true;
    include('_send.csp');

    //$mail_for_view['sign'] = $signature_default_data;

    if (isset($account_signature_name_list_for_view[$account_id]['menu'])) {
        foreach (
            array_keys($account_signature_name_list_for_view[$account_id]['menu'])
            as $key
        ) {
            $temp_option
                =& $account_signature_name_list_for_view[$account_id]['menu'][$key];
            if ((is_null($sign_id) && ('-1' == $temp_option['value']))
                || ( ! is_null($sign_id) && ($sign_id == $temp_option['value']))
            ) {
                $temp_option['selected'] = true;
            } else {
                $temp_option['selected'] = false;
            }
        }
    }

    // カレントフォルダ
    $t->assign('category', $category_for_view);

    // アカウントリスト
    foreach ($account_list_for_view as $key => $account) {
        $account_list_for_view[$key]['label'] = '"'
                                                . $account_from_list_for_view[$key]['from']
                                                . '" <'
                                                . $account_from_list_for_view[$key]['email']
                                                . ">";
    }
    $t->assign('user_account', $account_list_for_view);

    $t->assign('account_name', $account_list_for_view[$account_id]['label']);

    // 差出人データリス
    $t->assign('from_data', $account_from_list_for_view);

    // 署名データリスト
    $t->assign('sign_value', $signature_data_list_for_view);

    // position list signature
    $t->assign('sign_position', $signature_position_list_for_view);

    // アカウントごとの署名名称リスト
    $t->assign('user_sign', $account_signature_name_list_for_view);

    $site_position[] = [
        'page' => $page_index,
        'name' => $page_folder,
        'aid'  => $account_id,
        'cid'  => $category_id
    ];
}

$site_position[] = [
    'page' => '',
    'name' => $page_title
];

//--------------------------------------------------------------

$t->assign('uid', $user->getOID());

// 0はOK、1はメールサーバーがまだ 2はアカウントがまだ 3は両方まだ
$t->assign('no_setting', $no_setting);

// page title
$t->assign('page_title', $page_title);

// user_data
$t->assign('user', $user_for_view);

$t->assign('account_id', $account_id);
$t->assign('aid', $account_id);
$t->assign('cid', $category_id);
$t->assign('preview', $b_preview);

$t->assign('sign_set', 0); //サインの設定がある:1 なし:0

$t->assign('send_set', $send_set); //開封確認メール on:1 off:0

$t->assign('site_position', $site_position);

// リッチエディタ
$use_editor = $utility->checkAvailableForRicheditor();
$t->assign('use_editor', $use_editor);

if ( ! $use_editor) {
    $mail_for_view['html_data'] = '';
}

$t->assign('mail', $mail_for_view);
$t->assign('position', $signature_default_position);
require_once('grn/ui.csp');
$cm = GRN_UIConfigManager::getInstance();
$ui_config = $cm->getUserConfig($user);
$t->assign('rows', $ui_config->getAreaHeight());
$t->assign('cols', $ui_config->getAreaWidth());

if (is_null($mail_data['action']) || $mail_data['action'] == "reuse") {
    $t->assign('page_send', true);
} else {
    $t->assign('action', $mail_data['action']);
}

//generate upload ticket
include('grn/_upload_prepend.csp');

// Smarty実行
$t->display("{$doc_name}.tpl");

