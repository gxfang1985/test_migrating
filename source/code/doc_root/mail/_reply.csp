<?php

use grn\grn\access\service\AppAccess;

// アドレス帳
if ( ! AppAccess::isAppAvailable('address')) {
    $t->assign('disable_address', 1);
}

// ユーザー情報
$user_for_view = [
    'uid'  => $user->getOID(),
    'name' => $user->get('display_name')
];

//------------------

// アカウント情報
$check_for_send = true;
include('_account_common.csp');

if ($account_data['disabled']) {
    // アカウント停止中
    cb_throw_error(E_GRN_MAIL_DISABLED_ACCOUNT);
}

if ( ! is_null($account_info)) {
    $user_for_view['from'] = $account_info->getFrom($user);
    $user_for_view['email'] = $account_info->email;

    if (strlen($user_for_view['email']) < 1) {
        cb_throw_error(E_GRN_MAIL_ACCOUNT_EMAIL_NOT_FOUND);
    }
}

// 送信可能なアカウントかチェック
$no_account = $no_server = true;
$personal_config->checkAccountForSend($account_id, $no_account, $no_server);

// 署名情報取得
$signature_list = [];
$signature_data_list_for_view = [];
$signature_position_list_for_view = [];
$account_signature_name_list_for_view = [];
$signature_default_data = null;
$signature_default_position = null;

if (count($account_list_for_view) == 0) {
    $no_account = true;
} else {
    foreach (array_keys($account_list_for_view) as $temp_account_id) {
        // アカウントの署名設定リストを取得
        $signature_list[$temp_account_id]
            = $personal_config->getSignatureDataList($temp_account_id, true);

        // アカウントごとの署名名称リスト
        $account_signature_name_list_for_view[$temp_account_id] = [];
        $account_signature_name_list_for_view[$temp_account_id]['aid']
            = $temp_account_id;

        if (is_array($signature_list[$temp_account_id])
            && (count($signature_list[$temp_account_id]) > 0)
        ) {
            $account_signature_name_list_for_view[$temp_account_id]['menu']
                = [];

            // 署名ループ
            foreach (
                array_keys($signature_list[$temp_account_id]) as $temp_sign_id
            ) {
                $sign_data =& $signature_list[$temp_account_id][$temp_sign_id];
                if ($sign_data['position'] === null
                    || ($sign_data['position'] == "")
                ) {
                    $sign_data['position'] = 'bottom';
                }

                // アカウントごとの署名名称リスト
                $account_signature_name_list_for_view[$temp_account_id]['menu'][]
                    = ['value' => $temp_sign_id, 'label' => $sign_data['name']];

                // 署名データリスト
                if (is_null($signature_default_data)
                    && ($account_id == $temp_account_id)
                ) {
                    $signature_default_data = $sign_data['data'];
                    $signature_default_position = $sign_data['position'];
                }

                $data = $sign_data['data'];
                $signature_data_list_for_view[$temp_sign_id] = $data;
                if ($sign_data['position'] == 'top') {
                    $sign_data['data'] = cb_msg('grn.mail.personal',
                        'GRN_MAIL_PE-258');
                } else {
                    $sign_data['data'] = cb_msg('grn.mail.personal',
                        'GRN_MAIL_PE-259');
                }
                $signature_position_list_for_view[$temp_sign_id]['position']
                    = $sign_data['position'];
                $signature_position_list_for_view[$temp_sign_id]['data']
                    = $sign_data['data'];
            }

            // なしを表示
            if (isset($b_sign_display_none) && $b_sign_display_none) {
                $mail_app = $utility->getMailApp();
                $account_signature_name_list_for_view[$temp_account_id]['menu'][]
                    = [
                    'value' => '-1',
                    'label' => cb_msg($mail_app->getModuleId(), 'no_signature')
                ];
                $signature_data_list_for_view['-1'] = '';
                $signature_position_list_for_view['-1'] = [];
            }

        }
    }
}

if ($no_account && $no_server) {
    $no_setting = '3';
} elseif ($no_account) {
    $no_setting = '2';
} elseif ($no_server) {
    $no_setting = '1';
} else {
    $no_setting = '0';
}

// auto compleate
$utility = GRN_Mail_Utility::getInstance();
$t->assign('incremental_search',
    $utility->checkAvailableForIncrementalSearch($book_ids));
unset($s_config, $g_settings);

