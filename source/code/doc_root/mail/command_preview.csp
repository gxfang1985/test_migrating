<?php

use grn\grn\JSONResponse;

global $G_INPUT;
$account_id = @ $G_INPUT['baid'];
$category_id = @ $G_INPUT['bcid'];
$command = @ $G_INPUT['cmd'];
$tmpid = @ $G_INPUT['tmpid'];
$origin_mid = @ $G_INPUT['mid'];
$draft_id = @ $G_INPUT['draft_id'];
$action = cb_at($G_INPUT, 'action', '');

if (0 == strcasecmp(@ $_SERVER['REQUEST_METHOD'], 'POST')) {
    global $G_container_base;
    $uum = $G_container_base->getInstance('uum');
    $user = $uum->getLoginUser();
    $user_id = $user->getOID();
    if ( ! is_object($user)) {
        cb_throw_error(E_COMMON_AUTHENTICATION_FAILED);
    }

    // instantiate an Smarty object
    require_once("grn/smarty.csp");
    $t = new GRN_Smarty;

    require_once('mail/utility.csp');
    $utility = GRN_Mail_Utility::getInstance();
    $send_logic = $utility->getSendLogic();
    $folder_logic = $utility->getFolderLogic();
    $mail_logic = $utility->getMailLogic();
    $system_config = $utility->getSystemConfig();
    $personal_config = $utility->getPersonalConfig($user);

    // 総メールサイズをチェック
    $system_config->getSizeUserLimitSetting($size_settings, $user_id);
    $mail_size = $personal_config->getMailSize(null);
    if ((0 <= $size_settings['user_limit_' . $user_id])
        && ($mail_size >= $size_settings['user_limit_' . $user_id] * 1024
                          * 1024)
    ) {
        cb_throw_error(E_GRN_MAIL_LIMIT, null,
            ['limit' => $size_settings['user_limit_' . $user_id] . 'MB']);
    }

    // validate after a POST
    require_once('mail/include_send.csp');

    $json = JSONResponse::create();

    if ($command == 'send') {
        // メールの送信
        if (array_key_exists('data_plain_text', $G_INPUT)
            && strlen($G_INPUT['data_plain_text']) > 0
        ) {
            $data = [];
            $data['data'] = $G_INPUT['data'];
            $data['data_plain_text']
                = grn_strip_tags(grn_wash_script_without_style_attribute($G_INPUT['data_plain_text']));
        } else {
            $data = $G_INPUT['data'];
        }
        $position = @ $G_INPUT['sign_position'];
        $personal_config = $utility->getPersonalConfig($user);
        $personal_config->getGeneralSetting($general_settings);
        $mail_id = $send_logic->sendPreviewMail($user, $tmpid,
            $general_settings['save_sentfile'], null, $position, $data);

        if ( ! is_null($mail_id)) {
            // 一時メールデータを削除
            $mail_logic->deleteTemporaryMailData($tmpid);
        }

        // delete a draft mail
        if (array_key_exists('draft_id', $G_INPUT)
            && strlen($G_INPUT['draft_id']) > 0
        ) {
            $mail_ids = [$G_INPUT['draft_id']];
            $mail_logic->deleteMailDatas($mail_ids, true);
        }

        $redirect_page = (isset($is_popup) && $is_popup) ? 'mail/close_popup'
            : 'mail/index';
        if (defined('AJAX_REQUEST')) {
            $json->response([
                'link' => cb_get_full_url($redirect_page,
                    ['aid' => $account_id, 'cid' => $category_id])
            ]);
            cb_safe_exit();
        }
        cb_redirect($redirect_page,
            ['aid' => $account_id, 'cid' => $category_id]);
    } elseif ($command == 'modify') {
        $redirect_page = (isset($is_popup) && $is_popup)
            ? 'mail/preview_modify_popup' : 'mail/preview_modify';
        if (array_key_exists('sign_position', $G_INPUT)
            && strlen($G_INPUT['sign_position']) > 0
        ) {
            $sign_position = $G_INPUT['sign_position'];
            if (defined('AJAX_REQUEST')) {
                $json->response([
                    'link' => cb_get_full_url($redirect_page,
                        [
                            'baid'          => $account_id,
                            'bcid'          => $category_id,
                            'mid'           => $origin_mid,
                            'sign_position' => $sign_position,
                            'tmpid'         => $tmpid,
                            'draft_id'      => $draft_id,
                            'action'        => $action
                        ])
                ]);
                cb_safe_exit();
            }
            cb_redirect($redirect_page,
                [
                    'baid'          => $account_id,
                    'bcid'          => $category_id,
                    'mid'           => $origin_mid,
                    'sign_position' => $sign_position,
                    'tmpid'         => $tmpid,
                    'draft_id'      => $draft_id,
                    'action'        => $action
                ]);
        } else {
            if (defined('AJAX_REQUEST')) {
                $json->response([
                    'link' => cb_get_full_url($redirect_page,
                        [
                            'baid'     => $account_id,
                            'bcid'     => $category_id,
                            'mid'      => $origin_mid,
                            'tmpid'    => $tmpid,
                            'draft_id' => $draft_id,
                            'action'   => $action
                        ])
                ]);
                cb_safe_exit();
            }
            cb_redirect($redirect_page,
                [
                    'baid'     => $account_id,
                    'bcid'     => $category_id,
                    'mid'      => $origin_mid,
                    'tmpid'    => $tmpid,
                    'draft_id' => $draft_id,
                    'action'   => $action
                ]);
        }
    }
}
$redirect_page = (isset($is_popup) && $is_popup) ? 'mail/close_popup'
    : 'mail/index';
if (defined('AJAX_REQUEST')) {
    $json->response([
        'link' => cb_get_full_url($redirect_page,
            ['aid' => $account_id, 'cid' => $category_id])
    ]);
    cb_safe_exit();
}
cb_redirect($redirect_page, ['aid' => $account_id, 'cid' => $category_id]);
