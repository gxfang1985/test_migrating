<?php
global $G_INPUT;
require_once('dezielink/system_logic.csp');
$sys_logic = GRN_DezieLink_SystemLogic::getInstance();

$url = cb_at($G_INPUT, "url", $sys_logic->getURL());

$connector_available = cb_at($G_INPUT, "connector_available");
if ( ! is_null($connector_available)) {
    $connector_available = $connector_available == 'on' ? true : false;
} else {
    $connector_available = $sys_logic->getConnectorAvailable();
}

$sync_user = cb_at($G_INPUT, "sync_user");
if ( ! is_null($sync_user)) {
    $sync_user = $sync_user == 'on' ? true : false;
} else {
    $sync_user = $sys_logic->getSyncUserAvailable();
}

$period_type = cb_at($G_INPUT, "period_type");
if ( ! is_null($period_type)) {
    $sync_period = [
        'type'  => 0,
        'value' => 0
    ];

    switch (intval($period_type)) {
        case GRN_CONNECTOR_SYNC_USER_PERIOD_TYPE_DAILY: //1
            $sync_period['type'] = GRN_CONNECTOR_SYNC_USER_PERIOD_TYPE_DAILY;
            break;
        case GRN_CONNECTOR_SYNC_USER_PERIOD_TYPE_WEEKLY: //2
            $sync_period['type'] = GRN_CONNECTOR_SYNC_USER_PERIOD_TYPE_WEEKLY;
            $wdays = cb_at($G_INPUT, "wdays");
            if ( ! is_null($wdays)) {
                $sync_period['value'] = $wdays;
            }
            break;
        case GRN_CONNECTOR_SYNC_USER_PERIOD_TYPE_MONTHLY: //3
            $sync_period['type'] = GRN_CONNECTOR_SYNC_USER_PERIOD_TYPE_MONTHLY;
            $days = cb_at($G_INPUT, "days");
            if ( ! is_null($days)) {
                $sync_period['value'] = $days;
            }
            break;
        default:
            $sync_period['type'] = GRN_CONNECTOR_SYNC_USER_PERIOD_TYPE_DAILY;
    }
} else {
    $sync_period = $sys_logic->getSyncUserPeriod();
}

if (array_key_exists('hour', $G_INPUT)
    || array_key_exists('minute', $G_INPUT)
) {
    $hour = cb_at($G_INPUT, "hour", 0);
    $minute = cb_at($G_INPUT, "minute", 0);
    $sync_time = new CB_Time();
    $sync_time->hour = $hour;
    $sync_time->minute = $minute;
} else {
    $sync_time = $sys_logic->getSyncUserTime();
}

$portlet_available = cb_at($G_INPUT, "portlet_available");
if ( ! is_null($portlet_available)) {
    $portlet_available = $portlet_available == 'on' ? true : false;
} else {
    $portlet_available = $sys_logic->getPortletAvailable();
}

$portlet_cache_expire = $sys_logic->getPortletCacheExpire();
$t->assign('portlet_cache_expire', $portlet_cache_expire);

// Assign value to smarty template
$t->assign('url', $url);
$t->assign('connector_available', $connector_available);
$t->assign('sync_user', $sync_user);
$t->assign('sync_period', $sync_period);
$t->assign('sync_time', $sync_time);
$t->assign('portlet_available', $portlet_available);
$t->assign('sample_url', GRN_DZLK_SAMPLE_URL);

//Set page title
$page_title = grn_get_current_page_display_name();
$t->assign('page_title', $page_title);
//Set site position
$parent_page = 'dezielink/system/dz_link_view';
$parent_name = grn_get_page_display_name($parent_page);
$position = [
    [
        'page' => $parent_page,
        'name' => $parent_name
    ],
    [
        'page' => "",
        'name' => $page_title
    ]
];
$t->assign('cancel_page', $parent_page);
$t->assign('site_position', $position);
