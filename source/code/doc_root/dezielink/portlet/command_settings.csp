<?php

// Check HTTP-POST Method
if (strcasecmp(@ $_SERVER['REQUEST_METHOD'], 'POST') == 0) {
    require_once('portal/error_code.csp');
    if ( ! isset($portlet)) {
        cb_throw_error(E_GRN_PRTL_PORTLET_INVALID_ACCESS);
    }

    global $G_INPUT;
    //Get Portal ID
    $portal_id = @ $G_INPUT['pid'];
    //Get Portal and Layout ID
    $layout_id = @ $G_INPUT['plid'];
    $portlet_id = @ $G_INPUT['ppid'];
    $display_type = @$G_INPUT['display'];
    $params_url = @$G_INPUT['params_url'];
    //Check Cancel Flag
    if (array_key_exists('cancel', $G_INPUT)) {
        //Switch Redirect Page
        if ($display_type === 'set-system') {
            //redirect System view page
            cb_redirect('portal/system/view', ['pid' => $G_INPUT['pid']]);
        } elseif ($display_type === 'set-operation') {
            //redirect Operation view page
            cb_redirect('portal/operation/view', ['pid' => $G_INPUT['pid']]);
        } else {
            //redirect Personal view page
            cb_redirect('portal/personal/view', ['pid' => $G_INPUT['pid']]);
        }
    }
    require_once('dezielink/error_code.csp');
    require_once(cb_basedir()
                 . '/code/plugin/grn/common/authentication/authenticate/cybozu.csp');
    $auth_v2
        = plugin_grn_common_authentication_authenticate_cybozu::static_getV2AuthMethod();
    if (is_null($auth_v2)) {
        cb_throw_error(E_GRN_DZLK_AUTH_METHOD_INCOMPATIBLE);
    } elseif (strcmp($auth_v2->get('is_active'), '1') !== 0) {
        cb_throw_error(E_GRN_DZLK_AUTH_METHOD_DISABLED,
            null,
            ['authentication_method_name' => $auth_v2->get('display_name')]
        );
    }
    require_once('grn/smarty.csp');
    $t = new GRN_Smarty();
    require('SmartyValidate.class.php');
    SmartyValidate::connect($t);
    $target_name = 'dezielink/portlet/settings';
    SmartyValidate::register_form($target_name);

    if (SmartyValidate::is_valid($G_INPUT, $target_name)) {
        global $G_container_base;
        $http_client =& $G_container_base->getInstance('http_client');
        require_once('dezielink/system_logic.csp');
        $dezie_system_logic = GRN_DezieLink_SystemLogic::getInstance();
        if ( ! $dezie_system_logic->getConnectorAvailable()) {
            cb_throw_error(E_GRN_DZLK_APP_DISABLED);
        }
        if ( ! $dezie_system_logic->getPortletAvailable()) {
            cb_throw_error(E_GRN_DZLK_PORTLET_DISABLED);
        }
        // get dezie URL to validate 
        $url = $dezie_system_logic->getURL();
        $idx = strpos($url, '?');
        if ($idx === false) {
            $url .= '?';
        } else {
            $url = substr($url, 0, $idx + 1);
        }
        // Get full
        $url .= $params_url;
        if ($http_client->execute($url)) {
            //get http result code
            $status_line = $http_client->getStatusLine();
            $status_code = -1;
            if (array_key_exists('status-code', $status_line)) {
                $status_code = $status_line['status-code'];
            }
            if ($status_code != 200) {
                require_once('dezielink/inspection.csp');
                $inspection = GRN_Dezielink_Inspection::getInstance();
                $inspection->writeInspectionLog(CB_LOGGER_ERROR,
                    'dezielink_http_error',
                    ['status_code' => $status_code, 'url' => $url]);

                cb_throw_error(E_GRN_DZLK_HTTP_ERROR,
                    null,
                    ['http_error' => $status_code]);
            }
        } else {
            $error_info = $http_client->getError();
            require_once('dezielink/inspection.csp');
            $inspection = GRN_Dezielink_Inspection::getInstance();
            $error_msg = array_key_exists('message', $error_info)
                ? $error_info['message'] : null;
            $error_code = array_key_exists('errno', $error_info)
                ? $error_info['errno'] : null;

            $inspection->writeInspectionLog(CB_LOGGER_ERROR,
                'dezielink_connection_error',
                ['error_code' => $error_code, 'error_msg' => $error_msg]);

            cb_throw_error(E_GRN_DZLK_DEZIE_CONNECTION_ERROR,
                null,
                ['msg' => $error_msg . '(code=' . $error_code . ')']);
        }

        //Clear portlet cache
        require_once('portal/table.csp');
        require_once('portal/portlet_layout_logic.csp');
        $portlet_layout_logic = GRN_Portal_PortletLayoutLogic::getInstance();
        $portlet =& $portlet_layout_logic->get($layout_id);

        require_once('dezielink/portlet_cacher.csp');
        $portlet_cacher = GRN_DezieLink_Porlet_Cacher::getInstance();
        $portlet_cacher->clearByPortlet($portlet);

        //Set Infomation Portlet Settings Application
        require_once('grn/application.csp');
        $app_locator = GRN_ApplicationLocator::instance();
        if ($app_locator->isActive('portal')) {
            /** @var GRN_Portal_Application $portal */
            $portal =& $app_locator->getInstance('portal');
            $portal->setPortletSettings($G_INPUT['plid'], $params_url);
            // write log
            require_once('dezielink/inspection.csp');
            $inspection = GRN_Dezielink_Inspection::getInstance();
            if ($inspection->isEnabled()) {
                $inspection->writeInspectionLogNotice('modify',
                    'dezielink_portlet_setting',
                    [
                        'pid'  => $portal_id,
                        'plid' => $layout_id,
                        'ppid' => $portlet_id,
                        'url'  => $url
                    ]);
            }
        }

        SmartyValidate::unregister_form($target_name);
        //Switch Redirect Page
        if ($display_type === 'set-system') {
            //redirect System view page
            cb_redirect('portal/system/view', ['pid' => $G_INPUT['pid']]);
        } elseif ($display_type === 'set-operation') {
            //redirect Operation view page
            cb_redirect('portal/operation/view', ['pid' => $G_INPUT['pid']]);
        } else {
            //redirect Personal view page
            cb_redirect('portal/personal/view', ['pid' => $G_INPUT['pid']]);
        }
    } else {
        require_once('fw/string_util.csp');
        require_once('portal/error_code.csp');
        // Portlet Layout & Portlet ID 
        cb_trim_check($layout_id, E_GRN_PRTL_PORTLET_LAYOUT_INVALID_ID);
        cb_trim_check($portlet_id, E_GRN_PRTL_PORTLET_INVALID_ID);
        require_once('portal/portal_logic.csp');

        if ( ! is_null($portal_id) && ! is_null($layout_id)
             && ! is_null($portlet_id)
        ) {

            if ($display_type === 'set-system') {
                //Get Column Items                
                $system_portallogic
                    = GRN_Portal_SystemPortalLogic::getInstance();
                $column_items
                    =& $system_portallogic->getColumnItems($portal_id);
                $type = 'system';
            } elseif ($display_type === 'set-operation') {
                //Evaluate access of My portal function.
                require_once('portal/access_logic.csp');
                $myportal_logic = GRN_Portal_MyPortalAccessLogic::getInstance();
                $myportal_logic->evaluateAccess();
                //Get Portal
                $system_portallogic
                    = GRN_Portal_SystemPortalLogic::getInstance();
                $portal =& $system_portallogic->get($portal_id);
                //Evaluate Manage Right
                require_once('portal/manage_logic.csp');
                $manage_logic
                    = GRN_Portal_SystemPortalManageLogic::getInstance();
                $manage_logic->evaluateManage($portal, true);
                //Get Column Items
                $system_portalLogic
                    = GRN_Portal_SystemPortalLogic::getInstance();
                $column_items
                    =& $system_portalLogic->getColumnItems($portal_id);
                $type = 'operation';
            } else {
                // Evaluate access of My portal function.
                require_once('portal/access_logic.csp');
                $myportal_logic = GRN_Portal_MyPortalAccessLogic::getInstance();
                $myportal_logic->evaluateAccess();
                $my_portal_Logic = GRN_Portal_MyPortalLogic::getInstance();
                $column_items
                    =& $my_portal_Logic->getColumnItems($portal_id);
                $type = 'personal';
            }
        }
        //Get Layout Object
        $layout = null;
        foreach (array_keys($column_items) as $column_key) {
            $layout_items =& $column_items[$column_key];
            foreach (array_keys($layout_items) as $layout_key) {
                if ($layout_items[$layout_key]->getOID() === $layout_id) {
                    $layout =& $layout_items[$layout_key];
                }
            }
        }
        //Create Portlet Params
        $portlet_for_view = [];
        $title = '';
        $portlet_for_view['pid'] = $portal_id;
        $portlet_for_view['plid'] = $layout_id;
        $portlet_for_view['ppid'] = $portlet_id;
        $portlet_for_view['settings'] = $params_url;
        if ($layout) {
            $title = $layout->get('display_name');
        }
        $portlet_for_view['title'] = $title;
        //-- set page title and site position
        // page title
        if ($title === '') {
            //Get Application name
            require_once('grn/application.csp');
            $app_locator = GRN_ApplicationLocator::instance();
            $app_name = $app_locator->getName('dezielink');
            $page_title = sprintf('%s（%s）',
                cb_plain_msg('grn.portal.' . $type, 'portlet_display_modify'),
                cb_plain_msg('grn.dezielink', 'portlet_view',
                    ['app_name' => $app_name])
            );

        } else {
            $page_title = sprintf('%s（%s）',
                cb_plain_msg('grn.portal.' . $type, 'portlet_display_modify'),
                $portlet_for_view['title']
            );
        }
        $t->assign('page_title', $page_title);
        cb_set_pagename('portal/portlet/command_settings');
        if ($display_type === 'set-operation') {
            // operation site position
            $t->assign(
                'site_position', [
                [
                    'page' => 'portal/' . $type . '/view',
                    'name' => grn_get_page_display_name('portal/' . $type
                                                        . '/view'),
                    'pid'  => $portal_id
                ],
                ['page' => '', 'name' => $page_title]
            ]);
        } else {
            // site position
            $t->assign(
                'site_position', [
                [
                    'page' => 'portal/' . $type . '/list',
                    'name' => grn_get_page_display_name('portal/' . $type
                                                        . '/list')
                ],
                [
                    'page' => 'portal/' . $type . '/view',
                    'name' => grn_get_page_display_name('portal/' . $type
                                                        . '/view'),
                    'pid'  => $portal_id
                ],
                ['page' => '', 'name' => $page_title]
            ]);
        }
        //Assign Display Infomation
        $t->assign('error', true);
        //Assign Display Type
        $t->assign('display', $display_type);
        //Assign Portlet
        $t->assign('portlet', $portlet_for_view);

        //Ignore Licence Warnning
        $t->skipWarning();

        //Display Smarty Template
        $t->display("dezielink/portlet/settings.tpl");
    }
}
