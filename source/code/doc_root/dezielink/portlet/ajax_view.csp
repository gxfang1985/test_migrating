<?php
require_once('portal/table.csp');

// instantiate an Smarty object
require_once("grn/smarty.csp");
$t = new GRN_Smarty;

$dz_params = isset($G_INPUT['dz_params']) ? $G_INPUT['dz_params'] : null;
$portlet_id = isset($G_INPUT['plid']) ? $G_INPUT['plid'] : null;

if ($dz_params) {
    require_once('dezielink/system_logic.csp');
    $system_logic = GRN_DezieLink_SystemLogic::getInstance();

    require_once('dezielink/portlet_logic.csp');
    $portlet_logic = GRN_DezieLink_PortletLogic::getInstance();

    $portlet_data = null;
    $use_cache = false;
    if ($use_cache = $system_logic->isUsingPortletCache()) {
        // get portlet data from cache
        $portlet_data = $portlet_logic->getPortletFromCache($portlet_id);
    }

    if ( ! $portlet_data) {
        // send request to Dezie to get portlet data
        $portlet_data = $portlet_logic->getPortletContent($dz_params, $errors);
        if ($errors) {
            // show error screen
            $cause = null;
            if (array_key_exists('error', $errors)) {
                require_once('fw/error_message.csp');
                $msg = CB_ErrorMessage::getInstance($errors['error'],
                    null);
                $msg_diag = $msg->formatDiagnosisMessage(null);

                if ($errors['error'] == E_GRN_DZLK_DEZIE_CONNECTION_ERROR) {
                    $error_msg = array_key_exists('error_msg', $errors)
                        ? $errors['error_msg'] : null;
                    $error_code = array_key_exists('error_code', $errors)
                        ? $errors['error_code'] : null;
                    $cause = $error_msg . '(code=' . $error_code . ')';
                    $msg_cause = $msg->formatCauseMessage(['msg' => $cause]);
                } elseif ($errors['error'] == E_GRN_DZLK_HTTP_ERROR) {
                    $cause = array_key_exists('status_code', $errors)
                        ? $errors['status_code'] : -1;
                    $msg_cause
                        = $msg->formatCauseMessage(['http_error' => $cause]);
                }
                $msg_counter = $msg->formatCounterMeasureMessage(null);

                $t->assign('has_error', $errors);
                $t->assign('ErrorNumber', $errors['error']);
                $t->assign('ErrorDiag', $msg_diag);
                $t->assign('ErrorCause', $msg_cause);
                $t->assign('ErrorCounterMeasure', $msg_counter);
            }
        } else {
            // convert encoding of portlet to UTF-8
            $portlet_data = mb_convert_encoding($portlet_data, 'UTF-8',
                'sjis-win');

            if ($use_cache) {
                // cache porlet data
                $portlet_logic->cachePortlet($portlet_id, $portlet_data);
            }
        }
    }
    // assign Dezie portlet content
    $t->assign('portlet_data', $portlet_data);
}

global $G_state_set;
$G_state_set->set('copyright_should_be_written', false);
$G_state_set->set('html_should_be_closed', false);

// Ignore Licence Warnning
$t->skipWarning();

// Display Smarty Template
$t->display('dezielink/portlet/ajax_view.tpl');

