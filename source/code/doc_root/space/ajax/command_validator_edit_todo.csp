<?php

use grn\space\common\exception\ErrorCode;
use grn\space\common\exception\GrnInvalidArgumentException;
use grn\grn\JSONResponse;
use grn\space\utility\TodoUtility;

global $G_INPUT;
$json = JSONResponse::create();

$due_date_todo = new \CB_DateTime();

$due_date_todo->year = cb_at($G_INPUT, 'year');
$due_date_todo->month = cb_at($G_INPUT, 'month');
$due_date_todo->day = cb_at($G_INPUT, 'day');
$space_id = cb_at($G_INPUT, 'spid');
$no_limit = cb_at($G_INPUT, 'no_limit');
$login_id = cb_get_login_user()->getOID();

$space_service = new \grn\space\service\SpaceService();

require_once('fw/i18n.csp');
$i18n = CB_I18N::getInstance();
$language_code = $i18n->getCurrentLanguage();

if ($no_limit === 'true') {
    $json->response(['success' => true]);
    cb_safe_exit();
}
/** @var \grn\space\data\bean\Space $space */
$space = $space_service->getSpace($space_id, $login_id, $language_code);
if ($space->getIsUnlimitedExpirationDate()) {
    $json->response(['success' => true]);
    cb_safe_exit();
}

$is_due_date_valid = TodoUtility::isValidWithExpirationDate($due_date_todo,
    $space);

if ( ! $is_due_date_valid) {
    throw  new GrnInvalidArgumentException(ErrorCode::GRN_TODO_INVALID_EXPIRATION_DATE);
}

$json->response(['success' => true]);

