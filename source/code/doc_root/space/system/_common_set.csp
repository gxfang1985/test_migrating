<?php

use grn\space\service\KintoneService;
use grn\space\logic\SpaceSystemLogic;

if ( ! isset($smarty) || ! is_a($smarty, 'GRN_Smarty')) {
    require_once('grn/smarty.csp');
    $smarty = new GRN_Smarty();
    require('SmartyValidate.class.php');
    SmartyValidate::connect($smarty);
    SmartyValidate::register_form(cb_get_pagename(), true);
}
require_once('kintone/Logic.csp');
if (GRN_Kintone_Logic::isAvailable()) {
    $url = GRN_Kintone_Logic::getKintoneURL();

    $service = KintoneService::getInstance();
    $available = $service->isAvailable();

    $smarty->assign('url', $url);
    $smarty->assign('available', (int)$available);
} else {
    $smarty->assign('no_kintone_connector', true);
}

$space_system_logic = new SpaceSystemLogic();
$privacy_default = $space_system_logic->getDefaultPrivacy();

$is_allowed_unlimited = $space_system_logic->getIsUnlimitedExpirationDate();
$is_default_expiration_date_type
    = $space_system_logic->getDefaultExpirationDateType();

$is_default_unlimited = false;
$is_default_limited = false;
$is_disabled_days_after = false;
if ($is_default_expiration_date_type) {
    $is_default_unlimited = true;
    $is_disabled_days_after = true;
} else {
    $is_default_limited = true;
}
$days_default_public_limited
    = $space_system_logic->getDefaultDaysExpirationDate();
$pagename = grn_get_current_page_display_name();
$sitePosition = [
    ['name' => $pagename]
];

$smarty->assign('site_position', $sitePosition);
$smarty->assign('page_title', $pagename);
$smarty->assign('privacy_default', $privacy_default);

$smarty->assign('allow_unlimited', $is_allowed_unlimited);
$smarty->assign('default_expiration_date', $is_default_expiration_date_type);
$smarty->assign('is_default_unlimited', $is_default_unlimited);
$smarty->assign('is_default_limited', $is_default_limited);
$smarty->assign('is_disable_days_after', $is_disabled_days_after);
$smarty->assign('default_public_limited', $days_default_public_limited);
