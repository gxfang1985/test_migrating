<?php

use grn\space\screen\application\discussion\ThreadDetail;
use grn\space\screen\application\discussion\ThreadComment;
use grn\space\screen\application\discussion\ThreadRight;
use grn\grn\JSONResponse;

global $G_INPUT;
global $G_state_set;
$G_state_set->set('html_should_be_closed', false);
$G_state_set->set('copyright_should_be_written', false);
$G_state_set->set('error_page_type', 'json');

$thread_detail_component = new ThreadDetail($G_INPUT);
$thread_body = $thread_detail_component->fetch();
$thread_id = $thread_detail_component->getThreadId();
$window_title = $thread_detail_component->getWindowTitle();
$space_id = $thread_detail_component->getSpaceId();

$thread_right_component = new ThreadRight(array_merge($G_INPUT,
    ['key' => null]));
$right_list = $thread_right_component->fetch();

$thread_comment_component = new ThreadComment($G_INPUT);
$thread_comments = $thread_comment_component->fetch();
$last_comment_no = $thread_comment_component->getLastCommentNo();

$is_unread = $thread_detail_component->isUnreadUnder();

$json = JSONResponse::create();
$json->response([
    'thread_body'     => $thread_body,
    'right_list'      => $right_list,
    'thread_comments' => $thread_comments,
    'thread_id'       => $thread_id,
    'space_id'        => $space_id,
    'window_title'    => $window_title,
    'last_comment_no' => $last_comment_no,
    'is_unread'       => $is_unread
]);

