<?php

if (0 == strcasecmp(@ $_SERVER['REQUEST_METHOD'], 'POST')) {
    require_once('grn/multi_select_utility.csp');
    $G_INPUT = grn_deploy_selected_users('selected_users_sUID', 'sUID',
        $G_INPUT);

    // check show page
    require_once('presence/config.csp');
    $config_manager = GRN_Presence_ConfigManager::getInstance();
    $system_config =& $config_manager->getSystemConfig();
    if ( ! $system_config->getShowProxySettingsMenu()) {
        require_once('presence/error_code.csp');
        cb_throw_error(E_GRN_PRESENCE_PROXY_SETTINGS_DISABLED);
    }

    // ログインユーザーを取得する
    global $G_container_base;
    $uum =& $G_container_base->getInstance('uum');
    $login =& $uum->getLoginUser();

    // get security model
    require_once('presence/access_logic.csp');
    $sal = GRN_Presence_Access_Logic::getInstance();

    // get agents for modify
    $agents = array_key_exists('sUID', $G_INPUT) ? $G_INPUT['sUID'] : [];
    $agent_uid = [];
    $agent_oid = [];

    // remove access all
    $accesses = $sal->getAccesses($login);
    $sal->deleteAccesses($login, $accesses);

    // add new access
    $authorities = ['browse' => 1, 'modify' => 1];
    if (count($agents)) {
        foreach ($agents as $agent) {
            // group
            if (substr($agent, 0, 1) === 'g') {
                $gid = substr($agent, 1);
                if ($uum->getGroup($gid)) {
                    $agent_oid[] = $gid;
                    $sal->setAccess($login, GRN_PRESENCE_TARGET_TYPE_GROUP,
                        $gid, $authorities);
                }
            } else // user
            {
                $uid_parts = explode(':', $agent);
                $uid = $uid_parts[0];
                if ($uum->getUser($uid)) {
                    $agent_uid[] = $uid;
                    $sal->setAccess($login, GRN_PRESENCE_TARGET_TYPE_USER, $uid,
                        $authorities);
                }
            }
        }
    }

    // write log
    require_once('presence/logic.csp');
    $presence_logic = GRN_Presence_Logic::getInstance();
    $log_params = [
        'uid'       => $login->getOID(),
        'agent_uid' => implode(',', $agent_uid),
        'agent_oid' => implode(',', $agent_oid),
    ];
    $presence_logic->writeLog('add', 'agent_modify', $log_params);

}

cb_redirect('personal/application_list', ['app_id' => 'presence']);


