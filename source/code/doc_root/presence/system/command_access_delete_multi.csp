<?php

if (strcasecmp(@ $_SERVER['REQUEST_METHOD'], 'POST') == 0) {
    $eid = array_key_exists('eid', $G_INPUT) ? $G_INPUT['eid'] : null;
    if ( ! is_array($eid)) {
        cb_redirect('presence/system/access_list', $G_INPUT);
    }

    require_once '_access_util.csp';

    // access object
    $object =& grn_get_presence_access_object($org_id, $user_id);

    // access information
    require_once('presence/access_logic.csp');
    $sal = GRN_Presence_Access_Logic::getInstance();

    global $G_container_base;
    $uum =& $G_container_base->getInstance('uum');

    require_once('grn/uum_util.csp');
    $uum_util = GRN_UumUtil::getInstance();
    $dynamic_roles = $uum_util->listDynamicRoles();

    // 監査ログ
    require_once('grn/logger.csp');
    $lm = CB_LoggerManager::getInstance();
    $l =& $lm->getLogger('grn.presence');
    if (is_a($object, 'CB_User')) {
        $object_id_type = 'uid';
        $object_name = $object->get('display_name');
    } elseif (is_a($object, 'CB_Group')) {
        $object_id_type = 'oid';
        $object_name = $object->get('name');
    }

    $agent_uids = [];
    $agent_oids = [];
    foreach ($eid as $item) {
        $ids = explode(':', $item);
        if (count($ids) < 2) {
            continue;
        }

        $id = $ids[1];
        switch ($ids[0]) {
            case 'user':
                if (($target = &$uum->getUser($id))) {
                    $sal->deleteAccess($object, GRN_PRESENCE_TARGET_TYPE_USER,
                        $id);
                    $agent_uids[] = $id;
                }
                break;

            case 'group':
                if (($target = &$uum->getGroup($id))) {
                    $sal->deleteAccess($object, GRN_PRESENCE_TARGET_TYPE_GROUP,
                        $id);
                    $agent_oids[] = $id;
                }
                break;
        }
    }

    $log_params = [
        $object_id_type => $object->getOID(),
        'agent_uid'     => implode(',', $agent_uids),
        'agent_oid'     => implode(',', $agent_oids)
    ];
    $l->noticeEx('delete', 'agent_modify', $log_params);

    $params = $G_INPUT;
    unset($params['eid']);
    cb_redirect('presence/system/access_list', $params);
}

