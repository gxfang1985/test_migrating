<?php

require_once('fw/string_util.csp');
require_once('portal/error_code.csp');

//Get Portal ID
$portal_id = @ $G_INPUT['pid'];

//Get Portal and Layout ID
$layout_id = @ $G_INPUT['plid'];
$portlet_id = @ $G_INPUT['ppid'];

//Get Portal
require_once('portal/portal_logic.csp');
$system_portallogic = GRN_Portal_SystemPortalLogic::getInstance();
$portal =& $system_portallogic->get($portal_id);

//Evaluate Access Right of Portal
require_once('portal/access_logic.csp');
$access_logic = GRN_Portal_SystemPortalAccessLogic::getInstance();
$access_logic->evaluateAccess($portal);

//Evaluate Manage Right
require_once('portal/manage_logic.csp');
$manage_logic = GRN_Portal_SystemPortalManageLogic::getInstance();
$manage_logic->evaluateManage($portal, true);

//Check Get Parameters
if ( ! is_null($portal_id) and ! is_null($layout_id)
                               && ! is_null($portlet_id)
) {
    /** Portlet Layout & Portlet ID **/
    cb_trim_check($layout_id, E_GRN_PRTL_PORTLET_LAYOUT_INVALID_ID);
    cb_trim_check($portlet_id, E_GRN_PRTL_PORTLET_INVALID_ID);

    //Get Column Items
    require_once('portal/portal_logic.csp');
    $system_portalLogic = GRN_Portal_SystemPortalLogic::getInstance();
    $column_items =& $system_portalLogic->getColumnItems($portal_id);

    //Get Layout Object
    $layout = null;
    foreach (array_keys($column_items) as $column_key) {
        $layout_items =& $column_items[$column_key];
        foreach (array_keys($layout_items) as $layout_key) {
            if ($layout_items[$layout_key]->getOID() === $layout_id) {
                $layout =& $layout_items[$layout_key];
            }
        }
    }
    if ( ! $layout) {
        /** Portlet Layout Not Found **/
        cb_throw_error(E_GRN_PRTL_PORTLET_LAYOUT_NOT_FOUND);
    }

    $portlet =& $layout->get('portlet');
    if ( ! $portlet) {
        /** Portlet Not Found **/
        cb_throw_error(E_GRN_PRTL_PORTLET_NOT_FOUND);
    }
    $portlet_id = $portlet->getOID();

    // Create Parameter Translation Map
    $translation_map_portlet = [
        'pid'           => '_id',                  //Portal ID
        'ppid'          => '_id',                  //Portlet ID
        'plid'          => '_id',                  //Portlet Layout ID
        'title'         => 'display_name',         //Portlet Title
        'type'          => 'type',                 //Portlet Type
        'version'       => 'version',              //Portlet Version
        'settings'      => 'settings',             //Portlet Settings
        'set_template'  => 'set_template',         //Portlet Setting Tamplate
        'view_template' => 'view_template',        //Portlet View template
        'source'        => 'source',               //Portlet Source
        'myportal'      => 'available_myportal',   //Portlet Available MyPortal
        'editor'        => 'editor',               //Portlet Editor
    ];

    // Do Parameter Translation
    $portlet_for_view = [];
    foreach ($translation_map_portlet as $view_name => $model_name) {
        if ($view_name === 'ppid') {
            $portlet_for_view[$view_name] = $portlet_id;
        } elseif ($view_name === 'plid') {
            $portlet_for_view[$view_name] = $layout->getOID();
        } elseif ($view_name === 'pid') {
            $portlet_for_view[$view_name] = $portal_id;
        } elseif ($view_name === 'settings') {
            $serialized_settings = $layout->get($model_name);
            if ( ! is_null($serialized_settings)) {
                $settings = cb_unserialize($layout->get($model_name),
                    ["allowed_classes" => false]);
                $portlet_for_view[$view_name] = $settings;
            }
        } elseif ($view_name === 'title') {
            $portlet_for_view[$view_name] = $layout->get($model_name);;
        } else {
            $portlet_for_view[$view_name] = $portlet->get($model_name);
        }
    }

    // Assign Portlet Display Infomation
    $t->assign('portlet', $portlet_for_view);
} else {
    //Get Portal
    require_once('portal/portal_logic.csp');
    $system_portalLogic = GRN_Portal_SystemPortalLogic::getInstance();
    $portal =& $system_portalLogic->get($portal_id);

    //Evaluate Access Right of Portal
    require_once('portal/access_logic.csp');
    $access_logic = GRN_Portal_SystemPortalAccessLogic::getInstance();
    $access_logic->evaluateAccess($portal);

    //Evaluate Manage Right
    require_once('portal/manage_logic.csp');
    $manage_logic = GRN_Portal_SystemPortalManageLogic::getInstance();
    $manage_logic->evaluateManage($portal, true);

    // Create Parameter Translation Map
    $translation_map_portal = [
        'pid'   => '_id',      //Portal ID
        'title' => 'name',     //Portal Name
        'theme' => 'theme',    //Portal Theme
    ];

    // Do Parameter Translation
    $portal_for_view = [];
    foreach ($translation_map_portal as $view_name => $model_name) {
        if ($view_name === 'pid') {
            $portal_for_view[$view_name] = $portal->getOID();
        } elseif ($view_name === 'theme') {
            $portal_for_view[$view_name] = intval($portal->get($model_name));
        } else {
            $portal_for_view[$view_name] = $portal->get($model_name);
        }
    }

    // Assign Portlet Display Infomation
    $t->assign('portal', $portal_for_view);
    $t->assign('select_numbers', [1, 2, 3, 4, 5]);
}

//-- set page title and site position

// page title
global $G_portal_app_name;
$page_title = cb_msg('grn.portal.operation', 'display_modify',
    ['application_name' => $G_portal_app_name]);
$t->assign('page_title', $page_title);

// site position
$t->assign(
    'site_position', [
        [
            'page' => "portal/operation/view",
            'name' => grn_get_page_display_name('portal/operation/view'),
            'pid'  => $portal_id
        ],
        ['page' => "", 'name' => $page_title]
    ]
);


