<?php

//-- instantiate Smarty object
require_once("grn/smarty.csp");
$t = new GRN_Smarty;

if (strcasecmp(@ $_SERVER['REQUEST_METHOD'], 'POST') == 0) {
    //unset( $G_INPUT['add'] );

    $node_id = @ $G_INPUT['nid'];
    if (0 == strlen($node_id)) {
        assert('FALSE');
    }

    require_once('fw/session_manager.csp');
    $session_manager = CB_SessionManager::getInstance();

    $session_name = 'portal.system.privilege_add';
    $session =& $session_manager->getSession($session_name);

    require_once('_access_util.csp');

    $text = null;
    if (array_key_exists('text', $G_INPUT)) {
        $text = $G_INPUT['text'];
    }

    $func = $G_INPUT['func'];
    if ($func == 'search') {
        cb_redirect('portal/system/privilege_list',
            ['nid' => $node_id, 'poid' => $poid, 'text' => $text]);
    }

    $aid = $session->get('target_ids');
    if ( ! is_array($aid)) {
        cb_redirect('portal/system/privilege_list', $G_INPUT);
    }

    //Get System Portal Manage Logic
    require_once('portal/manage_logic.csp');
    $manage_logic = GRN_Portal_SystemPortalManageLogic::getInstance();

    //Get UUM Instance
    require_once('fw/uum_core.csp');
    $uum =& $G_container_base->getInstance('uum');

    require_once('grn/uum_util.csp');
    $uum_util = GRN_UumUtil::getInstance();
    $dynamic_roles = $uum_util->listDynamicRoles();

    $authorities = ['manage' => 1];
    foreach (array_keys($aid) as $item) {
        $ids = explode(':', $item);
        if (count($ids) < 2) {
            continue;
        }
        $id = $ids[1];
        switch ($ids[0]) {
            case 'user':
                if ( ! $uum->getUser($id)) {
                    cb_throw_error(E_GRN_PRTL_MANAGE_INVALID_TARGET_ID);
                }
                if ( ! $manage_logic->getManage($object_id, $ids[0], $ids[1])) {
                    $manage_logic->addManage($object_id,
                        GRN_PRTL_TARGET_TYPE_USER, $id, $authorities);
                }
                break;
            case 'group':
                if ( ! $uum->getGroup($id)) {
                    cb_throw_error(E_GRN_PRTL_MANAGE_INVALID_TARGET_ID);
                }
                if ( ! $manage_logic->getManage($object_id, $ids[0], $ids[1])) {
                    $manage_logic->addManage($object_id,
                        GRN_PRTL_TARGET_TYPE_GROUP, $id, $authorities);
                }
                break;
            case 'static_role':
                if ( ! $uum->getStaticRole($id)) {
                    cb_throw_error(E_GRN_PRTL_MANAGE_INVALID_TARGET_ID);
                }
                if ( ! $manage_logic->getManage($object_id, $ids[0], $ids[1])) {
                    $manage_logic->addManage($object_id,
                        GRN_PRTL_TARGET_TYPE_STATIC_ROLE, $id, $authorities);
                }
                break;
            case 'dynamic_role':
                if ( ! (array_key_exists($id, $dynamic_roles))) {
                    cb_throw_error(GRN_PRTL_TARGET_TYPE_DYNAMIC_ROLE);
                }
                if ( ! $manage_logic->getManage($object_id, $ids[0], $ids[1])) {
                    $manage_logic->addManage($object_id,
                        GRN_PRTL_TARGET_TYPE_DYNAMIC_ROLE, $id, $authorities);
                }
                break;
        }
    }

    $params = $G_INPUT;
    unset($params['aid']);
    unset($params['search']);
    unset($params['func']);
    cb_redirect('portal/system/privilege_list', $params);
}

