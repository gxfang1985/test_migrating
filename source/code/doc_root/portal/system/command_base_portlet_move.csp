<?php

// Check HTTP-POST Method
if (strcasecmp(@ $_SERVER['REQUEST_METHOD'], 'POST') == 0) {
    // instantiate an Smarty object
    require_once("grn/smarty.csp");
    $t = new GRN_Smarty;

    // Create Parameter Translation Map
    $translation_map = [
        'pid'      => '_pid',        //Portal ID
        'plid'     => '_plid',       //Layout ID
        'position' => 'position',    //Portlet Position
    ];

    // Do Parameter Translation
    $properties = [];
    foreach ($translation_map as $view_name => $model_name) {
        if ($view_name === 'plid') {
            $properties[$model_name] = @ str_replace('pp_', '',
                $G_INPUT[$view_name]);
        } else {
            $properties[$model_name] = @ $G_INPUT[$view_name];
        }
    }

    //Get Target Portal Column Item
    require_once('portal/portal_logic.csp');
    $system_portallogic = GRN_Portal_SystemPortalLogic::getInstance();
    $column_items
        =& $system_portallogic->getColumnItemsWithoutPrivilege($properties['_pid']);

    //Remove Target Layout from Result Column Items
    $target_layout = null;
    $target_column_key = null;
    $target_layout_key = null;
    $result_column_items = [];
    foreach (array_keys($column_items) as $column_key) {
        $layout_items =& $column_items[$column_key];
        foreach (array_keys($layout_items) as $layout_key) {
            $layout_id = $layout_items[$layout_key]->getOID();
            if ($layout_id !== $properties['_plid']) {
                $result_column_items[$column_key][$layout_key]
                    =& $layout_items[$layout_key];
            } else {
                $target_layout =& $layout_items[$layout_key];
                $target_column_key = $column_key;
                $target_layout_key = $layout_key;
            }
        }
    }


    //Add Target Layout to Result Column Items
    if (is_object($target_layout)) {
        switch ($properties['position']) {
            case 'top':
                $result_column_items[0][] =& $target_layout;
                break;
            case 'left';
                $result_column_items[1][] =& $target_layout;
                break;
            case 'center';
                $result_column_items[2][] =& $target_layout;
                break;
            case 'right';
                $result_column_items[3][] =& $target_layout;
                break;
        }
    }

    // Set Target Portal Column Items
    $layout_list = $system_portallogic->setColumnItems($properties['_pid'],
        $result_column_items);

    //Check Inspection Message Enabled
    require_once('portal/inspection.csp');
    $inspection = GRN_Portal_Template_Portal_Inspection::getInstance();
    if ($inspection->isEnabled()) {
        //Get Portal Name
        require_once('portal/portal_logic.csp');
        $system_portallogic = GRN_Portal_SystemPortalLogic::getInstance();
        $portal =& $system_portallogic->get($properties['_pid']);
        $portal_name = $portal->get('name');

        //Get Portlet Name
        $layout =& $target_layout;
        $layout_id = $layout->getOID();;
        $portlet =& $layout->get(GRN_PRTL_PROPERTY_PORTLET);
        $portlet_id = $portlet->getOID();;
        $type = $portlet->get('type');
        if ($type === GRN_PRTL_PORTLET_TYPE_HTML
            || $type === GRN_PRTL_PORTLET_TYPE_PHP
        ) {
            require_once('portal/system_portlet_logic.csp');
            $system_portletlogic_base
                = GRN_Portal_SystemPortletLogicBase::getInstance();
            $portlet_name = $system_portletlogic_base->getDisplayName($portlet,
                $layout);
        } else {
            require_once('portal/system_portlet_logic.csp');
            $embeded_portallogic
                = GRN_Portal_SystemEmbeddedPortletLogic::getInstance();
            $portlet_name = $embeded_portallogic->getDisplayName($portlet,
                $layout);
        }

        //Write Inspection Message
        $message_type = 'template_portal_portlet_move';
        $message_args = [
            'pid'          => $properties['_pid'],
            'plid'         => $layout_id,
            'ppid'         => $portlet_id,
            'portlet_name' => $portlet_name,
            'layout'       => $properties['position'],
        ];
        $inspection->record($message_type, $message_args);
    }

    //Redirect Next Page
    cb_redirect('portal/system/base_view', ['pid' => $properties['_pid']]);
}


