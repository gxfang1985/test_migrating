<?php

// Check HTTP-POST Method
if (strcasecmp(@ $_SERVER['REQUEST_METHOD'], 'POST') == 0) {
    // instantiate an Smarty object
    require_once("grn/smarty.csp");
    $t = new GRN_Smarty;

    // Create Parameter Translation Map
    $translation_map = [
        'oid'   => 'oid',
        's_pid' => 'pid',
    ];

    // Do Parameter Translation
    $properties = [];
    foreach ($translation_map as $view_name => $model_name) {
        $properties[$model_name] = @ $G_INPUT[$view_name];
    }

    //Check Portal ID
    $properties['pid'] = $properties['pid'] ? $properties['pid'] : 0;

    // Set Organization Portal ID
    require_once('portal/system_logic.csp');
    $portal_systemlogic = GRN_Portal_SystemLogic::getInstance();
    $portal_systemlogic->setOrganizationLoginPortal($properties['oid'],
        $properties['pid']);

    //Check Inspection Message Enabled
    require_once('portal/inspection.csp');
    $inspection = GRN_Portal_System_Portal_Inspection::getInstance();
    if ($inspection->isEnabled()) {
        //Get Portal
        require_once('portal/portal_logic.csp');
        if ($properties['pid'] != 0) {
            $system_portal_logic = GRN_Portal_SystemPortalLogic::getInstance();
            $portal
                =& $system_portal_logic->get($properties['pid']);
            $portal_id = $portal->getOID();
            $portal_name = $portal->get('name');
        } else {
            $portal_id = 0;
            $portal_name = cb_plain_msg('grn.portal', 'no_setting');
        }

        //Get Group
        global $G_container_base;
        $uum =& $G_container_base->getInstance('uum');
        if ($properties['oid'] == 0) {
            $group_name = '(root)';
            $group_id = 0;
        } else {
            $group =& $uum->getGroup($properties['oid']);
            $group_name = $group->get('name');
            $group_id = $group->getOID();
        }


        //Write Inspection Message
        $message_type = 'portal_firstview_modify';
        $message_args = [
            'pid'         => $portal_id,
            'pgd'         => $group_id,
            'portal_name' => $portal_name,
            'group_name'  => $group_name
        ];
        $inspection->record($message_type, $message_args);
    }

    cb_redirect('portal/system/first_portal_list',
        ['oid' => $properties['oid']]);
}

