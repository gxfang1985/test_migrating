<?php

// Check HTTP-POST Method
use grn\grn\access\service\AppAccess;

if (strcasecmp(@ $_SERVER['REQUEST_METHOD'], 'POST') == 0) {
    // instantiate an Smarty object
    require_once("grn/smarty.csp");
    $t = new GRN_Smarty;

    $CIDs = @ $G_INPUT['s_CID'];
    $G_INPUT['s_CID'] = '';
    if (is_array($CIDs)) {
        //Exclude Null CID
        foreach (array_keys($CIDs) as $index) {
            if ($CIDs[$index] == "") {
                unset($CIDs[$index]);
            }
        }

        //Check Array Count
        if (count($CIDs) > 0) {
            $G_INPUT['s_CID'] = 'dummy';
        }
    }

    // Validation check
    require_once('SmartyValidate.class.php');
    SmartyValidate::connect($t);
    $target_name = 'portal/system/portlet_add';
    SmartyValidate::register_form($target_name);

    // validate after a POST
    if (SmartyValidate::is_valid($G_INPUT, $target_name)) {
        // Create Parameter Translation Map
        $translation_map = [
            'pid'      => '_pid',
            'position' => 'position',
            'title'    => 'name',
            's_CID'    => '_ppid',
            'index'    => 'index',
        ];

        // Do Parameter Translation
        $properties = [];
        foreach ($translation_map as $view_name => $model_name) {
            if ($view_name == 's_CID') {
                $properties[$model_name] = @ $CIDs;
            } else {
                $properties[$model_name] = @ $G_INPUT[$view_name];
            }
        }

        //Get Target Portal Column Item
        require_once('portal/portal_logic.csp');
        $system_portallogic = GRN_Portal_SystemPortalLogic::getInstance();

        if (is_array($properties['_ppid']) && count($properties['_ppid']) > 0) {
            foreach ($properties['_ppid'] as $portletType) {
                $app_id
                    = $system_portallogic->getApplicationIdFromPorletType($portletType);
                AppAccess::checkAccess($app_id, cb_get_login_user()->getOID());
            }
        }

        $column_items
            =& $system_portallogic->getColumnItemsWithoutPrivilege($properties['_pid']);
        $column_item = [];
        switch ($properties['position']) {
            case 'top':
                $column_item =& $column_items['0'];
                break;
            case 'left':
                $column_item =& $column_items['1'];
                break;
            case 'center':
                $column_item =& $column_items['2'];
                break;
            case 'right':
                $column_item =& $column_items['3'];
                break;
        }

        // Add Portal Infomation To Column Item
        if (is_array($column_item)) {
            $all_count = count($column_item) + count($properties['_ppid']);
            for ($i = 0; $i < $all_count; $i++) {
                if ($i == $properties['index']) {
                    foreach ($properties['_ppid'] as $portlet_id) {
                        $portlet_info = [$portlet_id => $properties['name']];
                        $new_column_item[$i] = $portlet_info;
                        $i++;
                    }
                    $i--;
                } else {
                    $new_column_item[$i] = current($column_item);
                    next($column_item);
                }
            }
        } else {
            foreach ($properties['_ppid'] as $portlet_id) {
                $portlet_info = [$portlet_id => $properties['name']];
                $new_column_item[] = $portlet_info;
            }
        }
        $column_item = $new_column_item;


        // Set Target Portal Column Items
        $layout_list = $system_portallogic->setColumnItems($properties['_pid'],
            $column_items);

        //Check Inspection Message Enabled
        require_once('portal/inspection.csp');
        $inspection = GRN_Portal_System_Portal_Inspection::getInstance();
        if ($inspection->isEnabled()) {
            //Get Portal Name
            require_once('portal/portal_logic.csp');
            $system_portallogic = GRN_Portal_SystemPortalLogic::getInstance();
            $portal
                =& $system_portallogic->get($properties['_pid']);
            $portal_name = $portal->get('name');

            //Get Portlet Name
            foreach (array_keys($layout_list) as $layout_id) {
                $layout =& $layout_list[$layout_id];
                $portlet =& $layout->get(GRN_PRTL_PROPERTY_PORTLET);
                $portlet_id = $portlet->getOID();
                $type = $portlet->get('type');
                if ($type === GRN_PRTL_PORTLET_TYPE_HTML
                    || $type === GRN_PRTL_PORTLET_TYPE_PHP
                ) {
                    require_once('portal/system_portlet_logic.csp');
                    $system_portletlogic_base
                        = GRN_Portal_SystemPortletLogicBase::getInstance();
                    $portlet_name
                        = $system_portletlogic_base->getDisplayName($portlet,
                        $layout);
                } else {
                    require_once('portal/system_portlet_logic.csp');
                    $embeded_portallogic
                        = GRN_Portal_SystemEmbeddedPortletLogic::getInstance();
                    $portlet_name
                        = $embeded_portallogic->getDisplayName($portlet,
                        $layout);
                }

                //Write Inspection Message
                $message_type = 'portal_portlet_add';
                $message_args = [
                    'pid'          => $properties['_pid'],
                    'plid'         => $layout_id,
                    'ppid'         => $portlet_id,
                    'portal_name'  => $portal_name,
                    'portlet_name' => $portlet_name,
                    'layout'       => $properties['position'],
                ];
                $inspection->record($message_type, $message_args);
            }
        }

        // the validation session is finished
        SmartyValidate::unregister_form($target_name);

        //Redirect Next Page
        cb_redirect('portal/system/view', ['pid' => $properties['_pid']]);
    } else {
        //include sharing codes with command_*
        include('_portlet_add.csp');

        //Assign Template Name
        $t->setPageInfo($target_name);

        //Display Previous Page
        $t->display($target_name . '.tpl');
    }
}


