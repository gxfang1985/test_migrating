<?php

use grn\grn\access\service\AppAccess;
use grn\portal\PortalLayout;

global $G_INPUT;

// instantiate an Smarty object
require_once("grn/smarty.csp");
$t = new GRN_Smarty;

//Set Application Name
require_once('grn/application.csp');
$locator = GRN_ApplicationLocator::instance();
$t->assign('app_name', $locator->getName('portal'));
$login = cb_get_login_user();
$app_ids_availability = AppAccess::getAvailableAppIdsByUserId($login->getOID());
$portal_send = true;
if ( ! in_array('message', $app_ids_availability)
     && ! in_array('mail', $app_ids_availability)
) {
    $portal_send = false;
}

//Get Portal ID
$selected_portal_id = @ $G_INPUT['pid'];
$selected_portal = null;

//Get Portal & Portlet Controller Utility
require_once('portal/controller_util.csp');
$portal_util = GRN_Portal_Portal_Controller_Utility::getInstance();
$portlet_group_util
    = GRN_Portal_Portlet_Group_Controller_Utility::getInstance();

// Create Parameter Translation Map for Portal
$translation_map_portal = [
    'pid'   => '_id',          //Portal ID
    'title' => 'name',     //Portal Name
    'open'  => 'is_open',  //Portal Open Flag
];

//Get Portal View Information
$portal_util->setType(GRN_PRTL_VIEW_TYPE_SYSTEM);
$system_portal_list_for_view
    = $portal_util->getListView($translation_map_portal, true, true, true,
    false, false, CB_DATABASE_NO_LOCK, false);
$portal_util->setType(GRN_PRTL_VIEW_TYPE_PERSONAL);
$personal_portal_list_for_view
    = $portal_util->getListView($translation_map_portal,
    false, false, true, false, false, CB_DATABASE_NO_LOCK, false);
$portal_list_for_view = $system_portal_list_for_view
                        + $personal_portal_list_for_view;

// Assign Portal Display Infomation
$t->assign('portal_menu', ['portal' => $portal_list_for_view]);

//Get or Set Current Portal From Session
if (is_null($selected_portal_id)
    || ! array_key_exists($selected_portal_id, $portal_list_for_view)
) {
    //Get Current Portal From Session
    require_once("portal/portal_information_logic_base.csp");
    $portal_utility_information_logic_base
        = GRN_Portal_Portal_Utility_Information_Logic_Base::getInstance();
    $selected_portal_id
        = $portal_utility_information_logic_base->getCurrentPortalID($portal_list_for_view);
    if (is_null($selected_portal_id)
        || ! array_key_exists($selected_portal_id, $portal_list_for_view)
    ) {
        if (count($portal_list_for_view) != 0) {
            $portal_list_for_view_keys = array_keys($portal_list_for_view);
            $selected_portal_id = current($portal_list_for_view_keys);
        }
    }
} else {
    //Set Current Portal From Session
    require_once("portal/portal_information_logic_base.csp");
    $portal_utility_information_logic_base
        = GRN_Portal_Portal_Utility_Information_Logic_Base::getInstance();
    $portal_utility_information_logic_base->setCurrentPortalID($selected_portal_id);
}

//Get Selected Portal Layout
if ( ! is_null($selected_portal_id)
     && array_key_exists($selected_portal_id, $portal_list_for_view)
) {
    $portalLayout = new PortalLayout($selected_portal_id);

    // Create Parameter Translation Map for Portal Layout
    $translation_map_portal_layout = [
        'pid'               => 'portal_id',
        //Portal ID
        'ppid'              => 'portlet_id',
        //Portlet  ID
        'plid'              => 'layout_id',
        //Portlet Layout ID
        'title'             => 'layout_title_name',
        //Portlet Layout Display Name
        'type'              => 'portlet_type',
        //Portlet Type
        'version'           => 'portlet_version',
        //Portlet Version
        'set_template'      => 'portlet_set_template',
        //Portlet Setting Template
        'view_template'     => 'portlet_view_template',
        //Portlet View Template
        'settings'          => 'layout_settings',
        //Portlet Settings
        'source'            => 'portlet_source',
        //Portlet Source (Only HTML/PHP Portlet)
        'open'              => 'layout_is_open',
        //Portlet Open Flag
        'display_name_mode' => 'layout_display_name_mode',
        //Portlet Display Name Mode
    ];

    //Get Column List
    if (array_key_exists($selected_portal_id, $system_portal_list_for_view)) {
        $portal_util->setType(GRN_PRTL_VIEW_TYPE_SYSTEM);
    } else {
        $portal_util->setType(GRN_PRTL_VIEW_TYPE_PERSONAL);
    }
    $column_list_for_view = $portal_util->getColumnListView($selected_portal_id,
        $translation_map_portal_layout, true, true, true, false,
        CB_DATABASE_NO_LOCK, false);

    //Convert Column List To Portal Layout
    $portal_layout_for_view = [];
    foreach (array_keys($column_list_for_view) as $column_type) {
        $key = 'layout_' . $column_type;
        foreach (
            array_keys($column_list_for_view[$column_type]) as
            $portlet_layout_id
        ) {
            $column = $column_list_for_view[$column_type][$portlet_layout_id];
            if ( ! $portal_send) {
                $app_id = explode(".", $column['type']);
                if ($app_id[1] == 'portal' && $app_id[2] == 'send') {
                    continue;
                }
            }
            $portal_layout_for_view[$key] ['portlet'][$column['plid']]
                = $column;
        }
    }

    $t->assign('fixed', $portalLayout->isFixedWidth());
    $t->assign('portal_layout', $portalLayout->getLayoutSettings());

    // Assign Portal Layout Display Infomation
    $t->assign('portlet_layout', $portal_layout_for_view);
}

//Get JavaScript Identifier Value List
require_once('grn/sso.csp');
$sso_service = GRN_SSO_Service::getInstance();
$javascript_identifier_value_list
    = $sso_service->getJavaScriptIdentifierValueList();

// Assign JavaScript Identifier Value List
$t->assign('javascript_identifier_value_list',
    $javascript_identifier_value_list);

//Check Portal Manager and My Portal Manager
$is_portal_manager = false;
$is_my_portal_manager = false;
if ( ! is_null($selected_portal_id)) {
    if (array_key_exists($selected_portal_id, $system_portal_list_for_view)) {
        $portal_util->setType(GRN_PRTL_VIEW_TYPE_SYSTEM);
        $selected_portal = $portal_util->getView($selected_portal_id,
            ['pid' => '_id'], true, true, true, true, false,
            CB_DATABASE_NO_LOCK, false);
        if (count($selected_portal) != 0) {
            $is_portal_manager = true;
        }
    } else {
        $portal_util->setType(GRN_PRTL_VIEW_TYPE_PERSONAL);
        $selected_portal = $portal_util->getView($selected_portal_id,
            ['pid' => '_id'], true, true, true, true, false,
            CB_DATABASE_NO_LOCK, false);
        if (count($selected_portal) != 0) {
            $is_my_portal_manager = true;
        }
    }
}

//Check Portlet Group Manager
$is_portlet_group_manager = false;
$portlet_group_util->setType(GRN_PRTL_VIEW_TYPE_SYSTEM);
$manage_portlet_group_list = $portlet_group_util->getListView(['pgid' => '_id'],
    true, false, CB_DATABASE_NO_LOCK, false);
if (count($manage_portlet_group_list) != 0) {
    $is_portlet_group_manager = true;
}

//Assign Portal and Portlet Group Manager Flag
$t->assign('is_portal_manager', $is_portal_manager);
$t->assign('is_my_portal_manager', $is_my_portal_manager);
$t->assign('is_portlet_group_manager', $is_portlet_group_manager);

require_once('portal/access_logic.csp');
$myPortalAccessLogic = GRN_Portal_MyPortalAccessLogic::getInstance();
$t->assign('is_my_portal_evaluate',
    $myPortalAccessLogic->evaluateAccess(false));

//-- set page title and site position

// Selected Portal ID
$t->assign('selected_pid', $selected_portal_id);

// page title
if ($selected_portal_id) {
    $page_title = $portal_list_for_view[$selected_portal_id]['title'];
} else {
    $page_title = $locator->getName('portal');
}
$t->assign('page_title', $page_title);

// site position
$t->assign(
    'site_position', [
        ['page' => "", 'name' => ""]
    ]
);

// check can D&D schedule

require_once('schedule/view_util.csp');
$util = GRN_Schedule_View_Util::getInstance();
if ($util->getUsingDragDropSchedule($login)) {
    $t->assign('enable_dragdrop', true);
} else {
    $t->assign('enable_dragdrop', false);
}

// Display Smarty Template
$doc_name = cb_get_pagename();
$t->display("{$doc_name}.tpl");


