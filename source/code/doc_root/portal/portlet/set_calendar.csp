<?php

require_once('portal/error_code.csp');
if ( ! isset($portlet)) {
    cb_throw_error(E_GRN_PRTL_PORTLET_INVALID_ACCESS);
}

//Get Smarty Instance
require_once('grn/smarty.csp');
$t = new GRN_Smarty;

//Get Portlet Settings
$portlet_settings = [];
if (array_key_exists('settings', $portlet)) {
    $portlet_settings =& $portlet['settings'];
}

//Set Default Portlet Setting
if ( ! array_key_exists('font_size', $portlet_settings)) {
    $portlet_settings['font_size'] = 'normal';              //Default Font Size
}

//Create Font Options Array
global $G_portal_app_name;
$font_options = [
    [
        'value' => 'small',
        'label' => cb_msg('grn.portal', 'font_size_small',
            ['app_name' => $G_portal_app_name])
    ],
    [
        'value' => 'normal',
        'label' => cb_msg('grn.portal', 'font_size_normal',
            ['app_name' => $G_portal_app_name])
    ],
    [
        'value' => 'large',
        'label' => cb_msg('grn.portal', 'font_size_large',
            ['app_name' => $G_portal_app_name])
    ],
];
$font_size = @$portlet['settings']['font_size'];
switch ($font_size) {
    case 'small':
        $font_options[0]['selected'] = true;
        break;
    case 'normal':
        $font_options[1]['selected'] = true;
        break;
    case 'large':
        $font_options[2]['selected'] = true;
        break;
    default:
        $font_options[1]['selected'] = true;
        break;
}

require_once('grn/calendar.csp');

$cm = GRN_CalendarManager::getInstance();
$calendars = $cm->listSystemCalendarNames();

foreach (array_keys($calendars) as $cid) {
    $for_view_calendars[$cid] = [
        'name'     => $calendars[$cid],
        'selected' => false
    ];
}

$selected = null;
if (array_key_exists('system_calendar', $portlet_settings)) {
    $selected = $portlet_settings['system_calendar'];
}

// 選択しているカレンダーが存在しない場合
if (is_null($selected) || ! array_key_exists($selected, $for_view_calendars)) {
    $c =& $cm->getSystemCalendar(GRN_CALENDAR_SYSTEM_DEFAULT);
    $selected = $c->getOID();
}

$portlet_settings['system_calendar'] = $selected;
$for_view_calendars[$selected]['selected'] = true;

$cs = GRN_CalendarService::getInstance();

$extensions = $cs->listExtensions();
$for_view_extensions = [];
foreach ($extensions as $extension) {
    $logic =& $cs->getLogic($extension);
    $config
        = $logic->getDisplayItemInfo($portlet_settings[$extension]);
    $for_view_extensions[$extension] = $config;
}

//Create Month Type Options Array
$month_type_options = [
    ['value' => '0', 'label' => cb_msg('grn.portal', 'month_type_1')],
    ['value' => '1', 'label' => cb_msg('grn.portal', 'month_type_2_1')],
    ['value' => '2', 'label' => cb_msg('grn.portal', 'month_type_2_2')],
    ['value' => '3', 'label' => cb_msg('grn.portal', 'month_type_3_1')],
    ['value' => '4', 'label' => cb_msg('grn.portal', 'month_type_3_2')],
    ['value' => '5', 'label' => cb_msg('grn.portal', 'month_type_3_3')],
];
$month_type = @$portlet['settings']['month_type'];
switch ($month_type) {
    case '0':
        $month_type_options[0]['selected'] = true;
        break;
    case '1':
        $month_type_options[1]['selected'] = true;
        break;
    case '2':
        $month_type_options[2]['selected'] = true;
        break;
    case '3':
        $month_type_options[3]['selected'] = true;
        break;
    case '4':
        $month_type_options[4]['selected'] = true;
        break;
    case '5':
        $month_type_options[5]['selected'] = true;
        break;
    default:
        $month_type_options[0]['selected'] = true;
        break;
}

// Assign View Infomation
//Assign include_php Parameter
$t->assign('portlet', $portlet);
$t->assign('display', $display);

// Assign Font Options
$t->assign('font_options', $font_options);

////////////////////
//  固有情報
////////////////////
$t->assign('calendars', $for_view_calendars);
$t->assign('extensions', $for_view_extensions);
$t->assign('month_type_options', $month_type_options);

// Ignore Licence Warnning
$t->skipWarning();

// Display Smarty Template
$t->display('portal/portlet/set_calendar.tpl');


