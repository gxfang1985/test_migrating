<?php

// Evaluate access of My portal function.
require_once('portal/access_logic.csp');
$myportal_logic = GRN_Portal_MyPortalAccessLogic::getInstance();
$myportal_logic->evaluateAccess();

// Check HTTP-POST Method
if (strcasecmp(@ $_SERVER['REQUEST_METHOD'], 'POST') == 0) {
    // instantiate an Smarty object
    require_once("grn/smarty.csp");
    $t = new GRN_Smarty;

    // Create Parameter Translation Map
    $translation_map = [
        'eid' => '_id',
    ];

    // Do Parameter Translation
    $properties = [];
    foreach ($translation_map as $view_name => $model_name) {
        $properties[$model_name] = @ $G_INPUT[$view_name];
    }

    //Delete Selected or All My Portlet
    require_once('portal/portal_logic.csp');
    $my_portallogic = GRN_Portal_MyPortalLogic::getInstance();
    $portal_list = $my_portallogic->getlist();
    foreach ($properties['_id'] as $_id) {
        if (array_key_exists($_id, $portal_list)) {
            //Check Inspection Message Enabled
            require_once('portal/inspection.csp');
            $inspection = GRN_Portal_My_Portal_Inspection::getInstance();
            if ($inspection->isEnabled()) {
                //Get Delete Portal Name for Inspection Message
                require_once('portal/portal_logic.csp');
                $my_portal_logic = GRN_Portal_MyPortalLogic::getInstance();
                $portal =& $my_portal_logic->get($_id);
                $portal_name = $portal->get('name');
            }

            //Delete Portal
            $my_portallogic->delete($_id);

            //Check Inspection Message Enabled
            if ($inspection->isEnabled()) {
                //Write Inspection Message
                $message_type = 'my_portal_delete';
                $message_args = ['pid' => $_id, 'portal_name' => $portal_name];
                $inspection->record($message_type, $message_args);
            }
        }
    }

    cb_redirect('portal/personal/list');

}
