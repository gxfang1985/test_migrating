<?php

use grn\grn\access\service\AppAccess;

// instantiate an Smarty object
require_once("grn/smarty.csp");
$t = new GRN_Smarty;

global $G_state_set;
$G_state_set->set('copyright_should_be_written', false);
$G_state_set->set('html_should_be_closed', false);

$app_ids_availability
    = AppAccess::getAvailabilityAppIdsInternalByUserId(cb_get_login_user()->getOID());
$license_re_wf = null;
$portal_send = true;
if ( ! array_key_exists('message', $app_ids_availability)
     || ! $app_ids_availability['message']
) {
    if ( ! array_key_exists('mail', $app_ids_availability)
         || ! $app_ids_availability['mail']
    ) {
        $portal_send = false;
    }
}

if ( ! AppAccess::isAppAvailableExternalAccess('message')
     && ! AppAccess::isAppAvailableExternalAccess('mail')
) {
    $portal_send = false;
}

//Get Portal ID
$portal_id = @ $G_INPUT['pid'];

// Evaluate access of My portal function.
require_once('portal/access_logic.csp');
$myportal_logic = GRN_Portal_MyPortalAccessLogic::getInstance();
$myportal_logic->evaluateAccess();

//Get My Portal
require_once('portal/portal_logic.csp');
$my_portal_logic = GRN_Portal_MyPortalLogic::getInstance();
$portal =& $my_portal_logic->get($portal_id);

//Get Column Items
$column_items =& $my_portal_logic->getColumnItems($portal_id);

// Create Parameter Translation Map for Portal
$translation_map_portal = [
    'pid'   => '_id',          //Portal ID
    'title' => 'name',         //Portal Name
];

// Create Parameter Translation Map for Portal Layout
$translation_map_portal_layout = [
    'pid'               => '_id',
    //Portal ID
    'ppid'              => '_id',
    //Portlet layout ID
    'plid'              => '_id',
    //Portlet ID
    'title'             => 'display_name',
    //Portlet Title
    'type'              => 'type',
    //Portlet Type
    'version'           => 'version',
    //Portlet Version
    'set_template'      => 'set_template',
    //Portlet Setting Template
    'view_template'     => 'view_template',
    //Portlet View Template
    'settings'          => 'settings',
    //Portlet Settings
    'source'            => 'source',
    //Portlet Source (Only HTML/PHP Portlet)
    'display_name_mode' => 'display_name_mode',
    //Portlet Display Name Mode
];

// Do Parameter Translation for Portal
$portal_for_view = [];
foreach ($translation_map_portal as $view_name => $model_name) {
    if ($view_name === 'pid') {
        $portal_for_view[$view_name] = $portal->getOID();
    } else {
        $portal_for_view[$view_name] = $portal->get($model_name);
    }
}

//Get Embedded Portlet Logic
require_once('portal/system_portlet_logic.csp');
$embedded_portlet_logic = GRN_Portal_SystemEmbeddedPortletLogic::getInstance();

$column_items_for_view = [];
// Do Parameter Translation for Portal Layout
foreach ($column_items as $column_key => $column_item) {
    $layout_items =& $column_item;

    $layout_items_for_view = [];
    foreach ($layout_items as $layout_item) {
        $layout_item_for_view = [];
        $portlet =& $layout_item->get('portlet');

        $app_id = explode(".", $portlet->get('type'));
        if (array_key_exists($app_id[1], $app_ids_availability)) {
            if ( ! $app_ids_availability[$app_id[1]]) {
                continue;
            }
            if (($app_id[1] === 'workflow' || $app_id[1] == 'report')) {
                if ( ! isset($license_re_wf)) {
                    $license_re_wf = $locator->isLicensed($app_id[1]);
                }
                if ( ! $license_re_wf) {
                    continue;
                }
            }
        }
        if ( ! AppAccess::isAppAvailableExternalAccess($app_id[1])) {
            continue;
        }
        if ( ! $portal_send) {
            if ($app_id[1] == 'portal' && $app_id[2] == 'send') {
                continue;
            }
        }

        foreach ($translation_map_portal_layout as $view_name => $model_name) {
            if ($view_name === 'pid') {
                $layout_item_for_view[$view_name] = $portal_id;
            } elseif ($view_name === 'ppid') {
                $layout_item_for_view[$view_name] = $portlet->getOID();
            } elseif ($view_name === 'plid') {
                $layout_item_for_view[$view_name] = $layout_item->getOID();
            } elseif ($view_name === 'settings') {
                $serialized_settings = $layout_item->get($model_name);
                if ($serialized_settings) {
                    $layout_item_for_view[$view_name]
                        = @cb_unserialize($serialized_settings,
                        ["allowed_classes" => false]);
                }
            } elseif ($view_name === 'title') {
                $portlet_type = $portlet->get('type');
                if ($portlet_type === GRN_PRTL_PORTLET_TYPE_HTML
                    || $portlet_type === GRN_PRTL_PORTLET_TYPE_PHP
                ) {
                    $layout_item_for_view[$view_name]
                        = $portlet->get($model_name);
                } else {
                    $layout_item_for_view[$view_name]
                        = $embedded_portlet_logic->getDisplayName($portlet,
                        $layout_item);
                }
            } elseif ($view_name === 'display_name_mode') {
                $layout_item_for_view[$view_name]
                    = $layout_item->get($model_name);
            } else {
                $layout_item_for_view[$view_name] = $portlet->get($model_name);
            }
        }

        $layout_items_for_view[$layout_item_for_view['plid']]
            = $layout_item_for_view;
    }

    $column_item_for_view =& $layout_items_for_view;
    $key = 'layout_' . $column_key;
    $column_items_for_view[$key] = ['portlet' => $column_item_for_view];
}

// Assign Portal Display Infomation
$t->assign('portal', $portal_for_view);

// Assign Portal Layout Display Infomation
$t->assign('portlet_layout', $column_items_for_view);

//layout setting
$poralLayout = new \grn\portal\PortalLayout($portal_id);
$t->assign('fixed', $poralLayout->isFixedWidth());
$t->assign('portal_layout', $poralLayout->getLayoutSettings());

//-- set page title and site position

// page title
$page_title = grn_get_current_page_display_name();
$t->assign('page_title', $page_title);

// Display Smarty Template
$t->display("portal/preview.tpl");


