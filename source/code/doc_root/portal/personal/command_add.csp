<?php

//Evaluate access of My portal function.
require_once('portal/access_logic.csp');
$myportal_logic = GRN_Portal_MyPortalAccessLogic::getInstance();
$myportal_logic->evaluateAccess();

// Check HTTP-POST Method
if (strcasecmp(@ $_SERVER['REQUEST_METHOD'], 'POST') == 0) {
    // instantiate an Smarty object
    require_once("grn/smarty.csp");
    $t = new GRN_Smarty;

    // Validation check
    require_once('SmartyValidate.class.php');
    SmartyValidate::connect($t);
    $target_name = 'portal/personal/add';
    SmartyValidate::register_form($target_name);

    // validate after a POST
    if (SmartyValidate::is_valid($G_INPUT, $target_name)) {
        // Create Parameter Translation Map
        $translation_map = [
            'title' => 'name',
        ];

        // Do Parameter Translation
        $properties = [];
        foreach ($translation_map as $view_name => $model_name) {
            $properties[$model_name] = @ $G_INPUT[$view_name];
        }

        //Add New My Portal
        require_once('portal/portal_logic.csp');
        $my_portallogic = GRN_Portal_MyPortalLogic::getInstance();
        $portal = $my_portallogic->add($properties['name']);

        // Get My Portlet Template ID
        require_once("portal/system_logic.csp");
        $system_logic = GRN_Portal_SystemLogic::getInstance();
        $my_portal_template_id = $system_logic->getMyPortaltemplate();

        //Get System Portal
        require_once("portal/portal_logic.csp");
        $system_portallogic = GRN_Portal_SystemPortalLogic::getInstance();
        $portal_list = $system_portallogic->getList();

        //Check My Portal Template Available
        if ($my_portal_template_id
            && array_key_exists($my_portal_template_id, $portal_list)
        ) {
            //Get My Portal Template Column Items
            $column_items
                =& $system_portallogic->getColumnItems($my_portal_template_id);

            //Create Result Column Items
            $result_column_items = [];
            foreach (array_keys($column_items) as $column_key) {
                $layout_items =& $column_items[$column_key];
                foreach (array_keys($layout_items) as $layout_key) {
                    $portlet
                        =& $layout_items[$layout_key]->get(GRN_PRTL_PROPERTY_PORTLET);

                    //Exclude Unavaliable MyPortal Portlet
                    if ($portlet->get(GRN_PRTL_PROPERTY_AVAILABLE_MYPORTAL)
                        !== '1'
                    ) {
                        continue;
                    }

                    $display_name
                        = $layout_items[$layout_key]->get(GRN_PRTL_PROPERTY_DISPLAY_NAME);
                    $portlet_key = 'p' . $portlet->getOID();
                    $display_name_mode
                        = $layout_items[$layout_key]->get(GRN_PRTL_PROPERTY_DISPLAY_NAME_MODE);
                    $result_column_items[$column_key][$layout_key]
                        = [
                        $portlet_key                        => $display_name,
                        GRN_PRTL_PROPERTY_DISPLAY_NAME_MODE => $display_name_mode
                    ];
                }
            }

            // Set Target Portal Column Items
            $portal->registerNow();
            $my_portallogic->setColumnItems($portal->getOID(),
                $result_column_items);
        }

        //Check Inspection Message Enabled
        require_once('portal/inspection.csp');
        $inspection = GRN_Portal_My_Portal_Inspection::getInstance();
        if ($inspection->isEnabled()) {
            //Write Inspection Message
            $message_type = 'my_portal_add';
            $message_args = [
                'pid'         => $portal->getOID(),
                'portal_name' => $portal->get('name')
            ];
            $inspection->record($message_type, $message_args);
        }

        // the validation session is finished
        SmartyValidate::unregister_form($target_name);

        //Redirect Next Page
        cb_redirect('portal/personal/list');
    } else {
        //include sharing codes with command_*
        include('_add.csp');

        //Assign Template Name
        $t->setPageInfo($target_name);

        //Display Previous Page
        $t->display($target_name . '.tpl');
    }

}

