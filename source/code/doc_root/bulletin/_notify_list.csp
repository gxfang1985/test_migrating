<?php

global $G_INPUT;

if ( ! isset($t) || ! is_a($t, 'GRN_Smarty')) {
    require_once("grn/smarty.csp");
    $t = new GRN_Smarty;
}

$category_id = GRN_BULLETIN_ROOT_CATEGORY_ID;

if (array_key_exists('cid', $G_INPUT) && strlen($G_INPUT['cid']) > 0
    && $G_INPUT['cid'] > 0
) {
    $category_id = $G_INPUT['cid'];
}
if (array_key_exists('nid', $G_INPUT) && strlen($G_INPUT['nid']) > 0
    && $G_INPUT['nid'] > 0
) {
    $category_id = $G_INPUT['nid'];
}
if (isset($node_id)) {
    $category_id = $node_id;
}

$t->assign('category_id', $category_id);

if ( ! ($category =& $G_bulletin->getCategory($G_bulletin_login,
    $category_id))
) {
    cb_throw_error(E_GRN_BULLETIN_CATEGORY_NOT_FOUND);
}

if ( ! isset($system_flg)) {
    $page_parts = explode('/', cb_get_pagename());
    $system_flg = (@$page_parts[1] === 'system');
}
$is_privilege = $system_flg ? true
    : $category->privileged($G_bulletin_login, ['operation']);
$t->assign('is_privilege', $is_privilege);

$node_for_view = [];
$node_for_view['nid'] = $category->getOID();
$node_for_view['name'] = $category->get('name');

require_once('grn/access_resources.csp');

$notify_list = [];

require_once('grn/uum_util.csp');
$uum_util = GRN_UumUtil::getInstance();
$dynamic_roles = $uum_util->listDynamicRoles();

$targets = $category->getNotificationTargets('dynamic_role');
foreach (array_keys($targets) as $id) {
    $item =& $items[$id];

    $notify_list[] = [
        'type' => GRN_ACCESS_TARGET_TYPE_DYNAMIC_ROLE,
        'name' => $dynamic_roles[$id]['name'],
        'key'  => $id,
        'tid'  => $id
    ];
}

$targets = $category->getNotificationTargets('role');
foreach (array_keys($targets) as $id) {
    $item =& $targets[$id];

    $notify_list[] = [
        'type' => GRN_ACCESS_TARGET_TYPE_STATIC_ROLE,
        'name' => $item->get('foreign_key'),
        'key'  => $item->get('foreign_key'),
        'tid'  => $id
    ];
}

$targets = $category->getNotificationTargets('group');
foreach (array_keys($targets) as $id) {
    $item =& $targets[$id];

    $notify_list[] = [
        'type' => GRN_ACCESS_TARGET_TYPE_GROUP,
        'name' => $item->get('name'),
        'key'  => $item->get('foreign_key'),
        'tid'  => $id
    ];
}

$targets = $category->getNotificationTargets('user');
$users_id = [];
foreach (array_keys($targets) as $id) {
    $item =& $targets[$id];
    $users_id[] = $id;

    $notify_list[] = [
        'type' => GRN_ACCESS_TARGET_TYPE_USER,
        'name' => $item->get('display_name'),
        'key'  => $item->get('foreign_key'),
        'tid'  => $id
    ];
}

$notify_for_view = [];
$notify_for_view['force'] = $category->get('force_notify');
$notify_for_view['list'] = $notify_list;
$notify_for_view['count'] = count($notify_list);

// GTM-529 tuning
global $G_container_base;
$uum = $G_container_base->getInstance('uum');
$login =& $uum->getLoginUser();

require_once('grn/controller.csp');
$users_info = GRN_ControllerUtil::getUserInfoToShowUserName($users_id, $login);
$t->assign('users_info', $users_info);
// GTM-529 tuning

//--N-navigation params
$ours_params = $G_INPUT;
unset($ours_params['reset']);

$poid = @ $G_INPUT['poid'];
$t->assign('poid', $poid);

// rhs organization information
require_once('grn/org_util.csp');
require_once('grn/org_util_search.csp');
// search
$text = null;
if (array_key_exists('text', $G_INPUT)) {
    $text = $G_INPUT['text'];
    $t->assign('text', $text);
}

$is_search = (strlen($text) > 0);
$t->assign('is_search', $is_search);

$poid = null;
if (isset($G_INPUT['poid'])) {
    $poid = $G_INPUT['poid'];
}
if ($poid === 'role' && $is_search) {
    unset($G_INPUT['poid']);
    $poid = null;
    $t->assign('poid', $poid);
}

if ($is_search) {
    $org_row = null;
    $org = [];
    if (0 < $poid) {
        $org_row =& grn_get_org_row($poid);
        $org =& grn_get_org_info($org_row, true);
        $org['ancestors'] =& grn_get_org_ancestors($org_row);
        $org['children'] =& grn_get_org_children($poid);
    } elseif (-1 == $poid) {
        $org_row =& grn_get_org_row('0');
        $org =& grn_get_org_info($org_row, true);
        $org['ancestors'] = $org_row;
        $org['children'] = null;
    } else {
        $org_row =& grn_get_org_row('0');
        $org =& grn_get_org_info($org_row, true);
        $org['ancestors'] = $org_row;
        $org['children'] =& grn_get_org_children('0');
        $poid = null;
    }

    $condition = grn_get_user_info_search_condition($poid, $text,
        $system_flg);
    $count = grn_get_user_info_search_count($poid, $condition);
    $org['navi_info'] = grn_get_user_navigation_info($count, $G_INPUT, 10);
    $org['user_list'] =& grn_search_user_info($poid, $condition,
        $org['navi_info']);
    unset($ours_params['text']);
    $t->assign('org', $org);
} else {
    $org =& grn_get_user_or_role_list($poid, $ours_params, 10);
    if ( ! array_key_exists('user_list', $org)) {
        $org['navi_info'] = grn_get_user_navigation_info(0, $G_INPUT, 10);
    }
    $t->assign('org', $org);
}

$t->assign('node', $node_for_view);
$t->assign('node_id', $category->getOID());
$t->assign('notify', $notify_for_view);
$t->assign('enable_force', 1);
unset($ours_params['poid']);
unset($ours_params['sp']);
$t->assign('ours_params', $ours_params);

