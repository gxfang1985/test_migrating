<?php

if (strcasecmp(@ $_SERVER['REQUEST_METHOD'], 'POST') == 0) {
    global $G_INPUT;

    if ( ! array_key_exists('nid', $G_INPUT)) {
        cb_throw_error(E_GRN_BULLETIN_CATEGORY_NOT_FOUND);
    }
    $node_id = $G_INPUT['nid'];

    if ( ! ($node_row =& $G_bulletin->getCategory($G_bulletin_login,
        $node_id))
    ) {
        cb_throw_error(E_GRN_BULLETIN_CATEGORY_NOT_FOUND);
    }

    $poid = @ $G_INPUT['poid'];


    $authorities = [
        'read'   => @ $G_INPUT['read'] ? 1 : 0,
        'write'  => @ $G_INPUT['write'] ? 1 : 0,
        'follow' => @ $G_INPUT['follow'] ? 1 : 0,
    ];

    // 閲覧権限がないのにほかの権限にチェックがあるのはエラー
    if ( ! $authorities['read']
         && ($authorities['write'] || $authorities['follow'])
    ) {
        cb_throw_error(E_GRN_BULLETIN_ACCESS_INVALID_ACCESS_TYPE);
    }

    $item_type = @ $G_INPUT['itype'];
    $item_tid = @ $G_INPUT['itid'];

    global $G_container_app;
    $uum =& $G_container_app->getInstance('uum');

    require_once('grn/access_resources.csp');

    switch ($item_type) {
        case GRN_ACCESS_TARGET_TYPE_USER:
            $target =& $uum->getUser($item_tid);
            break;
        case GRN_ACCESS_TARGET_TYPE_GROUP:
            $target =& $uum->getGroup($item_tid);
            break;
        case GRN_ACCESS_TARGET_TYPE_STATIC_ROLE:
            $target =& $uum->getStaticRole($item_tid);
            break;
        default:
            assert('is_string($item_tid)');
            $target = $item_tid;
            break;
    }

    require_once('bulletin/access.csp');
    $am = GRN_Bulletin_AccessManager::getInstance();

    // DBに入れるために値を変更
    $security_model = $am->getSecurityModel($node_row);
    if ($security_model == GRN_BULLETIN_SECURITY_MODEL_REVOKE) {
        foreach ($authorities as $key => $item) {
            $authorities[$key] = $item ? 0 : 1;
        }
    }

    if (array_sum($authorities) == 0) {
        // すべて0の場合は、DBから削除
        $am->deleteTarget($node_row, $target);
    } else {
        $am->modifyTarget($node_row, $target, $authorities, false);
    }
}

