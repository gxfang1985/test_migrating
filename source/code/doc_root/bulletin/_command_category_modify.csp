<?php
require_once('bulletin/resources.csp');

if (strcasecmp(@ $_SERVER['REQUEST_METHOD'], 'POST') == 0) {
    assert('isset($target_name)');

    global $G_INPUT;
    $input_properties = [
        'access_dropdown_selected'       => '',
        'cid'                            => '',
        'enable_copy_access'             => '',
        'enable_copy_notification'       => '',
        'foreign_key'                    => '',
        'memo'                           => '',
        'notification_dropdown_selected' => '',
    ];
    $input_properties = array_intersect_key($G_INPUT, $input_properties);
    require_once('fw/i18n.csp');
    $lang_list = CB_LanguageManager::getAvailableLanguages();
    $lang_list[] = CB_I18N_DEFUALT_LANGUAGE_CODE;
    $lang_list[] = 'edit';
    $lang_list[] = 'edit-lang';
    foreach ($lang_list as $lang) {
        $key = GRN_BULLETIN_ELEMENT_NAME_CATEGORY . '-' . $lang;
        if (isset($G_INPUT[$key])) {
            $input_properties[$key] = $G_INPUT[$key];
        }
    }

    // instantiate an Smarty object
    require_once("grn/smarty.csp");
    $t = new GRN_Smarty;

    //get language values
    $inputLocalNameArray
        = getMultiLanguageText(GRN_BULLETIN_ELEMENT_NAME_CATEGORY,
        $input_properties);

    // Validation check
    require_once('SmartyValidate.class.php');
    SmartyValidate::connect($t);
    SmartyValidate::register_form($target_name);

    // validate after a POST
    if (SmartyValidate::is_valid($input_properties, $target_name)) {
        $foreignKey = cb_at($input_properties, 'foreign_key');
        $memo = cb_at($input_properties, 'memo');
        $categoryId = cb_at($input_properties, 'cid');
        $enableAccessCopy = cb_at($input_properties,
            'enable_copy_access');
        $enableNotificationCopy = cb_at($input_properties,
            'enable_copy_notification');
        $accessCopySrc = cb_at($input_properties,
            'access_dropdown_selected');
        $notificationCopySrc = cb_at($input_properties,
            'notification_dropdown_selected');

        //Modify Category
        global $G_bulletin_login;
        require_once('bulletin/category.csp');
        $categoryMgr = GRN_Bulletin_CategoryManager::getInstance();
        $categoryMgr->modifyCategory($G_bulletin_login, $categoryId,
            $inputLocalNameArray, $foreignKey, $memo);

        if ( ! is_null($enableAccessCopy)) {
            require_once('bulletin/access.csp');
            $targetCategory = $categoryMgr->getCategory($G_bulletin_login,
                $categoryId);
            $accessMgr = GRN_Bulletin_AccessManager::getInstance();
            $accessMgr->copyAccess($accessCopySrc, [$targetCategory->getOID()]);
        }

        if ( ! is_null($enableNotificationCopy)) {
            require_once('bulletin/notification.csp');
            $targetCategory = $categoryMgr->getCategory($G_bulletin_login,
                $categoryId);
            $notificationMgr = GRN_Bulletin_NotificationManager::getInstance();
            $notificationMgr->copyNotification($notificationCopySrc,
                [$targetCategory->getOID()]);
        }

        // the validation session is finished
        SmartyValidate::unregister_form($target_name);

        _bulletin_rebuild_folder_tree($categoryId);

        $success = true;
    } else {
        $t->setPageInfo($target_name);
        $t->assign($input_properties);

        if ( ! array_key_exists('cid', $input_properties)) {
            cb_throw_error(E_GRN_BULLETIN_CATEGORY_NOT_FOUND);
        }
        $category_id = $input_properties['cid'];

        if ( ! ($category =& $G_bulletin->getCategory($G_bulletin_login,
            $category_id))
        ) {
            cb_throw_error(E_GRN_BULLETIN_CATEGORY_NOT_FOUND);
        }

        $t->assign('category_id', $category_id);

        // 親カテゴリ情報

        if (($parent = $category->get('parent'))) {
            $t->assign('parent_name', $parent->get('name'));

            $page_parts = explode('/', cb_get_pagename());
            $is_system = (cb_at($page_parts, 1) === 'system');
            $privileges = $parent->getPrivileges($G_bulletin_login);
            if ($privileges['operation'] || $is_system) {
                require_once('bulletin/folder_tree.csp');
                $params = [
                    'system'                  => $is_system,
                    'force_hide_notification' => true
                ];
                $tree = new GRN_Bulletin_FolderTree($params);
                $tree_for_access = $tree->getTreeForView($parent,
                    $is_system, 'tree_for_access',
                    'grn.page.category_form.access_dropdown.selectCategory');
                $tree_for_notification = $tree->getTreeForView($parent,
                    $is_system, 'tree_for_notification',
                    'grn.page.category_form.notification_dropdown.selectCategory');

                $t->assign('tree_for_access', $tree_for_access);
                $t->assign('tree_for_notification', $tree_for_notification);
                $t->assign('tree_params', $params);
            }
        }

        $multiLanguageInfoArray = [];
        $multiLanguageInfoArray['element_name']
            = GRN_BULLETIN_ELEMENT_NAME_CATEGORY;
        $multiLanguageInfoArray['values'] = $inputLocalNameArray;
        $t->assign('multiLanguageInfoArray', $multiLanguageInfoArray);

        // display は呼び出し元で呼ぶ
    }
}

