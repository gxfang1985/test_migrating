<?php

global $G_INPUT;

// ファイルが添付されたオブジェクトをセットしておくこと
assert('isset($owner)');
// ファイルオブジェクトをセットしておくこと
assert('isset($file)');

if ( ! isset($owner) || ! $owner || ! isset($file) || ! $file) {
    require_once('bulletin/error_code.csp');
    cb_throw_error(E_GRN_BULLETIN_FILE_NOT_FOUND);
}


if ( ! isset($t) || ! is_a($t, 'GRN_Smarty')) {
    require_once('grn/smarty.csp');
    $t = new GRN_Smarty();
}

if ( ! isset($utility) || ! is_a($utility, 'GRN_Bulletin_ControllerUtil')) {
    require_once('bulletin/controller.csp');
    $utility = new GRN_Bulletin_ControllerUtil();
}

// 引数をチェック
// インクルード元で変数がセットされていればそれを優先

if ( ! isset($category_id)) {
    $category_id = @ $G_INPUT['cid'];
}
if ( ! isset($article_id)) {
    $article_id = @ $G_INPUT['aid'];
}
if ( ! isset($follow_id)) {
    $follow_id = @ $G_INPUT['follow_id'];
}

$file_id = $file->getOID();


$t->assign('file_id', $file_id);


// ファイルリンク用のパラメータをセット 
$linkparams = [];

if ($category_id) {
    $linkparams['cid'] = $category_id;
    $t->assign('category_id', $category_id);
}
if ($article_id) {
    $linkparams['aid'] = $article_id;
    $t->assign('article_id', $article_id);
}
if ($follow_id) {
    $linkparams['follow_id'] = $follow_id;
    $t->assign('follow_id', $follow_id);
}

$t->assign('linkparams', $linkparams);


$offset = $utility->getListOffset();
$order_column = $utility->getListOrderColumn(null, 'td');
$t->assign('sort', $order_column['param']);


// 履歴の表示件数
$limit = $G_bulletin_login_config->getListMax();

// ファイル情報の詳細を取得
$file_for_view = $utility->getFileDetailView($file, $offset, $limit,
    $order_column['column'], $order_column['order']);

if (isset($owner)) {
    $auth_for_view = $owner->getAuthorities($G_bulletin_login);

    // ファイルに対するアクセス権限をセット
    $file_for_view['auth'] = $auth_for_view;
    $file_for_view['deletable'] = $owner->isDeletable($G_bulletin_login);

    require_once('bulletin/file.csp');
    $fm = GRN_Bulletin_FileManager::getInstance();
    $file_for_view['modifiable'] = $fm->isModifiable($G_bulletin_login, $owner,
        $file, false);


    if (is_a($owner, 'GRN_Bulletin_Article')) {
        // 期限の切れた掲示の添付ファイルは変更できない
        if ($owner->isExpired()) {
            $file_for_view['auth']['write'] = false;
            $file_for_view['modifiable'] = false;
        }

        $category =& $owner->get('category');
    } elseif (is_a($owner, 'GRN_Bulletin_Follow')) {
        $owner_article =& $owner->get('article');

        // 期限の切れた掲示の添付ファイルは変更できない
        if ($owner_article->isExpired()) {
            $file_for_view['auth']['write'] = false;
            $file_for_view['modifiable'] = false;
        }
        $category =& $owner_article->get('category');
    }

    if (isset($category) && $category) {
        require_once('bulletin/access.csp');
        $acc = GRN_Bulletin_AccessManager::getInstance();
        $t->assign('is_admin', $acc->isAdmin($G_bulletin_login, $category));
    }
}

// N件リンク用のパラメータをセット

$naviparams = ['fid' => $file_id, 'sf' => 1];

if ($category_id) {
    $naviparams['cid'] = $category_id;
}
if ($article_id) {
    $naviparams['aid'] = $article_id;
}
if ($follow_id) {
    $naviparams['follow_id'] = $follow_id;
}

$file_for_view['navi']['navi']['params'] = $naviparams;

$users_id = [];
$users_id[] = @$file_for_view['creator_uid'];
$users_id[] = @$file_for_view['modifier_uid'];

global $G_container_base;
$uum =& $G_container_base->getInstance('uum');

require_once("grn/controller.csp");
$users_info = GRN_ControllerUtil::getUserInfoToShowUserName($users_id,
    $uum->getLoginUser());
$t->assign('users_info', $users_info);

$t->assign('file', $file_for_view);
$t->assign('config', $utility->getConfigValues($G_bulletin_login));

if ( ! is_a($owner, 'GRN_Bulletin_Draft')) {
    // 下書きでなければロック機能の設定を取得

    // UI設定ロジックを取得する
    require_once('grn/ui.csp');
    $manager = GRN_UIConfigManager::getInstance();
    assert('is_object( $manager ) && is_a( $manager, \'GRN_UIConfigManager\' )');
    $config =& $manager->getSystemConfig();
    assert('is_object( $config ) && is_a( $config, \'GRN_UIConfig\' )');

    // ロック制御するかどうか
    $t->assign('lockable', $config->getFileLockable());
}


