<?php

global $G_INPUT;

if ( ! isset($t) || ! is_a($t, 'GRN_Smarty')) {
    require_once("grn/smarty.csp");
    $t = new GRN_Smarty;
}

if ( ! isset($utility) || ! is_a($utility, 'GRN_Bulletin_ControllerUtil')) {
    require_once('bulletin/controller.csp');
    $utility = new GRN_Bulletin_ControllerUtil();
}

if ( ! array_key_exists('cid', $G_INPUT) || strlen($G_INPUT['cid']) < 1) {
    $category_id = GRN_BULLETIN_ROOT_CATEGORY_ID;
} else {
    $category_id = $G_INPUT['cid'];
}

$pages = explode('/', cb_get_pagename());

// --- category tree
if ($pages[1] == 'system') {
    $tree_info = [
        'link_url' => 'bulletin/system/bulletin_list',
        'oid_key'  => 'cid'
    ];
    $tree_selected_oid = array_key_exists('cid', $G_INPUT)
                         && ($category_id != GRN_BULLETIN_ROOT_CATEGORY_ID)
        ? $category_id : null;
    include('../_category_tree.csp');
    $category_id = $tree_selected_oid ? $tree_selected_oid
        : GRN_BULLETIN_ROOT_CATEGORY_ID;
}
// --- end: category tree

$t->assign('category_id', $category_id);


// 指定されたカテゴリを取得
if ( ! ($category =& $G_bulletin->getCategory($G_bulletin_login,
    $category_id))
) {
    cb_throw_error(E_GRN_BULLETIN_CATEGORY_NOT_FOUND);
}

if ($pages[1] == 'system') {
    require_once('bulletin/hierarchy.csp');
    $hierarchy = GRN_Bulletin_Hierarchy::getInstance();

    $category_for_view = $hierarchy->build($G_bulletin_login, $category);
    $t->assign('category', $category_for_view);
} else {
    require_once('bulletin/functions.csp');
    $ancestors = grn_bulletin_get_category_path_array($category);
    unset($ancestors[$category->getOID()]);

    $t->assign('category', [
            'cid'       => $category->getOID(),
            'name'      => $category->get('name'),
            'ancestors' => $ancestors,
        ]
    );
}

$list_item = @ $G_INPUT['list_item'];

$session =& $utility->getSession();

if (@ $G_INPUT['sf']) {
    $list_item = $session->get('list_item');
}

if ( ! $list_item) {
    $list_item = 'all';
}

if ( ! @ $G_INPUT['sf']) {
    $session->set('list_item', $list_item);
}

$t->assign('list_item', $list_item);

$limit = $G_bulletin_login_config->getListMax();
$offset = $utility->getListOffset();
$order_column = $utility->getListOrderColumn(null, 'ntd');

$t->assign('sort', $order_column['param']);

require_once('bulletin/article_util.csp');
require_once('bulletin/bean/GrnBulletinArticleCondition.csp');

$conditionObj = new GrnBulletinArticleCondition();
$conditionObj->setUser($G_bulletin_login);
$conditionObj->setCategory($category);
$conditionObj->setOffset($offset);
$conditionObj->setLimit($limit);
$conditionObj->addSort($order_column['column'], $order_column['order']);

switch ($list_item) {
    case 'all':
        $conditionObj->setArticleTerm('all');
        $list = new GRN_Bulletin_ArticleList($conditionObj);
        break;

    case 'before':
        $conditionObj->setArticleTerm('before');
        $list = new GRN_Bulletin_ArticleBeforeList($conditionObj);
        break;

    case 'expired':
        $conditionObj->setArticleTerm('expired');
        $list = new GRN_Bulletin_ArticleExpiredList($conditionObj);
        break;

    default:
        $list = new GRN_Bulletin_ArticleList($conditionObj);
        break;
}

$articleList = $list->searchExecute();
$articles_for_view = [];
foreach ($articleList as $article) {
    $for_view = $utility->getArticleListView($G_bulletin_login,
        $article, ($pages[1] != 'system'));
    $for_view['published'] = $article->isPublished();
    $for_view['expired'] = $article->isExpired();

    $articles_for_view[$article->getOID()] = $for_view;
}
$t->assign('articles', $articles_for_view);
$t->assign('users_info',
    $utility->getUserInfoToShowUserName($utility->getUsersInArticle($articles_for_view),
        $G_bulletin_login));

$navi_for_view = $utility->makeNaviInformation($offset,
    $limit,
    $list->count(),
    ['cid' => $category_id, 'sf' => 1]);

$t->assign('navi', $navi_for_view);

$system_config = $G_bulletin->getSystemConfig($G_bulletin_login);
$t->assign('show_members_dialog',
    $system_config->getEnableConfirmAuthorityReadAndNotificationUsers());

$t->assign('config', $utility->getConfigValues($G_bulletin_login));

$t->assign('params', ['sort' => '', 'sp' => 0]);


