<?php

use grn\favour\service\FavourService;

global $G_INPUT;

require_once("grn/smarty.csp");
$t = new GRN_Smarty;

$favour_service = new FavourService();
$is_favour_active = $favour_service->isFavourAppActive();

// 掲示ID
if ( ! array_key_exists('aid', $G_INPUT)) {
    cb_throw_error(E_GRN_BULLETIN_ARTICLE_NOT_FOUND);
}

$article_id = $G_INPUT['aid'];

if ( ! ($article = $G_bulletin->getArticle($G_bulletin_login, $article_id,
    GRN_BULLETIN_ACCESS_R, true, CB_DATABASE_NO_LOCK))
) {
    // ____________ GRN35-99 ___________
    if (array_key_exists('nid', $G_INPUT)
        || array_key_exists('nhid', $G_INPUT)
    ) {
        $page_title = grn_get_current_page_display_name();
        $site_position = [
            [
                'page' => 'bulletin/index',
                'name' => grn_get_page_display_name('bulletin/index')
            ],
            ['page' => '', 'name' => $page_title]
        ];
        $t->assign('site_position', $site_position);

        require_once('grn/notification.csp');
        $notify_service = GRN_Notification_Service::getInstance();

        if (array_key_exists('nid', $G_INPUT)) {
            $prop
                = $notify_service->getNotifyDataPropertiesFast($G_bulletin_login,
                'grn.bulletin', $article_id);
            if ($prop) {
                $notify_service->deleteNotifyData($G_bulletin_login,
                    'grn.bulletin', $article_id);
            }
        } elseif (array_key_exists('nhid', $G_INPUT)) {
            $prop = $notify_service->getHistoryDataProperties($G_bulletin_login,
                'grn.bulletin', $article_id);
            if ($prop) {
                $notify_service->deleteHistoryData($G_bulletin_login,
                    'grn.bulletin', $article_id);
            }
        }

        $t->display('bulletin/delete_info.tpl');
        cb_safe_exit();
    }
    // ~~~~~~~~~~ GRN35-99 ~~~~~~~~~~~
    cb_throw_error(E_GRN_BULLETIN_ARTICLE_NOT_FOUND);
}
if ( ! $article->isPublished()) {
    cb_throw_error(E_GRN_BULLETIN_ARTICLE_NOT_FOUND);
}

// フォローID
// 検索結果などからフォローを閲覧する際に指定される
$follow_id = array_key_exists('follow_id', $G_INPUT) ? $G_INPUT['follow_id']
    : false;

// 掲示からカテゴリIDを取得する
if ( ! $category_id = $article->getId('category')) {
    $category_id = null;
}

require_once('bulletin/category.csp');
$category_manager = new GRN_Bulletin_CategoryManager();

require_once('bulletin/controller.csp');
$utility = new GRN_Bulletin_ControllerUtil();
require('_view.csp');
// GRN35-209
//GRN2-4315
if (isset($article_for_view['cid'])) {
    $utility->prepareMakeSitePosition($t, $article_for_view['cid']);
} //GRN2-4315
elseif ($category_id) {
    $utility->prepareMakeSitePosition($t, $category_id);
} else {
    $page_path = [
        'bulletin/index' => ['cid' => $category_id]
    ];
    $utility->setSitePosition($t, $page_path);
}
// GRN35-209

$t->assign('page_title', $article_for_view["title"]);

// article delete infomation
$delete_info = [
    'title'   => grn_get_page_display_name('bulletin/delete'),
    'page'    => 'bulletin/delete.tpl',
    'data'    => [
        'article'     => $article_for_view,
        'category_id' => $category_id
    ],
    'handler' => 'lnk_delete'
];
$t->assign('delete_info', $delete_info);

// article's follow delete infomation
$handler = [];
foreach ($article_for_view['follows'] as $key => $value) {
    if ($value['deletable']) {
        $handler[] = "lnk_delete_follow_$key";
    }
}
$delete_follow = [
    'title'         => grn_get_page_display_name('bulletin/follow_delete'),
    'page'          => 'bulletin/follow_delete.tpl',
    'data'          => [
        'category_id' => $category_id,
        'article_id'  => $article_id
    ],
    'handler'       => $handler,
    'before_delete' => ['on_before_delete_follow', ['follow_id' => 'follow_id']]
];
$t->assign('delete_follow', $delete_follow);
//---Count userConfirm
if ($article->getId('reserve_int1')) {
    require_once('bulletin/BulletinFacade.csp');
    $dao = new BulletinFacade();

    $acknowledgementTotal = $dao->getAcknowledgementNum($article_id, false);
    $notification = ["total" => $acknowledgementTotal, "current" => 0];

    $acknowledgementCurrent = $dao->getAcknowledgementNum($article_id, true);
    $notification["current"] = $acknowledgementCurrent;

    $bulletin_acknowledgement = [
        'need_confirm'  => 1,
        'confirmed_num' => $notification['current'] . '/'
                           . $notification['total'],
        'cid'           => $category_id,
        'aid'           => $article_id
    ];
} else {
    $bulletin_acknowledgement = ['need_confirm' => 0];
}

$t->assign('bulletin_acknowledgement', $bulletin_acknowledgement);
// FAVORITE
require_once('star/logic.csp');
$star_logic = GRN_Star_StarLogic::getInstance();
$use_star = $star_logic->isActive();
$t->assign('use_star', $use_star);
if ($use_star) {
    $t->assign('star_infos',
        $star_logic->getStatusByIDs($G_bulletin_login, 'grn.bulletin',
            [$article_id]));
}
// End FAVORITE

$is_favour_on = $favour_service->isAppAllowedRespond('bulletin');
if ($is_favour_active && $is_favour_on) {
    $favour_info
        = $favour_service->constructFavourInfo(\GRN_Bulletin::GRN_BULLETIN_MODULE_ID,
        \GRN_Bulletin::FAVOUR_BULLETIN_BODY,
        $article_id,
        $G_bulletin_login->getOID(),
        $favour_info['params'] = [
            'cid' => cb_at($article_for_view, 'cid'),
            'aid' => $article_id
        ]);
    $t->assign('favour_info', $favour_info);
}
$t->assign('is_favour_active', $is_favour_active);
$t->assign('is_favour_on', $is_favour_on);

$system_config = $G_bulletin->getSystemConfig($G_bulletin_login);
$t->assign('show_members_dialog',
    $system_config->getEnableConfirmAuthorityReadAndNotificationUsers());

//generate upload ticket
include('grn/_upload_prepend.csp');

$t->display(cb_get_pagename() . ".tpl");

