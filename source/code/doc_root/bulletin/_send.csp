<?php

global $G_INPUT;

if ( ! isset($t) || ! is_a($t, 'GRN_Smarty')) {
    require_once('grn/smarty.csp');
    $t = new GRN_Smarty();
}

require_once('SmartyValidate.class.php');
SmartyValidate::connect($t);
SmartyValidate::register_form(cb_get_pagename(), true);


// 設定をセット
$config_values = [];
$system_config
    = $G_bulletin->getSystemConfig($G_bulletin_login);
$config_values['enable_htmleditor'] = $system_config->getEnableHtmlEditor();
$config_values['enable_follow'] = $system_config->getEnableFollow();
require_once('grn/ui.csp');
$ucm = GRN_UIConfigManager::getInstance();
$user_config = $ucm->getUserConfig($G_bulletin_login);
$config_values['area_width'] = $user_config->getAreaWidth();
$config_values['area_height'] = $user_config->getAreaHeight();
$t->assign('config', $config_values);
$t->assign('can_follow', $config_values['enable_follow']);
$t->assign('acknowledgement', $system_config->getEnableAcknowledgement());

$enable_manually_enter_sender = $system_config->getEnableManuallyEnterSender();
$t->assign('enable_manually_enter_sender', $enable_manually_enter_sender);
if ($enable_manually_enter_sender) {
    require_once('bulletin/resources.csp');
    if ($system_config->getDefaultValueFrom()
        == GRN_BULLETIN_DEFAULT_VALUE_FROM_MANUALLY_ENTER
    ) {
        $t->assign('is_sender_type_custom', true);
    } else {
        $t->assign('is_sender_type_creator', true);
    }
}
$t->assign('is_maintainer_type_sender', true);
$t->assign('maintainers', []);

$original = null;

if ( ! isset($article_id) && array_key_exists('aid', $G_INPUT)) {
    $article_id = $G_INPUT['aid'];
}

if (isset($article_id) && $article_id) {
    $t->assign('article_id', $article_id);

    if (isset($is_draft) && $is_draft) {
        if ( ! ($original =& $G_bulletin->getDraft($G_bulletin_login,
            $article_id))
        ) {
            cb_throw_error(E_GRN_BULLETIN_DRAFT_NOT_FOUND);
        }
    } else {
        if ( ! ($original =& $G_bulletin->getArticle($G_bulletin_login,
            $article_id))
        ) {
            cb_throw_error(E_GRN_BULLETIN_ARTICLE_NOT_FOUND);
        }
    }
}

$category = null;

if ( ! isset($category_id)) {
    if ( ! is_null($original)) {
        $category_id = $original->getId('category');
    } elseif (array_key_exists('cid', $G_INPUT)) {
        $category_id = $G_INPUT['cid'];
    }
}

if (isset($category_id) && $category_id) {
    if (($category = $G_bulletin->getCategory($G_bulletin_login,
        $category_id))
    ) {
        if ($category->access($G_bulletin_login, GRN_BULLETIN_ACCESS_W)) {
            $t->assign('category_id', $category_id);
            $t->assign('category_name', $category->get('name'));
        } else {
            cb_throw_error(E_GRN_BULLETIN_ACCESS_DENY_WRITE);
        }
    }
}

// 期間を選択状態にするかどうか
$set_limit = false;

// 再利用、下書き編集の場合はカテゴリ必須
if (isset($original) && ! isset($category)) {
    cb_throw_error(E_GRN_BULLETIN_CATEGORY_NOT_FOUND);
}

if (isset($original)) {
    // 再利用元のデータをセット

    require_once('fw/date.csp');

    $start_ts = $original->get('start_timestamp');
    $end_ts = $original->get('end_timestamp');
    //
    $start_is_datetime = $original->get('start_is_datetime');
    $end_is_datetime = $original->get('end_is_datetime');
    $start_time = null;
    $end_time = null;

    $sdate = null;
    $edate = null;

    if ($start_ts && $start_ts->unix_ts != 0) {
        $start_ts_ex = new CB_TimeStampEx($start_ts);
        $sdate = $start_ts_ex->getDate();

        $start_time = $start_ts_ex->getTime();
        if ($start_time->hour == 0 && ! $start_is_datetime) {
            $start_time = null;
        }
    }

    if ($end_ts && $end_ts->unix_ts != 0) {
        $end_ts_ex = new CB_TimeStampEx($end_ts);
        $edate = $end_ts_ex->getDate();

        $end_time = $end_ts_ex->getTime();
        if ($end_time->hour == 0 && ! $end_is_datetime) {
            $end_time = null;
            // 記事に設定されている終了日は1日進められているので戻す
            $edate->moveDays(-1);
        }
    }

    if ( ! is_null($sdate) || ! is_null($edate)) {
        $set_limit = true;
    }

    if ($enable_manually_enter_sender) {
        $manually_enter_sender = $original->get('manually_enter_sender');
        if ( ! is_null($manually_enter_sender)) {
            $t->assign('is_sender_type_creator', false);
            $t->assign('is_sender_type_custom', true);
            $t->assign('manually_sender_data', $manually_enter_sender);
        } else {
            $t->assign('is_sender_type_creator', true);
            $t->assign('is_sender_type_custom', false);
        }
    }

    require_once('grn/controller.csp');
    require_once('bulletin/BulletinFacade.csp');
    $dao = new BulletinFacade();
    $is_draft = ($original instanceof GRN_Bulletin_Draft) ? true
        : false;
    $maintainer_list = $dao->getOperatorListByArticleId([],
        $original->getOID(), $is_draft);
    $maintainer_list_view = [];
    if (count($maintainer_list) > 0) {
        $t->assign('is_maintainer_type_other', true);
        $t->assign('is_maintainer_type_sender', false);
        $maintainer_list_view = $dao->getOperatorListForView($maintainer_list,
            false, false);
    }
    $t->assign('maintainers', $maintainer_list_view);

    $t->assign('aid', $original->getOID());

    $t->assign('title', $original->get('subject'));
    $t->assign('stime', $sdate);
    $t->assign('etime', $edate);
    $t->assign('start_time', $start_time);
    $t->assign('end_time', $end_time);
    $t->assign('data', $original->get('data'));
    $t->assign('html', $original->get('html'));
    $t->assign('can_follow', $original->get('can_follow'));
    $t->assign('acknowledgement',
        $original->get('reserve_int1'));//This is acknowledgement field in db

    if (is_a($original, 'GRN_Bulletin_ArticleEntity')) {
        $t->assign('published', $original->isPublished());
    }

    if ($original->get('html')) {
        if ($config_values['enable_htmleditor']) {
            $t->assign('editor', 1);
        }
    }

    $files = $original->getFiles();

    $tmp_key = grn_get_temporary_key();
    $t->assign('tmp_key', $tmp_key);

    if (isset($no_copy_files) && $no_copy_files) {
        $files_for_view = grn_init_attached_file(cb_get_pagename() . $tmp_key,
            $files, true, 'bulletin');
    } else {
        $files_for_view = grn_init_attached_file(cb_get_pagename() . $tmp_key,
            $files, false, 'bulletin');
    }

    $t->assign('attach_files', $files_for_view);
}

if ( ! isset($sdate) && ! isset($edate)) {
    require_once('fw/date.csp');
    $timestamp = new CB_TimeStampEx();

    $t->assign('stime', $timestamp->getDate());
    $t->assign('etime', $timestamp->getDate());
    $t->assign('start_time', null);
    $t->assign('end_time', null);
    $set_limit = false;
}
//
$choose_group_checked = false;
$choose_group_disbaled = false;
$select_group_disabled = true;
$group_options = [];
$group_selected = null;
if ( ! $original) {
    $group_options
        = $G_bulletin->getUserGroupOptions($G_bulletin_login->getOID(),
        $group_selected);
} else {
    $group_selected = $original->get('creator_group');
    $article_creator = $original->get('creator');
    $is_reuse = (strpos(cb_get_pagename(), 'reuse')) ? true : false;
    if ($is_reuse) {
        $article_creator = $G_bulletin_login;
    }
    $group_options
        = $G_bulletin->getUserGroupOptions($article_creator->getOID(),
        $group_selected);
    if ( ! is_null($group_selected)) {
        foreach ($group_options as $group) {
            if (array_key_exists('selected', $group)) {
                $choose_group_checked = true;
                $select_group_disabled = false;
                break;
            }
        }
    }
}
if (count($group_options) > 0 && ! $group_options[0]['value']) {
    $choose_group_disbaled = true;
}

//generate upload ticket
include('grn/_upload_prepend.csp');

$t->assign('plugin',
    ['name' => 'bulletin', 'params' => ['category_id' => $category_id]]);

$t->assign('group_options', $group_options);
$t->assign('choose_group_checked', $choose_group_checked);
$t->assign('choose_group_disbaled', $choose_group_disbaled);
$t->assign('select_group_disabled', $select_group_disabled);
$t->assign('minute_interval', 5);
$t->assign('set_limit', $set_limit);

$t->assign('creator_name', $G_bulletin_login->get('display_name'));
$t->assign('creator_uid', $G_bulletin_login->getOID());

