<?php
require_once('grn/application.csp');

use grn\grn\access\service\AppAccess;

$locator = GRN_ApplicationLocator::instance();
global $G_container_base;
/** @var GRN_Uum $uum */
$uum = $G_container_base->getInstance('uum');

//Get Login user
$login = $uum->getLoginUser();

/////////////////////////////////////////////////////////////////
// ログインしていない場合
/////////////////////////////////////////////////////////////////
$flag = true;
if ( ! $login) {
    $infos = $locator->getNoLoginApplicationInfo();
    foreach ($infos as $info) {
        $top = false;
        if (array_key_exists('index', $info)) {
            $top = $info['index'];
        }
        if ($top) {
            if ( ! defined('ON_FOREST') && $flag === true) {
                require_once('grn/system_logic.csp');
                $system = GRN_System::getInstance();
                $installed_version = $system->getVersion();
                $now_version = $G_config_grn->get('System', 'version');
                if ($installed_version != $now_version) {
                    cb_throw_error(E_GRN_INVALID_VERSION);
                }
                $flag = false;
            }
            cb_switch_page($top . CB_SCRIPT_EXTENSION);
        }
    }
    cb_require_role('LoginUser');
}
/////////////////////////////////////////////////////////////////
// ログインしている場合
/////////////////////////////////////////////////////////////////

$app_ids = $locator->getActiveApplicationIds();
$flag = true;
foreach ($app_ids as $app_id) {
    if ( ! AppAccess::isAppAvailableInternalAccess($app_id)) {
        continue;
    }

    $info = $locator->getConfig($app_id);
    $top = false;
    if (array_key_exists('index', $info)) {
        $top = $info['index'];
    }
    if ($top) {
        if ( ! defined('ON_FOREST') && $flag === true) {
            require_once('grn/system_logic.csp');
            $system = GRN_System::getInstance();
            $installed_version = $system->getVersion();
            $now_version = $G_config_grn->get('System', 'version');
            if ($installed_version != $now_version) {
                cb_throw_error(E_GRN_INVALID_VERSION);
            }
            $flag = false;
        }
        // Update the current locale
        require_once('fw/i18n.csp');
        $i18n = CB_I18N::getInstance();
        $i18n->switchUserLocale();
        $i18n->switchTimezone();

        //timecard auto punchout
        include('timecard/auto_punchout.csp');

        cb_switch_page($top . CB_SCRIPT_EXTENSION);

    }
}

cb_throw_error(E_GRN_APPLICATION_NOT_ACTIVE);


