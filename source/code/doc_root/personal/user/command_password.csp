<?php
if (strcasecmp(@ $_SERVER['REQUEST_METHOD'], 'POST') == 0) {
    //-- prepare
    $target_page = 'personal/user/password';

    //-- instantiate an Smarty object
    require_once("grn/smarty.csp");
    $t = new GRN_Smarty;

    //-- Validation check
    require_once('SmartyValidate.class.php');
    SmartyValidate::connect($t);
    // register the target_form, or you get an error if you go back to the previous page by using 
    // your browser 'back' button
    SmartyValidate::register_form($target_page);

    $password = @ $G_INPUT['password'];

    $uum = $G_container_base->getInstance('uum');
    $login = $uum->getLoginUser();

    require_once('grn/uum_util.csp');
    $uum_util = GRN_UumUtil::getInstance();
    $errorOptions = $uum_util->isStrongPassword($password, $login);
    if ($errorOptions === true) {
        $errorOptions = null;
    }

    //-- validate after a POST
    if (SmartyValidate::is_valid($G_INPUT, $target_page)
        && (count($errorOptions) == 0)
    ) {

        //-- get parameters
        $password = @ $G_INPUT['password'];

        require_once('grn/system_logic.csp');
        $system = GRN_System::getInstance();
        $password_length = $system->getPasswordLength();
        if (strlen($password) < $password_length) {
            cb_throw_error(E_GRN_PASSWORD_INVALID_LENGTH, null,
                ['length' => $password_length],
                ['length' => $password_length]);
        }

        //-- modify user password
        $uum = $G_container_base->getInstance('uum');
        require_once('grn/uum_util.csp');
        $uum_util = GRN_UumUtil::getInstance();
        $login_user = $uum->getLoginUser();
        $uid = $login_user->getOID();

        if ($uum_util->isValidPassword($password)) {
            $uum->changePassword($uid, null, $password, true);
        }

        require_once('grn/logger.csp');
        $lm = CB_LoggerManager::getInstance();
        $logger = $lm->getLogger('grn.common');
        $params = [
            'uid'     => $uid,
            'name'    => $login_user->get('display_name'),
            'account' => $login_user->get('foreign_key')
        ];
        $logger->noticeEx('change', 'password', $params);

        // the validation session is finished
        SmartyValidate::unregister_form($target_page);

        //-- completed
        cb_redirect('personal/common_list', ['id' => 'user']);
    } else {
        //-- if error, show the source form

        // include sharing codes with command_*
        include('_password.csp');

        if (is_array($errorOptions)
            && array_key_exists('alpha', $errorOptions)
            && array_key_exists('alphamix', $errorOptions)
        ) {
            unset($errorOptions['alpha']);
        }

        if (is_array($errorOptions)
            && array_key_exists('alphamix', $errorOptions)
        ) {
            $_errorOptions = [];
            if ( ! preg_match('/[A-Z]/', $password)) {
                $_errorOptions['alphaupper'] = true;
            }
            if ( ! preg_match('/[a-z]/', $password)) {
                $_errorOptions['alphalower'] = true;
            }

            unset($errorOptions['alphamix']);
            $errorOptions = $_errorOptions + $errorOptions;
        }

        $t->assign('errorOptions', $errorOptions);

        //Assign Template Name
        $t->setPageInfo($target_page);

        $t->display($target_page . '.tpl');
    }

}


