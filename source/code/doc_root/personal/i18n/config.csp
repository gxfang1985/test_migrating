<?php
require_once('grn/smarty.csp');
$t = new GRN_Smarty();

global $G_container_base;
$uum = $G_container_base->getInstance('uum');
$login_user = $uum->getLoginUser();

require_once("fw/i18n.csp");
require_once("fw/i18n/locale.csp");
require_once("fw/i18n/system_config.csp");

if ( ! CB_I18N_SystemConfig::isUserChangeableLocale()) {
    cb_redirect('personal/common_list', ['id' => 'i18n']);
}

$i18n = CB_I18n::getInstance();
$current_language = $i18n->getCurrentLanguage();
$availableLanguage = $i18n->getAvailableLanguages();
$availableLanguage[]
    = CB_LanguageManager::$LANGUAGE_CODE_PREFER_BROWSER_SETTING;

$now = new CB_TimeStamp();
$now->unix_ts = time();

$locales = CB_LocaleManager::getLocales();
$locales_param = [];
foreach ($locales as $locale) {
    $locales_param[] = [
        "id"              => $locale->getId(),
        "name"            => $locale->getLocalName(),
        "language"        => $locale->getLanguageCode(),
        "longDateFormat"  => cb_fillInTemplate($locale->getLongDateFormat(),
            cb_date_datetime2array($now, $locale->getLanguageCode())),
        "shortDateFormat" => cb_fillInTemplate($locale->getShortDateFormat(),
            cb_date_datetime2array($now, $locale->getLanguageCode())),
        "timeFormat"      => cb_fillInTemplate($locale->getTimeFormat(),
            cb_date_datetime2array($now, $locale->getLanguageCode())),
    ];
}

$t->assign("locales", $locales_param);

$long_date_format = [];
$short_date_format = [];
$time_format = [];
foreach ($availableLanguage as $language_code) {
    $long_date_format[$language_code]
        = CB_DateTimeformatManager::getDateFormats($language_code);
    $short_date_format[$language_code]
        = CB_DateTimeformatManager::getDateFormats($language_code);
    $time_format[$language_code]
        = CB_DateTimeformatManager::getTimeFormats($language_code);
}

$t->assign('timezone', $login_user->get('timezone')); // GRN35-872
//$t->assign("language_names", $active_language);
$t->assign("long_date_format_list", $long_date_format);
$t->assign("short_date_format_list", $short_date_format);
$t->assign("time_format_list", $time_format);
$t->assign("language_code_list", $availableLanguage);
$t->assign("selected_language", $current_language);

$user_locale_setting = CB_UserLocaleSetting::select($login_user->getOID());
if ( ! is_null($user_locale_setting)) {
    $t->assign("user_db_language", $user_locale_setting->getLanguageCode());

    $t->assign("user_locale_setting", $user_locale_setting->toArray());

    $t->assign("current_setting", [
        "col_language"          => CB_LocaleManager::getCurrentLanguage($login_user->getOID()),
        "col_long_date_format"  => CB_LocaleManager::getCurrentLongDateFormat($login_user->getOID()),
        "col_short_date_format" => CB_LocaleManager::getCurrentShortDateFormat($login_user->getOID()),
        "col_time_format"       => CB_LocaleManager::getCurrentTimeFormat($login_user->getOID()),
    ]);

    if ( ! defined('ON_FOREST')
         && $user_locale_setting->getLanguageCode()
            === CB_LanguageManager::$LANGUAGE_CODE_PREFER_BROWSER_SETTING
    ) {
        // on-premise, can't select date-time formats with browser settings
        $t->assign("selected_language",
            $user_locale_setting->getLanguageCode());
    }

    if ($user_locale_setting->getLocale()
        != CB_UserLocaleSetting::$LOCALE_IS_NOT_RELATED
    ) {
        $current_locale = $locales[$user_locale_setting->getLocale()];
        $t->assign("user_modified", $user_locale_setting->isCustomized());
        $t->assign("selected_locale_name", $current_locale->getLocalName());
    }
} else {
    $t->assign("user_db_language", "");

    if ( ! defined('ON_FOREST')) {
        $t->assign('selected_language',
            CB_LanguageManager::$LANGUAGE_CODE_PREFER_BROWSER_SETTING);
    }

    $t->assign("current_setting", [
        "col_language"          => CB_LocaleManager::getCurrentLanguage($login_user->getOID()),
        "col_long_date_format"  => CB_LocaleManager::getCurrentLongDateFormat($login_user->getOID()),
        "col_short_date_format" => CB_LocaleManager::getCurrentShortDateFormat($login_user->getOID()),
        "col_time_format"       => CB_LocaleManager::getCurrentTimeFormat($login_user->getOID()),
    ]);
}

$user_name_languages
    = CB_LocaleManager::getUserNameLanguages($login_user->getOID());
$array_user_name_languages = [];
foreach ($user_name_languages as $user_name_langauge) {
    $array_user_name_languages[] = $user_name_langauge->toArray();
}
$t->assign("user_name_languages", $array_user_name_languages);

$i18n = CB_I18n::getInstance();
$t->assign('all_languages', $i18n->getAvailableLanguages());

require_once('grn/locale.csp');
$config_manager = GRN_Locale_ConfigManager::getInstance();
$config = $config_manager->getPersonalConfig($login_user);
$receiving_email_charset = $config->getReceivingEmailCharset();
$t->assign('receiving_email_charset', $receiving_email_charset);

if ( ! defined('ON_FOREST')) {
    $dispname = grn_get_page_display_name("personal/i18n/config_on_premise");
} else {
    $dispname = grn_get_page_display_name("personal/i18n/config");
}

$t->assign('page_title', $dispname);

$t->assign(
    'site_position', [
        0 =>
            [
                'page' => '',
                'name' => $dispname,
            ],
    ]
);

$t->display(cb_get_pagename() . '.tpl');
