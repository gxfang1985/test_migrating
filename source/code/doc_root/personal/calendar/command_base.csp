<?php

if (strcasecmp(@ $_SERVER['REQUEST_METHOD'], 'POST') == 0) {
    require_once('grn/smarty.csp');
    require_once('fw/i18n/base.csp');
    require_once('fw/i18n/system_config.csp');

    global $G_container_base;
    $uum = $G_container_base->getInstance('uum');
    $login_user = $uum->getLoginUser();

    global $G_INPUT;
    if ( ! isset($G_INPUT['base'])) {
        // Invalid. Do nothing.
        cb_redirect('personal/common_list', ['id' => 'calendar']);
    }

    $base_id = $G_INPUT['base'] ?: null;

    if ( ! CB_I18N_SystemConfig::isUserChangeableBase()) {
        CB_BaseManager::setUserBaseSetting($login_user->getOID(), $base_id);
        cb_redirect('personal/common_list', ['id' => 'calendar']);
    }

    if ( ! isset($G_INPUT['start_work_hours_1_hour'])
         ||
         ! isset($G_INPUT['start_work_hours_1_minute'])
         ||
         ! isset($G_INPUT['end_work_hours_1_hour'])
         ||
         ! isset($G_INPUT['end_work_hours_1_minute'])
         ||
         ! isset($G_INPUT['calendar'])
    ) {
        // Invalid. Do nothing.
        cb_redirect('personal/common_list', ['id' => 'calendar']);
    }
    $work_hours_list = CB_BaseManager::parseWorkHoursList($G_INPUT);
    if (count($work_hours_list) > 10) {
        cb_throw_error(E_GRN_SYSTEM_OVER_THE_LIMIT);
    }

    $user_setting = CB_UserBaseSetting::select($login_user->getOID());
    if ( ! is_null($user_setting)) {
        $user_setting->setBase($base_id);
        $user_setting->setWorkdaySunday((isset($G_INPUT['sunday'])
                                         && $G_INPUT['sunday']) ? 1 : 0);
        $user_setting->setWorkdayMonday((isset($G_INPUT['monday'])
                                         && $G_INPUT['monday']) ? 1 : 0);
        $user_setting->setWorkdayTuesday((isset($G_INPUT['tuesday'])
                                          && $G_INPUT['tuesday']) ? 1 : 0);
        $user_setting->setWorkdayWednesday((isset($G_INPUT['wednesday'])
                                            && $G_INPUT['wednesday']) ? 1 : 0);
        $user_setting->setWorkdayThursday((isset($G_INPUT['thursday'])
                                           && $G_INPUT['thursday']) ? 1 : 0);
        $user_setting->setWorkdayFriday((isset($G_INPUT['friday'])
                                         && $G_INPUT['friday']) ? 1 : 0);
        $user_setting->setWorkdaySaturday((isset($G_INPUT['saturday'])
                                           && $G_INPUT['saturday']) ? 1 : 0);
        $user_setting->setApplyCalendar((isset($G_INPUT['apply_calendar'])
                                         && $G_INPUT['apply_calendar']) ? 1
            : 0);
        $user_setting->setCalendar($G_INPUT['calendar']);
        $user_setting->update();
    } else {
        $user_setting = new CB_UserBaseSetting([
            '_id'                   => $login_user->getOID(),
            'col_base'              => $base_id,
            'col_workday_sunday'    => (isset($G_INPUT['sunday'])
                                        && $G_INPUT['sunday']) ? 1 : 0,
            'col_workday_monday'    => (isset($G_INPUT['monday'])
                                        && $G_INPUT['monday']) ? 1 : 0,
            'col_workday_tuesday'   => (isset($G_INPUT['tuesday'])
                                        && $G_INPUT['tuesday']) ? 1 : 0,
            'col_workday_wednesday' => (isset($G_INPUT['wednesday'])
                                        && $G_INPUT['wednesday']) ? 1 : 0,
            'col_workday_thursday'  => (isset($G_INPUT['thursday'])
                                        && $G_INPUT['thursday']) ? 1 : 0,
            'col_workday_friday'    => (isset($G_INPUT['friday'])
                                        && $G_INPUT['friday']) ? 1 : 0,
            'col_workday_saturday'  => (isset($G_INPUT['saturday'])
                                        && $G_INPUT['saturday']) ? 1 : 0,
            'col_apply_calendar'    => (isset($G_INPUT['apply_calendar'])
                                        && $G_INPUT['apply_calendar']) ? 1 : 0,
            'col_calendar'          => $G_INPUT['calendar'],
        ]);
        $user_setting->insert();
    }

    // clear calendar session
    require_once('fw/session_manager.csp');
    $sm = CB_SessionManager::getInstance();
    $sm->destroy(GRN_CALENDAR_MODULEID);

    CB_UserWorkHours::deleteByUserId($login_user->getOID());
    foreach ($work_hours_list as $work_hours) {
        $new_user_work_hours = new CB_UserWorkHours([
            'col_user'  => $login_user->getOID(),
            'col_start' => $work_hours['start']->format(),
            'col_end'   => $work_hours['end']->format(),
        ]);
        $new_user_work_hours->insert();
    }
}

cb_redirect('personal/common_list', ['id' => 'calendar']);
