<?php

if (0 == strcasecmp(@ $_SERVER['REQUEST_METHOD'], 'POST')) {
    // ログインユーザーを取得する
    global $G_container_base;
    $uum = $G_container_base->getInstance('uum');
    $login = $uum->getLoginUser();
    assert('is_object( $login ) && is_a( $login, \'CB_User\' )');

    // ユーザ個別の設定ロジックを取得する
    require_once('grn/ui.csp');
    $manager = GRN_UIConfigManager::getInstance();
    assert('is_object( $manager ) && is_a( $manager, \'GRN_UIConfigManager\' )');
    $config = $manager->getUserConfig($login);
    assert('is_object( $config ) && is_a( $config, \'GRN_UIConfig\' )');

    // 入力フォームデータを取得する
    $form_names = [
        'list_max',
        'follow_max',
        'subject_width',
        'truncate_width',
        'name_width',
        'area_width',
        'area_height'
    ];

    $form_values = [];
    foreach ($form_names as $form_name) {
        if ( ! array_key_exists($form_name, $G_INPUT)) {
            cb_throw_error(E_GRN_SYSTEM_INVALID_FORM_DATA);
        }

        $form_value = $G_INPUT[$form_name];

        if (is_null($form_value) || 0 == strlen($form_value)) {
            cb_throw_error(E_GRN_SYSTEM_INVALID_FORM_DATA);
        }

        $form_values[$form_name] = intval($form_value);
    }
    $inline_setting = @ $G_INPUT['inline_setting'];
    $show_priority_group = @ $G_INPUT['show_priority_group'];
    $user_name_format = @ $G_INPUT['user_name_format'];
    $user_icon = (array_key_exists('user_icon', $G_INPUT))
        ? $G_INPUT['user_icon'] : 0;

    // 各アプリケーションの一覧画面で表示する件数
    $config->setListMax($form_values['list_max']);
    // フォローの一覧画面で表示する件数
    $config->setFollowMax($form_values['follow_max']);
    // 標題を表示する幅
    $config->setSubjectWidth($form_values['subject_width']);
    // 本文およびフォロー等の抄録を表示する幅
    $config->setTruncateWidth($form_values['truncate_width']);
    // 差出人/受取人等を表示する幅
    $config->setNameWidth($form_values['name_width']);
    // メールアドレスのリンク先アプリケーション
    $mailto_application = @$G_INPUT['mailto_application'];
    // Whether priority group show after user name.
    $config->setShowPriorityGroup($show_priority_group);
    // Use name format 
    $config->setUserNameFormat($user_name_format);
    // User icon format
    $config->setUserIconFormat($user_icon);
    // custom web mailer
    if (strpos($mailto_application, 'custom:') !== false) {
        require_once('grn/webmailerlink_logic.csp');
        $mailer_logic = GRN_WebMailerLinkLogic::getInstance();
        $ids = explode(':', $mailto_application);
        $mailer = $mailer_logic->getMailer($ids[1]);
    } elseif ($mailto_application !== 'mail') {
        $mailto_application = null;
    }
    $config->setMailToApplication($G_INPUT['mailto_application']);
    // 画像ファイル（ gif, jpeg など）の表示
    $config->setInlineSetting($inline_setting);
    // 本文の入力欄の横幅
    $config->setAreaWidth($form_values['area_width']);
    // 本文の入力欄の縦幅
    $config->setAreaHeight($form_values['area_height']);
    // ファイルへ出力する文字コード
    $config->setExportCharset(@ $G_INPUT['export_charset']);
}

cb_redirect('personal/common_list', ['id' => 'ui']);


