<?php
$page_name = cb_get_pagename() . '-grouop';

// Get the id of login user
$uum = $G_container_base->getInstance('uum');
require_once('grn/uum_util.csp');
$login_user = $uum->getLoginUser();
$user_id = $login_user->getOID();

// Selected group
$current_oid = @ $G_INPUT['poid'];
if ( ! $current_oid) {
    $current_oid = null;
}

// load selected groups from session
require_once('fw/session_manager.csp');
$session_manager = CB_SessionManager::getInstance();
$session
    = $session_manager->getSession('grn.personal.ui.dropdown-group');
$org_ids = $session->get('org_ids');
if ( ! is_array($org_ids)) {
    $org_ids = [];
}


// Build organization tree
require_once('grn/org_tree.csp');
$util = GRN_OrgTreeUtil::getInstance();
$tree = $util->getTree($page_name);

if (is_null($current_oid)) {
    $current_oid = $tree->getSelectedNode();
}
if (array_key_exists('top', $G_INPUT) || is_null($tree->getRoot())) {
    $tree->initialize();
    $current_oid = null;
}
$tree->setSelectedNode($current_oid);
$util->setTree($page_name, $tree);
$org = $tree->getRoot();

require_once('grn/history.csp');
$hm = GRN_Uum_HistoryManager::getInstance();


//Reset selected group list
//Executed the first time user access this screen
if (@ $G_INPUT['reset']) {
    $org_ids = [];
    $user_groups = $hm->getOftenusedGroups($user_id);
    if ($user_groups) {
        $org_ids = list2hash($user_groups);
    }
} else {
    // Add button was clicked 
    if (@ $G_INPUT['add'] && $current_oid) {
        $org_ids[$current_oid] = 1;
        $t->assign('add', true);
    } //remove button was clicked
    elseif (@ $G_INPUT['remove']) {
        $sids = @ $G_INPUT['sid'];
        if (is_array($sids) && count($sids)) {
            foreach ($sids as $sid) {
                unset($org_ids[$sid]);
            }
        }
    }

    $user_groups = $hm->getOftenusedGroups($user_id);
    $orig_org_ids = list2hash($user_groups);
    if ($orig_org_ids != $org_ids) {
        $t->assign('confirm_on', true);
    }
}
//store the selected groups into session
$session->set('org_ids', $org_ids);

//--construct selected organization list
$org_list = [];
foreach (array_keys($org_ids) as $id) {
    $group = $uum->getGroup($id);
    if ( ! $group) {
        continue;
    }
    require_once('grn/org_util.csp');
    $org_list[$id] =& grn_get_org_info($group, true, false);
}


// Assing parameters
$t->assign('poid', $current_oid);
$t->assign('page_name', $page_name);
$t->assign('org', $org);
$t->assign('org_list', $org_list);


function list2hash($list)
{
    $ret = [];
    foreach ($list as $value) {
        $ret[$value] = 1;
    }

    return $ret;
}
