<?php

use grn\grn\access\service\AppAccess;

require_once('grn/smarty.csp');
$t = new GRN_Smarty;

require('SmartyValidate.class.php');
SmartyValidate::connect($t);

//--------------------------------------------------------------

// ログインユーザーを取得する
global $G_container_base;
/** @var $uum GRN_Uum */
$uum = $G_container_base->getInstance('uum');
$login = $uum->getLoginUser();
if ( ! is_object($login) || ! is_a($login, 'CB_User')) {
    cb_throw_error(E_GRN_SYSTEM_INVALID_USER_ID);
}

// システムデフォルト設定ロジックを取得する
require_once('grn/ui.csp');
$manager = GRN_UIConfigManager::getInstance();
assert('is_object( $manager ) && is_a( $manager, \'GRN_UIConfigManager\' )');
$config = $manager->getUserConfig($login);
assert('is_object( $config ) && is_a( $config, \'GRN_UIConfig\' )');
$system_config = $manager->getSystemConfig();

// 一覧画面で表示する件数
$list_max = [
    'select_name' => 'list_max',
    'options'     => $config::$LIST_MAX,
    'padding'     => '&nbsp;',
    'selected'    => $config->getListMax()
];

// フォローの一覧画面で表示する件数
$follow_max = [
    'select_name' => 'follow_max',
    'options'     => $config::$FOLLOW_MAX,
    'padding'     => '&nbsp;',
    'selected'    => $config->getFollowMax()
];

// 標題を表示する幅
$subject_width = [
    'select_name' => 'subject_width',
    'options'     => [10, 15, 20, 25, 30, 35, 40, 45, 50, 60, 70, 80, 90, 100],
    'padding'     => '&nbsp;',
    'selected'    => $config->getSubjectWidth()
];

// 本文およびフォロー等の抄録を表示する幅
$truncate_width = [
    'select_name' => 'truncate_width',
    'options'     => [10, 15, 20, 25, 30, 35, 40, 45, 50, 60, 70, 80, 90, 100],
    'padding'     => '&nbsp;',
    'selected'    => $config->getTruncateWidth()
];

// 差出人/受取人等を表示する幅
$name_width = [
    'select_name' => 'name_width',
    'options'     => [10, 15, 20, 25, 30, 35, 40, 45, 50, 60, 70, 80, 90, 100],
    'padding'     => '&nbsp;',
    'selected'    => $config->getNameWidth()
];

// 画像ファイル（ gif, jpeg など）の表示
$inline_setting = $config->getInlineSetting();

// ユーザー名の後ろに優先する組織を表示するかどうか
$show_priority_group = $config->getShowPriorityGroup();

// ユーザー名の表示方法
$user_name_format = $config->getUserNameFormat();

// ユーザーアイコンの表示方法
$user_icon = $config->getUserIconFormat();
$system_user_icon = $system_config->getUserIconFormat();

// 本文の入力欄の横幅
$area_width = [
    'select_name' => 'area_width',
    'options'     => [20, 30, 40, 50, 60, 70, 80, 90, 100],
    'padding'     => '&nbsp;',
    'selected'    => $config->getAreaWidth()
];

// 本文の入力欄の縦幅
$area_height = [
    'select_name' => 'area_height',
    'options'     => [10, 15, 20, 25, 30, 35, 40, 45, 50],
    'padding'     => '&nbsp;',
    'selected'    => $config->getAreaHeight()
];

// メールアドレスのリンク
require_once('grn/application.csp');
$locator = GRN_ApplicationLocator::instance();
$apps = $locator->getActiveApplicationIds();
$options = [];
$options['default'] = [
    'label'    => cb_msg('grn.common', 'mailto_link'),
    'value'    => 'default',
    'selected' => is_null($config->getMailToApplication())
];
foreach ($apps as $app_id) {
    $app = $locator->getInstance($app_id);
    if (is_a($app, 'GRN_ApplicationBase')
        && AppAccess::isAppAvailable($app_id)
        && in_array('getutility',
            array_map("strtolower", get_class_methods(get_class($app))))
    ) {
        $utility = $app->getUtility();
        $system = $utility->getSystemConfig();
        $system->getGeneralSetting($general_settings);
        if ( ! $general_settings['disable_mail']) {
            $selected = ($config->getMailToApplication() === $app_id);
            $options[$app_id] = [
                'label'    => cb_plain_msg('grn.common', 'mailto_app',
                    ['application_name' => $app->getName()]),
                'value'    => $app_id,
                'selected' => $selected
            ];
        }
    }
}

// add web mailer
require_once('grn/webmailerlink_logic.csp');
$mailer_logic = GRN_WebMailerLinkLogic::getInstance();
$mailer_list = $mailer_logic->listMailer();
foreach ($mailer_list as $key => $mailer) {
    $options[] = [
        'label'    => $mailer['name'],
        'value'    => 'custom:' . $key,
        'selected' => ($config->getMailToApplication() === 'custom:' . $key)
    ];
}

$mailto_application = [
    'select_name' => 'mailto_application',
    'options'     => $options
];

// ユーザー名の国際化機能
require_once("fw/i18n/system_config.csp");
$t->assign("nickname_enabled", CB_I18N_SystemConfig::isNickname());


// ファイルに出力する文字コード
require_once('fw/i18n.csp');
$i18n = CB_I18N::getInstance();
$encodings = $i18n->getEncodingNames();

global $G_config_common;

$export_charset = [
    'encodings' => $encodings,
    'value'     => $config->getExportCharset(),
    'default'   => $G_config_common->get('I18N', 'default_external_encoding'),
    'fixed'     => $G_config_common->get('I18N', 'fix_external_encoding')
];

// SmartyにUIの共通設定を割り当てる
$t->assign('config', [
    'list_max'            => $list_max,
    'follow_max'          => $follow_max,
    'subject_width'       => $subject_width,
    'truncate_width'      => $truncate_width,
    'name_width'          => $name_width,
    'inline_setting'      => $inline_setting,
    'user_name_format'    => $user_name_format,
    'show_priority_group' => $show_priority_group,
    'user_icon'           => $user_icon,
    'area_width'          => $area_width,
    'area_height'         => $area_height,
    'mailto_application'  => $mailto_application,
    'export_charset'      => $export_charset
]);

$t->assign('system_config', ['user_icon' => $system_user_icon]);

//--------------------------------------------------------------

// Smartyにページタイトルを割り当てる
$page_title = grn_get_current_page_display_name();
$t->assign('page_title', $page_title);

// Smartyにサイトポジションを割り当てる
$t->assign('site_position', [['page' => '', 'name' => $page_title]]);

// Smartyを実行する
$t->display(cb_get_pagename() . '.tpl');


