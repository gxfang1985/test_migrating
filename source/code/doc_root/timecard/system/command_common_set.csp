<?php

use grn\grn\Validate;

if (strcasecmp(@ $_SERVER['REQUEST_METHOD'], 'POST') == 0) {
    require_once('timecard/config.csp');
    $config = GRN_Timecard_SystemConfig::getInstance();

    require_once('timecard/inspection.csp');
    $logger = GRN_Timecard_Inspection::getInstance();

    if (array_key_exists('auto_puchout', $G_INPUT)
        && $G_INPUT['auto_puchout']
    ) {
        $config->setEnableAutoPunchOut(true);
        $logger->writeLog('config', 'common', ['auto_punchout' => 1]);
    } else {
        $config->setEnableAutoPunchOut(false);
        $logger->writeLog('config', 'common', ['auto_punchout' => 0]);
    }

    if (array_key_exists('offset_day', $G_INPUT)) {
        if ($G_INPUT['offset_day'] > 28 || $G_INPUT['offset_day'] < 1
            || Validate::isNumber($G_INPUT['offset_day']) === false
        ) {
            cb_throw_error(E_COMMON_INVALID_DATE);
        }
        $config->setOffsetDay($G_INPUT['offset_day']);
        $logger->writeLog('config', 'common',
            ['offset_day' => $G_INPUT['offset_day']]);
    }

    if (array_key_exists('offset_month', $G_INPUT)) {
        $config->setOffsetMonth($G_INPUT['offset_month']);
        $logger->writeLog('config', 'common',
            ['offset_month' => $G_INPUT['offset_month']]);
    }

    if (array_key_exists('absence_max', $G_INPUT)) {
        if ($G_INPUT['absence_max'] > 6 || $G_INPUT['absence_max'] < 0
            || Validate::isNumber($G_INPUT['absence_max']) === false
        ) {
            cb_throw_error(E_COMMON_INVALID_DATE);
        }
        $config->setAbsenceMax($G_INPUT['absence_max']);
        $logger->writeLog('config', 'common',
            ['absence_max' => $G_INPUT['absence_max']]);
    }

    if (array_key_exists('change_of_day', $G_INPUT)) {
        $tm = new CB_Time();
        $tm->hour = intval($G_INPUT['change_of_day']);
        $tm->minute = 0;
        $tm->second = 0;
        $config->setChangeOfDay($tm);
        $logger->writeLog('config', 'common',
            ['change_of_day' => $G_INPUT['change_of_day']]);
    }

    if (@ $G_INPUT['user_modify']) {
        $config->setEnableModifyRecord(true);
        $logger->writeLog('config', 'common', ['user_modify' => 1]);
    } else {
        $config->setEnableModifyRecord(false);
        $logger->writeLog('config', 'common', ['user_modify' => 0]);
    }

    cb_redirect('system/application_list', ['app_id' => 'timecard']);

}


