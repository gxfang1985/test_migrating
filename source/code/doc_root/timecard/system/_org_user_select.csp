<?php
$org_id = @ $G_INPUT['poid'];
$g_input_oid = @ $G_INPUT['oid'];

require_once('_org_util.csp');

require_once('grn/org_tree.csp');

$page_name = cb_get_pagename();

$util = GRN_OrgTreeUtil::getInstance();
$tree =& $util->getTree($page_name);

if (is_null($org_id)) {
    $org_id = $tree->getSelectedNode();
}

if (array_key_exists('top', $G_INPUT) || is_null($tree->getRoot())) {
    $tree->initialize();
    $org_id = null;
}
$tree->setSelectedNode($org_id);
$util->setTree($page_name, $tree);
$org = $tree->getRoot();

//-- prepare uum and uum_util
global $G_container_base;
$uum =& $G_container_base->getInstance('uum');

if ($org_id) {
    $conditions = [];
    if (0 > $org_id) {
        $number_of_all = $uum->getNoGroupUserCount();
        if (false === $number_of_all) {
            cb_throw_error(E_GRN_GROUP_NOT_FOUND);
        }
    } else {
        // count of user belonging to the selected group
        $number_of_all = $uum->getGroupUserCount($org_id);
        if ($number_of_all === false) {
            cb_throw_error(E_GRN_GROUP_NOT_FOUND);
        }
    }

    //--number on page

    require_once('grn/ui.csp');
    $ucm = GRN_UIConfigManager::getInstance();
    $login =& $uum->getLoginUser();
    $uc =& $ucm->getUserConfig($login);
    $number_on_page = $uc->getListMax();

    //$number_on_page = 10;   // fixed
    //------------------
    // N件ナビゲーション
    require_once("grn/controller.csp");
    $controller_util = new GRN_ControllerUtil();
    assert('! is_null( $controller_util )');

    // 現在位置
    $current_start_position = $controller_util->getNaviStartPosition();
    // セッションに保存
    $controller_util->setNaviStartPosition($current_start_position);

    // n件ナビゲーション情報を取得する
    $navigation_info
        = $controller_util->makeNaviInformation($current_start_position,
        $number_on_page, $number_of_all,
        ['oid' => $g_input_oid, 'poid' => $org_id, 'ss' => 1]);

    //-- get users and convert them to users for view
    if (0 > $org_id) {
        $users_on_logic = $uum->getNoGroupUsers($current_start_position,
            $number_on_page);
    } else {
        $users_on_logic = $uum->getGroupUsers($org_id, $current_start_position,
            $number_on_page);
    }

    if ($users_on_logic === false) {
        require_once('grn/error_code.csp');
        cb_throw_error(E_GRN_GROUP_NOT_FOUND);
    }

    $user_list = [];
    foreach (array_keys($users_on_logic) as $user_id) {
        $user =& $users_on_logic[$user_id];
        $user_list[$user_id] = [
            'uid'          => $user->getOID(),
            'display_name' => $user->get('display_name'),
            'position'     => $user->get('position'),
            'foreign_key'  => $user->get('foreign_key'),
        ];
    }
} else {
    $navigation_info = [
        'navi' => [
            'number_on_page'               => 10,
            'previous_page_start_position' => -1,
            'next_page_start_position'     => -1,
        ],
    ];
}

//-- setup the list of selected groups
require_once('fw/session_manager.csp');
$session_manager = CB_SessionManager::getInstance();
$session =& $session_manager->getSession($session_name);
$user_ids = $session->get('user_ids');
if ( ! is_array($user_ids)) {
    $user_ids = [];
}

//--reset selected user list
if ( ! @ $G_INPUT['ss']) {
    $user_ids = [];
} //--added user list
elseif (@ $G_INPUT['add']) {
    $aids = @ $G_INPUT['aid'];
    if (is_array($aids) && count($aids)) {
        foreach ($aids as $aid) {
            $user_ids[$aid] = 1;
        }
        $t->assign('add', true);
    }
} //--removed user list
elseif (@ $G_INPUT['remove']) {
    $rids = @ $G_INPUT['rid'];
    if (is_array($rids) && count($rids)) {
        foreach ($rids as $rid) {
            unset($user_ids[$rid]);
        }
    }
}

//--set selected organization list to session
$session->set('user_ids', $user_ids);

//--construct selected user list
$selected_list = [];
foreach (array_keys($user_ids) as $id) {
    $user =& $uum->getUser($id);
    if ( ! $user) {
        continue;
    }
    $selected_list[$id] = [
        'uid'          => $id,
        'display_name' => $user->get('display_name'),
        'foreign_key'  => $user->get('foreign_key'),
    ];
}

//-- set variables for view
$t->assign('poid', $org_id);
$t->assign('page_name', $page_name);
$t->assign('org', $org);
$t->assign('is_root', ! $org_id);
$t->assign('user_list', @ $user_list);
$t->assign('navi_info', @ $navigation_info);
$t->assign('selected_list', $selected_list);

