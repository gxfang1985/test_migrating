<?php

global $G_INPUT;

if ( ! isset($user) || is_null($user)) {
    require_once('grn/error_code.csp');
    cb_throw_error(E_GRN_USER_NOT_FOUND);
}
if ( ! isset($t) || is_null($t)) {
    require_once('timecard/error_code.csp');
    cb_throw_error(E_GRN_TIMECARD_INTERNAL);
}

$t->assign('user_id', $user->getOID());
$t->assign('user_name', $user->get('display_name'));


require_once('fw/date.csp');

$ts = new CB_TimeStampEx();
$today = $ts->getDate();
$date = clone $today;

if (array_key_exists('date', $G_INPUT)) {
    $date->parse($G_INPUT['date']);
    //check if date is valid if not throw error
    if ( ! cb_date_validate_date($date)) {
        cb_throw_error(E_COMMON_INVALID_DATE);
    }
}

if ( ! isset($utility) || is_null($utility)) {
    require_once('timecard/controller.csp');
    $utility = new GRN_Timecard_ControllerUtil();
}

$config = $utility->getConfigValues();

$view_date = clone $date;

if ($view_date->day < (intval($config['offset_day']))) {
    $view_date->moveMonths(intval($config['offset_month']) - 1);
} else {
    $view_date->moveMonths(intval($config['offset_month']));
}

$t->assign('date', [
        'year'  => $view_date->year,
        'month' => $view_date->month,
    ]
);

require_once('timecard/logic.csp');
$logic = GRN_Timecard_Logic::getInstance();

$record =& $logic->getRecord($user, $date);

$card_for_view = $utility->getRecordView($record, true);

$card_for_view['date'] = $date->format();

if ( ! $logic->isToday($ts)) {
    $today->moveDays(-1);
}
$card_for_view['future'] = ($today->compare($date) < 0);

$t->assign('card', $card_for_view);
$t->assign('config', $config);


