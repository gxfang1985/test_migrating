<?php

global $G_INPUT;

if ( ! isset($user) || is_null($user)) {
    require_once('grn/error_code.csp');
    cb_throw_error(E_GRN_USER_NOT_FOUND);
}

require_once('timecard/functions.csp');

if (is_null(($start = grn_timecard_argdate('start')))) {
    require_once('timecard/error_code.csp');
    cb_throw_error(E_GRN_TIMECARD_INVALID_START_DATE);
}

if (is_null(($end = grn_timecard_argdate('end')))) {
    require_once('timecard/error_code.csp');
    cb_throw_error(E_GRN_TIMECARD_INVALID_END_DATE);
}

if ($start->compare($end) > 0) {
    require_once('timecard/error_code.csp');
    cb_throw_error(E_GRN_TIMECARD_INVALID_SPAN);
}

$end->moveDays(1);


$charset = @ $G_INPUT['charset'];
if ( ! $charset) {
    global $G_config_common;
    $charset = $G_config_common->get('I18N', 'default_external_encoding');
}


/// テンポラリのファイルを作成
$tempdir = cb_tmpdir();
$temp_filename = tempnam($tempdir, 'tm_');

require_once('fw/csv.csp');
$writer = new CB_CSVWriter($charset, $temp_filename);

// 項目名の書き出し
if (@ $G_INPUT['item_name']) {
    grn_timecard_write_csv_header($writer);
}

require_once('timecard/logic.csp');
$logic = GRN_Timecard_Logic::getInstance();

$logic->exportCSV($user, $writer, $start, $end);

$writer->close();

// 一時ファイルに書き出した内容をファイルとして出力
cb_prepare_download('timecard.csv', 'text/csv', false);
$fp = fopen($temp_filename, 'rb');
if (($size = filesize($temp_filename)) > 0) {
    echo fread($fp, $size);
}
fclose($fp);
// 一時ファイルの削除
unlink($temp_filename);



