<?php

global $G_INPUT;


if ( ! isset($t) || is_null($t)) {
    require_once('timecard/error_code.csp');
    cb_throw_error(E_GRN_TIMECARD_INTERNAL);
}

require_once('fw/date.csp');
$ts = new CB_TimeStampEx();
$today = $ts->getDate();

if ( ! array_key_exists('date', $G_INPUT) || strlen($G_INPUT['date']) < 1) {
    $date = clone $today;
} else {
    $date = new CB_Date();
    $date->parse($G_INPUT['date']);
    $date = new CB_DateEx($date);
}

$t->assign('date', $date->format());


require_once('timecard/config.csp');
$config = GRN_Timecard_SystemConfig::getInstance();

$date->day = (int)$config->getOffsetDay();
if ($date->day > $today->day) {
    $date->moveMonths(-1);
}

$start_date = clone $date;

$t->assign('start', $start_date);

$date->moveMonths(1);
$date->moveDays(-1);
$end_date = clone $date;

$t->assign('end', $end_date);


if ( ! isset($utility) || is_null($utility)) {
    require_once('timecard/controller.csp');
    $utility = new GRN_Timecard_ControllerUtil();
}

$t->assign('config', $utility->getConfigValues());


