<?php

if (strcasecmp(@ $_SERVER['REQUEST_METHOD'], 'POST') == 0) {
    global $G_INPUT;

    require_once('grn/smarty.csp');
    $t = new GRN_Smarty();

    require('SmartyValidate.class.php');
    SmartyValidate::connect($t);
    $target_name = 'memo/add';
    SmartyValidate::register_form($target_name);

    if (SmartyValidate::is_valid($G_INPUT, $target_name)) {
        global $G_container_app;
        $uum = $G_container_app->getInstance('uum');
        $login = $uum->getLoginUser();

        require_once('memo/logic.csp');
        $logic = GRN_Memo_Logic::getInstance();

        require_once('memo/controller.csp');

        $folder = null;
        $pdid = null;
        if (array_key_exists('pdid', $G_INPUT) && strlen($G_INPUT['pdid']) > 0
            && $G_INPUT['pdid'] > 0
        ) {
            $pdid = $G_INPUT['pdid'];

            if (is_null(($folder =& $logic->getFolder($login, $pdid)))) {
                require_once('memo/error_code.csp');
                cb_throw_error(E_GRN_MEMO_FOLDER_NOT_FOUND);
            }
        }
        $item = $logic->createItem($login, $folder);

        $title = $G_INPUT['title'];
        $data = null;
        $html = null;

        if (@ $G_INPUT['editor']) {
            require_once('grn/controller.csp');
            $data = grn_strip_tags($G_INPUT['data']);
            $html = $G_INPUT['data'];
        } else {
            $data = $G_INPUT['data'];
            $html = null;
        }

        require_once('grn/upload.csp');
        $files = GRN_UploadFile::getUploadedFiles(@$G_INPUT['upload_ticket'],
            @$G_INPUT['upload_fileids'], true);

        $item->createContent($login, $title, $data, $html, $files);

        //Log: Create memo
        require_once('memo/inspection.csp');
        $inspection = GRN_Memo_Inspection::getInstance();
        $inspection->writeLogMemo('create', $item);

        // 添付ファイルがある場合のみ、ファイルサイズ制限のチェックを行う。
        if (count($files) !== 0) {
            $logic->checkFileSize($login);
        }

        if ($pdid) {
            cb_redirect('memo/index', ['did' => $pdid]);
        } else {
            cb_redirect('memo/index', ['did' => @$G_INPUT['did']]);
        }
    } else {
        $t->setPageInfo($target_name);

        require_once('memo/controller.csp');
        $utility = new GRN_Memo_ControllerUtil($target_name);

        require_once('_memo_form.csp');
        $t->assign('upload_ticket', @$G_INPUT['upload_ticket']);
        //remove unchecked files
        require_once('grn/upload.csp');
        GRN_UploadFile::removeUploadedFilesByFileIds(@$G_INPUT['upload_ticket'],
            @$G_INPUT['upload_fileids']);

        $position = ['memo/index' => ['did' => @$G_INPUT['did']]];
        $utility->setSitePosition($t, $position);

        $t->display($target_name . '.tpl');
    }
}
