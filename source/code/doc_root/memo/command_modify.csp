<?php

if (strcasecmp(@ $_SERVER['REQUEST_METHOD'], 'POST') == 0) {
    global $G_INPUT;

    require_once('grn/smarty.csp');
    $t = new GRN_Smarty();

    require('SmartyValidate.class.php');
    SmartyValidate::connect($t);
    $target_name = 'memo/modify';
    SmartyValidate::register_form($target_name);

    if (SmartyValidate::is_valid($G_INPUT, $target_name)) {
        global $G_container_app;
        $uum =& $G_container_app->getInstance('uum');
        $login =& $uum->getLoginUser();

        require_once('memo/logic.csp');
        $logic = GRN_Memo_Logic::getInstance();

        if ( ! array_key_exists('iid', $G_INPUT)) {
            require_once('memo/error_code.csp');
            cb_throw_error(E_GRN_MEMO_ITEM_NOT_FOUND);
        }
        $item_id = $G_INPUT['iid'];

        if ( ! ($item =& $logic->getItem($login, $item_id))) {
            require_once('memo/error_code.csp');
            cb_throw_error(E_GRN_MEMO_ITEM_NOT_FOUND);
        }

        require_once('memo/controller.csp');

        $pdid = null;
        if (array_key_exists('pdid', $G_INPUT)) {
            $pdid = $G_INPUT['pdid'];

            if ( ! $pdid) {
                $item->set('folder', null);
            } else {
                if ( ! ($folder =& $logic->getFolder($login, $pdid))) {
                    require_once('memo/error_code.csp');
                    cb_throw_error(E_GRN_MEMO_FOLDER_NOT_FOUND);
                }

                if ($item->getId('folder') !== $folder->getOID()) {
                    // アイテムを移動
                    $item->set('folder', $folder);
                }
            }
        }

        $content = $item->getContent();

        $title = $G_INPUT['title'];
        $data = null;
        $html = null;

        if (@ $G_INPUT['editor']) {
            require_once('grn/controller.csp');
            $data = grn_strip_tags($G_INPUT['data']);
            $html = $G_INPUT['data'];
        } else {
            $data = $G_INPUT['data'];
            $html = null;
        }

        $tmp_key = grn_get_temporary_key();
        $files = grn_get_attached_files($target_name . $tmp_key, 'memo');
        require_once('grn/upload.csp');
        $upload_files
            = GRN_UploadFile::getUploadedFiles(@$G_INPUT['upload_ticket'],
            @$G_INPUT['upload_fileids'], true);
        foreach ($upload_files as $key => $val) {
            $files[$key] = $val;
        }

        $item->setTitle($title);
        $content->set('data', $data);
        $content->set('html', $html);

        $current_files = $content->getFiles();

        // ファイルを新規に追加するかどうかのフラグ
        $added = false;

        foreach (array_keys($files) as $key) {
            if ( ! array_key_exists($key, $current_files)) {
                $added = true;
                $content->addFile($login, $files[$key], null);
                unset($current_files[$key]);
            } else {
                unset($current_files[$key]);
            }
        }

        foreach (array_keys($current_files) as $key) {
            $content->deleteFile($key);
        }

        $content->onUpdate($login);

        $item->onUpdate($login);
        $item->updateNow();

        //Log: Update memo
        require_once('memo/inspection.csp');
        $inspection = GRN_Memo_Inspection::getInstance();
        $inspection->writeLogMemo('modify', $item);

        // 新規にファイルを追加する場合のみ、ファイルサイズ制限のチェックを行う。
        if ($added) {
            $logic->checkFileSize($login);
        }

        cb_redirect('memo/view',
            ['did' => @$G_INPUT['did'], 'iid' => $item_id]);
    } else {
        $t->setPageInfo($target_name);

        require_once('memo/controller.csp');
        $utility = new GRN_Memo_ControllerUtil($target_name);

        require_once('_memo_form.csp');
        $t->assign('upload_ticket', @$G_INPUT['upload_ticket']);

        //remove unchecked files
        require_once('grn/upload.csp');
        GRN_UploadFile::removeUploadedFilesByFileIds(@$G_INPUT['upload_ticket'],
            @$G_INPUT['upload_fileids']);

        $position = [
            'memo/index' => ['did' => @$G_INPUT['did']],
            'memo/view'  => [
                'did' => @$G_INPUT['did'],
                'iid' => @$G_INPUT['iid']
            ],
        ];

        $utility->setSitePosition($t, $position);

        $t->display($target_name . '.tpl');
    }
}
