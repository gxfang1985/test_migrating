<?php

if (strcasecmp(@ $_SERVER['REQUEST_METHOD'], 'POST') == 0) {
    global $G_INPUT;

    global $G_container_app;
    $uum =& $G_container_app->getInstance('uum');
    $login =& $uum->getLoginUser();

    require_once('memo/logic.csp');
    $logic = GRN_Memo_Logic::getInstance();

    $folder_id = null;
    if (array_key_exists('did', $G_INPUT)) {
        $folder_id = $G_INPUT['did'];
    }

    if ( ! array_key_exists('iid', $G_INPUT)) {
        require_once('memo/error_code.csp');
        cb_throw_error(E_GRN_MEMO_ITEM_NOT_FOUND);
    }
    $item_id = $G_INPUT['iid'];

    if ( ! array_key_exists('fid', $G_INPUT)) {
        require_once('memo/error_code.csp');
        cb_throw_error(E_GRN_MEMO_ATTACHED_FILE_NOT_FOUND);
    }
    $file_id = $G_INPUT['fid'];

    // アイテムの取得
    if ( ! ($item =& $logic->getItem($login, $item_id))) {
        require_once('memo/error_code.csp');
        cb_throw_error(E_GRN_MEMO_ITEM_NOT_FOUND);
    }

    // アイテムのタイプを確認
    if ($item->isFile()) {
        require_once('memo/error_code.csp');
        cb_throw_error(E_GRN_MEMO_CONTENT_NOT_FOUND);
    }

    // メモを取得
    if ( ! ($content = $item->getContent())) {
        require_once('memo/error_code.csp');
        cb_throw_error(E_GRN_MEMO_CONTENT_NOT_FOUND);
    }

    // ファイルを取得
    if ( ! ($file =& $content->getFile($file_id))) {
        require_once('memo/error_code.csp');
        cb_throw_error(E_GRN_MEMO_ATTACHED_FILE_NOT_FOUND);
    }

    if (@ $G_INPUT['cancel']) {
        cb_redirect('memo/attached_file_view',
            ['did' => $folder_id, 'iid' => $item_id, 'fid' => $file_id]);
    }

    require_once('grn/upload.csp');
    $files = GRN_UploadFile::getUploadedFiles(@$G_INPUT['upload_ticket'],
        @$G_INPUT['upload_fileids'], true);

    if ((is_array($files) && count($files) == 1)) {
        $uploaded_file = array_pop($files);
        if ( ! array_key_exists('cancel', $G_INPUT)) {
            $content->updateFile($file_id, $uploaded_file, $G_INPUT['comment']);
        }

        // 総ファイルサイズをチェック
        $logic->checkFileSize($login);

        cb_redirect('memo/attached_file_view',
            ['did' => $folder_id, 'iid' => $item_id, 'fid' => $file_id]);
    } else {
        require_once('grn/smarty.csp');
        $t = new GRN_Smarty();

        $target_name = 'memo/attached_file_upload';
        $t->setPageInfo($target_name);

        $t->assign('comment', cb_at($G_INPUT, 'comment'));
        $t->assign('upload_ticket', cb_at($G_INPUT, 'upload_ticket'));

        $t->assign('folder_id', $folder_id);
        $t->assign('item_id', $item_id);
        $t->assign('file_id', $file_id);
        $t->assign('err_no_file', true);

        require_once('memo/controller.csp');
        $utility = new GRN_Memo_ControllerUtil($target_name);

        $file_for_view = $utility->getFileView($file);
        $t->assign('file', $file_for_view);

        $t->assign('linkparams',
            ['did' => $folder_id, 'iid' => $item_id, 'fid' => $file_id]);

        $position = [
            'memo/index'              => ['did' => $folder_id],
            'memo/view'               => [
                'did' => $folder_id,
                'iid' => $item_id
            ],
            'memo/attached_file_view' => [
                'did' => $folder_id,
                'iid' => $item_id,
                'fid' => $file_id
            ],
        ];

        $utility->setSitePosition($t, $position);

        $t->display($target_name . '.tpl');
    }
}
