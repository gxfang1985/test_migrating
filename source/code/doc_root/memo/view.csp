<?php

global $G_INPUT;

global $G_container_app;
$uum = $G_container_app->getInstance('uum');
$login = $uum->getLoginUser();

require_once("grn/smarty.csp");
$t = new GRN_Smarty;

$folder_id = null;
if (array_key_exists('did', $G_INPUT)
    && grn\grn\Validate::isNumber($G_INPUT['did'])
) {
    $folder_id = $G_INPUT['did'];
}
$t->assign('folder_id', $folder_id);

if ( ! array_key_exists('iid', $G_INPUT)
     || ! grn\grn\Validate::isNumber($G_INPUT['iid'])
) {
    require_once('memo/error_code.csp');
    cb_throw_error(E_GRN_MEMO_ITEM_NOT_FOUND);
}
$item_id = $G_INPUT['iid'];

$t->assign('item_id', $item_id);

require_once('memo/logic.csp');
$logic = GRN_Memo_Logic::getInstance();

if ( ! ($item = $logic->getItem($login, $item_id))) {
    require_once('memo/error_code.csp');
    cb_throw_error(E_GRN_MEMO_ITEM_NOT_FOUND);
}

if ($item->isFile()) {
    require_once('memo/error_code.csp');
    cb_throw_error(E_GRN_MEMO_CONTENT_NOT_FOUND);
}

if ( ! ($content = $item->getContent())) {
    require_once('memo/error_code.csp');
    cb_throw_error(E_GRN_MEMO_CONTENT_NOT_FOUND);
}

require_once('memo/controller.csp');
$utility = new GRN_Memo_ControllerUtil();

$content_for_view = $utility->getContentView($content, true);
$files = $content->getFiles();
$files_for_view = [];
foreach (array_keys($files) as $id) {
    $files_for_view[$id] = $utility->getFileLinkView($files[$id]);
}
$content_for_view['files'] = $files_for_view;
$t->assign('content', $content_for_view);

if ($item->getId('folder')) {
    $folder = $item->get('folder');
    $folder_for_view = grn_memo_folder_view($folder);
    $folder_for_view['path'] = grn_memo_folder_path($folder);
    $t->assign('folder', $folder_for_view);
}

// 移動メニュー
$folders = $logic->getRootFolders($login);
$t->assign('folder_menu', grn_memo_folder_select_menu($folders));
$t->assign('pdid', $item->getId('folder'));

// 前後ナビ
$list_utility = new GRN_Memo_ControllerUtil('memo/index');

$order_column = $list_utility->getListOrderColumn();

require_once('memo/list.csp');
$list = new GRN_Memo_ItemList($login);
$list->addOrderColumn($order_column['column'], $order_column['order']);
if ($folder_id) {
    $folder =& $logic->getFolder($login, $folder_id);
    $list->setFolder($folder);
}

$navi_for_view = [];

if ( ! is_null(($neighbor =& $list->getPrevious($item)))) {
    if ($neighbor->isFile()) {
        $navi_for_view['prev'] = [
            'page'        => 'memo/file_view',
            'page_params' => ['did' => $folder_id, 'iid' => $neighbor->getOID()]
        ];
    } else {
        $navi_for_view['prev'] = [
            'page'        => 'memo/view',
            'page_params' => ['did' => $folder_id, 'iid' => $neighbor->getOID()]
        ];
    }
}
if ( ! is_null(($neighbor =& $list->getNext($item)))) {
    if ($neighbor->isFile()) {
        $navi_for_view['next'] = [
            'page'        => 'memo/file_view',
            'page_params' => ['did' => $folder_id, 'iid' => $neighbor->getOID()]
        ];
    } else {
        $navi_for_view['next'] = [
            'page'        => 'memo/view',
            'page_params' => ['did' => $folder_id, 'iid' => $neighbor->getOID()]
        ];
    }
}
$t->assign('navi', $navi_for_view);


$position = ['memo/index' => ['did' => $folder_id]];
$utility->setSitePosition($t, $position);

$t->assign('config', $utility->getConfigValues($login));

$delete_info = [
    'title'      => grn_get_page_display_name('memo/delete'),
    'page'       => 'memo/delete.tpl',
    'data'       => [
        'memo'      => $content_for_view,
        'folder_id' => $item->getId('folder'),
        'item_id'   => $item->getOID()
    ],
    'no_confirm' => false,
    'handler'    => 'memo_delete',
];

$t->assign('delete_info', $delete_info);

$t->display(cb_get_pagename() . ".tpl");

