<?php

if (strcasecmp(@ $_SERVER['REQUEST_METHOD'], 'POST') == 0) {
    global $G_INPUT;

    global $G_container_app;
    $uum =& $G_container_app->getInstance('uum');
    $login =& $uum->getLoginUser();

    if (array_key_exists('clear', $G_INPUT)) {
        //ユーザープロファイルのメモIDをクリア
        require_once('fw/profile.csp');
        $up =& cb_get_user_profile($login, 'grn.memo.portlet');

        if ($up->getAttribute('item_ids', $item_ids)) {
            $item_ids = [$G_INPUT['plid'] => null];
            $up->updateAttribute('item_ids', $item_ids);
        }
    } else {
        require_once('fw/string_util.csp');
        $data = @ $G_INPUT['memo'];

        // 入力の先頭行をタイトルに使う
        $title = null;
        $start = 0;
        $pos = mb_strpos($data, "\n");

        while (is_null($title)) {
            if ($pos === false) {
                $title = mb_substr($data, $start);
            } else {
                $title = mb_substr($data, $start, $pos - $start);
                if (mb_strlen(cb_trim($title)) < 1) {
                    $title = null;
                    ++$pos;
                    $start = $pos;
                    $pos = mb_strpos($data, "\n", $start);
                }
            }
        }

        require_once('memo/logic.csp');
        $logic = GRN_Memo_Logic::getInstance();

        $folder = null;
        if (array_key_exists('did', $G_INPUT)) {
            $folder =& $logic->getFolder($login, $G_INPUT['did']);
        }

        $item = null;

        if (array_key_exists('iid', $G_INPUT) && $G_INPUT['iid'] > 0) {
            $item =& $logic->getItem($login, $G_INPUT['iid']);
        }

        require_once('fw/string_util.csp');
        $title = cb_trim($title);

        if ( ! $item || $item->isFile()) {
            // 新規追加でタイトルが空（空白または改行のみの内容）の場合アイテムは生成しない
            if (strlen($title) < 1) {
                cb_redirect('portal/index', ['pid' => @$G_INPUT['pid']]);
            }

            $item =& $logic->createItem($login, $folder);

            // ユーザープロファイルにアイテムIDを保存

            require_once('fw/profile.csp');
            $up =& cb_get_user_profile($login, 'grn.memo.portlet');

            $item_ids = null;
            if ( ! $up->getAttribute('item_ids', $item_ids)) {
                $item_ids = [$G_INPUT['plid'] => $item->getOID()];
                $up->createAttribute('item_ids', $item_ids);
            } else {
                if ( ! is_array($item_ids)) {
                    $item_ids = [];
                }

                $item_ids[$G_INPUT['plid']] = $item->getOID();
                $up->updateAttribute('item_ids', $item_ids);
            }

            $content =& $item->createContent($login, $title, $data, null, null);

            //Log: Create memo
            require_once('memo/inspection.csp');
            $inspection = GRN_Memo_Inspection::getInstance();
            $inspection->writeLogMemo('create', $item);
        } else {
            $content = $item->getContent();

            // タイトルが空になる場合はタイトルを更新しない
            $old_title = $item->getTitle();
            if (strlen($old_title) < 1 && strlen($title) > 0) {
                $item->setTitle($title);
            }

            $content->set('data', $data);
            $content->set('html', null);

            $content->onUpdate();
            $item->onUpdate();

            //Log: Update memo
            require_once('memo/inspection.csp');
            $inspection = GRN_Memo_Inspection::getInstance();
            $inspection->writeLogMemo('modify', $item);
        }
    }

    //トップページへリダイレクト
    cb_redirect('portal/index', ['pid' => @$G_INPUT['pid']]);
}
