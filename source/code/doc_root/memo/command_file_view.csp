<?php

if (strcasecmp(@ $_SERVER['REQUEST_METHOD'], 'POST') == 0) {
    global $G_INPUT;

    global $G_container_app;
    $uum =& $G_container_app->getInstance('uum');
    $login =& $uum->getLoginUser();

    require_once('memo/logic.csp');
    $logic = GRN_Memo_Logic::getInstance();

    $folder_id = null;
    if (array_key_exists('did', $G_INPUT)) {
        $folder_id = $G_INPUT['did'];
    }

    if ( ! array_key_exists('iid', $G_INPUT)) {
        require_once('memo/error_code.csp');
        cb_throw_error(E_GRN_MEMO_ITEM_NOT_FOUND);
    }
    $item_id = $G_INPUT['iid'];

    if ( ! ($item =& $logic->getItem($login, $item_id))) {
        require_once('memo/error_code.csp');
        cb_throw_error(E_GRN_MEMO_ITEM_NOT_FOUND);
    }

    if ( ! $item->isFile()) {
        require_once('memo/error_code.csp');
        cb_throw_error(E_GRN_MEMO_ITEM_NOT_FOUND);
    }

    if ( ! ($file = $item->getContent())) {
        require_once('memo/error_code.csp');
        cb_throw_error(E_GRN_MEMO_CONTENT_NOT_FOUND);
    }

    require_once('memo/controller.csp');

    $folder = null;
    $old_folder = $item->get('folder');
    if (array_key_exists('pdid', $G_INPUT) && strlen($G_INPUT['pdid']) > 0
        && $G_INPUT['pdid'] > 0
    ) {
        $pdid = $G_INPUT['pdid'];

        if (is_null(($folder =& $logic->getFolder($login, $pdid)))) {
            require_once('memo/error_code.csp');
            cb_throw_error(E_GRN_MEMO_FOLDER_NOT_FOUND);
        }
    }

    $item->set('folder', $folder);
    //Log: move  memo
    require_once('memo/inspection.csp');
    $inspection = GRN_Memo_Inspection::getInstance();
    if ($folder) {
        if ( ! is_null($old_folder)) {
            $old_folder_id = $old_folder->getOID();
        }

        if ((isset($old_folder_id) && $old_folder_id != $folder->getOID())
            || ( ! isset($old_folder_id))
        ) {
            $content = $item->getContent();
            $inspection->writeLogFile('modify', $item, $content);
        }
    } else {
        if ( ! is_null($old_folder)) {
            $content = $item->getContent();
            $inspection->writeLogFile('modify', $item, $content);
        }
    }

    cb_redirect('memo/file_view', ['did' => @$pdid, 'iid' => $item_id]);
}
