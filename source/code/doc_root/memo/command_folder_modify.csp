<?php

if (strcasecmp(@ $_SERVER['REQUEST_METHOD'], 'POST') == 0) {
    global $G_INPUT;

    require_once('grn/smarty.csp');
    $t = new GRN_Smarty();

    require_once('SmartyValidate.class.php');
    SmartyValidate::connect($t);
    $target_name = 'memo/folder_modify';
    SmartyValidate::register_form($target_name);

    if (SmartyValidate::is_valid($G_INPUT, $target_name)) {
        global $G_container_app;
        $uum =& $G_container_app->getInstance('uum');
        $login =& $uum->getLoginUser();

        if ( ! array_key_exists('did', $G_INPUT) || strlen($G_INPUT['did']) < 1
             || $G_INPUT['did'] < 1
        ) {
            require_once('memo/error_code.csp');
            cb_throw_error(E_GRN_MEMO_FOLDER_NOT_FOUND);
        }
        $folder_id = $G_INPUT['did'];

        require_once('memo/logic.csp');
        $logic = GRN_Memo_Logic::getInstance();

        if (is_null(($folder =& $logic->getFolder($login, $folder_id)))) {
            require_once('memo/error_code.csp');
            cb_throw_error(E_GRN_MEMO_FOLDER_NOT_FOUND);
        }

        $folder->set('name', $G_INPUT['title']);
        $folder->set('description', $G_INPUT['memo']);

        if ($folder->getId('parent') != $G_INPUT['pdid']) {
            if (is_null(($parent =& $logic->getFolder($login,
                $G_INPUT['pdid'])))
            ) {
                $logic->addRootFolder($login, $folder);
            } else {
                $valid_parent = true;
                $parent_for_check = $parent;
                while ( ! is_null($parent_for_check)) {
                    if ($folder->getOID() == $parent_for_check->getOID()) {
                        $valid_parent = false;
                        break;
                    }
                    $parent_for_check = $logic->getFolder($login,
                        $parent_for_check->getId('parent'));
                }
                if ($valid_parent) {
                    $parent->addFolder($folder);
                }
            }
        }

        $folder->onUpdate();

        //ログの書き出し↓
        require_once('memo/inspection.csp');
        $inspection = GRN_Memo_Inspection::getInstance();
        $inspection->writeLogFolder('modify', $folder);
        //ログの書き出し↑

        require_once('memo/folder_tree.csp');
        GRN_Memo_FolderTree::_memo_rebuild_folder_tree($G_INPUT['pdid']);

        cb_redirect('memo/folder_view', ['did' => $folder_id]);
    } else {
        $t->setPageInfo($target_name);

        require_once('_folder_modify.csp');

        $t->assign('title', cb_at($G_INPUT, 'title'));
        $t->assign('pdid', cb_at($G_INPUT, 'pdid'));
        $t->assign('memo', cb_at($G_INPUT, 'memo'));

        $t->display($target_name . '.tpl');
    }
}
