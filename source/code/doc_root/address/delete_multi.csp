<?php

require_once('grn/smarty.csp');
$t = new GRN_Smarty;

////////////////////////////////////////////////////////////////

// GET/POSTされたパラメータを取得する
$bid = null;
if (array_key_exists('bid', $G_INPUT)) {
    $bid = $G_INPUT['bid'];
}
if (0 == strlen($bid)) {
    cb_throw_error(E_GRN_ADDRESS_INVALID_BOOK_ID);
}
$cid = null;
if (array_key_exists('cid', $G_INPUT)) {
    $cid = $G_INPUT['cid'];
}
if ( ! is_array($cid) || 0 == count($cid)) {
    cb_throw_error(E_GRN_ADDRESS_INVALID_CARD_ID);
}

// アドレス帳を取得する
require_once('address/application.csp');
$app_locator = GRN_ApplicationLocator::instance();
/** @var GRN_Address_Application $app */
$app =& $app_locator->getInstance(GRN_ADDRESS_APPLICATION_ID);
if ( ! is_object($app) || ! is_a($app, 'GRN_Address_Application')) {
    cb_throw_error(E_GRN_APPLICATION_NOT_AVAILABLE);
}
$book_manager =& $app->getBookManager();

// ログインユーザーを取得する
global $G_container_base;
$uum =& $G_container_base->getInstance('uum');
$login =& $uum->getLoginUser();
if ( ! is_object($login) || ! is_a($login, 'CB_User')) {
    cb_throw_error(E_GRN_USER_NOT_FOUND);
}
$login_id = $login->getOID();

// アドレス帳の設定を取得する
require_once('address/config.csp');
$config_manager = GRN_Address_ConfigManager::getInstance();
$system_config =& $config_manager->getSystemConfig();
$personal_config =& $config_manager->getPersonalConfig($login);
require_once('grn/ui.csp');
$ui_config_manager = GRN_UIConfigManager::getInstance();
$ui_config =& $ui_config_manager->getUserConfig($login);

// 使用権限を取得する
require_once('address/access.csp');
$access_manager = GRN_Address_AccessManager::getInstance();
if ( ! ($row =& $access_manager->getAbstractData(GRN_ADDRESS_AVAILABLE))) {
    assert('FALSE');
}

// ダイナミックロールを取得する
$dynamic_roles = $uum->listGrantedRoles();

// 使用権限を評価する
$authorities = ['private_address', 'shared_address'];
$security_model = $access_manager->getSecurityModel($row);
$access = $access_manager->evaluateAccess($row, $login, $dynamic_roles,
    $authorities, $security_model);

$books_for_view = [];
if (0 > $bid) {
    // 個人アドレス帳の使用権限を評価する
    $authorities = ['private_address'];
    if ( ! $access_manager->isAllowedAccess($access, $authorities,
        $security_model)
    ) {
        cb_throw_error(E_GRN_ADDRESS_ACCESS_DENY_PRIVATE_ADDRESS);
    }

    // 個人アドレスブックを取得する
    if ( ! ($book =& $book_manager->getPrivateAddressBookByUserId($login_id))) {
        if ( ! ($book =& $book_manager->addPrivateAddressBook('cyde', $login_id,
            []))
        ) {
            cb_throw_error(E_GRN_ADDRESS_PRIVATE_ADDRESS_BOOK_NOT_FOUND);
        }
    }

    $resources = ['application_name' => $app->getName()];

    $books_for_view['display_name'] = cb_msg('grn.address', 'private',
        $resources);
} else {
    // 共有アドレス帳の使用権限を評価する
    $authorities = ['shared_address'];
    if ( ! $access_manager->isAllowedAccess($access, $authorities,
        $security_model)
    ) {
        cb_throw_error(E_GRN_ADDRESS_ACCESS_DENY_SHARED_ADDRESS);
    }

    // 共有アドレスブックを取得する
    if ( ! ($book =& $book_manager->getSharedAddressBook($bid))) {
        cb_throw_error(E_GRN_ADDRESS_SHARED_ADDRESS_BOOK_NOT_FOUND);
    }

    // 共有アドレス帳の閲覧、編集権限を評価する
    $row =& $book->getRow();
    $authorities = ['browse', 'editing', 'operation'];
    $access = $access_manager->evaluateAccess($row, $login,
        $dynamic_roles, $authorities);
    $security_model = $access_manager->getSecurityModel($row);
    $authorities = ['browse', 'editing'];
    if ( ! $access_manager->isAllowedAccess($access, $authorities,
        $security_model)
    ) {
        // 共有アドレス帳の運用管理権限を評価する
        $authorities = ['operation'];
        $security_model = GRN_ADDRESS_SECURITYMODEL_GRANT;
        if ( ! $access_manager->isAllowedAccess($access, $authorities,
            $security_model)
        ) {
            cb_throw_error(E_GRN_ADDRESS_ACCESS_DENY_EDITING);
        }
    }

    $books_for_view['display_name'] = $book->getProperty('display_name');
}

$books_for_view['delete_numbers'] = count($cid);

$t->assign('book_id', $bid);
$t->assign('card_id', $cid);
$t->assign('book', $books_for_view);

////////////////////////////////////////////////////////////////

// Smartyにページタイトルを割り当てる
$page_title = grn_get_page_display_name('address/delete_multi');
$t->assign('page_title', $page_title);

// Smartyにサイトポジションを割り当てる
$page_infos = [
    'index'        => ['sf' => 1, 'bid' => $bid],
    'delete_multi' => null
];
require_once('grn/controller.csp');
$controller_util = new GRN_ControllerUtil();
$site_position = $controller_util->makeSitePosition('address/', $page_infos);
$t->assign('site_position', $site_position);

// Smartyを実行する
$t->display(cb_get_pagename() . '.tpl');


