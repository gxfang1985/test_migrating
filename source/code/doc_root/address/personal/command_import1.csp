<?php

if (0 == strcasecmp(@ $_SERVER['REQUEST_METHOD'], 'POST')) {
    require_once('grn/smarty.csp');
    $t = new GRN_Smarty;

    require_once('SmartyValidate.class.php');
    SmartyValidate::connect($t);

    $target_name = 'address/personal/import1';
    SmartyValidate::register_form($target_name);

    if (SmartyValidate::is_valid($G_INPUT, $target_name)) {
        // GET/POSTされたパラメータを取得する
        $file = $_FILES['file'];
        if (UPLOAD_ERR_OK != $file['error']) {
            cb_throw_error(E_GRN_CSV_FILE_NOT_FOUND);
        }
        $charset = null;
        if (array_key_exists('charset', $G_INPUT)) {
            $charset = $G_INPUT['charset'];
        }
        if (0 == strlen($charset)) {
            $charset = $G_config_common->get('I18N',
                'default_external_encoding');
        }
        $skip = true;
        if (array_key_exists('skip', $G_INPUT)) {
            $skip = $G_INPUT['skip'];
        }

        // アドレス帳を取得する
        require_once('address/application.csp');
        $app_locator = GRN_ApplicationLocator::instance();
        /** @var GRN_Address_Application $app */
        $app =& $app_locator->getInstance(GRN_ADDRESS_APPLICATION_ID);
        if ( ! is_object($app) || ! is_a($app, 'GRN_Address_Application')) {
            cb_throw_error(E_GRN_APPLICATION_NOT_AVAILABLE);
        }
        $book_manager =& $app->getBookManager();

        // ログインユーザーを取得する
        global $G_container_base;
        $uum =& $G_container_base->getInstance('uum');
        $login =& $uum->getLoginUser();
        if ( ! is_object($login) || ! is_a($login, 'CB_User')) {
            cb_throw_error(E_GRN_USER_NOT_FOUND);
        }
        $login_id = $login->getOID();

        // 使用権限を取得する
        require_once('address/access.csp');
        $access_manager = GRN_Address_AccessManager::getInstance();
        if ( ! ($row
            =& $access_manager->getAbstractData(GRN_ADDRESS_AVAILABLE))
        ) {
            assert('FALSE');
        }

        // ダイナミックロールを取得する
        $dynamic_roles = $uum->listGrantedRoles();

        // 個人アドレス帳の使用権限を評価する
        $authorities = ['private_address'];
        $security_model = $access_manager->getSecurityModel($row);
        $access = $access_manager->evaluateAccess($row, $login,
            $dynamic_roles, $authorities, $security_model);
        if ( ! $access_manager->isAllowedAccess($access, $authorities,
            $security_model)
        ) {
            cb_throw_error(E_GRN_ADDRESS_ACCESS_DENY_PRIVATE_ADDRESS);
        }

        // セッションを初期化する
        require_once('fw/session_manager.csp');
        $session_manager = CB_SessionManager::getInstance();
        $session
            =& $session_manager->getSession('address/personal/import1');
        $import_files = $session->getFiles('import_files');
        if (is_array($import_files)) {
            foreach (array_keys($import_files) as $key) {
                $session->unsetFile('import_files', $key);
            }
        }

        // セッションにファイルを保存する
        $file_id = $session->addFile('import_files', $file);

        cb_redirect('address/personal/import2', [
            'fid'     => $file_id,
            'charset' => @ $G_INPUT['charset'],
            'skip'    => @ $G_INPUT['skip']
        ]);
    } else {
        $t->setPageInfo($target_name);
        require_once('_import1.csp');
        $t->display($target_name . '.tpl');
    }
}


