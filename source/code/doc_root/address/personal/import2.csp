<?php

require_once('grn/smarty.csp');
$t = new GRN_Smarty;

////////////////////////////////////////////////////////////////

// GET/POSTされたパラメータを取得する
$fid = null;
if (array_key_exists('fid', $G_INPUT)) {
    $fid = $G_INPUT['fid'];
}
if (0 == strlen($fid)) {
    cb_throw_error(E_GRN_CSV_FILE_NOT_FOUND);
}
$charset = null;
if (array_key_exists('charset', $G_INPUT)) {
    $charset = $G_INPUT['charset'];
}
if (0 == strlen($charset)) {
    global $G_config_common;
    $charset = $G_config_common->get('I18N', 'default_external_encoding');
}
$skip = true;
if (array_key_exists('skip', $G_INPUT)) {
    $skip = $G_INPUT['skip'];
}

// アドレス帳を取得する
require_once('address/application.csp');
$app_locator = GRN_ApplicationLocator::instance();
/** @var GRN_Address_Application $app */
$app =& $app_locator->getInstance(GRN_ADDRESS_APPLICATION_ID);
if ( ! is_object($app) || ! is_a($app, 'GRN_Address_Application')) {
    cb_throw_error(E_GRN_APPLICATION_NOT_AVAILABLE);
}
$book_manager =& $app->getBookManager();

// ログインユーザーを取得する
global $G_container_base;
$uum =& $G_container_base->getInstance('uum');
$login =& $uum->getLoginUser();
if ( ! is_object($login) || ! is_a($login, 'CB_User')) {
    cb_throw_error(E_GRN_USER_NOT_FOUND);
}
$login_id = $login->getOID();

// 使用権限を取得する
require_once('address/access.csp');
$access_manager = GRN_Address_AccessManager::getInstance();
if ( ! ($row =& $access_manager->getAbstractData(GRN_ADDRESS_AVAILABLE))) {
    assert('FALSE');
}

// ダイナミックロールを取得する
$dynamic_roles = $uum->listGrantedRoles();

// 個人アドレス帳の使用権限を評価する
$authorities = ['private_address'];
$security_model = $access_manager->getSecurityModel($row);
$access = $access_manager->evaluateAccess($row, $login, $dynamic_roles,
    $authorities, $security_model);
if ( ! $access_manager->isAllowedAccess($access, $authorities,
    $security_model)
) {
    cb_throw_error(E_GRN_ADDRESS_ACCESS_DENY_PRIVATE_ADDRESS);
}

// 個人アドレスブックを取得する
if ( ! ($book =& $book_manager->getPrivateAddressBookByUserid($login_id))) {
    if ( ! ($book =& $book_manager->addPrivateAddressBook('cyde', $login_id,
        []))
    ) {
        cb_throw_error(E_GRN_ADDRESS_PRIVATE_ADDRESS_BOOK_NOT_FOUND);
    }
}

// セッションからファイルを取得する
require_once('fw/session_manager.csp');
$session_manager = CB_SessionManager::getInstance();
$session =& $session_manager->getSession('address/personal/import1');
$files = $session->getFiles('import_files');
if ( ! array_key_exists($fid, $files)) {
    require_once('grn/error_code.csp');
    cb_throw_error(E_GRN_CSV_FILE_NOT_FOUND);
}

// ファイルパスを取得する
$file_path = $files[$fid]->getPath();
require_once('fw/csv.csp');
$csv = new CB_CSVReader($charset, $file_path);

// 表示するサンプルの行数
$read_lines = 5;

// サンプルで表示する行を読み込む
if ($skip) {
    $csv->readLine();
}
$lines = [];
for ($i = 0; $i < $read_lines; $i++) {
    if ( ! ($line = $csv->readLine())) {
        break;
    }
    $lines[] = $line;
}

if (0 == count($lines)) {
    cb_throw_error(E_GRN_ADDRESS_CSV_LINES_NOT_FOUND);
}

// 組み込み項目情報一覧を取得する
require_once('address/view_util.csp');
$view_util = GRN_Address_ViewUtil::getInstance();
$builtin_items = $view_util->listBuiltinItems($book, false);

// 名と姓と名（よみ）と姓（よみ）を除外する
$builtin_item = $builtin_items['personal_name'];
if ( ! $builtin_item['use']) {
    unset($builtin_items['family_name']);
    unset($builtin_items['given_name']);
}
$builtin_item = $builtin_items['personal_sort_key'];
if ( ! $builtin_item['use']) {
    unset($builtin_items['family_sort_key']);
    unset($builtin_items['given_sort_key']);
}
// 所要時間と片道運賃を除外する
$builtin_item = $builtin_items['route'];
if (isset($builtin_items['route_detail'])) {
    $builtin_items['route']['display_name']
        = $builtin_items['route_detail']['display_name'];
}
unset($builtin_items['route_detail']);
if ( ! $builtin_item['use']) {
    unset($builtin_items['route_time']);
    unset($builtin_items['route_fare']);
}

// 個人名と個人名（よみ）と地図と画像を除外する
unset($builtin_items['personal_name']);
unset($builtin_items['personal_sort_key']);
unset($builtin_items['map']);
unset($builtin_items['image']);

// 使用しない項目を除外する
foreach (array_keys($builtin_items) as $item_id) {
    $builtin_item =& $builtin_items[$item_id];
    if ( ! $builtin_item['use']
         || GRN_ADDRESS_ITEM_FILE == $builtin_item['type']
    ) {
        unset($builtin_items[$item_id]);
    }
}

// カスタマイズ項目情報一覧を取得する
$extended_items = $view_util->listExtendedItems($book);

// 項目タイプがファイル、使用しない項目を除外する
foreach (array_keys($extended_items) as $item_id) {
    $extended_item =& $extended_items[$item_id];
    if ( ! $extended_item['use']
         || GRN_ADDRESS_ITEM_FILE == $extended_item['type']
    ) {
        unset($extended_items[$item_id]);
    }
}

$t->assign('config_id', 'personal');
$t->assign('app_id', 'address');
$t->assign('file_id', $fid);
$t->assign('charset', $charset);
$t->assign('skip', $skip);
$t->assign('builtin_items', $builtin_items);
$t->assign('extended_items', $extended_items);
$t->assign('csv_datas', $lines);

////////////////////////////////////////////////////////////////

// Smartyにページタイトルを割り当てる
$page_title = grn_get_page_display_name('address/personal/import2');
$t->assign('page_title', $page_title);

// Smartyにサイトポジションを割り当てる
$page_info = ['import2' => null];
require_once('grn/controller.csp');
$controller_util = new GRN_ControllerUtil();
$site_position = $controller_util->makeSitePosition('address/personal/',
    $page_info);
$t->assign('site_position', $site_position);

// Smartyを実行する
$t->display(cb_get_pagename() . '.tpl');


