<?php

if (0 == strcasecmp(@ $_SERVER['REQUEST_METHOD'], 'POST')) {
    // GET/POSTされたパラメータを取得する
    $file_id = null;
    if (array_key_exists('file_id', $G_INPUT)) {
        $file_id = $G_INPUT['file_id'];
    }
    if (0 == strlen($file_id)) {
        cb_throw_error(E_GRN_CSV_FILE_NOT_FOUND);
    }
    $charset = null;
    if (array_key_exists('charset', $G_INPUT)) {
        $charset = $G_INPUT['charset'];
    }
    if (0 == strlen($charset)) {
        global $G_config_common;
        $charset = $G_config_common->get('I18N', 'default_external_encoding');
    }
    $skip = true;
    if (array_key_exists('skip', $G_INPUT)) {
        $skip = $G_INPUT['skip'];
    }

    // アドレス帳を取得する
    require_once('address/application.csp');
    $app_locator = GRN_ApplicationLocator::instance();
    /** @var GRN_Address_Application $app */
    $app =& $app_locator->getInstance(GRN_ADDRESS_APPLICATION_ID);
    if ( ! is_object($app) || ! is_a($app, 'GRN_Address_Application')) {
        cb_throw_error(E_GRN_APPLICATION_NOT_AVAILABLE);
    }
    $book_manager =& $app->getBookManager();

    // ログインユーザーを取得する
    global $G_container_base;
    $uum =& $G_container_base->getInstance('uum');
    $login =& $uum->getLoginUser();
    if ( ! is_object($login) || ! is_a($login, 'CB_User')) {
        cb_throw_error(E_GRN_USER_NOT_FOUND);
    }
    $login_id = $login->getOID();

    // 使用権限を取得する
    require_once('address/access.csp');
    $access_manager = GRN_Address_AccessManager::getInstance();
    if ( ! ($row =& $access_manager->getAbstractData(GRN_ADDRESS_AVAILABLE))) {
        assert('FALSE');
    }

    // ダイナミックロールを取得する
    $dynamic_roles = $uum->listGrantedRoles();

    // 個人アドレス帳の使用権限を評価する
    $authorities = ['private_address'];
    $security_model = $access_manager->getSecurityModel($row);
    $access = $access_manager->evaluateAccess($row, $login,
        $dynamic_roles, $authorities, $security_model);
    if ( ! $access_manager->isAllowedAccess($access, $authorities,
        $security_model)
    ) {
        cb_throw_error(E_GRN_ADDRESS_ACCESS_DENY_PRIVATE_ADDRESS);
    }

    // 個人アドレスブックを取得する
    if ( ! ($book =& $book_manager->getPrivateAddressBookByUserid($login_id))) {
        if ( ! ($book =& $book_manager->addPrivateAddressBook('cyde', $login_id,
            []))
        ) {
            cb_throw_error(E_GRN_ADDRESS_PRIVATE_ADDRESS_BOOK_NOT_FOUND);
        }
    }

    // セッションからファイルを取得する
    require_once('fw/session_manager.csp');
    $session_manager = CB_SessionManager::getInstance();
    $session
        =& $session_manager->getSession('address/personal/import1');
    $files = $session->getFiles('import_files');
    if ( ! array_key_exists($file_id, $files)) {
        cb_throw_error(E_GRN_CSV_FILE_NOT_FOUND);
    }
    $file =& $files[$file_id];

    // 組み込み項目情報一覧を取得する
    require_once('address/view_util.csp');
    $view_util = GRN_Address_ViewUtil::getInstance();
    $builtin_items = $view_util->listBuiltinItems($book, false);

    // 名と姓と名（よみ）と姓（よみ）を除外する
    $builtin_item = $builtin_items['personal_name'];
    if ( ! $builtin_item['use']) {
        unset($builtin_items['family_name']);
        unset($builtin_items['given_name']);
    } elseif ($builtin_item['necessary']) {
        $builtin_items['family_name']['necessary'] = "1";
        $builtin_items['given_name']['necessary'] = "1";
    }
    $builtin_item = $builtin_items['personal_sort_key'];
    if ( ! $builtin_item['use']) {
        unset($builtin_items['family_sort_key']);
        unset($builtin_items['given_sort_key']);
    } elseif ($builtin_item['necessary']) {
        $builtin_items['family_sort_key']['necessary'] = "1";
        $builtin_items['given_sort_key']['necessary'] = "1";
    }
    $builtin_item = $builtin_items['route'];
    if ( ! $builtin_item['use']) {
        unset($builtin_items['route_time']);
        unset($builtin_items['route_fare']);
    }

    // 個人名と個人名（よみ）と地図と画像を除外する
    unset($builtin_items['personal_name']);
    unset($builtin_items['personal_sort_key']);
    unset($builtin_items['map']);
    unset($builtin_items['image']);
    unset($builtin_items['route_detail']);

    // 使用しない項目を除外する
    $items = [];
    $necessary_items = [];
    foreach (array_keys($builtin_items) as $item_id) {
        $builtin_item =& $builtin_items[$item_id];
        if ( ! $builtin_item['use']
             || GRN_ADDRESS_ITEM_FILE == $builtin_item['type']
        ) {
            unset($builtin_items[$item_id]);
        } else {
            $items[] = $item_id;
            if ($builtin_item['necessary']) {
                $necessary_items[] = $item_id;
            }
        }
    }

    // カスタマイズ項目情報一覧を取得する
    $extended_items = $view_util->listExtendedItems($book);

    // 項目タイプがファイル、使用しない項目を除外する
    foreach (array_keys($extended_items) as $item_id) {
        $extended_item =& $extended_items[$item_id];
        if ( ! $extended_item['use']
             || GRN_ADDRESS_ITEM_FILE == $extended_item['type']
        ) {
            unset($extended_items[$item_id]);
        } else {
            $items[] = $item_id;
            if ($extended_item['necessary']) {
                $necessary_items[] = $item_id;
            }
        }
    }

    // 個人アドレスブックに追加する
    require_once('fw/csv.csp');
    $csv = new CB_CSVReader($charset, $file->getPath());
    if ($skip) {
        // 先頭行を読み飛ばす
        $csv->readLine();
    }
    while ($line = $csv->readLine()) {
        $properties = [];
        foreach ($items as $key => $value) {
            $properties[$value] = array_key_exists($key, $line)
                ? cb_trim($line[$key]) : '';
            if (false !== array_search($value, $necessary_items)) {
                if (0 == strlen($properties[$value])) {
                    cb_throw_error(E_GRN_ADDRESS_CSV_EMPTY_NECESSARY_ITEM);
                }
            }
        }
        $book->addData_nocache($properties);
    }
    $csv->close();

    // 監査する
    require_once('address/inspection.csp');
    $inspection = GRN_Address_Inspection::getInstance();
    if ($inspection->isEnabled()) {
        $section = GRN_ADDRESS_INSPECTION_IMPORT;
        $message = GRN_ADDRESS_INSPECTION_PRIVATE_ADDRESS_BOOK;

        $inspection->record($section, $message);
    }

    // セッションを解放する
    foreach (array_keys($files) as $key) {
        $session->unsetFile('import_files', $key);
    }

    cb_redirect('personal/application_list', ['app_id' => 'address']);

}


