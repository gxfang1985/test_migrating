<?php

if (0 == strcasecmp(@ $_SERVER['REQUEST_METHOD'], 'POST')) {
    // GET/POSTされたパラメータを取得する
    if (array_key_exists('bid', $G_INPUT)) {
        $bid = $G_INPUT['bid'];
    }
    if (0 == strlen($bid)) {
        cb_throw_error(E_GRN_ADDRESS_INVALID_BOOK_ID);
    }
    if (array_key_exists('cid', $G_INPUT)) {
        $cid = $G_INPUT['cid'];
    }
    if (0 == strlen($cid)) {
        cb_throw_error(E_GRN_ADDRESS_INVALID_CARD_ID);
    }

    // アドレス帳を取得する
    require_once('address/application.csp');
    $app_locator = GRN_ApplicationLocator::instance();
    /** @var GRN_Address_Application $app */
    $app = $app_locator->getInstance(GRN_ADDRESS_APPLICATION_ID);
    if ( ! is_object($app) || ! is_a($app, 'GRN_Address_Application')) {
        cb_throw_error(E_GRN_APPLICATION_NOT_AVAILABLE);
    }
    $book_manager = $app->getBookManager();

    // ログインユーザーを取得する
    global $G_container_base;
    $uum = $G_container_base->getInstance('uum');
    $login = $uum->getLoginUser();
    if ( ! is_object($login) || ! is_a($login, 'CB_User')) {
        cb_throw_error(E_GRN_USER_NOT_FOUND);
    }
    $login_id = $login->getOID();

    // 使用権限を取得する
    require_once('address/access.csp');
    $access_manager = GRN_Address_AccessManager::getInstance();
    if ( ! ($row = $access_manager->getAbstractData(GRN_ADDRESS_AVAILABLE))) {
        assert('FALSE');
    }

    // ダイナミックロールを取得する
    $dynamic_roles = $uum->listGrantedRoles();

    // 使用権限を評価する
    $authorities = ['private_address', 'shared_address'];
    $security_model = $access_manager->getSecurityModel($row);
    $access = $access_manager->evaluateAccess($row, $login,
        $dynamic_roles, $authorities, $security_model);

    // ブックを取得する
    if (0 > $bid) {
        // 個人アドレス帳の使用権限を評価する
        $authorities = ['private_address'];
        if ( ! $access_manager->isAllowedAccess($access, $authorities,
            $security_model)
        ) {
            cb_throw_error(E_GRN_ADDRESS_ACCESS_DENY_PRIVATE_ADDRESS);
        }

        // 個人アドレスブックを取得する
        if ( ! ($book
            = $book_manager->getPrivateAddressBookByUserId($login_id))
        ) {
            cb_throw_error(E_GRN_ADDRESS_CARD_NOT_FOUND);
        }
    } else {
        // 共有アドレス帳の使用権限を評価する
        $authorities = ['shared_address'];
        if ( ! $access_manager->isAllowedAccess($access, $authorities,
            $security_model)
        ) {
            cb_throw_error(E_GRN_ADDRESS_ACCESS_DENY_SHARED_ADDRESS);
        }

        // 共有アドレスブックを取得する
        if ( ! ($book =& $book_manager->getSharedAddressBook($bid))) {
            cb_throw_error(E_GRN_ADDRESS_SHARED_ADDRESS_BOOK_NOT_FOUND);
        }

        // 共有アドレス帳の閲覧、編集権限を評価する
        $row =& $book->getRow();
        $authorities = ['browse', 'editing'];
        $access = $access_manager->evaluateAccess($row, $login,
            $dynamic_roles, $authorities);
        $security_model = $access_manager->getSecurityModel($row);
        if ( ! $access_manager->isAllowedAccess($access, $authorities,
            $security_model)
        ) {
            cb_throw_error(E_GRN_ADDRESS_ACCESS_DENY_EDITING);
        }
    }

    // アドレスを取得する
    if ( ! ($data = $book->getData($cid))) {
        cb_throw_error(E_GRN_ADDRESS_CARD_NOT_FOUND);
    }

    // アドレスを削除する
    $data->delete();

    cb_redirect('address/index', ['bid' => $bid]);
}


