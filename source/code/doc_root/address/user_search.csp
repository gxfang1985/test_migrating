<?php

require_once('grn/smarty.csp');
$t = new GRN_Smarty;

////////////////////////////////////////////////////////////////

// アドレス帳を取得する
require_once('address/application.csp');
$app_locator = GRN_ApplicationLocator::instance();
/** @var GRN_Address_Application $app */
$app =& $app_locator->getInstance(GRN_ADDRESS_APPLICATION_ID);
if ( ! is_object($app) || ! is_a($app, 'GRN_Address_Application')) {
    cb_throw_error(E_GRN_APPLICATION_NOT_AVAILABLE);
}
$book_manager =& $app->getBookManager();

// n件移動中かをチェックする
if (1 == @ $G_INPUT['sf']) {
    // セッションからパラメータを取得する
    $session =& $app->getSession();
    $search_for_view = $session->get('search_info');
    $st = $search_for_view['text'];
    $se = $search_for_view['sensitive'];
} else {
    // GET/POSTされたパラメータを取得する
    $st = null;
    if (array_key_exists('st', $G_INPUT)) {
        $st = $G_INPUT['st'];
    }
    $se = null;
    if (array_key_exists('se', $G_INPUT)) {
        $se = $G_INPUT['se'];
    }
}

require_once('fw/string_util.csp');
$st = cb_trim($st);
$search_for_view = [];
$search_for_view['text'] = $st;
$search_for_view['sensitive'] = $se;
if (0 < strlen($st)) {
    $st = cb_parse_search_text($st);
}

// ログインユーザーを取得する
global $G_container_base;
$uum =& $G_container_base->getInstance('uum');
$login =& $uum->getLoginUser();
if ( ! is_object($login) || ! is_a($login, 'CB_User')) {
    cb_throw_error(E_GRN_USER_NOT_FOUND);
}

// アドレス帳の設定を取得する
require_once('address/config.csp');
$config_manager = GRN_Address_ConfigManager::getInstance();
$system_config =& $config_manager->getSystemConfig();
$personal_config =& $config_manager->getPersonalConfig($login);
require_once('grn/ui.csp');
$ui_config_manager = GRN_UIConfigManager::getInstance();
$ui_config =& $ui_config_manager->getUserConfig($login);

// ユーザー名簿ブックを取得する
if ( ! ($book =& $book_manager->getUserListBook())) {
    cb_throw_error(E_GRN_ADDRESS_USER_LIST_BOOK_NOT_FOUND);
}

// 組み込み項目情報一覧を取得する
require_once('address/view_util.csp');
$view_util = GRN_Address_ViewUtil::getInstance();
$builtin_items = $view_util->listBuiltinItems($book, true, true);

// カスタマイズ項目情報一覧を取得する
$extended_items = $view_util->listExtendedItems($book);

// 一覧表示フラグを取得する
$personal_config->getDisplayFlag($book, $builtin_items, $extended_items);

$offset = 0;
$limit = $ui_config->getListMax();
$data_count = 0;
$datas_for_view = [];
require_once('grn/controller.csp');
$controller_util = new GRN_ControllerUtil();
$isExistsNextPage = false;
if (0 < strlen($search_for_view['text'])) {
    // n件ナビゲーション情報を取得する
    $offset = $controller_util->getNaviStartPosition();
    $controller_util->setNaviStartPosition($offset);

    // ユーザー情報一覧を取得する
    $order_by = 'tab_cb_user.col_position, tab_cb_user._id';
    $datas = $book->listFullTextSearchDatas($offset, $limit + 1,
        $order_by, $st, $se, $builtin_items);
    $isExistsNextPage = count($datas) > $limit;
    if ($isExistsNextPage) {
        array_pop($datas);
    }

    $datas_for_view = $view_util->listDatas($datas, null, $builtin_items,
        $extended_items);
}

// n件ナビゲーション情報を取得する
$view_set = $controller_util->makeSimpleNaviInformation($offset, $limit,
    count($datas_for_view), $isExistsNextPage, ['sf' => 1]);

$timestamp = new CB_TimeStampEx();
$datetime = $timestamp->getDateTime();
$datetime->hour = 0;
$datetime->minute = 0;
$datetime->second = 0;
$timestamp->setDateTime($datetime);

$users_id = [];
foreach ($datas_for_view as $id => $data) {
    $users_id[] = $id;
}

//get presence info
require_once('presence/logic.csp');
$presence_logic = GRN_Presence_Logic::getInstance();
foreach (array_keys($datas_for_view) as $id) {
    $datas_for_view[$id]['presence'] = $presence_logic->getPresence($id);
}
//save parameters current page to session
$params = [];
$input_params = ['sf', 'st', 'se'];
foreach ($input_params as $key) {
    if (array_key_exists($key, $G_INPUT)) {
        $params[$key] = $G_INPUT[$key];
    }
}
//save current page
$presence_logic->setPreviousPage('address/user_search', $params);

require_once("grn/controller.csp");
$users_info = GRN_ControllerUtil::getUserInfoToShowUserName($users_id, $login);

// User icon setting
$imageIcon = GRN_ControllerUtil::getUserIconFormat($login);
$t->assign('imageIcon', $imageIcon);

// add photo image path to user info
if ($imageIcon) {
    $users_info = GRN_ControllerUtil::addPhotoUrlForUsersInfo($users_info,
        GRN_ControllerUtil::getUserProfilePhotoLargeSize());
    $t->assign('iconSize', GRN_ControllerUtil::ICON_SIZE_LARGE);
}
$t->assign('loginId', $login->getOID());
$t->assign('unix_timestamp', $timestamp->unix_ts);
$t->assign('cards', $datas_for_view);
$t->assign('builtin_items', $builtin_items);
$t->assign('extended_items', $extended_items);
$t->assign('view_set', $view_set);
$t->assign('search', $search_for_view);
$t->assign('users_info', $users_info);

// セッションにパラメータを割り当てる
$session =& $app->getSession();
$session->set('search_info', $search_for_view);

////////////////////////////////////////////////////////////////

// Smartyにページタイトルを割り当てる
$page_title = grn_get_page_display_name('address/user_search');
$t->assign('page_title', $page_title);

// Smartyにサイトポジションを割り当てる
$page_info = [
    'user_list'   => ['sf' => 1],
    'user_search' => null
];
$site_position = $controller_util->makeSitePosition('address/', $page_info);
$t->assign('site_position', $site_position);

// Smartyを実行する
$t->display(cb_get_pagename() . '.tpl');


