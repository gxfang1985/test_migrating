<?php

require_once('grn/application.csp');
require_once('cellular/utils.csp');

// Smarty をインスタンス化
require_once('cellular/smarty.csp');
$smarty = new GRN_Cellular_Smarty;

// 
$smarty->assign('pagetitle', grn_get_current_page_display_name());
$smarty->assign('pagepath', $G_pagepath);
$smarty->assign('pagename', cb_get_pagename());

require_once('address/application.csp');
$app_locator = GRN_ApplicationLocator::instance();
// アドレス帳を取得する
/** @var GRN_Address_Application $app */
$app =& $app_locator->getInstance(GRN_ADDRESS_APPLICATION_ID);
$book_manager =& $app->getBookManager();

// n件移動中かをチェックする
if (isset($G_INPUT['sf']) && 1 == $G_INPUT['sf']) {
    // セッションからパラメータを取得する
    $search_for_view = $G_cellular_session->get('search_info');
    $str = $search_for_view['text'];
    $G_INPUT['submit_user'] = true;
} else {
    // GET/POSTされたパラメータを取得する
    $str = isset($G_INPUT['s_text']) ? $G_INPUT['s_text'] : null;
}

$se = null;

$page = (isset($G_INPUT['pg'])) ? $G_INPUT['pg'] : null;
$gid = (isset($G_INPUT['gid'])) ? $G_INPUT['gid'] : null;


if (strlen($gid)) {
    $prefix = mb_substr($gid, 0, 1);
    if ($prefix != 's') {
        // selectページにswitch
        grn_cellular_switch_page($G_pagepath . '/list');
    }
}

$tab = [
    'mode'   => 's',
    'page'   => cb_get_pagename(),
    'params' => null,
    'add'    => [
        [ // 検索tab
          'mode' => 's',
          'name' => cb_msg('grn.cellular.common', 'tab_search'),
        ],
    ],
];

require_once('fw/string_util.csp');
$str = cb_trim($str);
$search_for_view = [];
$search_for_view['text'] = $str;

if (strlen($str)) {
    $smarty->assign('str', $str);

    // config
    require_once('grn/application.csp');
    $locator = GRN_ApplicationLocator::instance();
    $cellular_app =& $locator->getInstance('cellular');
    $user_config =& $cellular_app->getUserConfig($G_login_user);


    if (array_key_exists('submit_group', $G_INPUT)) {
        $limit = $user_config->getListMax();
        $smarty->assign('submit_group', true);
//        $smarty->assign( 'to_page', $page_group );

        $app_locator = GRN_ApplicationLocator::instance();
        $db =& $app_locator->getConnection('address');

        require_once('fw/string_util.csp');
        $keywords = cb_parse_search_text($str);

        if (count($keywords) > 0) {
            $groups = $G_uum->getGroupListByNames($keywords);
        } else {
            $groups = $G_uum->getGroupList();
        }

        $lists = [];
        foreach ($groups as $_group) {
            array_push($lists, [
                    'gid'  => 'g' . $_group->getOID(),
                    'name' => $_group->get('name')
                ]
            );
        }
//        $smarty->assign( 'lists', $lists );
        //ページ毎に表示するリストを取得。
        $total_count = count($lists);
        if ($total_count > $limit) {
            $start_point = ($page) * $limit;
            $end_point = ($page + 1) * $limit;

            $temp = [];
            for ($i = $start_point; $i < $end_point && $i < $total_count; $i++) {
                //               if(isset($lists[$i]))
                array_push($temp, $lists[$i]);
            }
            if ($end_point < $total_count) {
                $next = $page + 1;
                $smarty->assign('next_page', isset($next) ? $next : null);
                $smarty->assign('next', true);
            }
            if ($page > 0) {
                $before = $page - 1;
                $smarty->assign('before_page', isset($before) ? $before : null);
                $smarty->assign('before', true);
            }
            $smarty->assign('lists', $temp);
        } else {
            $smarty->assign('lists', $lists);
        }
//      echo "<pre>".nl2br(print_r($temp,true))."</pre>";
    } elseif (array_key_exists('submit_user', $G_INPUT)) {
        $limit = (int)($user_config->getListMax() / 2);
        $smarty->assign('submit_user', true);

        // アドレス帳の設定を取得する
        require_once('address/config.csp');
        $config_manager = GRN_Address_ConfigManager::getInstance();

        $personal_config = $config_manager->getPersonalConfig($G_login_user);

        // ユーザー名簿ブックを取得する
        if ( ! ($book = $book_manager->getUserListBook())) {
            cb_throw_error(E_GRN_ADDRESS_USER_LIST_BOOK_NOT_FOUND);
        }

        // 組み込み項目情報一覧を取得する
        require_once('address/view_util.csp');
        $view_util = GRN_Address_ViewUtil::getInstance();
        $builtin_items = $view_util->listBuiltinItems($book);

        // カスタマイズ項目情報一覧を取得する
        $extended_items = $view_util->listExtendedItems($book);

        // 一覧表示フラグを取得する
        $personal_config->getDisplayFlag($book, $builtin_items,
            $extended_items);

        $offset = 0;
        $data_count = 0;
        $datas_for_view = [];
        require_once('grn/controller.csp');
        $controller_util = new GRN_ControllerUtil();

        if (0 < strlen($str)) {
            //検索キーワードを配列化する。
            require_once('fw/string_util.csp');
            $str_arr = cb_parse_search_text($str);

            // n件ナビゲーション情報を取得する
            $offset = $controller_util->getNaviStartPosition();
            $controller_util->setNaviStartPosition($offset);

            // ユーザー情報一覧を取得する
            $data_count = $book->getFullTextSearchDataCount($str_arr, $se,
                $builtin_items);
            $order_by = 'tab_cb_user.col_position, tab_cb_user._id';
            $datas = $book->listFullTextSearchDatas($offset, $limit,
                $order_by, $str_arr, $se, $builtin_items, true);
            $datas_for_view = $view_util->listDatas($datas, null,
                $builtin_items, $extended_items);
        }

        // n件ナビゲーション情報を取得する
        $view_set = $controller_util->makeNaviInformation($offset, $limit,
            $data_count, ['sf' => 1]);

        // セッションにパラメータを割り当てる
        $G_cellular_session->set('search_info', $search_for_view);

        $display_obj = [];

        require_once('grn/uum_util.csp');
        $uum_util = GRN_UumUtil::getInstance();

        // 絞り込む
        if ($datas_for_view) {
            require_once('cellular/config.csp');
            $config = GRN_Cellular_SystemConfig::getInstance();
            $config_selected_items
                = $config->getDisplayedUserItemsAsSearchResult();

            $user_obj_array
                = $G_uum->getUserObjects(array_keys($datas_for_view));

            require_once('cellular/utils.csp');
            foreach ($datas_for_view as $key => $value) {
                $user_obj =& $user_obj_array[$key];

                $selected_items = [
                    getSelectedFieldInformation($config_selected_items['items'][0],
                        $user_obj),
                    getSelectedFieldInformation($config_selected_items['items'][1],
                        $user_obj)
                ];
                $selected_item_codes = $config_selected_items['items'];

                array_push($display_obj, [
                        'mid'        => $key,
                        'name'       => $value['display_name'],
                        'item_codes' => $selected_item_codes,
                        'items'      => $selected_items
                    ]
                );
            }
        }

        // ページ送り用のパラメータを計算する
        $navi_current = 0;
        if ($view_set['navi']['next_page_start_position'] == -1
            && $view_set['navi']['previous_page_start_position'] == -1
        ) {
            $navi_current = 0;
        } elseif ($view_set['navi']['next_page_start_position'] != -1) {
            $navi_current = $view_set['navi']['next_page_start_position']
                            - $view_set['navi']['number_on_page'];
        } else {
            $navi_current = $view_set['navi']['previous_page_start_position']
                            + $view_set['navi']['number_on_page'];
        }

        $smarty->assign('navi_current', $navi_current);
        $smarty->assign('navi', $view_set['navi']);
        $smarty->assign('datas_for_view', $display_obj);
    }
}

$G_cellular_session->set('back-from-address-view', $G_INPUT);

$smarty->assign('tab', $tab);
$smarty->display(cb_get_pagename() . '.tpl');


