<?php

require_once('portal/error_code.csp');
if ( ! isset($portlet)) {
    cb_throw_error(E_GRN_PRTL_PORTLET_INVALID_ACCESS);
}

require_once('grn/smarty.csp');
$t = new GRN_Smarty;

////////////////////////////////////////////////////////////////

// アドレス帳を取得する
require_once('address/application.csp');
$app_locator = GRN_ApplicationLocator::instance();
/** @var GRN_Address_Application $app */
$app =& $app_locator->getInstance(GRN_ADDRESS_APPLICATION_ID);
if ( ! is_object($app) || ! is_a($app, 'GRN_Address_Application')) {
    cb_throw_error(E_GRN_APPLICATION_NOT_AVAILABLE);
}
$book_manager =& $app->getBookManager();

// ログインユーザーを取得する
global $G_container_base;
$uum =& $G_container_base->getInstance('uum');
$login =& $uum->getLoginUser();
if ( ! is_object($login) || ! is_a($login, 'CB_User')) {
    cb_throw_error(E_GRN_USER_NOT_FOUND);
}
$login_id = $login->getOID();

// アドレス帳の設定を取得する
require_once('address/config.csp');
$config_manager = GRN_Address_ConfigManager::getInstance();
$personal_config =& $config_manager->getPersonalConfig($login);

// 最後にアドレス帳で開かれたブックを取得する
$bid = $personal_config->getLastOpenedBook();

// 使用権限を取得する
require_once('address/access.csp');
$access_manager = GRN_Address_AccessManager::getInstance();
if ( ! ($row =& $access_manager->getAbstractData(GRN_ADDRESS_AVAILABLE))) {
    assert('FALSE');
}

// ダイナミックロールを取得する
$dynamic_roles = $uum->listGrantedRoles();

// 使用権限を評価する
$authorities = ['private_address', 'shared_address'];
$security_model = $access_manager->getSecurityModel($row);
$access = $access_manager->evaluateAccess($row, $login, $dynamic_roles,
    $authorities, $security_model);

// 個人アドレス帳の使用権限を評価する
$access_for_view = [];
$authorities = ['private_address'];
$access_for_view['private_address'] = $access_manager->isAllowedAccess($access,
    $authorities, $security_model);

// 共有アドレス帳の使用権限を評価する
$authorities = ['shared_address'];
$access_for_view['shared_address'] = $access_manager->isAllowedAccess($access,
    $authorities, $security_model);

$books = [];
$allow_books = [];
if ($access_for_view['shared_address']) {
    // 共有アドレスブック一覧を取得する
    $books = $book_manager->listSharedAddressBooks();

    if (0 < count($books)) {
        // アクセス可能な共有アドレスブック一覧を取得する
        $rows = [];
        foreach (array_keys($books) as $book_id) {
            $book =& $books[$book_id];
            $rows[$book_id] =& $book->getRow();
            unset($book);
        }
        $authorities = ['browse'];
        $allow_books = $access_manager->pickAllowedObjects($rows, $login,
            $dynamic_roles, $authorities);
    }
}

if (0 < strlen($bid)) {
    // アドレスブックを取得する
    if (0 > $bid) {
        if ( ! $access_for_view['private_address']) {
            if (0 < count($allow_books)) {
                $keys = array_keys($allow_books);
                $bid = $keys[0];
            }
        }
    } else {
        if ( ! array_key_exists($bid, $allow_books)) {
            if ($access_for_view['private_address']) {
                $bid = -1;
            } else {
                $bid = null;
                if (0 < count($allow_books)) {
                    $keys = array_keys($allow_books);
                    $bid = $keys[0];
                }
            }
        }
    }

    $book = null;
    if (0 > $bid) {
        if ( ! ($book
            =& $book_manager->getPrivateAddressBookByUserId($login_id))
        ) {
            if ( ! ($book =& $book_manager->addPrivateAddressBook('cyde',
                $login_id, []))
            ) {
                cb_throw_error(E_GRN_ADDRESS_PRIVATE_ADDRESS_BOOK_NOT_FOUND);
            }
        }
    } elseif (0 < strlen($bid)) {
        $book =& $books[$bid];
    }
} else {
    if ( ! ($book =& $book_manager->getUserListBook())) {
        cb_throw_error(E_GRN_ADDRESS_USER_LIST_BOOK_NOT_FOUND);
    }
}

// リソース一覧を生成する
$resources = ['application_name' => $app->getName()];

// ブックオプション一覧を取得する
require_once('address/view_util.csp');
$view_util = GRN_Address_ViewUtil::getInstance();
$book_options = $view_util->listBookOptions($allow_books, $book,
    $access_for_view['private_address'], true, $resources);

$t->assign('book_id', $bid);
$t->assign('access', $access_for_view);
$t->assign('book_options', $book_options);

////////////////////////////////////////////////////////////////

if ($portlet['title'] === '') {
    require_once('grn/application.csp');
    $app_locator = GRN_ApplicationLocator::instance();
    $app_name = $app_locator->getName('address');
    $page_title = cb_plain_msg('grn.address', 'view_address_search',
        ['app_name' => $app_name]);
} else {
    $page_title = $portlet['title'];
}
$t->assign('page_title', $page_title);

$t->skipWarning();
$t->display('address/portlet/view_address_search.tpl');


