<?php
require_once('portal/error_code.csp');
if ( ! isset($portlet)) {
    cb_throw_error(E_GRN_PRTL_PORTLET_INVALID_ACCESS);
}

require_once('grn/smarty.csp');
$t = new GRN_Smarty;

////////////////////////////////////////////////////////////////

// GET/POSTされたパラメータを取得する
$gid = @ $portlet['settings']['gid'];

// アドレス帳を取得する
require_once('address/application.csp');
$app_locator = GRN_ApplicationLocator::instance();
/** @var GRN_Address_Application $app */
$app =& $app_locator->getInstance(GRN_ADDRESS_APPLICATION_ID);
if (is_null($app)) {
    cb_throw_error(E_GRN_APPLICATION_NOT_AVAILABLE);
}
$book_manager =& $app->getBookManager();

$applicationId = $app->getApplicationId();

// ログインユーザーを取得する
global $G_container_base;
$uum =& $G_container_base->getInstance('uum');
$login =& $uum->getLoginUser();
if ( ! is_object($login) || ! is_a($login, 'CB_User')) {
    cb_throw_error(E_GRN_USER_NOT_FOUND);
}
$login_id = $login->getOID();

// 組織IDを取得する
if ('m' == $gid{0}) {
    // Myグループから取得する
    $group = &$uum->getMyGroup(substr($gid, 1));
    if ( ! is_object($group) || ! is_a($group, 'GRN_MyGroup')) {
        $gid = null;
    }
} elseif (0 < strlen($gid)) {
    if (0 < $gid) {
        // 所属する組織から取得する
        $group = &$uum->getGroup($gid);
        if ( ! is_object($group) || ! is_a($group, 'CB_Group')) {
            $gid = null;
        }
    } else {
        // 全体を取得する
        $gid = -1;
    }
}

if (0 == strlen($gid)) {
    // 優先する組織から取得する
    $group = $uum->getUserPrimaryGroup($login_id);
    if ($group === false) {
        $groups = $uum->getUserGroups($login_id);
        if (is_array($groups) && 0 < count($groups)) {
            // 所属する組織から取得する
            $groups = array_keys($groups);
            $gid = current($groups);
        } else {
            // 全体を取得する
            $gid = -1;
        }
    } else {
        $gid = $group->getOID();
    }
}

// アドレス帳の設定を取得する
require_once('grn/ui.csp');
$ui_config_manager = GRN_UIConfigManager::getInstance();
$ui_config =& $ui_config_manager->getUserConfig($login);

// ユーザー名簿ブックを取得する
if ( ! ($book =& $book_manager->getUserListBook())) {
    cb_throw_error(E_GRN_ADDRESS_USER_LIST_BOOK_NOT_FOUND);
}

// 組み込み項目情報一覧を取得する
require_once('address/view_util.csp');
$view_util = GRN_Address_ViewUtil::getInstance();
$builtin_items = $view_util->listBuiltinItems($book);

// カスタマイズ項目情報一覧を取得する
$extended_items = $view_util->listExtendedItems($book);

// 一覧表示フラグを取得する
$view_util->getDisplayFlag(@ $portlet['settings']['display_flags'],
    $builtin_items, $extended_items);

// n件ナビゲーション情報を取得する
require_once('grn/controller.csp');
$page = 'address/portlet/view_user_list?plid=' . $portlet['plid'];
$controller_util = new GRN_ControllerUtil($page);
$offset = $controller_util->getNaviStartPosition();
$limit = $ui_config->getListMax();

// ユーザー情報一覧を取得する
if (-1 == $gid) {
    $datas = $book->listDatas($offset, $limit + 1);
} else {
    if ('m' == $gid{0}) {
        $order_by
            = 'tab_grn_mygroupuserrelation.col_list_index, tab_cb_user.col_position, tab_cb_user._id';
        $datas = $book->listDatasByGroupId($gid, $offset, $limit + 1,
            $order_by);
    } else {
        $datas = $book->listDatasByGroupId($gid, $offset, $limit + 1);
    }
}

$isNextPageExists = (count($datas) > $limit);
if ($isNextPageExists) {
    array_pop($datas);
}

$users_id = array_keys($datas);
// fix bug GRB-15150
require_once('fw/i18n/base.csp');
// cache data for user list
CB_UserBaseSetting::loadAndCache($users_id);
CB_UserLocaleSetting::loadAndCache($users_id);
require_once('presence/logic.csp');
GRN_Presence_Logic::getInstance()->loadAndCache($users_id);
$uum->getUsersGroupsInfo($users_id);
$users_info = GRN_ControllerUtil::getUserInfoToShowUserName($users_id, $login);

$datas_for_view = $view_util->listDatas($datas, null, $builtin_items,
    $extended_items, $users_info);

//get presence info
if (count($datas_for_view) > 0) {
    require_once('presence/access_logic.csp');
    $access_logic = GRN_Presence_Access_Logic::getInstance();
    $access_logic->loadAndCacheAccessForPresence(array_keys($datas_for_view),
        $login_id);
}
require_once('presence/logic.csp');
$presence_logic = GRN_Presence_Logic::getInstance();
foreach (array_keys($datas_for_view) as $id) {
    $datas_for_view[$id]['presence'] = $presence_logic->getPresence($id,
        $users_info);
}
//save current page
$presence_logic->setPreviousPage('address/portlet/view_user_list');

$params = ['plid' => $portlet['plid'], 'gid' => $gid];
$view_set = $controller_util->makeSimpleNaviInformation($offset,
    $limit, count($datas_for_view), $isNextPageExists, $params);
$view_set['navi']['page'] = 'address/portlet/command_view_user_list';

$timestamp = new CB_TimeStampEx();
$datetime = $timestamp->getDateTime();
$datetime->hour = 0;
$datetime->minute = 0;
$datetime->second = 0;
$timestamp->setDateTime($datetime);

$t->assign('app_id', $applicationId);
$t->assign('unix_timestamp', $timestamp->unix_ts);
$t->assign('loginId', $login_id);
$t->assign('selected_id', $gid);
$t->assign('cards', $datas_for_view);
$t->assign('builtin_items', $builtin_items);
$t->assign('extended_items', $extended_items);
$t->assign('view_set', $view_set);
//Assign include_php Parameter
$t->assign('portlet', $portlet);
$t->assign('users_info', $users_info);

////////////////////////////////////////////////////////////////

$t->assign('settings', $portlet['settings']);

//Set Page Title
if ($portlet['title'] === '') {
    $page_title = cb_plain_msg('grn.address', 'view_user_list');
} else {
    $page_title = $portlet['title'];
}
$t->assign('page_title', $page_title);

$t->skipWarning();
$t->display('address/portlet/view_user_list.tpl');


