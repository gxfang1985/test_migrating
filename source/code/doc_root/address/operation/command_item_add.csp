<?php

if (0 == strcasecmp(@ $_SERVER['REQUEST_METHOD'], 'POST')) {
    require_once('grn/smarty.csp');
    $t = new GRN_Smarty;

    require_once('SmartyValidate.class.php');
    SmartyValidate::connect($t);

    $target_name = 'address/operation/item_add';
    SmartyValidate::register_form($target_name);

    if (SmartyValidate::is_valid($G_INPUT, $target_name)) {
        // GET/POSTされたパラメータを取得する
        $bid = null;
        if (array_key_exists('bid', $G_INPUT)) {
            $bid = $G_INPUT['bid'];
        }
        if (0 == strlen($bid)) {
            cb_throw_error(E_GRN_ADDRESS_INVALID_BOOK_ID);
        }

        // アドレス帳を取得する
        require_once('address/application.csp');
        $app_locator = GRN_ApplicationLocator::instance();
        /** @var GRN_Address_Application $app */
        $app =& $app_locator->getInstance(GRN_ADDRESS_APPLICATION_ID);
        if ( ! is_object($app) || ! is_a($app, 'GRN_Address_Application')) {
            cb_throw_error(E_GRN_APPLICATION_NOT_AVAILABLE);
        }
        $book_manager =& $app->getBookManager();

        // ログインユーザーを取得する
        global $G_container_base;
        $uum =& $G_container_base->getInstance('uum');
        $login =& $uum->getLoginUser();
        if ( ! is_object($login) || ! is_a($login, 'CB_User')) {
            cb_throw_error(E_GRN_USER_NOT_FOUND);
        }
        $login_id = $login->getOID();

        // 使用権限を取得する
        require_once('address/access.csp');
        $access_manager = GRN_Address_AccessManager::getInstance();
        if ( ! ($row
            =& $access_manager->getAbstractData(GRN_ADDRESS_AVAILABLE))
        ) {
            assert('FALSE');
        }

        // ダイナミックロールを取得する
        $dynamic_roles = $uum->listGrantedRoles();

        // 共有アドレス帳の使用権限を評価する
        $authorities = ['shared_address'];
        $security_model = $access_manager->getSecurityModel($row);
        $access = $access_manager->evaluateAccess($row, $login,
            $dynamic_roles, $authorities, $security_model);
        if ( ! $access_manager->isAllowedAccess($access, $authorities,
            $security_model)
        ) {
            cb_throw_error(E_GRN_ADDRESS_ACCESS_DENY_SHARED_ADDRESS);
        }

        // 共有アドレスブックを取得する
        if ( ! ($book =& $book_manager->getSharedAddressBook($bid))) {
            cb_throw_error(E_GRN_ADDRESS_SHARED_ADDRESS_BOOK_NOT_FOUND);
        }

        // 共有アドレス帳のアクセス権を評価する
        $row =& $book->getRow();
        $authorities = ['browse', 'operation'];
        $access = $access_manager->evaluateAccess($row, $login,
            $dynamic_roles, $authorities);
        $authorities = ['browse'];
        $security_model = $access_manager->getSecurityModel($row);
        if ( ! $access_manager->isAllowedAccess($access, $authorities,
            $security_model)
        ) {
            cb_throw_error(E_GRN_ADDRESS_ACCESS_DENY_BROWSE);
        }

        // 共有アドレス帳の運用管理権限を評価する
        $authorities = ['operation'];
        $security_model = GRN_ADDRESS_SECURITYMODEL_GRANT;
        if ( ! $access_manager->isAllowedAccess($access, $authorities,
            $security_model)
        ) {
            cb_throw_error(E_GRN_ADDRESS_ACCESS_DENY_OPERATE_SHARED_ADDRESS);
        }

        // ブックに項目を追加する
        require_once('fw/string_util.csp');
        $display_name = cb_trim_check(@ $G_INPUT['display_name'],
            E_COMMON_MISSING_MANDATORY);
        $id = cb_trim_check(@ $G_INPUT['id'],
            E_COMMON_MISSING_MANDATORY);
        $properties = [
            'display_name' => $display_name,
            'id'           => $id,
            'type'         => @ $G_INPUT['type'],
            'use'          => @ $G_INPUT['use'],
            'necessary'    => @ $G_INPUT['necessary'],
            'not_modify'   => @ $G_INPUT['not_modify'],
            'display'      => @ $G_INPUT['display'],
            'sso'          => @ $G_INPUT['sso'],
            'user'         => & $login
        ];
        /*
        if( 0 > $properties['sso'] )
        {
            unset( $properties['sso'] );
        }*/
        if ( ! $book->addItem($properties)) {
            cb_throw_error(E_GRN_ADDRESS_COLLISION_ID_OF_ITEM);
        }

        SmartyValidate::unregister_form($target_name);

        cb_redirect('address/operation/item_list', ['bid' => $bid]);
    } else {
        $t->setPageInfo($target_name);
        include('_item_add.csp');
        $t->display($target_name . '.tpl');
    }
}


