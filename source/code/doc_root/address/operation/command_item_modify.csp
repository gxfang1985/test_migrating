<?php

if (0 == strcasecmp(@ $_SERVER['REQUEST_METHOD'], 'POST')) {
    require_once('grn/smarty.csp');
    $t = new GRN_Smarty;

    // GET/POSTされたパラメータを取得する
    $bid = null;
    if (array_key_exists('bid', $G_INPUT)) {
        $bid = $G_INPUT['bid'];
    }
    if (0 == strlen($bid)) {
        cb_throw_error(E_GRN_ADDRESS_INVALID_BOOK_ID);
    }
    $biid = null;
    if (array_key_exists('biid', $G_INPUT)) {
        $biid = $G_INPUT['biid'];
    }
    $eiid = null;
    if (array_key_exists('eiid', $G_INPUT)) {
        $eiid = $G_INPUT['eiid'];
    }

    $properties = [];
    $properties['use'] = @ $G_INPUT['use'];
    $properties['necessary'] = @ $G_INPUT['necessary'];
    $properties['not_modify'] = @ $G_INPUT['not_modify'];
    $properties['display'] = @ $G_INPUT['display'];
    $properties['sso'] = @ $G_INPUT['sso'];
    /*
    if( 0 > $properties['sso'] )
    {
        unset( $properties['sso'] );
    }*/

    // アドレス帳を取得する
    require_once('address/application.csp');
    $app_locator = GRN_ApplicationLocator::instance();
    /** @var GRN_Address_Application $app */
    $app =& $app_locator->getInstance(GRN_ADDRESS_APPLICATION_ID);
    if ( ! is_object($app) || ! is_a($app, 'GRN_Address_Application')) {
        cb_throw_error(E_GRN_APPLICATION_NOT_AVAILABLE);
    }
    $book_manager =& $app->getBookManager();

    // ログインユーザーを取得する
    global $G_container_base;
    $uum =& $G_container_base->getInstance('uum');
    $login =& $uum->getLoginUser();
    if ( ! is_object($login) || ! is_a($login, 'CB_User')) {
        cb_throw_error(E_GRN_USER_NOT_FOUND);
    }
    $login_id = $login->getOID();

    // 使用権限を取得する
    require_once('address/access.csp');
    $access_manager = GRN_Address_AccessManager::getInstance();
    if ( ! ($row =& $access_manager->getAbstractData(GRN_ADDRESS_AVAILABLE))) {
        assert('FALSE');
    }

    // ダイナミックロールを取得する
    $dynamic_roles = $uum->listGrantedRoles();

    // 共有アドレス帳の使用権限を評価する
    $authorities = ['shared_address'];
    $security_model = $access_manager->getSecurityModel($row);
    $access = $access_manager->evaluateAccess($row, $login,
        $dynamic_roles, $authorities, $security_model);
    if ( ! $access_manager->isAllowedAccess($access, $authorities,
        $security_model)
    ) {
        cb_throw_error(E_GRN_ADDRESS_ACCESS_DENY_SHARED_ADDRESS);
    }

    // アドレス帳の設定を取得する
    require_once('address/config.csp');
    $config_manager = GRN_Address_ConfigManager::getInstance();
    $system_config =& $config_manager->getSystemConfig();

    // 共有アドレスブックを取得する
    if ( ! ($book =& $book_manager->getSharedAddressBook($bid))) {
        cb_throw_error(E_GRN_ADDRESS_SHARED_ADDRESS_BOOK_NOT_FOUND);
    }

    // 共有アドレス帳のアクセス権を評価する
    $row =& $book->getRow();
    $authorities = ['browse', 'operation'];
    $access = $access_manager->evaluateAccess($row, $login,
        $dynamic_roles, $authorities);
    $authorities = ['browse'];
    $security_model = $access_manager->getSecurityModel($row);
    if ( ! $access_manager->isAllowedAccess($access, $authorities,
        $security_model)
    ) {
        cb_throw_error(E_GRN_ADDRESS_ACCESS_DENY_BROWSE);
    }

    // 共有アドレス帳の運用管理権限を評価する
    $authorities = ['operation'];
    $security_model = GRN_ADDRESS_SECURITYMODEL_GRANT;
    if ( ! $access_manager->isAllowedAccess($access, $authorities,
        $security_model)
    ) {
        cb_throw_error(E_GRN_ADDRESS_ACCESS_DENY_OPERATE_SHARED_ADDRESS);
    }

    if (0 < strlen($biid)) {
        // 組み込み項目情報を変更する
        require_once('address/view_util.csp');
        $view_util = GRN_Address_ViewUtil::getInstance();
        $items = $view_util->listBuiltinItems($book);
        $item =& $items[$biid];
        $item = array_merge($item, $properties);
        $system_config->setBuiltinItems($book, $items);

        // 監査する
        require_once('address/inspection.csp');
        $inspection = GRN_Address_Inspection::getInstance();
        if ($inspection->isEnabled()) {
            $section = GRN_ADDRESS_INSPECTION_CONFIG;
            $params = [];
            if (0 > $bid) {
                $message = GRN_ADDRESS_INSPECTION_PRIVATE_ADDRESS_CARD_ITEM;
            } else {
                $message = GRN_ADDRESS_INSPECTION_SHARED_ADDRESS_CARD_ITEM;
                $params['bid'] = $bid;
            }
            $params['iid'] = $biid;

            $informations = [];
            $informations['use'] = @ $item['use'];
            if (is_null($informations['use'])) {
                $informations['use'] = '0';
            }

            $informations['necessary'] = @ $item['necessary'];
            if (is_null($informations['necessary'])) {
                $informations['necessary'] = '0';
            }

            $informations['not_modify'] = @ $item['not_modify'];
            if (is_null($informations['not_modify'])) {
                $informations['not_modify'] = '0';
            }

            $informations['display'] = @ $item['display'];
            if (is_null($informations['display'])) {
                $informations['display'] = '0';
            }

            $informations['sso'] = @ $item['sso'];
            if ($informations['sso'] === '-1') {
                $informations['sso'] = 0;
            }

            $inspection->record($section, $message, $params, $informations);
        }

        cb_redirect('address/operation/item_view', [
            'bid'  => $bid,
            'biid' => $biid
        ]);
    } elseif (0 < strlen($eiid)) {
        require_once('SmartyValidate.class.php');
        SmartyValidate::connect($t);

        $target_name = 'address/operation/item_modify';
        SmartyValidate::register_form($target_name);

        if (SmartyValidate::is_valid($G_INPUT, $target_name)) {
            // GET/POSTされたパラメータを取得する
            require_once('fw/string_util.csp');
            $properties['display_name']
                = cb_trim_check(@ $G_INPUT['display_name'],
                E_COMMON_MISSING_MANDATORY);
            $properties['id'] = cb_trim_check(@ $G_INPUT['id'],
                E_COMMON_MISSING_MANDATORY);

            // 拡張項目情報を変更する
            if ( ! $book->setItemProperties($eiid, $properties)) {
                cb_throw_error(E_GRN_ADDRESS_COLLISION_ID_OF_ITEM);
            }

            SmartyValidate::unregister_form($target_name);

            cb_redirect('address/operation/item_view', [
                'bid'  => $bid,
                'eiid' => $eiid
            ]);
        } else {
            $t->setPageInfo($target_name);

            include('_item_modify.csp');

            $t->display($target_name . '.tpl');
        }
    }
}


