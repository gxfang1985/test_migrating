<?php

if (0 == strcasecmp(@ $_SERVER['REQUEST_METHOD'], 'POST')) {
    // GET/POSTされたパラメータを取得する
    $poid = null;
    if (array_key_exists('poid', $G_INPUT)) {
        $poid = $G_INPUT['poid'];
    }
    $node_id = null;
    if (array_key_exists('nid', $G_INPUT)) {
        $node_id = $G_INPUT['nid'];
    }
    if (0 == strlen($node_id)) {
        cb_throw_error(E_GRN_ADDRESS_INVALID_BOOK_ID);
    }
    $security_model = null;
    if (array_key_exists('security_model', $G_INPUT)) {
        $security_model = $G_INPUT['security_model'];
    }
    if (0 == strlen($security_model)) {
        assert('FALSE');
    }

    // アドレス帳を取得する
    require_once('address/application.csp');
    $app_locator = GRN_ApplicationLocator::instance();
    /** @var GRN_Address_Application $app */
    $app =& $app_locator->getInstance(GRN_ADDRESS_APPLICATION_ID);
    if ( ! is_object($app) || ! is_a($app, 'GRN_Address_Application')) {
        cb_throw_error(E_GRN_APPLICATION_NOT_AVAILABLE);
    }
    $book_manager =& $app->getBookManager();

    // ログインユーザーを取得する
    global $G_container_base;
    $uum =& $G_container_base->getInstance('uum');
    $login =& $uum->getLoginUser();
    if ( ! is_object($login) || ! is_a($login, 'CB_User')) {
        cb_throw_error(E_GRN_USER_NOT_FOUND);
    }
    $login_id = $login->getOID();

    // 使用権限を取得する
    require_once('address/access.csp');
    $access_manager = GRN_Address_AccessManager::getInstance();
    if ( ! ($row =& $access_manager->getAbstractData(GRN_ADDRESS_AVAILABLE))) {
        assert('FALSE');
    }

    // ダイナミックロールを取得する
    $dynamic_roles = $uum->listGrantedRoles();

    // 共有アドレス帳の使用権限を評価する
    $authorities = ['shared_address'];
    $security_model = $access_manager->getSecurityModel($row);
    $access = $access_manager->evaluateAccess($row, $login,
        $dynamic_roles, $authorities, $security_model);
    if ( ! $access_manager->isAllowedAccess($access, $authorities,
        $security_model)
    ) {
        cb_throw_error(E_GRN_ADDRESS_ACCESS_DENY_SHARED_ADDRESS);
    }

    // 共有アドレスブックを取得する
    $node_row =& $book_manager->getSharedAddressBook($node_id);
    if ( ! $node_row) {
        cb_throw_error(E_GRN_ADDRESS_SHARED_ADDRESS_BOOK_NOT_FOUND);
    }

    // 共有アドレスブック情報を取得する
    require_once('address/view_util.csp');
    $view_util = GRN_Address_ViewUtil::getInstance();
    $node = $view_util->getBook($node_row, 'access');

    // 共有アドレス帳のアクセス権を評価する
    $row =& $node_row->getRow();
    $authorities = ['browse', 'operation'];
    $access = $access_manager->evaluateAccess($row, $login,
        $dynamic_roles, $authorities);
    $authorities = ['browse'];
    $security_model = $access_manager->getSecurityModel($row);
    if ( ! $access_manager->isAllowedAccess($access, $authorities,
        $security_model)
    ) {
        cb_throw_error(E_GRN_ADDRESS_ACCESS_DENY_BROWSE);
    }

    // 共有アドレス帳の運用管理権限を評価する
    $authorities = ['operation'];
    $security_model = GRN_ADDRESS_SECURITYMODEL_GRANT;
    if ( ! $access_manager->isAllowedAccess($access, $authorities,
        $security_model)
    ) {
        cb_throw_error(E_GRN_ADDRESS_ACCESS_DENY_OPERATE_SHARED_ADDRESS);
    }

    $security_model = $G_INPUT['security_model'];
    if ('revoke' == $security_model) {
        $security_model = GRN_ADDRESS_SECURITYMODEL_REVOKE;
    } else {
        $security_model = GRN_ADDRESS_SECURITYMODEL_GRANT;
    }

    // セキュリティモデルによってリダイレクト先を変更する
    $row =& $node_row->getRow();
    $args = ['poid' => $poid, 'nid' => $node_id];
    if ($security_model == $access_manager->getSecurityModel($row)) {
        $pageurl = 'address/operation/access_list';
    } else {
        $pageurl = 'address/operation/access_model_modify2';
        $args['security_model'] = $G_INPUT['security_model'];
    }

    // リダイレクトする
    cb_redirect($pageurl, $args);
}


