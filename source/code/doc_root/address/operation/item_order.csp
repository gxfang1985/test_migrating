<?php

require_once('grn/smarty.csp');
$t = new GRN_Smarty;

////////////////////////////////////////////////////////////////

// GET/POSTされたパラメータを取得する
$bid = @ $G_INPUT['bid'];
if (0 == strlen($bid)) {
    cb_throw_error(E_GRN_ADDRESS_INVALID_BOOK_ID);
}

// アドレス帳を取得する
require_once('address/application.csp');
$app_locator = GRN_ApplicationLocator::instance();
/** @var GRN_Address_Application $app */
$app =& $app_locator->getInstance(GRN_ADDRESS_APPLICATION_ID);
if ( ! is_object($app) || ! is_a($app, 'GRN_Address_Application')) {
    cb_throw_error(E_GRN_APPLICATION_NOT_AVAILABLE);
}

// ログインユーザーを取得する
global $G_container_base;
$uum =& $G_container_base->getInstance('uum');
$login =& $uum->getLoginUser();
if ( ! is_object($login) || ! is_a($login, 'CB_User')) {
    cb_throw_error(E_GRN_USER_NOT_FOUND);
}
$login_id = $login->getOID();

// 使用権限を取得する
require_once('address/access.csp');
$access_manager = GRN_Address_AccessManager::getInstance();
if ( ! ($row =& $access_manager->getAbstractData(GRN_ADDRESS_AVAILABLE))) {
    assert('FALSE');
}

// ダイナミックロールを取得する
$dynamic_roles = $uum->listGrantedRoles();

// 共有アドレス帳の使用権限を評価する
$authorities = ['shared_address'];
$security_model = $access_manager->getSecurityModel($row);
$access = $access_manager->evaluateAccess($row, $login, $dynamic_roles,
    $authorities, $security_model);
if ( ! $access_manager->isAllowedAccess($access, $authorities,
    $security_model)
) {
    cb_throw_error(E_GRN_ADDRESS_ACCESS_DENY_SHARED_ADDRESS);
}

// 共有アドレスブックを取得する
$book_manager =& $app->getBookManager();
if ( ! ($book =& $book_manager->getSharedAddressBook($bid))) {
    cb_throw_error(E_GRN_ADDRESS_SHARED_ADDRESS_BOOK_NOT_FOUND);
}

// 共有アドレス帳のアクセス権を評価する
$row =& $book->getRow();
$authorities = ['browse', 'operation'];
$access = $access_manager->evaluateAccess($row, $login, $dynamic_roles,
    $authorities);
$authorities = ['browse'];
$security_model = $access_manager->getSecurityModel($row);
if ( ! $access_manager->isAllowedAccess($access, $authorities,
    $security_model)
) {
    cb_throw_error(E_GRN_ADDRESS_ACCESS_DENY_BROWSE);
}

// 共有アドレス帳の運用管理権限を評価する
$authorities = ['operation'];
$security_model = GRN_ADDRESS_SECURITYMODEL_GRANT;
if ( ! $access_manager->isAllowedAccess($access, $authorities,
    $security_model)
) {
    cb_throw_error(E_GRN_ADDRESS_ACCESS_DENY_OPERATE_SHARED_ADDRESS);
}

// 拡張項目一覧を取得する
$items = $book->listItems();

// 拡張項目オプション一覧を取得する
require_once('address/view_util.csp');
$view_util = GRN_Address_ViewUtil::getInstance();
$extended_items = $view_util->listExtendedItems($book, 'order');

$t->assign('book_id', $bid);
$t->assign('item_options', $extended_items);

////////////////////////////////////////////////////////////////

// Smartyにページタイトルを割り当てる
$page_title = grn_get_page_display_name('address/operation/item_order');
$t->assign('page_title', $page_title);

// Smartyにサイトポジションを割り当てる
$page_info = [
    'index'                => ['bid' => $bid],
    'operation/item_list'  => ['bid' => $bid],
    'operation/item_order' => null
];
require_once('grn/controller.csp');
$controlloer_util = new GRN_ControllerUtil();
$site_position = $controlloer_util->makeSitePosition('address/', $page_info);
$t->assign('site_position', $site_position);

// Smartyを実行する
$t->display(cb_get_pagename() . '.tpl');


