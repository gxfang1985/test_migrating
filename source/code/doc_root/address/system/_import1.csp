<?php

// GET/POSTされたパラメータを取得する
$bid = null;
if (array_key_exists('bid', $G_INPUT)) {
    $bid = $G_INPUT['bid'];
}
$charset = null;
if (array_key_exists('charset', $G_INPUT)) {
    $charset = $G_INPUT['charset'];
}
if (0 == strlen($charset)) {
    global $G_config_common;
    $charset = $G_config_common->get('I18N', 'default_external_encoding');
}
$skip = false;
if (array_key_exists('skip', $G_INPUT)) {
    $skip = $G_INPUT['skip'];
}

// アドレス帳を取得する
require_once('address/application.csp');
$app_locator = GRN_ApplicationLocator::instance();
/** @var GRN_Address_Application $app */
$app =& $app_locator->getInstance(GRN_ADDRESS_APPLICATION_ID);
if ( ! is_object($app) || ! is_a($app, 'GRN_Address_Application')) {
    cb_throw_error(E_GRN_APPLICATION_NOT_AVAILABLE);
}
$book_manager =& $app->getBookManager();

// 共有アドレスブック一覧を取得する
$books = $book_manager->listSharedAddressBooks();
if (0 == count($books)) {
    assert('FALSE');
}

// 共有アドレスブックオプション一覧を取得する
require_once('address/view_util.csp');
$view_util = GRN_Address_ViewUtil::getInstance();
$book_options = $view_util->listSharedAddressBookOptions($books, $books, $bid);

if (0 == strlen($bid)) {
    $keys = array_keys($books);
    $bid = $keys[0];
}
$book =& $books[$bid];

// 組み込み項目情報一覧を取得する
$builtin_items = $view_util->listBuiltinItems($book, false);

// 名と姓と名（よみ）と姓（よみ）を除外する
$builtin_item = $builtin_items['personal_name'];
if ( ! $builtin_item['use']) {
    unset($builtin_items['family_name']);
    unset($builtin_items['given_name']);
}
$builtin_item = $builtin_items['personal_sort_key'];
if ( ! $builtin_item['use']) {
    unset($builtin_items['family_sort_key']);
    unset($builtin_items['given_sort_key']);
}
// 所要時間と片道運賃を除外する
$builtin_item = $builtin_items['route'];
if (isset($builtin_items['route_detail'])) {
    $builtin_items['route']['display_name']
        = $builtin_items['route_detail']['display_name'];
}
unset($builtin_items['route_detail']);
if ( ! $builtin_item['use']) {
    unset($builtin_items['route_time']);
    unset($builtin_items['route_fare']);
}

// 個人名と個人名（よみ）と地図と画像を除外する
unset($builtin_items['personal_name']);
unset($builtin_items['personal_sort_key']);
unset($builtin_items['map']);
unset($builtin_items['image']);

$max_length = 12;
// 使用しない項目を除外する
foreach (array_keys($builtin_items) as $item_id) {
    $builtin_item = $builtin_items[$item_id];
    if ( ! $builtin_item['use']
         || GRN_ADDRESS_ITEM_FILE == $builtin_item['type']
    ) {
        unset($builtin_items[$item_id]);
    }

    // 表示時の最大幅を取得
    if ($max_length < mb_strlen($builtin_item['display_name'], 'UTF-8')) {
        $max_length = mb_strlen($builtin_item['display_name'], 'UTF-8');
    }
}

// 拡張項目情報一覧を取得する
$extended_items = $view_util->listExtendedItems($book);

// 項目タイプがファイル、使用しない項目を除外する
foreach (array_keys($extended_items) as $item_id) {
    $extended_item = $extended_items[$item_id];
    if ( ! $extended_item['use']
         || GRN_ADDRESS_ITEM_FILE == $extended_item['type']
    ) {
        unset($extended_items[$item_id]);
    }

    // 表示時の最大幅を取得
    if ($max_length < mb_strlen($extended_item['display_name'], 'UTF-8')) {
        $max_length = mb_strlen($extended_item['display_name'], 'UTF-8');
    }
}

$t->assign('book_id', $bid);
$t->assign('charset', $charset);
$t->assign('skip', $skip);
$t->assign('book_options', $book_options);
$t->assign('builtin_items', $builtin_items);
$t->assign('extended_items', $extended_items);
$t->assign('max_length', $max_length);

////////////////////////////////////////////////////////////////

// Smartyにページタイトルを割り当てる
$page_title = grn_get_page_display_name('address/system/import1');
$t->assign('page_title', $page_title);

// Smartyにサイトポジションを割り当てる
$page_info = [
    'import_index' => [],
    'import1'      => null
];
require_once('grn/controller.csp');
$controller_util = new GRN_ControllerUtil();
$site_position = $controller_util->makeSitePosition('address/system/',
    $page_info);
$t->assign('site_position', $site_position);


