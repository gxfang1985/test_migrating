<?php
require_once('grn/smarty.csp');
$t = new GRN_Smarty;

//--------------------------------------------------------------

require_once('address/application.csp');
$app_locator = GRN_ApplicationLocator::instance();

require_once('address/view_util.csp');
$view_util = GRN_Address_ViewUtil::getInstance();

require_once('grn/sso.csp');
$sso_service = GRN_SSO_Service::getInstance();

global $G_container_base;
$uum =& $G_container_base->getInstance('uum');

// GET/POSTされたパラメータを取得する
$bid = @ $G_INPUT['bid'];
if (0 == strlen($bid)) {
    cb_throw_error(E_GRN_ADDRESS_INVALID_BOOK_ID);
}
$biid = @ $G_INPUT['biid'];
$eiid = @ $G_INPUT['eiid'];

// アドレス帳を取得する
/** @var GRN_Address_Application $app */
$app =& $app_locator->getInstance(GRN_ADDRESS_APPLICATION_ID);
if ( ! is_object($app) || ! is_a($app, 'GRN_Address_Application')) {
    cb_throw_error(E_GRN_APPLICATION_NOT_AVAILABLE);
}
$book_manager =& $app->getBookManager();

// ログインユーザーを取得する
$login =& $uum->getLoginUser();
if ( ! is_object($login) || ! is_a($login, 'CB_User')) {
    cb_throw_error(E_GRN_USER_NOT_FOUND);
}
$login_id = $login->getOID();

// ブックを取得する
if (0 > $bid) {
    if ( ! ($book =& $book_manager->getPrivateAddressBookByUserId($login_id))) {
        if ( ! ($book =& $book_manager->addPrivateAddressBook('cyde', $login_id,
            []))
        ) {
            cb_throw_error(E_GRN_ADDRESS_PRIVATE_ADDRESS_BOOK_NOT_FOUND);
        }
    }
} else {
    if ( ! ($book =& $book_manager->getSharedAddressBook($bid))) {
        cb_throw_error(E_GRN_ADDRESS_SHARED_ADDRESS_BOOK_NOT_FOUND);
    }
}

// シングルサインオン一覧を取得する
$sso_list = $sso_service->getSSOMethodList('address');

if (0 < strlen($biid)) {
    // 組み込み項目情報を取得する
    $items_for_view = $view_util->listBuiltinItems($book);
    if ( ! array_key_exists($biid, $items_for_view)) {
        cb_throw_error(E_GRN_ADDRESS_BUILTIN_ITEM_NOT_FOUND);
    }
    $item_for_view = $items_for_view[$biid];

    $t->assign('builtin_item_id', $biid);
} elseif (0 < strlen($eiid)) {
    // 拡張項目情報を取得する
    if ( ! ($item =& $book->getItem($eiid))) {
        cb_throw_error(E_GRN_ADDRESS_EXTENDED_ITEM_NOT_FOUND);
    }
    $item_for_view = $view_util->getExtendedItem($item, null, $sso_list);

    $t->assign('extended_item_id', $eiid);
    $access_for_view['delete'] = true;
} else {
    cb_throw_error(E_GRN_ADDRESS_ITEM_NOT_FOUND);
}
$access_for_view['modify'] = true;

// 項目タイプオプション一覧を取得する
$item_type_options = $view_util->listItemTypeOptions();

// SSO機能オプション一覧を取得する
$sso_options = $view_util->listSsoOptions($sso_list);

$t->assign('book_id', $bid);
$t->assign('access', $access_for_view);
$t->assign('item', $item_for_view);
$t->assign('item_type_options', $item_type_options);
$t->assign('sso_options', $sso_options);

//--------------------------------------------------------------

require_once('grn/controller.csp');
$controller_util = new GRN_ControllerUtil();

// Smartyにページタイトルを割り当てる
$page_title = grn_get_page_display_name('address/system/item_view');
$t->assign('page_title', $page_title);

// Smartyにサイトポジションを割り当てる
$page_info = [
    'item_index' => [],
    'item_list'  => ['bid' => $bid],
    'item_view'  => null
];
$site_position = $controller_util->makeSitePosition('address/system/',
    $page_info);
$t->assign('site_position', $site_position);

// Smartyを実行する
$t->display(cb_get_pagename() . '.tpl');
