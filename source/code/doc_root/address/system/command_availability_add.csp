<?php

if (0 == strcasecmp(@ $_SERVER['REQUEST_METHOD'], 'POST')) {
    require_once('grn/smarty.csp');
    $t = new GRN_Smarty;

    // GET/POSTされたパラメータを取得する
    $poid = null;
    if (array_key_exists('poid', $G_INPUT)) {
        $poid = $G_INPUT['poid'];
    }

    $text = null;
    if (array_key_exists('text', $G_INPUT)) {
        $text = $G_INPUT['text'];
    }

    $func = $G_INPUT['func'];
    if ($func == 'search') {
        cb_redirect('address/system/availability_list',
            ['poid' => $poid, 'text' => $text]);
    }

    $aid = null;
    require_once('fw/session_manager.csp');
    $session_manager = CB_SessionManager::getInstance();

    $session_name = 'address.system.availability_add';
    $session =& $session_manager->getSession($session_name);
    $aid = $session->get('target_ids');
    //if( array_key_exists( 'aid', $G_INPUT ) )
    //{
    //    $aid = $G_INPUT['aid'];
    //}
    if ( ! is_array($aid) || 0 == count($aid)) {
        cb_redirect('address/system/availability_list',
            ['poid' => $poid, 'no_reset' => true, 'text' => $text]);
    }
    $access_value = null;
    if (array_key_exists('access_value', $G_INPUT)) {
        $access_value = $G_INPUT['access_value'];
    }

    // アドレス帳を取得する
    require_once('address/application.csp');
    $app_locator = GRN_ApplicationLocator::instance();
    /** @var GRN_Address_Application $app */
    $app = $app_locator->getInstance(GRN_ADDRESS_APPLICATION_ID);
    if ( ! is_object($app) || ! is_a($app, 'GRN_Address_Application')) {
        cb_throw_error(E_GRN_APPLICATION_NOT_AVAILABLE);
    }

    // 使用権限を取得する
    require_once('address/access.csp');
    $access_manager = GRN_Address_AccessManager::getInstance();
    if ( ! ($row = $access_manager->getAbstractData(GRN_ADDRESS_AVAILABLE))) {
        assert('FALSE');
    }

    // アクセス権を構成する権限一覧を取得する
    $allowed_keys = ['private_address', 'shared_address'];
    require_once('address/view_util.csp');
    $view_util = GRN_Address_ViewUtil::getInstance();
    $authorities = $view_util->listAuthorities($access_value, $allowed_keys);

    // セッションに権限の値を書き込む
    require_once('fw/session_manager.csp');
    $session_manager = CB_SessionManager::getInstance();
    $session
        = $session_manager->getSession('address.system.availability_list');
    $session->set('access_value', $access_value);

    // アクセス権を追加する
    global $G_container_base;
    $uum = $G_container_base->getInstance('uum');
    require_once('grn/uum_util.csp');
    $uum_util = GRN_UumUtil::getInstance();
    $dynamic_roles = $uum_util->listDynamicRoles();
    require_once('grn/access_resources.csp');
    foreach (array_keys($aid) as $item) {
        $ids = explode(':', $item);
        if (count($ids) < 2) {
            continue;
        }
        $target = null;
        switch ($ids[0]) {
            case GRN_ACCESS_TARGET_TYPE_USER:
                $target =& $uum->getUser($ids[1]);
                break;
            case GRN_ACCESS_TARGET_TYPE_GROUP:
                $target =& $uum->getGroup($ids[1]);
                break;
            case GRN_ACCESS_TARGET_TYPE_STATIC_ROLE:
                $target =& $uum->getStaticRole($ids[1]);
                break;
            case GRN_ACCESS_TARGET_TYPE_DYNAMIC_ROLE:
                if (array_key_exists($ids[1], $dynamic_roles)) {
                    $target = $ids[1];
                }
                break;
            default:
                assert('FALSE');
        }

        if ($target) {
            if ($access =& $access_manager->getAccess($row, $target)) {
                foreach ($authorities as $key => $value) {
                    $access->set('authority_' . $key, $value);
                }
            } else {
                $access_manager->addAccess($row, $target, $authorities);
            }
        }

        unset($target);
    }

    cb_redirect('address/system/availability_list', [
        'poid'     => $poid,
        'no_reset' => true,
        'text'     => $text,
        'sp'       => @$G_INPUT['sp']
    ]);
}

