<?php

if (0 == strcasecmp(@ $_SERVER['REQUEST_METHOD'], 'POST')) {
    // GET/POSTされたパラメータを取得する
    $poid = null;
    if (array_key_exists('poid', $G_INPUT)) {
        $poid = $G_INPUT['poid'];
    }
    $eid = null;
    if (array_key_exists('eid', $G_INPUT)) {
        $eid = $G_INPUT['eid'];
    }
    if ( ! is_array($eid) || 0 == count($eid)) {
        cb_redirect('address/system/availability_list',
            ['poid' => $poid, 'no_reset' => true]);
    }

    // アドレス帳を取得する
    require_once('address/application.csp');
    $app_locator = GRN_ApplicationLocator::instance();
    /** @var GRN_Address_Application $app */
    $app =& $app_locator->getInstance(GRN_ADDRESS_APPLICATION_ID);
    if ( ! is_object($app) || ! is_a($app, 'GRN_Address_Application')) {
        cb_throw_error(E_GRN_APPLICATION_NOT_AVAILABLE);
    }

    // 複数のアクセス権を削除する
    require_once('grn/access_resources.csp');
    $access_info = [];
    $access_info[GRN_ADDRESS_TARGET_USER] = [];
    $access_info[GRN_ADDRESS_TARGET_GROUP] = [];
    $access_info[GRN_ADDRESS_TARGET_STATICROLE] = [];
    $access_info[GRN_ADDRESS_TARGET_DYNAMICROLE] = [];
    $target_types = [
        GRN_ACCESS_TARGET_TYPE_USER         => GRN_ADDRESS_TARGET_USER,
        GRN_ACCESS_TARGET_TYPE_GROUP        => GRN_ADDRESS_TARGET_GROUP,
        GRN_ACCESS_TARGET_TYPE_STATIC_ROLE  => GRN_ADDRESS_TARGET_STATICROLE,
        GRN_ACCESS_TARGET_TYPE_DYNAMIC_ROLE => GRN_ADDRESS_TARGET_DYNAMICROLE
    ];
    foreach ($eid as $selected_id) {
        $id_elements = explode(':', $selected_id);
        if (count($id_elements) < 2) {
            continue;
        }

        if (array_key_exists($id_elements[0], $target_types)) {
            $target_type = $target_types[$id_elements[0]];
            $access_info[$target_type][] = $id_elements[1];
        }
    }

    // 使用権限を取得する
    require_once('address/access.csp');
    $access_manager = GRN_Address_AccessManager::getInstance();
    if ( ! ($row =& $access_manager->getAbstractData(GRN_ADDRESS_AVAILABLE))) {
        assert('FALSE');
    }

    // 複数のアクセス権を削除する
    $authorities = null;
    $access_manager->removeAccesses($row, $authorities, $access_info);

    cb_redirect('address/system/availability_list',
        ['poid' => $poid, 'no_reset' => true]);
}


