<?php

if (0 == strcasecmp(@ $_SERVER['REQUEST_METHOD'], 'POST')) {
    require_once('_access_util.csp');

    // GET/POSTされたパラメータを取得する
    $node_id = @ $G_INPUT['nid'];
    if (0 == strlen($node_id)) {
        cb_throw_error(E_GRN_ADDRESS_INVALID_BOOK_ID);
    }

    $text = null;
    if (array_key_exists('text', $G_INPUT)) {
        $text = $G_INPUT['text'];
    }

    $func = $G_INPUT['func'];
    if ($func == 'search') {
        cb_redirect('address/system/privilege_list',
            ['nid' => $node_id, 'poid' => $poid, 'text' => $text]);
    }

    $aid = null;
    require_once('fw/session_manager.csp');
    $session_manager = CB_SessionManager::getInstance();

    $session_name = 'address.system.privilege_add';
    $session =& $session_manager->getSession($session_name);
    $aid = $session->get('target_ids');
    //if( array_key_exists( 'aid', $G_INPUT ) )
    //{
    //    $aid = $G_INPUT['aid'];
    //}
    if ( ! is_array($aid) || 0 == count($aid)) {
        cb_redirect('address/system/privilege_list',
            ['nid' => $node_id, 'poid' => $poid, 'text' => $text]);
    }

    // アクセス権を追加する
    global $G_container_base;
    $uum = $G_container_base->getInstance('uum');
    require_once('grn/uum_util.csp');
    $uum_util = GRN_UumUtil::getInstance();
    $dynamic_roles = $uum_util->listDynamicRoles();
    require_once('address/access.csp');
    $access_manager = GRN_Address_AccessManager::getInstance();
    require_once('grn/access_resources.csp');
    $authorities = ['operation' => 1];
    foreach (array_keys($aid) as $access_id) {
        $id_elements = explode(':', $access_id);
        if (count($id_elements) < 2) {
            continue;
        }
        $target = null;
        switch ($id_elements[0]) {
            case GRN_ACCESS_TARGET_TYPE_USER:
                $target =& $uum->getUser($id_elements[1]);
                break;
            case GRN_ACCESS_TARGET_TYPE_GROUP:
                $target =& $uum->getGroup($id_elements[1]);
                break;
            case GRN_ACCESS_TARGET_TYPE_STATIC_ROLE:
                $target =& $uum->getStaticRole($id_elements[1]);
                break;
            case GRN_ACCESS_TARGET_TYPE_DYNAMIC_ROLE:
                if (array_key_exists($id_elements[1], $dynamic_roles)) {
                    $target = $id_elements[1];
                }
                break;
        }

        if ($target) {
            $row = $node_row->getRow();
            if ($access = $access_manager->getAccess($row, $target)) {
                $operation = $access->get('authority_operation');
                if (is_null($operation) || $operation == 0) {
                    // write log
                    require_once('address/inspection.csp');
                    $inspection = GRN_Address_Inspection::getInstance();
                    if ($inspection->isEnabled()) {
                        $target_id = $access_manager->getTargetId($target);
                        $target_name = $access_manager->getTargetName($target);
                        $id_name = '';
                        $id_value = '';
                        switch ($target_name) {
                            case GRN_ADDRESS_TARGET_USER:
                                $id_name = 'uid';
                                $id_value = $target_id;
                                break;
                            case GRN_ADDRESS_TARGET_GROUP:
                                $id_name = 'gid';
                                $id_value = $target_id;
                                break;
                            case GRN_ADDRESS_TARGET_STATICROLE:
                                $id_name = 'rid';
                                $id_value = $target_id;
                                break;
                            case GRN_ADDRESS_TARGET_DYNAMICROLE:
                                $id_name = 'dynamic_role';
                                $id_value = $target_id;
                                break;
                        }
                        $section = GRN_ADDRESS_INSPECTION_CREATE;
                        $message = GRN_ADDRESS_INSPECTION_PRIVILEGE;
                        $params['bid'] = $row->getOID();
                        $params[$id_name] = $id_value;
                        $inspection->record($section, $message, $params);
                    }
                }
                foreach ($authorities as $key => $value) {
                    $access->set('authority_' . $key, $value);
                }
            } else {
                $access_manager->addAccess($row, $target, $authorities);
            }
        }
        unset($target);
    }

    cb_redirect('address/system/privilege_list', [
        'nid'  => $node_id,
        'poid' => $poid,
        'text' => $text,
        'sp'   => @$G_INPUT['sp']
    ]);
}

