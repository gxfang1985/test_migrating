<?php

require_once('grn/smarty.csp');
$t = new GRN_Smarty;

////////////////////////////////////////////////////////////////

require_once('_access_util.csp');

// GET/POSTされたパラメータを取得する
if (0 == strlen($node_id)) {
    cb_throw_error(E_GRN_ADDRESS_INVALID_BOOK_ID);
}

$item_type = null;
if (array_key_exists('itype', $G_INPUT)) {
    $item_type = $G_INPUT['itype'];
}
$item_tid = null;
if (array_key_exists('itid', $G_INPUT)) {
    $item_tid = $G_INPUT['itid'];
}
if ( ! $item_type || ! $item_tid) {
    cb_throw_error(E_GRN_ADDRESS_ACCESS_NOT_SELECT_TARGETS);
}

// セキュリティモデルを取得する
if (GRN_ADDRESS_SECURITYMODEL_REVOKE == $node['security_model']) {
    $security_model = GRN_ADDRESS_SECURITYMODEL_REVOKE;
} else {
    $security_model = GRN_ADDRESS_SECURITYMODEL_GRANT;
}

global $G_container_base;
$uum =& $G_container_base->getInstance('uum');
require_once('grn/uum_util.csp');
$uum_util = GRN_UumUtil::getInstance();
$dynamic_roles = $uum_util->listDynamicRoles();
require_once('grn/access_resources.csp');
$access_item = [];
$access = null;
$target = null;
switch ($item_type) {
    case 'user':
        if ( ! ($target =& $uum->getUser($item_tid))) {
            cb_throw_error(E_GRN_ADDRESS_USER_NOT_FOUND);
        }
        break;
    case 'group':
        if ( ! ($target =& $uum->getGroup($item_tid))) {
            cb_throw_error(E_GRN_ADDRESS_GROUP_NOT_FOUND);
        }
        break;
    case 'static_role':
        if ( ! ($target =& $uum->getStaticRole($item_tid))) {
            cb_throw_error(E_GRN_ADDRESS_ROLE_NOT_FOUND);
        }
        break;
    case 'dynamic_role':
        if ( ! array_key_exists($item_tid, $dynamic_roles)) {
            cb_throw_error(E_GRN_ADDRESS_ROLE_NOT_FOUND);
        }
        $target = $item_tid;
        break;
}

require_once('address/access.csp');
$access_manager = GRN_Address_AccessManager::getInstance();
$access =& $access_manager->getAccess($node_row->getRow(), $target);
if ( ! $access) {
    cb_throw_error(E_GRN_ADDRESS_INVALID_TARGET);
}
$allowed_access_values = GRN_ADDRESS_AUTHORITY_BROWSE
                         | GRN_ADDRESS_AUTHORITY_EDITING;
require_once('address/view_util.csp');
$view_util = GRN_Address_ViewUtil::getInstance();
$access_for_view = $view_util->getAccess($access, $allowed_access_values);

if (GRN_ADDRESS_SECURITYMODEL_REVOKE == $security_model) {
    switch ($access_for_view['value']) {
        case 3:
            $data = ['browse' => 1, 'editing' => 1];
            break;
        case 2:
            $data = ['browse' => 0, 'editing' => 1];
            break;
        default:
            $data = ['browse' => 0, 'editing' => 0];
            break;
    }
} else {
    switch ($access_for_view['value']) {
        case 0:
            $data = ['browse' => 0, 'editing' => 0];
            break;
        case 1:
            $data = ['browse' => 1, 'editing' => 0];
            break;
        default:
            $data = ['browse' => 1, 'editing' => 1];
            break;
    }
}
$access_item = ['type' => $item_type, 'tid' => $item_tid, 'data' => $data,];

$t->assign('access_item', $access_item);
$t->assign('security_model', $security_model);

////////////////////////////////////////////////////////////////

require_once('grn/controller.csp');
$controller_util = new GRN_ControllerUtil();

// Smartyにページタイトルを割り当てる
$page_title = grn_get_current_page_display_name();
$t->assign('page_title', $page_title);

// Smartyにサイトポジションを割り当てる
$page_info = [
    'access_index'  => [],
    'access_list'   => ['nid' => $node_id, 'poid' => $poid],
    'access_modify' => null
];
$site_position = $controller_util->makeSitePosition('address/system/',
    $page_info);
$t->assign('site_position', $site_position);

// Smartyを実行する
$t->display(cb_get_pagename() . '.tpl');


