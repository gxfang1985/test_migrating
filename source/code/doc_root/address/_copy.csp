<?php

// GET/POSTされたパラメータを取得する
$bid = null;
if (array_key_exists('bid', $G_INPUT)) {
    $bid = $G_INPUT['bid'];
}
if (0 == strlen($bid)) {
    cb_throw_error(E_GRN_ADDRESS_INVALID_BOOK_ID);
}
$cid = null;
if (array_key_exists('cid', $G_INPUT)) {
    $cid = $G_INPUT['cid'];
}
if (0 == strlen($cid)) {
    cb_throw_error(E_GRN_ADDRESS_INVALID_CARD_ID);
}

// アドレス帳を取得する
require_once('address/application.csp');
$app_locator = GRN_ApplicationLocator::instance();
/** @var GRN_Address_Application $app */
$app =& $app_locator->getInstance(GRN_ADDRESS_APPLICATION_ID);
if ( ! is_object($app) || ! is_a($app, 'GRN_Address_Application')) {
    cb_throw_error(E_GRN_APPLICATION_NOT_AVAILABLE);
}
$book_manager =& $app->getBookManager();

// ログインユーザーを取得する
global $G_container_base;
$uum =& $G_container_base->getInstance('uum');
$login =& $uum->getLoginUser();
if ( ! is_object($login) || ! is_a($login, 'CB_User')) {
    cb_throw_error(E_GRN_USER_NOT_FOUND);
}
$login_id = $login->getOID();

// 使用権限を取得する
require_once('address/access.csp');
$access_manager = GRN_Address_AccessManager::getInstance();
if ( ! ($row =& $access_manager->getAbstractData(GRN_ADDRESS_AVAILABLE))) {
    assert('FALSE');
}

// ダイナミックロールを取得する
$dynamic_roles = $uum->listGrantedRoles();

// 使用権限を評価する
$authorities = ['private_address', 'shared_address'];
$security_model = $access_manager->getSecurityModel($row);
$access = $access_manager->evaluateAccess($row, $login, $dynamic_roles,
    $authorities, $security_model);

$books = [];
$allowed_books = [];
if ($access_shared_address = $access_manager->isAllowedAccess($access,
    $authorities, $security_model)
) {
    // 共有アドレスブック一覧を取得する
    $books = $book_manager->listSharedAddressBooks();

    if (0 < count($books)) {
        // アクセス可能な共有アドレスブック一覧を取得する
        $rows = [];
        foreach (array_keys($books) as $book_id) {
            $book = $books[$book_id];
            $rows[$book_id] = $book->getRow();
        }
        $authorities = ['browse', 'editing'];
        $allowed_books = $access_manager->pickAllowedObjects($rows, $login,
            $dynamic_roles, $authorities);
    }
}

// ブックを取得する
if (0 > $bid) {
    // 個人アドレス帳の使用権限を評価する
    $authorities = ['private_address'];
    if ( ! $access_manager->isAllowedAccess($access, $authorities,
        $security_model)
    ) {
        cb_throw_error(E_GRN_ADDRESS_ACCESS_DENY_PRIVATE_ADDRESS);
    }

    // 個人アドレスブックを取得する
    if ( ! ($book = $book_manager->getPrivateAddressBookByUserId($login_id))) {
        cb_throw_error(E_GRN_ADDRESS_CARD_NOT_FOUND);
    }
} else {
    // 共有アドレス帳の使用権限を評価する
    $authorities = ['shared_address'];
    if ( ! $access_shared_address) {
        cb_throw_error(E_GRN_ADDRESS_ACCESS_DENY_SHARED_ADDRESS);
    }

    // 共有アドレスブックを取得する
    if ( ! array_key_exists($bid, $allowed_books)) {
        cb_throw_error(E_GRN_ADDRESS_ACCESS_DENY_EDITING);
    }
    $book = $books[$bid];
    unset($allowed_books[$bid]);
}

// 共有アドレスブック情報一覧を取得する
require_once('address/view_util.csp');
$view_util = GRN_Address_ViewUtil::getInstance();
$books_for_view = $view_util->listBooks($books, $allowed_books);

// アドレスを取得する
if ( ! ($data =& $book->getData($cid))) {
    cb_throw_error(E_GRN_ADDRESS_CARD_NOT_FOUND);
}

// アドレス情報を取得する
$data_for_view = $data->getProperties();

$t->assign('book_id', $bid);
$t->assign('card_id', $cid);
$t->assign('books', $books_for_view);
$t->assign('card', $data_for_view);

////////////////////////////////////////////////////////////////

// Smartyにページタイトルを割り当てる
$page_title = grn_get_page_display_name('address/copy');
$t->assign('page_title', $page_title);

// Smartyにサイトポジションを割り当てる
$page_info = [
    'index' => ['sf' => 1, 'bid' => $bid],
    'view'  => ['bid' => $bid, 'cid' => $cid],
    'copy'  => null
];
require_once('grn/controller.csp');
$controller_util = new GRN_ControllerUtil();
$site_position = $controller_util->makeSitePosition('address/', $page_info);
$t->assign('site_position', $site_position);


