<?php

use grn\grn\access\service\AppAccess;

require_once('grn/smarty.csp');
$t = new GRN_Smarty;

////////////////////////////////////////////////////////////////

// GET/POSTされたパラメータを取得する
$bid = null;
if (array_key_exists('bid', $G_INPUT)) {
    $bid = $G_INPUT['bid'];
}
if (0 == strlen($bid)) {
    cb_throw_error(E_GRN_ADDRESS_INVALID_BOOK_ID);
}
$cid = null;
if (array_key_exists('cid', $G_INPUT)) {
    $cid = $G_INPUT['cid'];
}
if (0 == strlen($cid)) {
    cb_throw_error(E_GRN_ADDRESS_INVALID_CARD_ID);
}
$mp = null;
if (array_key_exists('mp', $G_INPUT)) {
    $mp = $G_INPUT['mp'];
}

// アドレス帳を取得する
require_once('address/application.csp');
$app_locator = GRN_ApplicationLocator::instance();
/** @var GRN_Address_Application $app */
$app = $app_locator->getInstance(GRN_ADDRESS_APPLICATION_ID);
if ( ! is_object($app) || ! is_a($app, 'GRN_Address_Application')) {
    cb_throw_error(E_GRN_APPLICATION_NOT_AVAILABLE);
}
$book_manager = $app->getBookManager();

// ログインユーザーを取得する
global $G_container_base;
$uum = $G_container_base->getInstance('uum');
$login = $uum->getLoginUser();
if ( ! is_object($login) || ! is_a($login, 'CB_User')) {
    cb_throw_error(E_GRN_USER_NOT_FOUND);
}
$login_id = $login->getOID();

// アドレス帳の設定を取得する
require_once('address/config.csp');
$config_manager = GRN_Address_ConfigManager::getInstance();
$system_config = $config_manager->getSystemConfig();
$personal_config = $config_manager->getPersonalConfig($login);

// 使用権限を取得する
require_once('address/access.csp');
$access_manager = GRN_Address_AccessManager::getInstance();
if ( ! ($row = $access_manager->getAbstractData(GRN_ADDRESS_AVAILABLE))) {
    assert('FALSE');
}

// ダイナミックロールを取得する
$dynamic_roles = $uum->listGrantedRoles();

// 使用権限を評価する
$authorities = ['private_address', 'shared_address'];
$security_model = $access_manager->getSecurityModel($row);
$access = $access_manager->evaluateAccess($row, $login, $dynamic_roles,
    $authorities, $security_model);

// 個人アドレス帳の使用権限を評価する
$authorities = ['private_address'];
$access_for_view = [];
$access_for_view['private_address'] = $access_manager->isAllowedAccess($access,
    $authorities, $security_model);

// 共有アドレス帳の使用権限を評価する
$authorities = ['shared_address'];
$access_for_view['shared_address'] = $access_manager->isAllowedAccess($access,
    $authorities, $security_model);

$books = [];
$allowed_books = [];
if ($access_for_view['shared_address']) {
    // 共有アドレスブック一覧を取得する
    $books = $book_manager->listSharedAddressBooks();

    if (0 < count($books)) {
        // 閲覧、編集権限を持つ共有アドレスブック一覧を取得する
        $rows = [];
        foreach (array_keys($books) as $book_id) {
            $book =& $books[$book_id];
            $rows[$book_id] = $book->getRow();
        }

        $authorities = ['browse', 'editing'];
        $allowed_books = $access_manager->pickAllowedObjects($rows, $login,
            $dynamic_roles, $authorities);
    }
}

// ブックを取得する
$allowed_count = 0;
$access_editing = true;
if (0 > $bid) {
    if ( ! $access_for_view['private_address']) {
        cb_throw_error(E_GRN_ADDRESS_ACCESS_DENY_PRIVATE_ADDRESS);
    }

    if ( ! ($book = $book_manager->getPrivateAddressBookByUserId($login_id))) {
        if ( ! ($book =& $book_manager->addPrivateAddressBook('cyde', $login_id,
            []))
        ) {
            cb_throw_error(E_GRN_ADDRESS_PRIVATE_ADDRESS_BOOK_NOT_FOUND);
        }
    }
} else {
    if ( ! $access_for_view['shared_address']) {
        cb_throw_error(E_GRN_ADDRESS_ACCESS_DENY_SHARED_ADDRESS);
    }

    if ( ! array_key_exists($bid, $allowed_books)) {
        // 共有アドレス帳の閲覧権限を評価する
        if ( ! array_key_exists($bid, $books)) {
            cb_throw_error(E_GRN_ADDRESS_INVALID_BOOK_ID);
        }
        $book =& $books[$bid];
        $row =& $book->getRow();
        $authorities = ['browse'];
        $access = $access_manager->evaluateAccess($row, $login,
            $dynamic_roles, $authorities);
        $security_model = $access_manager->getSecurityModel($row);
        if ( ! $access_manager->isAllowedAccess($access, $authorities,
            $security_model)
        ) {
            cb_throw_error(E_GRN_ADDRESS_ACCESS_DENY_EDITING);
        }
        $access_editing = false;
    } else {
        $book =& $books[$bid];
    }
    $allowed_count = 1;
}

// 組み込み項目情報一覧を取得する
require_once('address/view_util.csp');
$view_util = GRN_Address_ViewUtil::getInstance();
$builtin_items = $view_util->listBuiltinItems($book);

// カスタマイズ項目情報一覧を取得する
$extended_items = $view_util->listExtendedItems($book);

// 一覧表示フラグを取得する
$personal_config->getDisplayFlag($book, $builtin_items, $extended_items);

// 変更できる項目を持っているかを検証する
if ($access_editing) {
    $access_for_view['modify'] = $view_util->hasModifyItem($builtin_items,
        $extended_items);
    $access_for_view['reuse'] = true;
    $access_for_view['delete'] = true;
    $access_for_view['copy'] = $allowed_count < count($allowed_books);
}

// アドレスデータを取得する
if ( ! ($data = $book->getData($cid))) {
    cb_throw_error(E_GRN_ADDRESS_CARD_NOT_FOUND);
}
$data_for_view = $view_util->getData($data, $bid);

$creator =& $data_for_view['creator'];
unset($data_for_view['creator']);
if (is_object($creator) && is_a($creator, 'CB_User')) {
    $data_for_view['creator'] = $creator->getOID();
}
$modifier =& $data_for_view['modifier'];
unset($data_for_view['modifier']);
if (is_object($modifier) && is_a($modifier, 'CB_User')) {
    $data_for_view['modifier'] = $modifier->getOID();
}

// サイボウズNETが利用可能か検証する
$is_cbwebsrv
    = AppAccess::isAppAvailableInternalAccess(GRN_ADDRESS_CYBOZUNET_ID);
$builtin_items = $view_util->formatBuiltinItems($builtin_items, $data_for_view);

$t->assign('book_id', $bid);
$t->assign('card_id', $cid);
$t->assign('is_cbwebsrv', $is_cbwebsrv);
$t->assign('is_show', $mp);
$t->assign('access', $access_for_view);
$t->assign('card', $data_for_view);
$t->assign('builtin_items', $builtin_items);
$t->assign('extended_items', $extended_items);

// ブック情報一覧を取得する
$book_info = $view_util->getBook($book, 'view');
$t->assign('book_info', $book_info);

// リソース一覧を生成する
$resources = ['application_name' => $app->getName()];
$t->assign('resources', $resources);

// マルチレポート連携
//GTM-259 tv
require_once('report/resources.csp');
require_once('grn/application.csp');
$locator = GRN_ApplicationLocator::instance();
if (AppAccess::isAppAvailableInternalAccess(GRN_REPORT_APPLICATION_ID)
    && $bid > 0
) {
    $t->assign('report_available', true);

    require_once('report/controller_util.csp');
    $report_controller = GRN_Report_Report_Controller_Utility::getInstance();
    $t->assign('report_count',
        $report_controller->getViewableReportCountByAddressId($cid, $login));
}

////////////////////////////////////////////////////////////////

// Smartyにページタイトルを割り当てる
$page_title = grn_get_page_display_name('address/view');
$t->assign('page_title', $page_title);

// Smartyにサイトポジションを割り当てる
$page_info = [
    'index' => ['sf' => 1, 'bid' => $bid],
    'view'  => null
];
require_once('grn/controller.csp');
$controller_util = new GRN_ControllerUtil();
$site_position = $controller_util->makeSitePosition('address/', $page_info);
$t->assign('site_position', $site_position);
$delete_info = [
    'title'      => grn_get_page_display_name('address/delete'),
    'page'       => 'address/delete.tpl',
    'no_confirm' => false,
    'data'       => [
        'book_id' => $bid,
        'card_id' => $cid,
        'card'    => $data_for_view
    ],
    'handler'    => 'lnk_delete'
];
$t->assign('delete_info', $delete_info);

// Smartyを実行する
$t->display(cb_get_pagename() . '.tpl');


