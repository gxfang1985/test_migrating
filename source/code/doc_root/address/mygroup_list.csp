<?php

global $G_INPUT;

require_once('grn/smarty.csp');
$t = new GRN_Smarty;

////////////////////////////////////////////////////////////////

// アドレス帳を取得する
require_once('address/application.csp');
$app_locator = GRN_ApplicationLocator::instance();
/** @var GRN_Address_Application $app */
$app = $app_locator->getInstance(GRN_ADDRESS_APPLICATION_ID);
if ( ! is_object($app) || ! is_a($app, 'GRN_Address_Application')) {
    cb_throw_error(E_GRN_APPLICATION_NOT_AVAILABLE);
}
$book_manager = $app->getBookManager();

// ログインユーザーを取得する
global $G_container_base;
$uum = $G_container_base->getInstance('uum');
$login = $uum->getLoginUser();
if ( ! is_object($login) || ! is_a($login, 'CB_User')) {
    cb_throw_error(E_GRN_USER_NOT_FOUND);
}
$login_id = $login->getOID();

// アドレス帳の設定を取得する
require_once('address/config.csp');
$config_manager = GRN_Address_ConfigManager::getInstance();
$system_config = $config_manager->getSystemConfig();
$personal_config = $config_manager->getPersonalConfig($login);
require_once('grn/ui.csp');
$ui_config_manager = GRN_UIConfigManager::getInstance();
$ui_config = $ui_config_manager->getUserConfig($login);

include('_mygroup_book_access.csp');

// 共有アドレスブック情報一覧を取得する
$books_for_view = [];
require_once('address/view_util.csp');
$view_util = GRN_Address_ViewUtil::getInstance();
$books_for_view = $view_util->listBooks($books, $allow_books);

// Groups list
require_once('address/mygroup_logic.csp');
$mygroup = GRN_Address_MyGroup_Logic::getInstance();
$mygroups_for_view = $mygroup->getMyGroupList($login);

$personal_config->setLastOpenedBook($mygroup);

// Group
$mygroup_id = null;
$group_name = null;
$group_memo = null;
if (array_key_exists('mgid', $G_INPUT)) {
    $mygroup_id = $G_INPUT['mgid'];
}

if ($mygroup_id != null
    && ! array_key_exists($mygroup_id, $mygroups_for_view)
) {
    cb_throw_error(E_GRN_ADDRESS_MYGROUP_NOT_FOUND);
}

if ($mygroup_id == null && count($mygroups_for_view) > 0) {
    // get first group
    $group_keys = array_keys($mygroups_for_view);
    $group = $mygroups_for_view[$group_keys[0]];
    $mygroup_id = $group['id'];
}

require_once('grn/controller.csp');
$controller_util = new GRN_ControllerUtil();
$offset = $controller_util->getNaviStartPosition();
$controller_util->setNaviStartPosition($offset);
$limit = $ui_config->getListMax();

// Group Data
$groupdata_for_view = null;
$view_set = null;
$users_id = [];
if ($mygroup_id != null) {
    $group_name = $mygroups_for_view[$mygroup_id]['name'];
    $group_memo = $mygroups_for_view[$mygroup_id]['memo'];

    require_once('address/mygroup_data_logic.csp');
    $mygroup_data = GRN_Address_MyGroupData_Logic::getInstance();
    $group =& $mygroup->getMyGroup($login, $mygroup_id);
    $groupdata_for_view = $mygroup_data->listGroupData($group, $allow_books,
        $offset, $limit + 1);
    $isExistsNextPage = count($groupdata_for_view) > $limit;
    if ($isExistsNextPage) {
        array_pop($groupdata_for_view);
    }

    foreach ($groupdata_for_view as $id => $item) {
        $book = null;
        $builtin_items = [];
        $extended_items = [];
        $type = $item['type'];
        switch ($type) {
            case GRN_ADDRESS_MYGROUP_DATA_TYPE_PRIVATE:
                $book =& $book_manager->getPrivateAddressBook($item['pbid']);
                break;
            case GRN_ADDRESS_MYGROUP_DATA_TYPE_SHARED:
                $book =& $book_manager->getSharedAddressBook($item['book_id']);
                break;
            case GRN_ADDRESS_MYGROUP_DATA_TYPE_USER:
                $book =& $book_manager->getUserListBook();
                $users_id[] = $item['card_id'];
                break;
        }
        //組み込み項目情報一覧を取得する
        $builtin_items = $view_util->listBuiltinItems($book);
        $personal_config->getDisplayFlag($book, $builtin_items,
            $extended_items);
        $groupdata_for_view[$id]['show_email']
            = ($builtin_items['email_address']['use']
               && $builtin_items['email_address']['display']);

    }
    $view_set = $controller_util->makeSimpleNaviInformation($offset, $limit,
        count($groupdata_for_view), $isExistsNextPage, ['mgid' => $mygroup_id]);

    // GTM-529 tuning
    require_once('grn/controller.csp');
    $users_info = GRN_ControllerUtil::getUserInfoToShowUserName($users_id,
        $login);
    $t->assign('users_info', $users_info);
    // GTM-529 tuning
}

// リソース一覧を生成する
$resources = ['application_name' => $app->getName()];

$t->assign('view_set', $view_set);
$t->assign('group_id', $mygroup_id);
$t->assign('group_name', $group_name);
$t->assign('group_memo', $group_memo);
$t->assign('mygroups', $mygroups_for_view);
$t->assign('mygroups_count', count($mygroups_for_view));
$t->assign('access', $access_for_view);
$t->assign('books', $books_for_view);
$t->assign('cards', $groupdata_for_view);
$t->assign('resources', $resources);

////////////////////////////////////////////////////////////////

// Smartyにページタイトルを割り当てる
$page_title = grn_get_current_page_display_name();
$t->assign('page_title', $page_title);

// Smartyにサイトポジションを割り当てる
$page_infos = ['mygroup_list' => null];
$site_position = $controller_util->makeSitePosition('address/', $page_infos);
$t->assign('site_position', $site_position);

// Smartyを実行する
$t->display(cb_get_pagename() . '.tpl');


