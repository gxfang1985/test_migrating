<?php

use grn\grn\Validate;
use grn\kintone\AppRelationSettingLogic;

require_once("grn/smarty.csp");
$t = new GRN_Smarty();

global $G_container_base;
$uum = $G_container_base->getInstance('uum');
$login = $uum->getLoginUser();
if ( ! is_object($login) || ! is_a($login, 'CB_User')) {
    cb_throw_error(E_GRN_USER_NOT_FOUND);
}

require_once('kintone/Logic.csp');
require_once('fw/slash_util.csp');
if ( ! GRN_Kintone_Logic::isAvailable()
     || ! CB_SlashUtil::isGaiaLicenseapiRequest()
) {
    cb_throw_error(E_GRN_LICENSE_EXPIRED);
}

require_once('schedule/system_logic.csp');
$systemlogic = GRN_Schedule_SystemLogic::getInstance();

$temp_menus = $systemlogic->getMenus();
$appointment_menus = [];
foreach ($temp_menus as $key => $value) {
    $appointment_menus[$value[0]] = $value[0];
}
$t->assign('appoiniment_menus', $appointment_menus);


global $G_INPUT;

$krid = cb_at($G_INPUT, 'krid');
if (Validate::isNull($krid) || ! Validate::isNumber($krid)) {
    cb_throw_error(E_GRN_SCHD_K_RELATION_ID_INVALID);
}
$t->assign('krid', $krid);

$relation_setting_logic = new AppRelationSettingLogic();
$setting = $relation_setting_logic->getRelationSettingById($krid,
    'schedule/add');

// three array Help to generate HTML
$multiLanguageValues = [];
$appointment_types = [];
$kintone_data = [];

if ($setting) {
    $multiLanguageValues_tmp = $setting[AppRelationSettingLogic::ITEM_NAME];
    if ( ! is_null($multiLanguageValues_tmp)) {
        $multiLanguageValues = $multiLanguageValues_tmp;
    }

    $all_menu = cb_at($setting, AppRelationSettingLogic::ALL_MENU);
    if (is_null($all_menu) || ! $all_menu) {
        $appointment_types['all'] = false;
    } else {
        $appointment_types['all'] = true;
    }

    $menus = cb_at($setting, AppRelationSettingLogic::MENUS);
    if (is_array($menus)) {
        foreach ($menus as $menusK => $menusV) {
            if ( ! array_key_exists($menusV, $appointment_menus)) {
                $menus[$menusK] = '--';
            }
        }
        $appointment_types['menus'] = $menus;
    } else {
        $appointment_types['menus'] = [];
    }

    $kintone_data_tmp = cb_at($setting, AppRelationSettingLogic::KINTONE_APP);
    if ( ! is_null($kintone_data_tmp)) {
        $kintone_data = $kintone_data_tmp;
    }
} else {
    cb_throw_error(E_GRN_SCHD_K_RELATION_ID_INVALID);
}


$t->assign('appointment_types', $appointment_types);
$t->assign('kintone_data', $kintone_data);

$multiLanguageInfoArray = [
    'element_name' => 'relation',
    'values'       => $multiLanguageValues,
];
$t->assign('multiLanguageInfoArray', $multiLanguageInfoArray);


$page_title = grn_get_current_page_display_name();
$t->assign('page_title', $page_title);


$t->assign(
    'site_position', [
        [
            'page' => 'schedule/system/kintone_relation',
            'name' => grn_get_page_display_name('schedule/system/kintone_relation')
        ],
        ['page' => '', 'name' => $page_title]
    ]
);

$t->display(cb_get_pagename() . ".tpl");
