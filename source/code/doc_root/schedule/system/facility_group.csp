<?php
//-- instantiate Smarty object
require_once("grn/smarty.csp");
$t = new GRN_Smarty;

require_once('schedule/system_logic.csp');
$system_logic = GRN_Schedule_SystemLogic::getInstance();
require_once('schedule/facility_system_logic.csp');
$fsl = GRN_Facility_SystemLogic::getInstance();
require_once('grn/controller.csp');
$utility = new GRN_ControllerUtil();

//-- get parameters from URL parameters
$org_id = @ $G_INPUT['oid'];
if (strlen($org_id) === 0) {
    $org_id = null;
}

$searched = @ $G_INPUT['s'];

$is_search = array_key_exists('search_text', $G_INPUT);
$t->assign('is_search', $is_search);

//-- prepare uum and uum_util
global $G_container_base;
$uum = $G_container_base->getInstance('uum');

require_once('schedule/facility_tree.csp');

$page_name = cb_get_pagename();
$util = GRN_OrgTreeUtil::getInstance();
$tree = $util->getTree($page_name, 'GRN_FacilityTree');
$t->assign('ftree_async_page', 'schedule/system/json/facility_tree');
if (is_null($org_id) && ! array_key_exists('top', $G_INPUT)) {
    $org_id = $tree->getSelectedNode();
}

$facility_group = $fsl->getFacilityGroup($org_id);
if ($facility_group === false && isset($org_id) && $org_id != -1
    && $org_id != -2
) {
    cb_throw_error(E_GRN_FCLT_NOTFOUND_FACILITYGROUP);
}
//to get correct facility group if some one input like oid=3sdf -> oid=3
if ($facility_group !== false && $facility_group->getOID() !== $org_id) {
    $org_id = $facility_group->getOID();
}

if ($searched && $org_id > 0) // 検索から来たときは、ツリーをたたんで必要なところだけ開く
{
    $tree->initialize();
    $ancestors = $fsl->getAncestors([$org_id => $org_id]);
    $ancestors = $ancestors[$org_id];
    array_shift($ancestors); // 選択された施設グループは開かない
    $ancestors[] = null;
    foreach (array_reverse($ancestors) as $a) {
        $tree->buildChild($a);
    }
    $tree->setSelectedNode($org_id);
} elseif (( ! $is_search && array_key_exists('top', $G_INPUT))
          || is_null($tree->getRoot())
) {
    $t->assign('top', true);
    $tree->initialize();
    //$org_id = NULL;
} elseif ($facility_group === false && $org_id > 0) // ない施設グループが指定されている。
{
    $t->assign('top', true);
    $tree->initialize();
    //$org_id = NULL;
}

if (array_key_exists('top', $G_INPUT) || is_null($org_id)) {
    $t->assign('top', 1);
    $top = 1;
} else {
    $top = 0;
}

$tree->setSelectedNode($org_id);
$util->setTree($page_name, $tree);
$org = $tree->getRoot();

$user = $uum->getLoginUser();
$group = $uum->getGroup($org_id);

if ($org_id > 0) {
    $org_name = $facility_group->get('name');
} else {
    switch ($org_id) {
        case -1:
            $org_name = cb_msg('grn.schedule.system', 'nogroup_facility');
            break;
        case -2:
            $org_name = cb_msg('grn.schedule.system', 'all_facility');
            break;
        case null:
            $org_name = cb_msg('grn.schedule.system', 'top');
    }
}

$t->assign('org_name', $org_name);
$t->assign('show_menu', true);

if ($org_id == -2) // 全施設
{
    $facility_count = $fsl->getFacilityTotalCount();
} elseif ($org_id != null) {
    $facility_count = $fsl->getFacilitiesCount($org_id);
}

// 施設の順番変更ページへのリンク
if (($org_id > 0 || $org_id == -1) && $facility_count > 1) {
    $t->assign('enable_facility_order_menu', true);
} else {
    $t->assign('enable_facility_order_menu', false);
}
if ($org_id == 0) {
    $t->assign('show_facility_order_menu', false);
} else {
    $t->assign('show_facility_order_menu', true);
}


// 子施設グループの順番変更ページへのリンク
$child_facility_group = $fsl->getFacilityGroupChildren($org_id);
if (count($child_facility_group) > 1) {
    $t->assign('enable_facility_group_order_menu', true);
} else {
    $t->assign('enable_facility_group_order_menu', false);
}
if ($org_id == -1 || $org_id == -2) {
    $t->assign('show_facility_group_order_menu', false);
} else {
    $t->assign('show_facility_group_order_menu', true);
}


// 施設グループの「詳細」リンク と 運用管理権限へのリンク
if ($org_id > 0) {
    $t->assign('enable_facility_group_detail', true);
    $t->assign('show_operation_menu', true);
}

// 施設グループを追加するページへのリンク
if ($org_id > 0) {
    $count_ancestors = $fsl->countAncestors([$facility_group->getOID() => 1]);
    $count_ancestors = $count_ancestors[$facility_group->getOID()];

    if ($count_ancestors >= GRN_SCHD_MAX_FACILITY_GROUP_TREE) {
        $t->assign('enable_facility_group_add', false);
    } else {
        $t->assign('enable_facility_group_add', true);
    }
} else {
    $t->assign('enable_facility_group_add', true);
}

//get user page list num
require_once('grn/ui.csp');
$ucm = GRN_UIConfigManager::getInstance();
$login = $uum->getLoginUser();
$uc = $ucm->getUserConfig($login);
$number_on_page = $uc->getListMax();

if ($is_search) {
    $search_text = $G_INPUT['search_text'];

    //--current positoin
    $navi_start_position = $utility->getNaviStartPosition();
    //--save to session
    $utility->setNaviStartPosition($navi_start_position);

    // 施設の検索は、選択している施設グループの直下にある施設からのみ行う
    $t->assign('is_search_facility', true);
    $candidates = [];

    if ($org_id == -1) // 施設グループに未所属の施設
    {
        $candidates
            = $fsl->searchFacilitiesInfoByIsolatedFacilitygroup($search_text);
    } elseif (is_null($org_id) || $org_id == -2) // 全施設
    {
        $candidates = $fsl->searchFacilitiesInfo($search_text);
    } else {
        $candidates = $fsl->searchFacilitiesInfoByFacilitygroupId($search_text,
            $org_id);
    }

    $tmp_view_facilities = array_slice($candidates, $navi_start_position,
        $number_on_page);
    $view_facilities = [];
    foreach ($tmp_view_facilities as $tmp_facility) {
        $view_facilities[$tmp_facility['_id']] = $tmp_facility;
    }
    unset($tmp_view_facilities, $tmp_facility);

    if ($top || $org_id == -2) {
        $facility_id_list = [];
        foreach ($view_facilities as $i) {
            $facility_id_list[] = $i['_id'];
        }

        $fg_map = $fsl->getFacilityGroupRelation($facility_id_list);

        $groups = [];
        foreach ($fg_map as $f) {
            if ( ! is_null($f)) {
                $groups[$f] = $f;
            }
        }

        if (count($groups) > 0) {
            $ancestors = $fsl->getAncestors($groups);
            $all_facilities = [];
            foreach ($ancestors as $ancestor) {
                foreach ($ancestor as $i) {
                    $all_facilities[$i] = $i;
                }
            }
            $all_facilities_info = $fsl->getFacilityGroupsInfo($all_facilities);

            foreach ($view_facilities as $key => $f) {
                $group_id = $fg_map[$f['_id']];
                $view_facilities[$key]['ancestors'] = [];
                if (is_null($group_id)) {
                    continue;
                }
                foreach (array_reverse($ancestors[$group_id]) as $i) {
                    $view_facilities[$key]['ancestors'][]
                        = $all_facilities_info[$i];
                }
            }
        }
    }

    // N 件ナビに対応。
    $facility_count = count($candidates);

    if (is_null($org_id)) {
        $navi_params = [
            'top'         => 1,
            'search_text' => $search_text
        ];
    } else {
        $navi_params = [
            'oid'         => $org_id,
            'search_text' => $search_text
        ];
    }
    $navigation_info['navi_info']
        = $utility->makeNaviInformation($navi_start_position,
        $number_on_page, $facility_count, $navi_params);
    $navigation_info['navi_info']['page'] = '/schedule/system/facility_group';

    $t->assign('navi_info', $navigation_info['navi_info']);
    $t->assign('facility_list', $view_facilities);
    $t->assign('search_text', $search_text);

} elseif ($org_id) {
    require_once('schedule/facility_privilege.csp');
    $privilege_logic = GRN_Facility_Privilege_Logic::getInstance();

    //--N-navigation
    //--current positoin
    $navi_start_position = $utility->getNaviStartPosition();
    //--save to session
    $utility->setNaviStartPosition($navi_start_position);

    if ($org_id == -1)  // グループに未所属の施設
    {
        $facility_list_tmp = $fsl->getIsolatedFacilities($navi_start_position,
            $number_on_page);
        $facility_list = [];
        foreach ($facility_list_tmp as $key => $obj) {
            $facility_list[$key] = [
                '_id'             => $key,
                'col_name'        => $obj->get('name'),
                'col_foreign_key' => $obj->get('foreign_key'),
                'col_memo'        => $obj->get('memo')
            ];
        }
        $facility_count = $fsl->getFacilitiesCount($org_id);
    } elseif ($org_id == -2) {
        $facility_list = $fsl->getOrderedFacilityInfoList($navi_start_position,
            $number_on_page);
        $facility_count = $fsl->getFacilityTotalCount();

        $facility_id_list = [];
        foreach ($facility_list as $i) {
            $facility_id_list[] = $i['_id'];
        }
        $fg_map = $fsl->getFacilityGroupRelation($facility_id_list);

        $groups = [];
        foreach ($fg_map as $f) {
            if ( ! is_null($f)) {
                $groups[$f] = $f;
            }
        }

        if (count($groups) > 0) {
            $ancestors = $fsl->getAncestors($groups);
            $all_facilities = [];
            foreach ($ancestors as $ancestor) {
                foreach ($ancestor as $i) {
                    $all_facilities[$i] = $i;
                }
            }
            $all_facilities_info = $fsl->getFacilityGroupsInfo($all_facilities);

            foreach ($facility_list as $key => $f) {
                $group_id = $fg_map[$f['_id']];
                $facility_list[$key]['ancestors'] = [];
                if (is_null($group_id)) {
                    continue;
                }
                foreach (array_reverse($ancestors[$group_id]) as $i) {
                    $facility_list[$key]['ancestors'][]
                        = $all_facilities_info[$i];
                }
            }
        }

    } else {
        $facility_list = $fsl->getGroupFacilitiesInfo($org_id,
            $navi_start_position, $number_on_page);
        $facility_count = $fsl->getFacilitiesCount($org_id);
    }
    //--total facility count
    //--navigation information
    $navi_params = ['oid' => $org_id];
    $navigation_info['navi_info']
        = $utility->makeNaviInformation($navi_start_position,
        $number_on_page, $facility_count, $navi_params);
    $navigation_info['navi_info']['page'] = '/schedule/system/facility_group';

    $t->assign('navi_info', $navigation_info['navi_info']);
    $t->assign('facility_list', $facility_list);

}

//-- set variables for view
$t->assign('org_id', $org_id);
$t->assign('page_name', $page_name);
$t->assign('org', $org);

//-- page title
$page_title = grn_get_current_page_display_name();
$t->assign('page_title', $page_title);

//-- site position
require_once('grn/controller.csp');
$page_infos = ['facility_group' => null];
$util = new GRN_ControllerUtil();
$site_position = $util->makeSitePosition('schedule/system/', $page_infos);
$t->assign('site_position', $site_position);

$t->assign('allow_all_facilities', $system_logic->getAllowAllFacilities());

// exec smarty
$t->display(cb_get_pagename() . '.tpl');

