<?php

use grn\kintone\bean\GrnKintoneAppRelationSetting;

require_once("grn/smarty.csp");
$t = new GRN_Smarty();

global $G_container_base;
$uum = $G_container_base->getInstance('uum');
$login = $uum->getLoginUser();
if ( ! is_object($login) || ! is_a($login, 'CB_User')) {
    cb_throw_error(E_GRN_USER_NOT_FOUND);
}

require_once('kintone/Logic.csp');
require_once('fw/slash_util.csp');
if ( ! GRN_Kintone_Logic::isAvailable()
     || ! CB_SlashUtil::isGaiaLicenseapiRequest()
) {
    cb_throw_error(E_GRN_LICENSE_EXPIRED);
}

require_once('schedule/system_logic.csp');
$systemlogic = GRN_Schedule_SystemLogic::getInstance();

$temp_menus = $systemlogic->getMenus();
$appointment_menus = [];
foreach ($temp_menus as $value) {
    $appointment_menus[$value[0]] = $value[0];
}
$t->assign('appoiniment_menus', $appointment_menus);

// appointment_types array Help to generate HTML
$appointment_types = [
    'all'   => true,
    'menus' => [],
];
$t->assign('appointment_types', $appointment_types);

// kintone_data array Help to generate HTML
$kintone_data = [
    'add' => [
        GrnKintoneAppRelationSetting::VALUE_KEY_APP_ID         => null,
        GrnKintoneAppRelationSetting::VALUE_KEY_APP_FIELD_CODE => [],
    ]
];

$t->assign('kintone_data', $kintone_data);

$multiLanguageInfoArray = [
    'element_name' => 'relation',
    'values'       => [],
];
$t->assign('multiLanguageInfoArray', $multiLanguageInfoArray);

$page_title = grn_get_current_page_display_name();
$t->assign('page_title', $page_title);

$t->assign(
    'site_position', [
        [
            'page' => 'schedule/system/kintone_relation',
            'name' => grn_get_page_display_name('schedule/system/kintone_relation')
        ],
        ['page' => '', 'name' => $page_title]
    ]
);

$t->display(cb_get_pagename() . ".tpl");
