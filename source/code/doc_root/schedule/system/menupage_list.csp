<?php

// instantiate an Smarty object
require_once("grn/smarty.csp");
$t = new GRN_Smarty;
// for site position
$t->assign('app_id', 'schedule');

// SmartyValidate should be initialized when an input form is there.
require('SmartyValidate.class.php');
SmartyValidate::connect($t);

global $G_container_base;
$uum = $G_container_base->getInstance('uum');
$login = $uum->getLoginUser();
require_once('grn/ui.csp');
$manager = GRN_UIConfigManager::getInstance();
$config = $manager->getUserConfig($login);
$limit = $config->getListMax();  // 表示件数

require_once('schedule/system_logic.csp');
$logic = GRN_Schedule_SystemLogic::getInstance();

require_once('grn/controller.csp');
$utility = new GRN_ControllerUtil();
$navi_start_position = $utility->getNaviStartPosition();

$utility->setNaviStartPosition($navi_start_position);
$menupages = $logic->getMenuPageList($navi_start_position, $limit);

$menus = [];
$count = 0;
foreach ($menupages as $id => $title) {
    $count++;
    if ($count > $limit) {
        break;
    }

    $menus[] = ['id' => $id, 'title' => $title];
}

$navi = [];
if (count($menupages) > $limit) {
    $navi['next_page_start_position'] = $navi_start_position + $limit;
} else {
    $navi['next_page_start_position'] = -1;
}

if (($navi_start_position > 0)) {
    $navi['previous_page_start_position'] = $navi_start_position - $limit;
} else {
    $navi['previous_page_start_position'] = -1;
}
$navi['number_on_page'] = $limit;

$systemmenus = $logic->getMenus();

$t->assign('menu', [
    'menupage' => $menus,
    'count'    => count($menus),
    'navi'     => $navi,
    'menuadd'  => (count($systemmenus) > 0 ? true : false)
]);

//-- set page title and site position

// page title
$page_title = grn_get_current_page_display_name();
$t->assign('page_title', $page_title);
// site position 
$t->assign('site_position', [['page' => '', 'name' => $page_title]]);

// Display Smarty Template
$t->display(cb_get_pagename() . ".tpl");

