<?php

if (strcasecmp(@ $_SERVER['REQUEST_METHOD'], 'POST') == 0) {
    /*
        // instantiate an Smarty object
        require_once( "grn/smarty.csp" );
        $t = new GRN_Smarty;

        // Validation check
        require_once('SmartyValidate.class.php');
        SmartyValidate::connect($t);

        // validate after a POST
        if(SmartyValidate::is_valid($G_INPUT)) {
            // the validation session is finished
            SmartyValidate::disconnect();
    */
    // --------
    // brabrabra after success
    // --------
    require_once('schedule/facility_system_logic.csp');
    $system_logic = GRN_Facility_SystemLogic::getInstance();

    global $G_container_base;
    $uum = $G_container_base->getInstance('uum');
    $login = $uum->getLoginUser();

    $faid = @ $G_INPUT['faid'];

    $facility = $system_logic->getFacility($faid);
    if ($facility === false) {
        cb_throw_error(E_GRN_FCLT_NOTFOUND_FACILITY);
    }

    // set modification timestamp
    $group = $system_logic->getFacilityAffiliationGroup($faid);
    if ($group) {
        $system_logic->setLastModifyTime($login, $group);
    }

    $system_logic->removeFacility($faid);
    // ゴミデータとなるカスタマイズ項目データを削除する
    $system_logic->removeGarbageData();

    cb_redirect('schedule/system/facility_group', ['sf' => '1']);
    /*
        } else {
            // if error, show the source form

            //Assign Template Name
            $t->setPageInfo($target_name);

            cb_redirect( 'schedule/system/menupage_delete', array( 'menupageid'=>$G_INTPU['menupage_id'] ) );
        }
    */
}


