<?php
require_once("schedule/facility_tree.csp");
$page = @$G_INPUT['page'];
$page_parts = explode('__', $page);
$page_name = $page_parts[0];
$fag_id = $page_parts[1];
$oid = @$G_INPUT['oid'];
grn_schedule_rebuild_facility_group_tree_system_modify($page_name,
    "GRN_FacilityGroupMoveTree", $oid, $fag_id);
facility_move_tree_json($oid, @$G_INPUT['action'], $page_name,
    "GRN_FacilityGroupMoveTree");

function grn_schedule_rebuild_facility_group_tree_system_modify(
    $page_name,
    $class_name,
    $oid,
    $fag_id
) {
    $util = GRN_OrgTreeUtil::getInstance();
    $params = ['fagid' => $fag_id];
    $tree = $util->getTree($page_name, $class_name, $params);
    if ($tree->containNode($oid)) {
        return;
    }
    $tree->rebuild();

    require_once('schedule/facility_system_logic.csp');
    $fsl = GRN_Facility_SystemLogic::getInstance();

    if ( ! is_null($oid)) {
        $ancestors = $fsl->getAncestors([$oid => $oid]);
        $ancestors[$oid][] = null;
        $ancestors = array_reverse($ancestors[$oid]);
    } else {
        $ancestors = [null];
    }

    foreach ($ancestors as $a) {
        $tree->buildChild($a);
    }

    $util->setTree($page_name, $tree);
}
