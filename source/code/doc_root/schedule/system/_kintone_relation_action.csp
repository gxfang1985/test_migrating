<?php

use grn\grn\Validate;
use grn\kintone\AppRelationSettingLogic;
use grn\kintone\bean\GrnKintoneAppRelationSetting;
use grn\grn\JSONResponse;

$krid = cb_at($G_INPUT, 'krid');
if ((Validate::isNull($krid) || ! Validate::isNumber($krid))
    && strcasecmp($action, 'modify') === 0
) {
    cb_throw_error(E_GRN_SCHD_K_RELATION_ID_INVALID);
}
$item_name_array = [];
$item_def_name = cb_at($G_INPUT, 'relation-def');
if (Validate::isNull($item_def_name)) {
    cb_throw_error(E_GRN_SCHD_K_RELATION_ITEM_NAME_NECESSARY);
} else {
    $item_def_name = cb_trim($item_def_name);
    if (strlen($item_def_name) == 0) {
        cb_throw_error(E_GRN_SCHD_K_RELATION_ITEM_NAME_NECESSARY);
    }
    $item_name_array[GrnKintoneAppRelationSetting::ITEM_NAME_KEY_DEFAULT]
        = $item_def_name;
}

$item_ja_name = cb_at($G_INPUT, 'relation-ja');
if ( ! Validate::isNull($item_ja_name)
     && (strlen(cb_trim($item_ja_name)) > 0)
) {
    $item_name_array[GrnKintoneAppRelationSetting::ITEM_NAME_KEY_JA]
        = cb_trim($item_ja_name);
}

$item_en_name = cb_at($G_INPUT, 'relation-en');
if ( ! Validate::isNull($item_en_name)
     && (strlen(cb_trim($item_en_name)) > 0)
) {
    $item_name_array[GrnKintoneAppRelationSetting::ITEM_NAME_KEY_EN]
        = cb_trim($item_en_name);
}

$item_zh_name = cb_at($G_INPUT, 'relation-zh');
if ( ! Validate::isNull($item_zh_name)
     && (strlen(cb_trim($item_zh_name)) > 0)
) {
    $item_name_array[GrnKintoneAppRelationSetting::ITEM_NAME_KEY_ZH]
        = cb_trim($item_zh_name);
}

$item_edit_name = cb_at($G_INPUT, 'relation-edit');
$item_edit_lang = cb_at($G_INPUT, 'relation-edit-lang');
if ( ! Validate::isNull($item_edit_name) && ! Validate::isNull($item_edit_lang)
     && (strlen(cb_trim($item_edit_name)) > 0)
     && (strcasecmp($item_edit_lang,
            GrnKintoneAppRelationSetting::ITEM_NAME_KEY_EN) === 0
         || strcasecmp($item_edit_lang,
            GrnKintoneAppRelationSetting::ITEM_NAME_KEY_ZH) === 0
         || strcasecmp($item_edit_lang,
            GrnKintoneAppRelationSetting::ITEM_NAME_KEY_JA) === 0)
) {
    $item_name_array[$item_edit_lang] = cb_trim($item_edit_name);
}

$appointment_type = [];
$appointment_type_all = cb_at($G_INPUT, 'appointment_type_all');
$appointment_types = cb_at($G_INPUT, 'appointment_types');
if ( ! Validate::isNull($appointment_type_all)) {
    $appointment_type[GrnKintoneAppRelationSetting::VALUE_KEY_MENUS_ALL] = 1;
} else {
    if ( ! is_array($appointment_types) || Validate::isNull($appointment_types)
         || count($appointment_types) < 1
    ) {
        cb_throw_error(E_GRN_SCHD_K_RELATION_APPOINTMENT_TYPE_NECESSARY);
    } else {
        $temp_appointment_types = [];
        foreach ($appointment_types as $typeK => $typeV) {
            if (array_key_exists($typeV, $temp_appointment_types)) {
                cb_throw_error(E_GRN_SCHD_K_RELATION_APPOINTMENT_TYPE_DUPLICATED);
            }
            $temp_appointment_types[$typeV] = $typeV;
        }
        $appointment_type = $appointment_types;
    }
}


$k_apps = [];
$k_apps_ids = cb_at($G_INPUT, 'k_app_id_value');
if (array_key_exists('k_app_id_edit', $G_INPUT)) {
    if (Validate::isNull($G_INPUT['k_app_id_edit'])) {
        cb_throw_error(E_GRN_SCHD_K_RELATION_K_APP_ID_NECESSARY);
    }
    cb_throw_error(E_GRN_SCHD_K_RELATION_K_APP_FIELD_CODE_NECESSARY);
}

if ( ! Validate::isNull($k_apps_ids) && is_array($k_apps_ids)) {

    $temp_id = [];
    require_once('kintone/AppAPILogic.csp');
    $kintone_app_logic = new \GRN_Kintone_AppAPILogic();
    foreach ($k_apps_ids as $key => $value) {
        if (Validate::isNull($value)) {
            cb_throw_error(E_GRN_SCHD_K_RELATION_K_APP_ID_NECESSARY);
        }
        if ( ! Validate::isNumber($value)) {
            cb_throw_error(E_GRN_SCHD_K_RELATION_K_APP_ID_INVALID);
        }

        //id is duplicated
        if (array_key_exists($value, $temp_id)) {
            cb_throw_error(E_GRN_SCHD_K_RELATION_K_APP_ID_DUPLICATED);
        }
        $temp_id[$value] = null;

        $kintone_app_info = $kintone_app_logic->get($value);
        $is_exist = $kintone_app_info['success'];
        if ( ! $is_exist) {
            cb_throw_error(E_GRN_SCHD_K_RELATION_K_APP_ID_ACCESS,
                ['Id' => $value]);
        }

        $k_app = [];
        $k_app[GrnKintoneAppRelationSetting::VALUE_KEY_APP_ID] = $value;
        $field_codes = cb_at($G_INPUT,
            'field_code' . $value);
        if ( ! Validate::isNull($field_codes) && is_array($field_codes)) {
            $temp_field_codes_array = [];
            foreach ($field_codes as $fieldK => $fieldV) {
                if (array_key_exists($fieldV, $temp_field_codes_array)) {
                    cb_throw_error(E_GRN_SCHD_K_RELATION_K_APP_FIELD_CODE_DUPLICATED);
                }
                $temp_field_codes_array[$fieldV] = null;
            }
            $k_app[GrnKintoneAppRelationSetting::VALUE_KEY_APP_FIELD_CODE]
                = $field_codes;
        } else {
            cb_throw_error(E_GRN_SCHD_K_RELATION_K_APP_FIELD_CODE_NECESSARY);
        }
        $k_apps[$value] = $k_app;
    }
} else {
    cb_throw_error(E_GRN_SCHD_K_RELATION_K_APP_ID_NECESSARY);
}

$setting_item = [];
$setting_item[GrnKintoneAppRelationSetting::VALUE_KEY_MENUS]
    = $appointment_type;
$setting_item[GrnKintoneAppRelationSetting::VALUE_KEY_APP] = $k_apps;
$appRelationLogic
    = new AppRelationSettingLogic();

if (strcasecmp($action, 'modify') === 0) {
    $result = $appRelationLogic->updateRelationSettingById($krid,
        $item_name_array, $setting_item);
} elseif (strcasecmp($action, 'create') === 0) {
    $exist_settings = $appRelationLogic->getAllRelationSettings('schedule/add');
    if (is_array($exist_settings)
        && count($exist_settings)
           >= AppRelationSettingLogic::EACH_PAGE_SETTING_LIMIT
    ) {
        $result = true;
    } else {
        $result = $appRelationLogic->addRelationSetting($item_name_array,
            $setting_item, 'schedule/add');
    }
}

require_once('schedule/inspection.csp');
$inspection = GRN_Schedule_Inspection::getInstance();

if ($inspection->isEnabled()) {
    $inspection->record(
        $action, ' app relation ',
        [
            'item'  => $item_name_array['def'],
            'value' => serialize($setting_item)
        ]
    );
}

if ( ! $result) {
    cb_throw_error(E_GRN_SCHD_K_RELATION_DB_SAVE_FAILD);
}

//GRB-16911
$json = JSONResponse::create();
$json->response(['success' => true]);
