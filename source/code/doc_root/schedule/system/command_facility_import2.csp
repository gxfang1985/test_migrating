<?php


if (strcasecmp(@ $_SERVER['REQUEST_METHOD'], 'POST') == 0) {
    // -------- 
    // brabrabra after success
    // --------
    require_once('schedule/error_code.csp');

    $file_id = @ $G_INPUT['file_id'];
    // セッションに関連付けてあったファイルを取得する。
    $session_manager = CB_SessionManager::getInstance();
    $session
        =& $session_manager->getSession('schedule/system/facility_import1');
    $file_infos = $session->getFiles('facility_files');
    $import_option = $session->get('import_option');

    // ファイルがない
    if ( ! is_array($file_infos)) {
        cb_throw_error(E_GRN_SCHD_NOT_FOUND_CSV_FILE);
    }

    if ( ! array_key_exists($file_id, $file_infos)) {
        cb_throw_error(E_GRN_SCHD_NOT_FOUND_CSV_FILE);
    }

    $csv_columns = [
        'name',       // 施設名
        'code',       // 施設コード
        'group',      // 施設グループコード
        'memo',       // メモ
    ];
    $csv_columns_num = count($csv_columns);

    $charset = @ $import_option['charset'];
    if ( ! $charset) {
        global $G_config_common;
        $charset = $G_config_common->get('I18N', 'default_external_encoding');
    }

    // スケジュールのインクルード
    require_once('schedule/facility_system_logic.csp');
    $logic = GRN_Facility_SystemLogic::getInstance();

    // 監査ログ
    require_once('grn/logger.csp');
    $lm = CB_LoggerManager::getInstance();
    $l =& $lm->getLogger(GRN_SCHEDULE_MODULE_ID);
    $log_params = [];
    $l->noticeEx('import', 'facility', $log_params);

    // エラーフックの登録
    require_once('fw/csv.csp');
    $csv = new CB_CSVReader($charset, $file_infos[$file_id]->getPath());
    global $G_container_base;
    $uum =& $G_container_base->getInstance('uum');
    $login = &$uum->getLoginUser();
    if ( ! $login) {
        $login = null;
    }

    require_once('fw/string_util.csp');
    $skip_lines = (int)@$import_option['skip'];
    while (($line = $csv->readLine()) !== false) {
        if ($skip_lines > 0) {
            $skip_lines--;
            continue;
        }

        if (count($line) < $csv_columns_num) {
            cb_throw_error(E_GRN_SCHD_CSV_INVALID_COLUMNS);
        }

        $facility_name = cb_trim($line[0]);
        $facility_code = cb_trim($line[1]);
        $facilitygroup_code = cb_trim($line[2]);
        $memo = cb_trim($line[3]);

        if (mb_strlen($facility_name) == 0) {
            cb_throw_error(E_GRN_FCLT_MISSING_FACILITY_NAME);
        }

        if (mb_strlen($facility_code) == 0) {
            cb_throw_error(E_GRN_FCLT_MISSING_FOREIGN_KEY);
        }

        if (mb_strlen($facilitygroup_code) == 0) {
            $group = null;
            $groupId = null;
        } else {
            $group = $logic->getFacilityGroupByForeignKey($facilitygroup_code);
            if ($group === false) {
                cb_throw_error(E_GRN_FCLT_NOTFOUND_FACILITYGROUP);
            } else {
                $groupId = $group->getOID();
            }
        }

        $facility = $logic->getFacilityByForeignKey($facility_code);

        if ($facility) {
            $logic->modifyFacilityDefaultOnly($login, $facility->getOID(),
                $facility_name, $facility_code, $memo);
            $logic->moveFacility($login, $facility->getOID(), $groupId);
        } else {
            // 新規
            require_once("grn/application.csp");
            $logic->addFacilityDefaultOnly($login, $facility_name,
                $facility_code, $memo, $group);

            $locator = GRN_ApplicationLocator::instance();
            $manager = $locator->getTableManager('schedule');
            $manager->registerNowAndUpdateNowAll();
        }
    }

    cb_redirect('schedule/system/import_index');
}


