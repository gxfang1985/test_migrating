<?php

if (strcasecmp(@ $_SERVER['REQUEST_METHOD'], 'POST') == 0) {
    /*
        // instantiate an Smarty object
        require_once( "grn/smarty.csp" );
        $t = new GRN_Smarty;

        // Validation check
        require_once('SmartyValidate.class.php');
        SmartyValidate::connect($t);

        // validate after a POST
        if(SmartyValidate::is_valid($G_INPUT)) {
            // the validation session is finished
            SmartyValidate::disconnect();
    */
    // --------
    // brabrabra after success
    // --------
    require_once('schedule/facility_system_logic.csp');
    $facility_logic = GRN_Facility_SystemLogic::getInstance();

    global $G_container_base;
    $uum = $G_container_base->getInstance('uum');
    $login = $uum->getLoginUser();

    // 順番を変更する施設グループ
    $fagid = @ $G_INPUT['fagid'];
    if ( ! $fagid) {
        $fagid = null;
    }

    $faids = @ $G_INPUT['faid'];

    if ( ! is_array($faids)) {
        cb_throw_error(E_GRN_FCLT_NOTSELECT_ORDER_FACILITY);
    }
    if ($fagid == -1 || $fagid == -2) {
        $facility_logic->orderGroupFacilities($login, $faids);
    } else {
        $facility_logic->orderGroupFacilities($login, $faids, $fagid);
    }

    // 監査ログ
    require_once('grn/logger.csp');
    $lm = CB_LoggerManager::getInstance();
    $l = $lm->getLogger(GRN_SCHEDULE_MODULE_ID);
    $log_params = [];
    $l->noticeEx('order', 'facility', $log_params);

    cb_redirect('schedule/system/facility_group', ['oid' => $fagid]);
    /*
        } else {
            // if error, show the source form

            //Assign Template Name
            $t->setPageInfo($target_name);

            cb_redirect( 'schedule/system/import1' );
        }
    */
}


