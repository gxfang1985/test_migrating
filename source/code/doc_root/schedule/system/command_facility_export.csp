<?php

if (strcasecmp(@ $_SERVER['REQUEST_METHOD'], 'POST') == 0) {
    /*
        // instantiate an Smarty object
        require_once( "grn/smarty.csp" );
        $t = new GRN_Smarty;

        // Validation check
        require_once('SmartyValidate.class.php');
        SmartyValidate::connect($t);

        // validate after a POST
        if(SmartyValidate::is_valid($G_INPUT)) {
            // the validation session is finished
            SmartyValidate::disconnect();
    */
    // --------
    // brabrabra after success
    // --------

    $charset = @ $G_INPUT['charset'];
    if ( ! $charset) {
        global $G_config_common;
        $charset = $G_config_common->get('I18N', 'default_external_encoding');
    }

    /// テンポラリのファイルを作成
    $tempdir = cb_tmpdir();
    $temp_filename = tempnam($tempdir, 'sc_');

    require_once('fw/csv.csp');
    $writer = new CB_CSVWriter($charset, $temp_filename);

    // 項目名の書き出し
    $itemname = @ $G_INPUT['item_name'];

    if ($itemname == '1') {
        $csv_header = [];
//            $csv_header[] = cb_msg( 'grn.schedule', 'facility_id' );
        $csv_header[] = cb_msg('grn.schedule', 'facility_name');
        $csv_header[] = cb_msg('grn.schedule', 'facility_code');
        $csv_header[] = cb_msg('grn.schedule', 'facility_group_code');
        $csv_header[] = cb_msg('grn.schedule', 'memo');
        $writer->writeLine($csv_header);
    }

    require_once('schedule/facility_system_logic.csp');
    $system_logic = GRN_Facility_SystemLogic::getInstance();

    $system_logic->exportFacilitiesToCSV($writer);

    $writer->close();

    // 一時ファイルに書き出した内容をファイルとして出力
    // 'text/comma-separated-values' <= CSV でこういったMIMETYPEがあるらしい
    cb_prepare_download('facilities.csv', 'application/csv', false);
    $fp = fopen($temp_filename, 'rb');
    if (($size = filesize($temp_filename)) > 0) {
        echo fread($fp, $size);
    }
    fclose($fp);
    // 一時ファイルの削除
    unlink($temp_filename);

    // 監査ログ
    require_once('grn/logger.csp');
    $lm = CB_LoggerManager::getInstance();
    $l = $lm->getLogger(GRN_SCHEDULE_MODULE_ID);
    $log_params = [];
    $l->noticeEx('export', 'facility', $log_params);

    /*
        } else {
            // if error, show the source form

            //Assign Template Name
            $t->setPageInfo($target_name);

            cb_redirect( 'schedule/system/import1' );
        }
    */
}

