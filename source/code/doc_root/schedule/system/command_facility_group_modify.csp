<?php

// Check HTTP-POST Method
if (strcasecmp(@ $_SERVER['REQUEST_METHOD'], 'POST') == 0) {
    // instantiate an Smarty object
    require_once("grn/smarty.csp");
    $t = new GRN_Smarty;

    //get locale values
    require_once('fw/i18n.csp');
    $inputLocaleNameArray
        = getMultiLanguageText(GRN_SCHEDULE_ELEMENT_NAME_FACILITYGROUP,
        $G_INPUT);

    // Validation check
    require_once('SmartyValidate.class.php');
    SmartyValidate::connect($t);
    $target_name = 'schedule/system/facility_group_modify';

    SmartyValidate::register_form($target_name);

    // validate after a POST
    if (SmartyValidate::is_valid($G_INPUT, $target_name)) {
        $fagid = @ $G_INPUT['fagid'];
        $fagcode = @ $G_INPUT['facility_group_code'];
        $memo = @ $G_INPUT['memo'];

        //Modify Facilitygroup
        global $G_container_base;
        $uum = $G_container_base->getInstance('uum');
        $login = $uum->getLoginUser();
        require_once('schedule/facility_system_logic.csp');
        $system_logic = GRN_Facility_SystemLogic::getInstance();
        $system_logic->modifyFacilityGroup($login, $fagid,
            $inputLocaleNameArray, $fagcode, $memo);

        // the validation session is finished
        SmartyValidate::unregister_form($target_name);

        _schedule_rebuild_facility_group_tree();
        cb_redirect('schedule/system/facility_group_view', ['fagid' => $fagid]);
    } else {
        //include sharing codes with command_*
        include('_facility_group_modify.csp');

        //Assign Template Name
        $t->setPageInfo($target_name);

        $multiLanguageInfoArray = [];
        $multiLanguageInfoArray['element_name']
            = GRN_SCHEDULE_ELEMENT_NAME_FACILITYGROUP;
        $multiLanguageInfoArray['values'] = $inputLocaleNameArray;
        $t->assign('multiLanguageInfoArray', $multiLanguageInfoArray);

        //Display Previous Page
        $t->display($target_name . '.tpl');
    }

}


