<?php

//-- instantiate Smarty object
require_once('grn/smarty.csp');
$t = new GRN_Smarty;

//--node information
require_once('_access_util.csp');

//--access information
require_once('schedule/facility_system_logic.csp');
$facility_logic = GRN_Facility_SystemLogic::getInstance();

$nid = array_key_exists('nid', $G_INPUT) ? $G_INPUT['nid'] : null;
$facilitygroup = $facility_logic->getFacilityGroup($nid);
if ($facilitygroup === false) {
    cb_throw_error(E_GRN_FCLT_NOTFOUND_FACILITYGROUP);
}

$t->assign('node', ['name' => $facilitygroup->get('name')]);

require_once('schedule/facility_privilege.csp');
$privilege_logic = GRN_Facility_Privilege_Logic::getInstance();

$access = ['list' => []];

$privilages = $privilege_logic->getPrivileges($facilitygroup);

if (is_array($privilages)) {
    require_once('grn/access_resources.csp');

    if (count($privilages['dynamic_role']) > 0) {
        foreach (array_keys($privilages['dynamic_role']) as $tid) {
            $access['list'][] = [
                'type' => GRN_ACCESS_TARGET_TYPE_DYNAMIC_ROLE,
                'tid'  => $tid
            ];
        }
    }
    if (count($privilages['static_role']) > 0) {
        foreach (array_keys($privilages['static_role']) as $tid) {
            $access['list'][] = [
                'type' => GRN_ACCESS_TARGET_TYPE_STATIC_ROLE,
                'tid'  => $tid
            ];
        }
    }
    if (count($privilages['group']) > 0) {
        foreach (array_keys($privilages['group']) as $tid) {
            $access['list'][] = [
                'type' => GRN_ACCESS_TARGET_TYPE_GROUP,
                'tid'  => $tid
            ];
        }
    }

    $users_id = []; //GRB-15046
    if (count($privilages['user']) > 0) {
        foreach (array_keys($privilages['user']) as $tid) {
            $access['list'][] = [
                'type' => GRN_ACCESS_TARGET_TYPE_USER,
                'tid'  => $tid
            ];
            $users_id[] = $tid;
        }
    }
    //start GRB-15046
    //Login User
    global $G_container_base;
    $uum = $G_container_base->getInstance('uum');
    $user = $uum->getLoginUser();
    require_once("grn/controller.csp");
    $users_info = GRN_ControllerUtil::getUserInfoToShowUserName($users_id,
        $user);
    $t->assign('users_info', $users_info);
    //end GRB-15046

    $access['count'] = count($access['list']);
    $t->assign('access', $access);
}

//--N-navigation params
$ours_params = $G_INPUT;
unset($ours_params['reset']);

// rhs organization information
require_once('grn/org_util.csp');
require_once('grn/org_util_search.csp');
$org =& grn_get_user_or_role_list($poid, $ours_params, 10);


// search
$text = '';
if (array_key_exists('text', $G_INPUT)) {
    $text = $G_INPUT['text'];
    $t->assign('text', $text);
}

require_once('fw/string_util.csp');
$is_search = (strlen(cb_trim($text)) > 0);
$t->assign('is_search', $is_search);

$poid = null;
if (isset($G_INPUT['poid'])) {
    $poid = $G_INPUT['poid'];
}
if ($poid === 'role' && $is_search) {
    unset($G_INPUT['poid']);
    $poid = null;
    $t->assign('poid', $poid);
}

if ($is_search) {
    $org_row = null;
    $org = [];
    if (0 < $poid) {
        $org_row =& grn_get_org_row($poid);
        $org =& grn_get_org_info($org_row, true);
        $org['ancestors'] =& grn_get_org_ancestors($org_row);
        $org['children'] =& grn_get_org_children($poid);
    } elseif (-1 == $poid) {
        $org_row =& grn_get_org_row('0');
        $org =& grn_get_org_info($org_row, true);
        $org['ancestors'] = $org_row;
        $org['children'] = null;
    } else {
        $org_row =& grn_get_org_row('0');
        $org =& grn_get_org_info($org_row, true);
        $org['ancestors'] = $org_row;
        $org['children'] =& grn_get_org_children('0');
        $poid = null;
    }

    $system_flg = true;
    $condition = grn_get_user_info_search_condition($poid, $text,
        $system_flg);
    $count = grn_get_user_info_search_count($poid, $condition);
    $org['navi_info'] = grn_get_user_navigation_info($count, $G_INPUT, 10);
    $org['user_list'] =& grn_search_user_info($poid, $condition,
        $org['navi_info']);
    unset($ours_params['text']);
    $t->assign('org', $org);
} else {
    $org =& grn_get_user_or_role_list($poid, $ours_params, 10);
    if ( ! array_key_exists('user_list', $org)) {
        $org['navi_info'] = grn_get_user_navigation_info(0, $G_INPUT, 10);
    }
    $t->assign('org', $org);
}

unset($ours_params['poid']);
unset($ours_params['sp']);
$t->assign('ours_params', $ours_params);

require_once('grn/controller.csp');
$controller_util = new GRN_ControllerUtil();

//-- page title
$page_title = grn_get_current_page_display_name();
$t->assign('page_title', $page_title);

$page_info = [
    'facility_group'                => ['sf' => 1],
    'facility_group_privilege_list' => null
];
$site_position = $controller_util->makeSitePosition('schedule/system/',
    $page_info);
$t->assign('site_position', $site_position);

// exec smarty
$t->display(cb_get_pagename() . '.tpl');


