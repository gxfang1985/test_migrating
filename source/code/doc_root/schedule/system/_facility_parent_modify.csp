<?php

$org_id = @ $G_INPUT['oid'];
if (strlen($org_id) == 0) {
    $org_id = null;
}
$top = @ $G_INPUT['top'];
$fid = @ $G_INPUT['fid'];
$search_text = @ $G_INPUT['search_text'];
$searched = @ $G_INPUT['s'];

require_once('schedule/facility_system_logic.csp');
$fsl = GRN_Facility_SystemLogic::getInstance();
$page_name = cb_get_pagename();

$facility = $fsl->getFacility($fid);
$fgroup = $fsl->getFacilityAffiliationGroup($fid);

if ($fgroup == false) {
    $fag_id = null;
} else {
    $fag_id = $fgroup->getOID();
}

if (array_key_exists('search_text', $G_INPUT)) // 検索画面
{
    $t->assign('is_search', true);

    $result = $fsl->searchFacilityGroupsInfo($search_text);

    $ancestors = $fsl->getAncestors($result);

    $fgroups = [];
    foreach ($ancestors as $key => $ancestor) {
        foreach ($ancestor as $a) {
            $fgroups[$a] = $a;
        }
    }
    $fgroups_info = $fsl->getFacilityGroupsInfo($fgroups);

    $search_result = [];
    foreach (array_keys($result) as $r) {
        $values = ['fagid' => $r];
        $values['ancestor'] = [];
        foreach ($ancestors[$r] as $a) {
            $values['ancestor'][] = $fgroups_info[$a];
        }
        $values['ancestor'] = array_reverse($values['ancestor']);
        $search_result[] = $values;
    }

    $t->assign('search_result', $search_result);
    $t->assign('search_text', $search_text);
} else // ツリー画面
{
    $t->assign('is_search', false);

    if (strlen($fid) == 0) {
        cb_throw_error(E_GRN_FCLT_NOTFOUND_FACILITY);
    }

    require_once('schedule/facility_tree.csp');

//-- prepare uum and uum_util
    global $G_container_base;
    $uum = $G_container_base->getInstance('uum');

    $page_name = cb_get_pagename();

    $util = GRN_OrgTreeUtil::getInstance();
    $tree = $util->getTree($page_name, 'GRN_FacilityTree');
    $t->assign("ftree_async_page", 'schedule/system/json/facility_tree');

    $initialize = false;

    if (($org_id == null && ! $top) || $searched) {
        if ($org_id == null) {
            if ($top == 1) {
                $org_id = null;
            } else {
                $org_id = $fag_id;
            }
        }
        if ($org_id != null) {
            $id_keys = [$org_id => $org_id];
            $ancestors = $fsl->getAncestors($id_keys);
            $ancestors[$org_id][] = null;
            $ancestors = $ancestors[$org_id];
        } else {
            $ancestors = [null];
        }
        $tree->initialize();


        foreach (array_reverse($ancestors) as $key) {
            $tree->buildChild($key);
        }
    }
    if ($top) {
        $tree->setSelectedNode(0);
    } else {
        if (isset($org_id)) {
            $is_facility_group = $fsl->getFacilityGroup($org_id);
            if ($is_facility_group === false) {
                cb_throw_error(E_GRN_FCLT_NOTFOUND_FACILITYGROUP);
            } else {
                $org_id = $is_facility_group->getOID();
            }
        }
        $tree->setSelectedNode($org_id);
    }
    $tree->collapse($org_id);

    $util->setTree($page_name, $tree);
    $org = $tree->getRoot();
    $t->assign('org', $org);
}

$id_keys = [];

if ($fag_id != null) {
    $id_keys[$fag_id] = $fag_id;
} else {
    $fagidgroup = [];
    $fagidgroup['ancestors'] = [];
}

if ($org_id != null && ! $top) {
    $id_keys[$org_id] = $org_id;
} else {
    $oidgroup = [];
    $oidgroup['ancestors'] = [];
}

if (count($id_keys) > 0) {
    $ancestors_array = $fsl->getAncestors($id_keys);

    $ancesntors_key = [];
    foreach ($ancestors_array as $ancestors) {
        foreach ($ancestors as $ancestor_id) {
            $ancestors_key[$ancestor_id] = $ancestor_id;
        }
    }
    $ancestors_info = $fsl->getFacilityGroupsInfo($ancestors_key);

    if ($org_id != null && ! $top) {
        $oidgroup = [];
        $oidgroup['ancestors'] = [];

        if ($org_id != 0 && ! $top) {
            foreach (array_reverse($ancestors_array[$org_id]) as $key) {
                if ($key == null) {
                    continue;
                }
                if ( ! isset($ancestors_info[$key]['col_name'])) {
                    cb_throw_error(E_GRN_FCLT_INVALID_PARENT_CATEGORY);
                }
                $oidgroup['ancestors'][]
                    = ['col_name' => $ancestors_info[$key]['col_name']];
            }
        }
    }
    if ($fag_id != null) {
        $fagidgroup = [];
        $fagidgroup['ancestors'] = [];

        foreach (array_reverse($ancestors_array[$fag_id]) as $key) {
            if ($key == null) {
                continue;
            }
            $fagidgroup['ancestors'][]
                = ['col_name' => $ancestors_info[$key]['col_name']];
        }
    }
}
$t->assign('page_name', $page_name);
$t->assign('org_id', $org_id);
$t->assign('oidgroup', $oidgroup);
$t->assign('fagidgroup', $fagidgroup);
$t->assign('fid', $fid);
$t->assign('page_title', grn_get_current_page_display_name());
$t->assign('facility_name', $facility->get('name'));

$t->assign(
    'site_position', [
        [
            'page'   => 'schedule/system/facility_group',
            'name'   => grn_get_page_display_name('schedule/system/facility_group'),
            'fag_id' => $fag_id,
            'sf'     => '1'
        ],
        [
            'page' => 'schedule/system/facility_view',
            'name' => grn_get_page_display_name('schedule/system/facility_view'),
            'faid' => $fid
        ],
        ['page' => '', 'name' => grn_get_current_page_display_name()]
    ]
);

