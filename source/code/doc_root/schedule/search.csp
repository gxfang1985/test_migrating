<?php

use grn\schedule\ScheduleMemberLogic;

// Smarty をインスタンス化
require_once('grn/smarty.csp');
$t = new GRN_Smarty;

// SmartyValidate should be initialized when an input form is there.
require('SmartyValidate.class.php');
SmartyValidate::connect($t);

global $G_INPUT;

include('_prepend_post.csp');
//------------------

$search_text = array_key_exists('search_text', $G_INPUT)
    ? $G_INPUT['search_text'] : null;

//uum
global $G_container_base;
$uum = $G_container_base->getInstance('uum');
$login = $uum->getLoginUser();
$login_id = $login->getOID();

//頻度更新
require_once('grn/uum_util.csp');
$uum_util = GRN_UumUtil::getInstance();
$input_keys = array_keys($G_INPUT);
foreach ($input_keys as $input_key) {
    if (preg_match('#^selected_users_.*$#', $input_key)) {
        $input_value = $G_INPUT[$input_key];
        if (is_array($input_value)) {
            $input_value = $input_value[0];
        }
        $input_values = explode(':', $input_value);
        if ($input_value && is_array($input_values)) {
            $uum_util->selectUsers($login, $input_values);
        }
    } elseif (preg_match('#^selected_groups_.*$#', $input_key)) {
        $input_value = $G_INPUT[$input_key];
        if (is_array($input_value)) {
            $input_value = $input_value[0];
        }
        $input_values = explode(':', $input_value);
        if ($input_value && is_array($input_values)) {
            $uum_util->selectGroups($login, $input_values);
        }
    }
}

require_once('fw/session_manager.csp');
$sm = CB_SessionManager::getInstance();
$session = $sm->getSession(cb_get_pagename());

if (array_key_exists('sp', $G_INPUT) && ! is_null($G_INPUT['sp']) && $session) {
    $search_condition = $session->get('search_condition');
    $search_options = $search_condition['search_keys'];
    $str_setdate = $search_condition['setdate'];
    $setdate = new CB_Date();
    $setdate->parse($str_setdate);
    $str_enddate = $search_condition['enddate'];
    $enddate = new CB_Date();
    $enddate->parse($str_enddate);
    $member_ids = $search_condition['member_ids'];
    $expand_repeat_and_temporary
        = $search_condition['expand_repeat_and_temporary'];
    $search_text = $search_condition['search_text'];
} else {
    $sm->destroy(cb_get_pagename());
    $session = $sm->getSession(cb_get_pagename());
    // 検索するもの
    $search_options = [];
    if (array_key_exists('search_keys', $G_INPUT)) {
        $search_keys = $G_INPUT['search_keys'];
        foreach ($search_keys as $key) {
            $search_options[$key] = true;
        }
    } elseif ( ! array_key_exists('optional_search', $G_INPUT)) {
        $search_options = [
            'title'       => true,
            'companyinfo' => true,
            'memo'        => true,
            'follow'      => true
        ];
    }

    $start_year = array_key_exists('start_year', $G_INPUT)
        ? $G_INPUT['start_year'] : null;
    $start_month = array_key_exists('start_month', $G_INPUT)
        ? $G_INPUT['start_month'] : null;
    $start_day = array_key_exists('start_day', $G_INPUT)
        ? $G_INPUT['start_day'] : null;
    $end_year = array_key_exists('end_year', $G_INPUT) ? $G_INPUT['end_year']
        : null;
    $end_month = array_key_exists('end_month', $G_INPUT)
        ? $G_INPUT['end_month'] : null;
    $end_day = array_key_exists('end_day', $G_INPUT) ? $G_INPUT['end_day']
        : null;

    require_once('schedule/view_util.csp');
    $util = GRN_Schedule_View_Util::getInstance();
    $setdate = $util->createDateTimeFromParameters($start_year, $start_month,
        $start_day);
    $enddate = $util->createDateTimeFromParameters($end_year, $end_month,
        $end_day);

    if (is_a($setdate, 'CB_Date') && ! $enddate) {
        cb_throw_error(E_GRN_SCHD_INVALID_ENDDATE);
    }

    if (is_a($enddate, 'CB_Date') && ! $setdate) {
        cb_throw_error(E_GRN_SCHD_INVALID_SETDATE);
    }

    // 両方設定されていない場合は、新規につくる
    if ( ! $setdate && ! $enddate) {
        $ts = new CB_TimeStampEx();
        $today = $ts->getDate();

        $setdate = new CB_DateEx($today);
        $enddate = new CB_DateEx($today);
        $setdate->moveMonths(-3);
        $enddate->moveMonths(3);
        $enddate->moveDays(-1);
    }

    $setdate = new CB_DateEx($setdate);
    // 日付が前後している
    if ($setdate->compare($enddate) > 0) {
        cb_throw_error(E_GRN_SCHD_INVALID_DATE);
    }

    $member_ids = array_key_exists('sUID', $G_INPUT) ? $G_INPUT['sUID'] : null;
    if (is_array($member_ids) && count($member_ids) > 0) {
        $member_ids = array_flip($member_ids);
    } else {
        if ( ! array_key_exists('optional_search', $G_INPUT)) {
            if ( ! is_array($member_ids) && count($member_ids) == 0) {
                $member_ids = [$login_id => $login_id];
            }
        }

        if ( ! is_array($member_ids)) {
            $member_ids = [];
        }
    }

    $expand_repeat_and_temporary = false;
    if (array_key_exists('all_repeat', $G_INPUT) && $G_INPUT['all_repeat']) {
        $search_options['expand_repeat_and_temporary'] = true;
        $expand_repeat_and_temporary = true;
    }

}

// 画面にデータの反映
$t->assign('search_keys', $search_options);
$t->assign('stime', $setdate);
$t->assign('etime', $enddate);
$t->assign('expand_repeat_and_temporary', $expand_repeat_and_temporary);

require_once('schedule/system_logic.csp');
$systemlogic = GRN_Schedule_SystemLogic::getInstance();
$t->assign('show_organize', $systemlogic->getShowOrganize() ? true : false);

$temp_users = [];
$temp_groups = [];
foreach (array_keys($member_ids) as $key) {
    if (mb_substr($key, 0, 1) == 'g') {
        $temp_groups[mb_substr($key, 1)] = mb_substr($key, 1);
    } else {
        $temp_users[$key] = $key;
    }
}

// アクセス権のチェック
require_once('schedule/access_logic.csp');
$acc_logic = GRN_Schedule_Access_Logic::getInstance();
$dynamic_roles = $uum->listGrantedRoles();
$access_mids = [];
if (count($temp_users) > 0) {
    $access = $acc_logic->evaluateAccessesById($login, $temp_users, ['read'],
        $dynamic_roles, 'user');
    if ( ! $access) {
        cb_throw_error(E_GRN_SCHD_ACCESSDENY_VIEW);
    }
    $access_mids = $access;
}
if (count($temp_groups) > 0) {
    $access = $acc_logic->evaluateAccessesById($login, $temp_groups, ['read'],
        $dynamic_roles, 'group');
    if ( ! $access) {
        cb_throw_error(E_GRN_SCHD_ACCESSDENY_VIEW);
    }
    foreach (array_keys($access) as $key) {
        $access_mids['g' . $key] = $key;
    }
}

// 選択されているユーザー/組織
$m_names = [];
$m_ids = array_keys($member_ids);
$display_member_list = ScheduleMemberLogic::getInstance()
                                          ->getPickoutMemberTypeIdFromParam($m_ids);
$selected_users = ScheduleMemberLogic::getInstance()
                                     ->getDisplayMemberList($display_member_list);
$t->assign('selected_users', $selected_users);

// セッションにデータを保存
$session->set('search_condition',
    [
        'search_text'                 => $search_text,
        'setdate'                     => $setdate->format(),
        'enddate'                     => $enddate->format(),
        'search_keys'                 => $search_options,
        'expand_repeat_and_temporary' => $expand_repeat_and_temporary,
        'member_ids'                  => $member_ids
    ]);

// N件ナビのための準備
require_once('grn/controller.csp');
require_once('grn/ui.csp');
$manager = GRN_UIConfigManager::getInstance();
$config = $manager->getUserConfig($login);

$limit = $config->getFollowMax();
require_once('grn/controller.csp');
$utility = new GRN_ControllerUtil();
$navi_start_position = $utility->getNaviStartPosition();

require_once('grn/ui.csp');
$cm = GRN_UIConfigManager::getInstance();
$ui_config = $cm->getUserConfig($login);
$subject_cols = $ui_config->getSubjectWidth();
// 実際の検索
require_once('schedule/search_logic.csp');
$search_logic = GRN_Schedule_SearchLogic::getInstance();

$search_options['member_ids'] = $access_mids;
$search_options['exclude_private'] = true;
$retval = $search_logic->search($login,
    $search_options, $search_text, $navi_start_position, $limit + 1, $setdate,
    $enddate, null,
    false);

$isExistsNextPage = count($retval) > $limit;
if ($isExistsNextPage) {
    array_pop($retval);
}

// $total_count = $retval['total'];
// unset( $retval['total'] );

if ( ! is_a($setdate, 'CB_DateEx')) {
    $setdate = new CB_DateEx($setdate);
}
$setdate_format = $setdate->format();
if (is_array($retval) && count($retval) > 0) {
    $search_item = [];
    foreach (array_keys($retval) as $key) {
        $event = &$retval[$key];
        if (array_key_exists('setdate', $event)) {
            if ($setdate->compare($event['setdate']) > 0) {
                $event['date_format'] = $setdate_format;
                $event['date'] = $setdate;
            } else {
                $event['date_format'] = $event['setdate']->format();
                $event['date'] = $event['setdate'];
            }
        } else {
            $event_date = $event['setdatetime']->getDate();
            if ($setdate->compare($event_date) > 0) {
                $event['date_format'] = $setdate_format;
                $event['date'] = $setdate;
            } else {
                $event['date_format'] = $event_date->format();
                $event['date'] = $event_date;
            }
        }
        if ($event['event_menu_color'] != '0') {
            $event_menu = $event['event_menu'];
            $event_detail = $event['event_detail'];
            $menu_length = mb_strwidth($event_menu);
            $detail_length = mb_strwidth($event_detail);
            $total_length = $menu_length + $detail_length;

            if ($menu_length > $subject_cols) {
                $event['event_menu'] = mb_strimwidth($event_menu, 0,
                    $subject_cols - 3);
                $event['event_detail'] = '...';
            } elseif ($detail_length > 0) {
                if ($menu_length >= $subject_cols - 3
                    && $total_length > $subject_cols
                ) {
                    $event['event_menu'] = mb_strimwidth($event_menu, 0,
                        $subject_cols - 3);
                    $event['event_detail'] = '...';
                } else {
                    $event['event_detail'] = mb_strimwidth($event_detail, 0,
                        $subject_cols - $menu_length, '...');
                }
            }
        }
        $users_id[] = $event['creator_id'];
    }

    $t->assign('search_item', $retval);
    require_once("grn/controller.csp");
    $users_info = GRN_ControllerUtil::getUserInfoToShowUserName($users_id,
        $login);
    $t->assign('users_info', $users_info);
}

// n件ナビゲーション情報を取得する 
$navi_for_view = $utility->makeSimpleNaviInformation($navi_start_position,
    $limit, count($retval), $isExistsNextPage);

// ナビゲーション
$t->assign(
    'view_set', $navi_for_view
);

$t->assign('view_plugin', [
    'name'   => 'schedule',
    'params' => ['action' => ['read'], 'session_name' => cb_get_pagename()]
]);


$t->assign('subject_cols', $subject_cols);
$t->assign('truncate_cols', $ui_config->getTruncateWidth());

$t->assign('search_text', $search_text);

$referer_key = array_key_exists('referer_key', $G_INPUT)
    ? $G_INPUT['referer_key'] : null;
$referer_exists = false;
if ($referer_key) {
    require_once('fw/session_manager.csp');
    $session_manager = CB_SessionManager::getInstance();
    $session = $session_manager->getSession('schedule.referer');
    $referer = $session->get($referer_key);
    if (is_array($referer)) {
        // Ajaxスケジューラは日付を移動してもrefererを更新しないので変更後のbdateを受け取ってrefererを更新する
        $date = new CB_Date();
        $referer_bdate = array_key_exists('referer_bdate', $G_INPUT)
            ? $G_INPUT['referer_bdate'] : null;
        if ($date->parse($referer_bdate)) {
            $referer['bdate'] = $referer_bdate;
            $session->set($referer_key, $referer);
        }

        // page title
        $page_title = grn_get_current_page_display_name();
        $t->assign('page_title', $page_title);
        // site position 
        $t->assign(
            'site_position', [
                $referer,
                ['page' => "", 'name' => $page_title]
            ]
        );
        $referer_exists = true;
    }
}

if ($referer_exists === false) {
    // page title
    $page_title = grn_get_current_page_display_name();
    $t->assign('page_title', $page_title);
    // site position 
    $t->assign(
        'site_position', [
            [
                'page' => 'schedule/index',
                'name' => grn_get_page_display_name('schedule/schedule_index')
            ],
            ['page' => '', 'name' => $page_title]
        ]
    );
}

$t->assign('referer_key', $referer_key);

// Smarty実行
$t->display(cb_get_pagename() . '.tpl');

