<?php

require_once('schedule/facility_system_logic.csp');
$fsl = GRN_Facility_SystemLogic::getInstance();
require_once('schedule/facility_privilege.csp');
$priv = GRN_Facility_Privilege_Logic::getInstance();

global $G_container_base;
$uum = $G_container_base->getInstance('uum');
$login = $uum->getLoginUser();

$fid = @ $G_INPUT['fid'];
$fagid = @ $G_INPUT['oid'];

$fid_group = $fsl->getFacilityAffiliationGroup($fid);
if ( ! $priv->hasPrivilegeOfFacilityGroup($login, $fid_group)) {
    cb_throw_error(E_GRN_SCHD_PRIVILEGE_ACCESS_DENY);
}
if ( ! $priv->hasPrivilegeOfFacilityGroupByID($login, $fagid)) {
    cb_throw_error(E_GRN_SCHD_PRIVILEGE_ACCESS_DENY);
}

if (strlen($fid) == 0) {
    cb_throw_error(E_GRN_FCLT_NOTFOUND_FACILITY);
}

if (strlen($fagid) == 0) {
    $fagid = null;
}

$facility = $fsl->getFacility($fid);
if ($facility === false) {
    cb_throw_error(E_GRN_FCLT_NOTFOUND_FACILITY);
}

if ( ! is_null($fagid)) {
    $fgroup = $fsl->getFacilityGroup($fagid);
    if ($fgroup === false) {
        cb_throw_error(E_GRN_FCLT_NOTFOUND_FACILITYGROUP);
    }
} else {
    $fgroup = null;
}

$fsl->moveFacility($login, $facility->getOID(), $fgroup->getOID());

// if ( ! $fsl->modifyFacility( $login,
//                              $facility->getOID(),
//                              $facility->get( 'name' ),
//                              $facility->get( 'foreign_key' ),
//                              $facility->get( 'memo' ),
//                              $fgroup ) )
// {
//     cb_throw_error(  ); // TODO
// }

cb_redirect('schedule/operation/facility_view',
    ['faid' => $fid, 'fagid' => $fagid]);
