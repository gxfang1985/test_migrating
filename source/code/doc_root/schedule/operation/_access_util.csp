<?php

//-- get parameters from URL parameters
$target = @ $G_INPUT['tid'];        // user(+organization), role, or facility
$org_id = @ $G_INPUT['oid'];        // organization id
$fgroup_id = @ $G_INPUT['fagid'];   // facility group id
$user_id = @ $G_INPUT['uid'];       // user id
$role_id = @ $G_INPUT['rid'];
$facility_id = @ $G_INPUT['faid'];
$poid = @ $G_INPUT['poid'];

global $G_container_base;
$uum = $G_container_base->getInstance('uum');
$login = $uum->getLoginUser();
// 権限があるかどうかのチェック
require_once('schedule/facility_privilege.csp');
$privilege_logic = GRN_Facility_Privilege_Logic::getInstance();

if ( ! empty($fgroup_id)
     && $fgroup_id != -2
) // $fgroup_id == -2 when '(全施設)' was selected.
{
    //権限があるかどうか
    if ( ! $privilege_logic->hasPrivilegeOfFacilityGroupByID($login,
        $fgroup_id)
    ) {
        cb_throw_error(E_GRN_SCHD_PRIVILEGE_ACCESS_DENY);
    }
} else {
    if ( ! $privilege_logic->hasPrivilege($login)) {
        cb_throw_error(E_GRN_SCHD_PRIVILEGE_ACCESS_DENY);
    }
}

if (@ $t) {
    $t->assign('target', $target);
    $t->assign('org_id', $org_id);
    $t->assign('fgroup_id', $fgroup_id);
    $t->assign('user_id', $user_id);
    $t->assign('role_id', $role_id);
    $t->assign('facility_id', $facility_id);
    $t->assign('poid', $poid);

    if ($target == 'facility') {
        require_once('schedule/facility_system_logic.csp');
        $fsl = GRN_Facility_SystemLogic::getInstance();
        $facility_row = $fsl->getFacility($facility_id);
        if ($facility_row !== false) {
            if ( ! $privilege_logic->hasPrivilegeOfFacility($login,
                $facility_row)
            ) {
                cb_throw_error(E_GRN_SCHD_PRIVILEGE_ACCESS_DENY);
            }

            $facility = [
                'faid' => $facility_id,
                'name' => $facility_row->get('name')
            ];
            $t->assign('facility', $facility);
        }
    } elseif ($target == 'facilitygroup') {
        require_once('schedule/facility_system_logic.csp');
        $fsl = GRN_Facility_SystemLogic::getInstance();
        $facilitygroup_row = $fsl->getFacilityGroup($fgroup_id);
        if ($facilitygroup_row !== false) {
            $facilitygroup = [
                'fagid' => $fgroup_id,
                'name'  => $facilitygroup_row->get('name')
            ];
            $t->assign('facilitygroup', $facilitygroup);
        }
    }
}

//--access object
function grn_get_schedule_access_object(
    $target,
    $org_id,
    $user_id,
    $role_id,
    $facility_id,
    $facility_group_id = null
) {
    global $G_container_base;
    $uum = $G_container_base->getInstance('uum');

    if ($target == 'facility') {
        //(for facility)
        require_once('schedule/facility_system_logic.csp');
        $fsl = GRN_Facility_SystemLogic::getInstance();
        $object = $fsl->getFacility($facility_id);
        if ($object === false) {
            cb_throw_error(E_GRN_FCLT_NOTFOUND_FACILITY);
        }
    } elseif ($target == 'role') {
        //(for role)
        $object = $uum->getStaticRole($role_id);
        if ( ! $object) {
            cb_throw_error(E_GRN_ROLE_NOT_FOUND);
        }
    } elseif ($user_id) {
        //(for user)
        $object = $uum->getUser($user_id);
        if ( ! $object) {
            cb_throw_error(E_GRN_USER_NOT_FOUND);
        }
    } elseif ($org_id) {
        //(for organization)
        $object = $uum->getGroup($org_id);
        if ( ! $object) {
            cb_throw_error(E_GRN_GROUP_NOT_FOUND);
        }
    } elseif ($target === 'facilitygroup') {
        //(for facilitygroup)
        require_once('schedule/facility_system_logic.csp');
        $fsl = GRN_Facility_SystemLogic::getInstance();
        $object = $fsl->getFacilityGroup($facility_group_id);
        if ($object === false) {
            cb_throw_error(E_GRN_FCLT_NOTFOUND_FACILITYGROUP);
        }
    } else {
        cb_throw_error(E_GRN_SCHD_ACCESS_NOT_SELECT_OBJECT);
    }

    return $object;
}

