<?php
// Check HTTP-POST Method
if (strcasecmp(@ $_SERVER['REQUEST_METHOD'], 'POST') == 0) {
    global $G_container_base;
    $uum = $G_container_base->getInstance('uum');
    $login = $uum->getLoginUser();

    // 権限があるかどうかのチェック
    require_once('schedule/facility_privilege.csp');
    $privilege_logic = GRN_Facility_Privilege_Logic::getInstance();

    if ( ! $privilege_logic->hasPrivilege($login)) {
        cb_throw_error(E_GRN_SCHD_PRIVILEGE_ACCESS_DENY);
    }

    // instantiate an Smarty object
    require_once("grn/smarty.csp");
    $t = new GRN_Smarty;

    //get locale values
    require_once('fw/i18n.csp');
    $inputLocaleNameArray
        = getMultiLanguageText(GRN_SCHEDULE_ELEMENT_NAME_FACILITY, $G_INPUT);

    // Validation check
    require_once('SmartyValidate.class.php');
    SmartyValidate::connect($t);
    $target_name = 'schedule/operation/facility_modify';
    SmartyValidate::register_form($target_name);

    // validate after a POST
    if (SmartyValidate::is_valid($G_INPUT, $target_name)) {
        require_once('fw/string_util.csp');

        $faid = @ $G_INPUT['faid'];
        $code = cb_trim(@ $G_INPUT['facility_code']);
        $memo = @ $G_INPUT['memo'];

        if (mb_strlen($code) == 0) {
            cb_throw_error(E_GRN_FCLT_MISSING_FOREIGN_KEY);
        }

        require_once('schedule/facility_system_logic.csp');
        $system_logic = GRN_Facility_SystemLogic::getInstance();

        $facility = $system_logic->getFacility($faid);
        if ( ! $privilege_logic->hasPrivilegeOfFacility($login, $facility)) {
            cb_throw_error(E_GRN_SCHD_PRIVILEGE_ACCESS_DENY);
        }

        $group = $system_logic->getFacilityAffiliationGroup($faid);
        if ( ! $privilege_logic->hasPrivilegeOfFacilityGroup($login, $group)) {
            cb_throw_error(E_GRN_SCHD_PRIVILEGE_ACCESS_DENY);
        }

        //--- add VCBSCH0010 ---s
        $netmeeting_data = [];
        $netmeeting_data['available']
            = @ $G_INPUT['netmeeting_available'];
        $netmeeting_data['guests_normal_limit']
            = @ $G_INPUT['guests_normal_limit'];
        //--- add VCBSCH0010 ---e

        //Modify Facility
        //--- update VCBSCH0010 ---s
        //$system_logic->modifyFacility( $login, $faid, $inputLocaleNameArray, $code, $memo );
        $system_logic->modifyFacility($login, $faid, $inputLocaleNameArray,
            $code, $memo, $netmeeting_data);
        //--- update VCBSCH0010 ---e

        // the validation session is finished
        SmartyValidate::unregister_form($target_name);

        cb_redirect('schedule/operation/facility_view',
            ['oid' => $group->getOID(), 'faid' => $faid]);
    } else {
        //include sharing codes with command_*
        include('_facility_modify.csp');

        $t->assign('facility', $view_data);

        //--- add VCBSCH0010 ---s
        $netmeeting_data = [];

        require_once('schedule/netmeeting_system_logic.csp');
        $netmeeting_system_logic = GRN_Netmeeting_SystemLogic::getInstance();
        $netmeeting_system_available
            = $netmeeting_system_logic->getNetmeetingAvailable();
        if ( ! $netmeeting_system_available) {
            $available = '0';
        }
        $netmeeting_data['system_available'] = $netmeeting_system_available;

        $netmeeting_data['available'] = @ $G_INPUT['netmeeting_available'];
        $netmeeting_data['guests_normal_limit']
            = @ $G_INPUT['guests_normal_limit'];

        $t->assign('netmeeting', $netmeeting_data);
        //--- add VCBSCH0010 ---e

        //Assign Template Name
        $t->setPageInfo($target_name);

        $multiLanguageInfoArray = [];
        $multiLanguageInfoArray['element_name']
            = GRN_SCHEDULE_ELEMENT_NAME_FACILITY;
        $multiLanguageInfoArray['values'] = $inputLocaleNameArray;
        $t->assign('multiLanguageInfoArray', $multiLanguageInfoArray);

        //Display Previous Page
        $t->display($target_name . '.tpl');
    }
}


