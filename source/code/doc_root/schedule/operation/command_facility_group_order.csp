<?php

if (strcasecmp(@ $_SERVER['REQUEST_METHOD'], 'POST') == 0) {
    require_once('schedule/facility_system_logic.csp');
    $facility_logic = GRN_Facility_SystemLogic::getInstance();

    global $G_container_base;
    $uum = $G_container_base->getInstance('uum');
    $login = $uum->getLoginUser();

    // 順番を変更する施設グループ
    $fagid = @ $G_INPUT['fagid'];
    if ( ! $fagid) {
        $fagid = null;
    }

    $group = $facility_logic->getFacilityGroup($fagid);
    if ($group === false) {
        cb_throw_error(E_GRN_FCLT_NOTFOUND_FACILITYGROUP);
    }
    // set modification timestamp for parent group
    if ($group) {
        $facility_logic->setLastModifyTime($login, $group);
    }

    $fagids = @ $G_INPUT['fagids'];

    if ( ! is_array($fagids)) {
        cb_throw_error(E_GRN_FCLT_NOTSELECT_ORDER_FACILITY);
    }
    $result = $facility_logic->orderFacilityGroup($fagids);

    if ($result) {
        foreach ($fagids as $id) {
            $sgroup = $facility_logic->getFacilityGroup($id);
            if ($sgroup !== false) {
                $facility_logic->setLastModifyTime($login, $sgroup);
            }
        }
    }

    // 監査ログ
    require_once('grn/logger.csp');
    $lm = CB_LoggerManager::getInstance();
    $l = $lm->getLogger(GRN_SCHEDULE_MODULE_ID);
    $log_params = [
        'fgid'          => $fagid,
        'facilitygroup' => $group->get('name')
    ];
    $l->noticeEx('order', 'facilitygroup', $log_params);

    _schedule_rebuild_facility_group_tree($fagid);
    cb_redirect('schedule/operation/facility_list', ['oid' => $fagid]);

}
