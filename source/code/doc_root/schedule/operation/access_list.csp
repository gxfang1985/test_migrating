<?php

// Smarty をインスタンス化
require_once('grn/smarty.csp');
$t = new GRN_Smarty;

require_once('_access_util.csp');

// access object
$object =& grn_get_schedule_access_object($target, $org_id, $user_id, $role_id,
    $facility_id, $fgroup_id);

// access information
require_once('schedule/access_logic.csp');
$sal = GRN_Schedule_Access_Logic::getInstance();
$access = [];
$access['security_model'] = $sal->getSecurityModel($object);
$access['list'] = $sal->getAccesses($object);
$access['count'] = count($access['list']);

// GTM-529 tuning
$users_id = [];
foreach ($access['list'] as $access_item) {
    if (GRN_SCHD_TARGET_TYPE_USER == $access_item['type']) {
        $users_id[] = $access_item['tid'];
    }
}

global $G_container_base;
$uum = $G_container_base->getInstance('uum');
$login =& $uum->getLoginUser();

require_once('grn/controller.csp');
$users_info = GRN_ControllerUtil::getUserInfoToShowUserName($users_id, $login);
$t->assign('users_info', $users_info);
// GTM-529 tuning

//--N-navigation params
$ours_params = $G_INPUT;
unset($ours_params['reset']);

$t->assign('access', $access);
$t->assign('is_grant', $access['security_model'] == 'grant');
$t->assign('is_revoke', $access['security_model'] == 'revoke');

// rhs organization information
require_once('grn/org_util.csp');
require_once('grn/org_util_search.csp');

// search
$text = '';
if (array_key_exists('text', $G_INPUT)) {
    $text = $G_INPUT['text'];
    $t->assign('text', $text);
}

require_once('fw/string_util.csp');
$is_search = (strlen(cb_trim($text)) > 0);
$t->assign('is_search', $is_search);

$poid = null;
if (isset($G_INPUT['poid'])) {
    $poid = $G_INPUT['poid'];
}
if ($poid === 'role' && $is_search) {
    unset($G_INPUT['poid']);
    $poid = null;
    $t->assign('poid', $poid);
}

if ($is_search) {
    $org_row = null;
    $org = [];
    if (0 < $poid) {
        $org_row =& grn_get_org_row($poid);
        $org =& grn_get_org_info($org_row, true);
        $org['ancestors'] =& grn_get_org_ancestors($org_row);
        $org['children'] =& grn_get_org_children($poid);
    } elseif (-1 == $poid) {
        $org_row =& grn_get_org_row('0');
        $org =& grn_get_org_info($org_row, true);
        $org['ancestors'] = $org_row;
        $org['children'] = null;
    } else {
        $org_row =& grn_get_org_row('0');
        $org =& grn_get_org_info($org_row, true);
        $org['ancestors'] = $org_row;
        $org['children'] =& grn_get_org_children('0');
        $poid = null;
    }

    $system_flg = false;
    $condition = grn_get_user_info_search_condition($poid, $text,
        $system_flg);
    $count = grn_get_user_info_search_count($poid, $condition);
    $org['navi_info'] = grn_get_user_navigation_info($count, $G_INPUT, 10);
    $org['user_list'] =& grn_search_user_info($poid, $condition,
        $org['navi_info']);
    unset($ours_params['text']);
    $t->assign('org', $org);
} else {
    $org =& grn_get_user_or_role_list($poid, $ours_params, 10);
    if ( ! array_key_exists('user_list', $org)) {
        $org['navi_info'] = grn_get_user_navigation_info(0, $G_INPUT, 10);
    }
    $t->assign('org', $org);
}

unset($ours_params['poid']);
unset($ours_params['sp']);
$t->assign('ours_params', $ours_params);

//--authority types
$authority_types = [
    'read'   => cb_msg('grn.schedule.lang', 'access_read'),
    'add'    => cb_msg('grn.schedule.lang', 'access_add'),
    'modify' => cb_msg('grn.schedule.lang', 'access_modify'),
    'delete' => cb_msg('grn.schedule.lang', 'access_delete')
];
$t->assign('authority_types', $authority_types);
$t->assign('authority_count', count($authority_types));

require_once('fw/session_manager.csp');
$session_manager = CB_SessionManager::getInstance();
$session =& $session_manager->getSession('schedule.system.access_list');
$authorities = $session->get('authorities');
if (array_key_exists('reset', $G_INPUT) || ! is_array($authorities)) {
    if ($access['security_model'] == 'grant') {
        $authorities = ['read' => 1, 'add' => 1, 'modify' => 1, 'delete' => 1];
    } else {
        $authorities = ['read' => 0, 'add' => 0, 'modify' => 0, 'delete' => 0];
    }
}

$t->assign('authorities', $authorities);

// page title
$page_title = grn_get_current_page_display_name();
$t->assign('page_title', $page_title);


if ($target === 'facilitygroup') {
    $view_position = [
        'page'  => 'schedule/operation/facility_group_view',
        'name'  => grn_get_page_display_name('schedule/operation/facility_group_view'),
        'fagid' => $fgroup_id,
        'faid'  => $facility_id
    ];
} else {
    $view_position = [
        'page'  => 'schedule/operation/facility_view',
        'name'  => grn_get_page_display_name('schedule/operation/facility_view'),
        'fagid' => $fgroup_id,
        'faid'  => $facility_id
    ];
}

// site position 
$site_position = [
    [
        'page' => 'schedule/index',
        'name' => grn_get_page_display_name('schedule/schedule_index')
    ],
    [
        'page' => 'schedule/operation/facility_list',
        'name' => grn_get_page_display_name('schedule/operation/facility_list'),
        'oid'  => $fgroup_id,
        'sf'   => 1
    ],
    $view_position,
    ['page' => '', 'name' => $page_title],
];
$t->assign('site_position', $site_position);

// Smarty実行
$t->display(cb_get_pagename() . '.tpl');

