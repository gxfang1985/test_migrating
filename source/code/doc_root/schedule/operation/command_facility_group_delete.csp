<?php

if (strcasecmp(@ $_SERVER['REQUEST_METHOD'], 'POST') == 0) {
    /*
        // instantiate an Smarty object
        require_once( "grn/smarty.csp" );
        $t = new GRN_Smarty;

        // Validation check
        require_once('SmartyValidate.class.php');
        SmartyValidate::connect($t);

        // validate after a POST
        if(SmartyValidate::is_valid($G_INPUT)) {
            // the validation session is finished
            SmartyValidate::disconnect();
    */
    // --------
    // brabrabra after success
    // --------
    require_once('schedule/facility_system_logic.csp');
    $system_logic = GRN_Facility_SystemLogic::getInstance();

    require_once('schedule/facility_privilege.csp');
    $priv = GRN_Facility_Privilege_Logic::getInstance();

    global $G_container_base;
    $uum = $G_container_base->getInstance('uum');
    $login = $uum->getLoginUser();

    $fagid = @ $G_INPUT['fagid'];

    $facilitygroup = $system_logic->getFacilityGroup($fagid);
    if ($facilitygroup === false) {
        cb_throw_error(E_GRN_FCLT_NOTFOUND_FACILITYGROUP);
    }

    if ( ! $priv->hasPrivilegeOfFacilityGroupByID($login, $fagid)) {
        cb_throw_error(E_GRN_SCHD_PRIVILEGE_ACCESS_DENY);
    }


    $parent_fgroup = $facilitygroup->get('parent');

    if ($parent_fgroup) {
        $parent_id = $parent_fgroup->getOID();
    } else {
        $parent_id = null;
    }
    $system_logic->removeFacilityGroup($fagid);


    $param = ['sf' => '1'];
    if ( ! is_null($parent_id)) {
        $param['oid'] = $parent_id;
    } else {
        $param['top'] = 1;
    }
    _schedule_rebuild_facility_group_tree();
    cb_redirect('schedule/operation/facility_list', $param);
    /*
        } else {
            // if error, show the source form

            //Assign Template Name
            $t->setPageInfo($target_name);

            cb_redirect( 'schedule/system/menupage_delete', array( 'menupageid'=>$G_INTPU['menupage_id'] ) );
        }
    */
}


