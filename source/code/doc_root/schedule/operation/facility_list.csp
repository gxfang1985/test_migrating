<?php

// instantiate an Smarty object
require_once('grn/smarty.csp');
$t = new GRN_Smarty;
// for site position
$t->assign('app_id', 'schedule');

require_once('grn/org_tree.csp');
require_once('schedule/facility_tree.csp');

require_once('schedule/facility_privilege.csp');
$priv = GRN_Facility_Privilege_Logic::getInstance();

require_once('schedule/facility_system_logic.csp');
$fsl = GRN_Facility_SystemLogic::getInstance();

require_once('grn/controller.csp');
$utility = new GRN_ControllerUtil();

$uum = $G_container_base->getInstance('uum');
$dynamic_roles = $uum->listGrantedRoles();
$login = $uum->getLoginUser();

// パラメータの処理
//$fagid = array_key_exists( 'fagid', $G_INPUT ) ? cb_trim( $G_INPUT['fagid'] ) : null;
//$t->assign('fagid', $fagid);

$org_id = @ $G_INPUT['oid'];
if (strlen($org_id) === 0) {
    $org_id = null;
}

$searched = @ $G_INPUT['s'];
$is_search = array_key_exists('search_text', $G_INPUT);
$t->assign('is_search', $is_search);
$search_text = @ $G_INPUT['search_text'];

global $G_container_base;
$uum = $G_container_base->getInstance('uum');
$login = $uum->getLoginUser();

$page_name = cb_get_pagename();
$util = GRN_OrgTreeUtil::getInstance();
$tree = $util->getTree($page_name, 'GRN_FacilityPrivilegeTree');

// 権限があるかどうかのチェック
if ($org_id > 0) {
    // 権限があるかどうか
    if ( ! $priv->hasPrivilegeOfFacilityGroupByID($login, $org_id)) {
        cb_throw_error(E_GRN_SCHD_PRIVILEGE_ACCESS_DENY);
    }
} else {
    if ( ! $priv->hasPrivilege($login)) {
        cb_throw_error(E_GRN_SCHD_PRIVILEGE_ACCESS_DENY);
    }
}

$facility_group = $fsl->getFacilityGroup($org_id);

if ($searched && $org_id > 0) // 検索から来たときは、ツリーをたたんで必要なところだけ開く
{
    $tree->initialize();
    if ($org_id > 0) {
        $ancestors = $fsl->getAncestors([$org_id => $org_id]);
        $ancestors = array_reverse($ancestors[$org_id]);

        $facilityGroupBeanList
            = $priv->getPrivilegeFacilityGroupListBeanByTopLevel($login);
        $auth_fgroups_ids = [];
        foreach ($facilityGroupBeanList as $facilityGroupBean) {
            $auth_fgroups_ids[] = $facilityGroupBean->getId();
        }

        foreach ($ancestors as $id) {
            if (array_search($id, $auth_fgroups_ids) !== false) {
                break;
            } else {
                echo 'array_search( $id, $auth_fgroups_ids ) == FALSE;';
                array_shift($ancestors);
            }
        }
        array_unshift($ancestors, null);

        foreach ($ancestors as $a) {
            $tree->buildChild($a);
        }
        $tree->setSelectedNode($org_id);
    }
} elseif ($org_id == -2) // 全施設を選択
{

} elseif (is_null($org_id)) {
    $t->assign('top', true);
    $tree->initialize();
    $org_id = null;
}

if (is_null($org_id)) {
    $t->assign('top', 1);
    $top = 1;
} else {
    $top = 0;
}

$tree->setSelectedNode($org_id);
$util->setTree($page_name, $tree);
$org = $tree->getRoot();

$t->assign('org', $tree->getRoot());
$t->assign('org_id', $org_id);
$t->assign('page_name', cb_get_pagename());
$t->assign('ftree_async_page',
    'schedule/operation/json/facility_privilege_tree');

//get user page list num
require_once('grn/ui.csp');
$ucm = GRN_UIConfigManager::getInstance();
$login =& $uum->getLoginUser();
$uc =& $ucm->getUserConfig($login);
$number_on_page = $uc->getListMax();

if ($is_search) {
    $t->assign('is_search', true);
    $t->assign('is_search_facility', true);
    //--current positoin
    $navi_start_position = $utility->getNaviStartPosition();
    //--save to session
    $utility->setNaviStartPosition($navi_start_position);

    if ($org_id == -2) {
        $facility_list_all = $fsl->searchFacilitiesInfo($search_text);
        $facility_list = [];
        foreach ($facility_list_all as $f) {
            if ($priv->hasPrivilegeOfFacility($login,
                $fsl->getFacility($f['_id']))
            ) {
                $facility_list[] = $f;
            }
        }
        unset($facility_list_all);

        $facility_count = count($facility_list);
        $facility_list = array_slice($facility_list, $navi_start_position,
            $number_on_page);

        $fg_map = [];
        foreach ($facility_list as $i) {
            $tmp = $fsl->getFacilityAffiliationGroup($i['_id']);
            if ($tmp == false) {
                $fg_map[$i['_id']] = null;
            } else {
                $fg_map[$i['_id']] = $tmp->getOID();
            }
        }

        $groups = [];
        foreach ($fg_map as $f) {
            if ( ! is_null($f)) {
                $groups[$f] = $f;
            }
        }

        if (count($groups) > 0) {
            $ancestors = $fsl->getAncestors($groups);

            // 運用管理権限がない施設グループを取り除く
            $auth_fgroups = $priv->getFacilityGroupWithAuthority($login);
            $auth_fgroups_ids = [];
            foreach ($auth_fgroups as $auth_fgroup) {
                $auth_fgroups_ids[] = $auth_fgroup->getOID();
            }
            foreach (array_keys($ancestors) as $f_id) {
                $ancestor = &$ancestors[$f_id];
                $ancestor = array_reverse($ancestor);
                foreach ($ancestor as $id) {
                    if (array_search($id, $auth_fgroups_ids) !== false) {
                        break;
                    } else {
                        array_shift($ancestor);
                    }
                }
            }
            unset($ancestor);

            $all_facilities = [];
            foreach ($ancestors as $ancestor) {
                foreach ($ancestor as $i) {
                    $all_facilities[$i] = $i;
                }
            }
            $all_facilities_info = $fsl->getFacilityGroupsInfo($all_facilities);

            foreach ($facility_list as $key => $f) {
                $group_id = $fg_map[$f['_id']];
                $facility_list[$key]['ancestors'] = [];
                if (is_null($group_id)) {
                    continue;
                }
                foreach ($ancestors[$group_id] as $i) {
                    $facility_list[$key]['ancestors'][]
                        = $all_facilities_info[$i];
                }
            }
        }
        $navi_params = [
            'oid'         => $org_id,
            'search_text' => $search_text
        ];
        $navigation_info['navi_info']
            = $utility->makeNaviInformation($navi_start_position,
            $number_on_page, $facility_count, $navi_params);
        $navigation_info['navi_info']['page']
            = '/schedule/operation/facility_list';

        $t->assign('navi_info', $navigation_info['navi_info']);
        $t->assign('facility_list', $facility_list);
        $t->assign('search_text', $search_text);
    }
    if ($facility_group !== false) {
        $t->assign('org_name', $facility_group->get('name'));

        $facility_list
            = $fsl->searchFacilitiesInfoByFacilitygroupId($search_text,
            $facility_group->getOID());
        $facility_count = count($facility_list);
        $facility_list = array_slice($facility_list, $navi_start_position,
            $number_on_page);

        $navi_params = [
            'oid'         => $org_id,
            'search_text' => $search_text
        ];
        $navigation_info['navi_info']
            = $utility->makeNaviInformation($navi_start_position,
            $number_on_page, $facility_count, $navi_params);
        $navigation_info['navi_info']['page']
            = '/schedule/operation/facility_list';

        $t->assign('navi_info', $navigation_info['navi_info']);
        $t->assign('facility_list', $facility_list);
        $t->assign('search_text', $search_text);

        $ancestors = $fsl->getAncestors([$facility_group->getOID() => 1]);
        $ancestors = $ancestors[$facility_group->getOID()];

        if (count($ancestors) < GRN_SCHD_MAX_FACILITY_GROUP_TREE) {
            $t->assign('enable_facility_group_add', true);
        }

        if ($facility_count > 1) {
            $t->assign('enable_facility_order_menu', true);
        }

        $child_facility_group
            = $fsl->getFacilityGroupChildren($facility_group->getOID());
        if (count($child_facility_group) > 1) {
            $t->assign('enable_facility_group_order_menu', true);
        }

        $t->assign('enable_facility_group_detail', true);
    }
} elseif ($org_id == -2) // (全施設)を選択
{
    $t->assign('org_name', cb_msg('grn.schedule.system', 'all_facility'));
    $t->assign('enable_facility_group_detail', false);

    $facilityGroupBeanList
        = $priv->getPrivilegeFacilityGroupListBeanByTopLevel($login);
    $privilege_groups = [];
    foreach ($facilityGroupBeanList as $facilityGroupBean) {
        $privilege_groups[$facilityGroupBean->getId()]
            = $facilityGroupBean->getId();
    }

    //--current positoin
    $navi_start_position = $utility->getNaviStartPosition();
    //--save to session
    $utility->setNaviStartPosition($navi_start_position);

    $tmp_facility_list = $fsl->getOrderedFacilityInfoList(0, 0,
        $privilege_groups);
    $facility_list = array_slice($tmp_facility_list, $navi_start_position,
        $number_on_page);
    $facility_count = count($tmp_facility_list);

    $fg_map = [];
    foreach ($facility_list as $i) {
        $tmp = $fsl->getFacilityAffiliationGroup($i['_id']);
        if ($tmp == false) {
            $fg_map[$i['_id']] = null;
        } else {
            $fg_map[$i['_id']] = $tmp->getOID();
        }
    }

    $groups = [];
    foreach ($fg_map as $f) {
        if ( ! is_null($f)) {
            $groups[$f] = $f;
        }
    }

    if (count($groups) > 0) {
        $ancestors = $fsl->getAncestors($groups);
        $all_facilities = [];
        foreach ($ancestors as $ancestor) {
            foreach ($ancestor as $i) {
                $all_facilities[$i] = $i;
            }
        }
        $all_facilities_info = $fsl->getFacilityGroupsInfo($all_facilities);

        // 権限がある施設グループだけでツリーを作る
        $priv_facility_group = $priv->getFacilityGroupWithAuthorityEx($login);
        foreach ($facility_list as $key => $f) {
            $group_id = $fg_map[$f['_id']];
            $facility_list[$key]['ancestors'] = [];
            if (is_null($group_id)) {
                continue;
            }
            foreach (array_reverse($ancestors[$group_id]) as $i) {
                if ( ! array_key_exists($i, $priv_facility_group)) {
                    continue;
                }
                $facility_list[$key]['ancestors'][] = $all_facilities_info[$i];
            }
        }
    }

    $navi_params = ['oid' => $org_id];
    $navigation_info['navi_info']
        = $utility->makeNaviInformation($navi_start_position,
        $number_on_page, $facility_count, $navi_params);
    $navigation_info['navi_info']['page'] = '/schedule/operation/facility_list';

    $t->assign('navi_info', $navigation_info['navi_info']);
    $t->assign('facility_list', $facility_list);

} elseif ($facility_group) {
    $t->assign('org_name', $facility_group->get('name'));

    //--current positoin
    $navi_start_position = $utility->getNaviStartPosition();
    //--save to session
    $utility->setNaviStartPosition($navi_start_position);

    $facility_list = $fsl->getGroupFacilitiesInfo($facility_group->getOID(),
        $navi_start_position, $number_on_page);
    $facility_count = $fsl->getFacilitiesCount($facility_group->getOID());

    $navi_params = ['oid' => $org_id];
    $navigation_info['navi_info']
        = $utility->makeNaviInformation($navi_start_position,
        $number_on_page, $facility_count, $navi_params);
    $navigation_info['navi_info']['page'] = '/schedule/operation/facility_list';

    $t->assign('navi_info', $navigation_info['navi_info']);
    $t->assign('facility_list', $facility_list);

    $ancestors = $fsl->getAncestors([$facility_group->getOID() => 1]);
    $ancestors = $ancestors[$facility_group->getOID()];

    if (count($ancestors) < GRN_SCHD_MAX_FACILITY_GROUP_TREE) {
        $t->assign('enable_facility_group_add', true);
    }

    if ($facility_count > 1) {
        $t->assign('enable_facility_order_menu', true);
    }

    $child_facility_group
        = $fsl->getFacilityGroupChildren($facility_group->getOID());
    if (count($child_facility_group) > 1) {
        $t->assign('enable_facility_group_order_menu', true);
    }

    $t->assign('enable_facility_group_detail', true);
}

// page title
$page_title = grn_get_current_page_display_name();
$t->assign('page_title', $page_title);

// site position
$t->assign(
    'site_position', [
        [
            'page' => 'schedule/index',
            'name' => grn_get_page_display_name('schedule/schedule_index')
        ],
        ['page' => '', 'name' => $page_title, 'sf' => 1]
    ]
);

require_once('schedule/system_logic.csp');
$system_logic = GRN_Schedule_SystemLogic::getInstance();
$t->assign('allow_all_facilities', $system_logic->getAllowAllFacilities());


// Display Smarty Template
$doc_name = cb_get_pagename();
$t->display("{$doc_name}.tpl");


