<?php

use grn\schedule\FacilityApprovalLogic;
use grn\grn\Validate;

require_once('grn/smarty.csp');
$t = new GRN_Smarty;

require_once('schedule/application.csp');
$app_locator = GRN_Schedule_Application::getInstance();

global $G_INPUT;

// when parameter is null or wrong, default status is show all .
$approval_status_params = cb_at($G_INPUT, 'status',
    GRN_FACILITY_APPROVAL_LIST_SHOW_ALL);
if ( ! Validate::isNumber($approval_status_params)
     || ($approval_status_params < 0
         || $approval_status_params > 2)
) {
    $approval_status_params = GRN_FACILITY_APPROVAL_LIST_SHOW_ALL;
}

global $G_container_base;
$uum = $G_container_base->getInstance('uum');
$login = $uum->getLoginUser();
$login_id = $login->getOID();
if ( ! is_object($login) || ! is_a($login, 'CB_User')) {
    cb_throw_error(E_GRN_USER_NOT_FOUND);
}

// 運用管理
require_once('schedule/facility_privilege.csp');
$privilege_logic = GRN_Facility_Privilege_Logic::getInstance();
if ( ! $privilege_logic->hasPrivilege($login)) {
    cb_throw_error(E_GRN_SCHD_PRIVILEGE_ACCESS_DENY);
}

require_once('grn/ui.csp');
$ui_config_manager = GRN_UIConfigManager::getInstance();
$ui_config = $ui_config_manager->getUserConfig($login);

require_once('grn/controller.csp');
$controller_util = new GRN_ControllerUtil();

$offset = $controller_util->getNaviStartPosition();
$controller_util->setNaviStartPosition($offset);
$limit = $ui_config->getListMax();
$t->assign('name_width', $ui_config->getNameWidth());


//start get data
$events = [];
$event_for_view = [];
$event_user_ids = [];

require_once('schedule/facility_system_logic.csp');
$facility_system_logic = GRN_Facility_SystemLogic::getInstance();

$facility_approval_logic = new FacilityApprovalLogic();
$privilege_approval_facilities
    = $facility_approval_logic->getRequireApprovalFacilitiesByUser();

require_once('schedule/view_util.csp');
$util = GRN_Schedule_View_Util::getInstance();
$tsex = new CB_TimeStampEx();

require_once('schedule/eventfactory.csp');
$event_factory = GRN_Schedule_EventFactory::getInstance();

if (count($privilege_approval_facilities) > 0) {
    $events
        = $event_factory->getEventForApprovalList($privilege_approval_facilities,
        $tsex->unix_ts, $approval_status_params, $limit + 1, $offset);
}

$isExistsNextPage = count($events) > $limit;
if ($isExistsNextPage) {
    array_pop($events);
}

$schedule_line = cb_msg('grn.schedule', 'attendance_list_time_connection_line');

foreach ($events as $event) {
    $temp = [];
    $temp['id'] = $event['id'];
    $temp['type'] = $event['event_type'];
    $temp['creator'] = $event['creator'];
    $temp['creator_name'] = $event['creator_name'];
    $temp['using_purpose'] = $event['using_purpose'];
    $temp['facility_name'] = $event['facility_name'];
    $temp['facility'] = $event['facility'];
    $temp['facility_array']
        = [$event['facility'] => $event['facility']];
    $temp['approval_status'] = $event['approval_status'];
    $temp['approval_using'] = $event['approval_using'];
    $temp['result_approval_status'] = $event['result_approval_status'];
    $temp['applying_user'] = $event['applying_user'];
    $temp['applying_user_name'] = $event['applying_user_name'];

    $start_date = cb_date_format('DateShort_MD',
        $event['setdatetime']);
    $temp['time_schedule'] = $start_date;
    $temp['start_date'] = $start_date;

    $start_time = cb_date_format('TimeShort_HM',
        $event['setdatetime']);
    $temp['time_schedule'] .= ' ' . $start_time;
    $temp['start_time'] = $start_time;
    $temp['time_schedule'] .= $schedule_line;
    if (cb_date_format('DateShort_MD', $event['setdatetime'])
        != cb_date_format('DateShort_MD', $event['enddatetime'])
    ) {
        $end_date = cb_date_format('DateShort_MD',
            $event['enddatetime']);
        $temp['time_schedule'] .= $end_date . ' ';
        $temp['end_date'] = $end_date;
    }
    $end_time = cb_date_format('TimeShort_HM',
        $event['enddatetime']);
    $temp['time_schedule'] .= $end_time;
    $temp['end_time'] = $end_time;

    if ( ! Validate::isNull($event['applying_time'])) {
        $temp['applying_time'] = cb_date_format('DateShort_MD',
                $event['applying_time']) . " " . cb_date_format('TimeShort_HM',
                $event['applying_time']);
    } else {
        $temp['applying_time'] = null;
    }

    if ( ! Validate::isNull($temp['facility'])) {
        $temp_facility_info
            = $facility_system_logic->getFacilityInfo($temp['facility']);
        if (is_array($temp_facility_info)
            && array_key_exists('col_name', $temp_facility_info)
        ) {
            $temp['facility_name'] = $temp_facility_info['col_name'];
        }
    }
    $event_for_view[] = $temp;

    $event_user_ids[] = $event['creator'];
    $event_user_ids[] = $event['applying_user'];
}

$users_info = GRN_ControllerUtil::getUserInfoToShowUserName($event_user_ids,
    $login);
$t->assign('user_info', $users_info);
$t->assign('login_id', $login_id);
$t->assign('login_name', $login->get('display_name'));

$t->assign('data_for_view', $event_for_view);
// get data end

$view_set = $controller_util->makeSimpleNaviInformation(
    $offset,
    $limit,
    count($event_for_view),
    $isExistsNextPage,
    ["status" => $approval_status_params]
);

$t->assign('view_set', $view_set);

$page_title = grn_get_current_page_display_name();
$t->assign('page_title', $page_title);
$t->assign('site_position', [
        ['page' => 'schedule/index', 'name' => $app_locator->getDefaultName()],
        ['page' => '', 'name' => $page_title]
    ]
);


$t->display(cb_get_pagename() . '.tpl');
