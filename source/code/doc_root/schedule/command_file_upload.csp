<?php
//GTM-1136

if (strcasecmp(@ $_SERVER['REQUEST_METHOD'], 'POST') == 0) {
    global $G_INPUT;

    require_once("grn/smarty.csp");
    $t = new GRN_Smarty;

    require_once('schedule/error_code.csp');

    require_once('schedule/system_logic.csp');
    $systemlogic = GRN_Schedule_SystemLogic::getInstance();
    if ($systemlogic->getAllowFileAttachment() != '1') {
        cb_throw_error(E_GRN_SCHD_DEACTIVATED_FILE);
    }

    $target_name = 'schedule/file_upload';

    require_once('SmartyValidate.class.php');
    SmartyValidate::connect($t);
    SmartyValidate::register_form($target_name);

    $event_id = cb_at($G_INPUT, 'event');
    if ( ! $event_id) {
        cb_throw_error(E_GRN_SCHD_NOTFOUND_EVENT);
    }

    require_once('schedule/application.csp');
    $app = GRN_Schedule_Application::getInstance();
    $login = cb_get_login_user();
    if ( ! ($event = $app->getEvent($login, $event_id))) {
        cb_throw_error(E_GRN_SCHD_NOTFOUND_EVENT);
    }

    require_once('schedule/access_logic.csp');
    $acc_logic = GRN_Schedule_Access_Logic::getInstance();

    global $G_container_base;
    $uum = $G_container_base->getInstance('uum');
    $dynamic_roles = $uum->listGrantedRoles();

    $access = $acc_logic->getEventAccess($login, $event, ['read', 'modify'],
        $dynamic_roles);
    if ($access['read'] == GRN_SCHD_ACCESS_DENY) {
        cb_throw_error(E_GRN_SCHD_ACCESSDENY_FILE_VIEW);
    }
    if ($access['modify'] == GRN_SCHD_ACCESS_DENY) {
        cb_throw_error(E_GRN_SCHD_ACCESSDENY_FILE_MODIFY);
    }

    $t->assign('event_id', $event_id);

    $file_id = cb_at($G_INPUT, 'fid');
    if ( ! $file_id) {
        cb_throw_error(E_GRN_SCHD_NOTFOUND_FILE);
    }

    require_once('schedule/file.csp');
    $fm = GRN_Schedule_FileManager::getInstance();
    if ( ! ($file = $fm->getFile($event_id, $file_id))) {
        cb_throw_error(E_GRN_SCHD_NOTFOUND_FILE);
    }

    $t->assign('file_id', $file_id);

    $upload_pathinfo = [
        "schedule/index"     => ['event' => $event_id],
        "schedule/view"      => ['event' => $event_id],
        "schedule/file_view" => [
            'event' => $event_id,
            'fid'   => $file_id
        ],
    ];

    if (isset($G_INPUT['cancel'])) {
        $args = [];
        $args['event'] = $event_id;
        $args['fid'] = $file_id;
        $upload_pathinfo_keys = array_keys($upload_pathinfo);
        $file_view = array_pop($upload_pathinfo_keys);

        cb_redirect($file_view, $args);
    }

    require_once('grn/upload.csp');
    $files = GRN_UploadFile::getUploadedFiles(cb_at($G_INPUT, 'upload_ticket'),
        cb_at($G_INPUT, 'upload_fileids'), true);

    if (is_array($files) && count($files) == 1) {
        $uploaded_file = array_pop($files);

        $file->update($login, $uploaded_file, cb_at($G_INPUT, 'comment'));

        $args = [];
        $args['event'] = $event_id;
        $args['fid'] = $file_id;
        $upload_pathinfo_keys = array_keys($upload_pathinfo);
        $file_view = array_pop($upload_pathinfo_keys);

        cb_redirect($file_view, $args);
    } else {
        $t->assign('err_no_file', true);
        $t->setPageInfo($target_name);

        $t->assign('comment', cb_at($G_INPUT, 'comment'));

        $linkparams = [];
        $linkparams['event'] = $event_id;
        $linkparams['fid'] = $file_id;

        $t->assign('linkparams', $linkparams);

        require_once('schedule/controller.csp');
        $utility = new GRN_Schedule_ControllerUtil($target_name);
        $file_for_view = $utility->getFileView($file);
        $t->assign('file', $file_for_view);

        $page_title = grn_get_current_page_display_name();
        $t->assign('page_title', $page_title);

        $t->assign(
            'site_position', [
                [
                    'page' => 'schedule/index',
                    'name' => grn_get_page_display_name('schedule/schedule_index')
                ],
                [
                    'page'  => "schedule/view",
                    'name'  => grn_get_page_display_name('schedule/view'),
                    'event' => $event_id
                ],
                [
                    'page'  => "schedule/file_view",
                    'name'  => grn_get_page_display_name('schedule/file_view'),
                    'event' => $event_id,
                    'fid'   => $file_id
                ],
                ['page' => '', 'name' => $page_title]
            ]
        );

        //generate upload ticket
        include('grn/_upload_prepend.csp');
        $t->assign('upload_ticket', cb_at($G_INPUT, 'upload_ticket'));

        $t->display("{$target_name}.tpl");
    }
}
