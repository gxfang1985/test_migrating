<?php

//------------------

$user_id = @ $G_INPUT['uid'];
$group_id = @ $G_INPUT['gid'];
$str_date = @ $G_INPUT['bdate'];
$event_id = @ $G_INPUT['event'];

require_once('schedule/application.csp');
$app = GRN_Schedule_Application::getInstance();
require_once('schedule/view_util.csp');
$util = GRN_Schedule_View_Util::getInstance();

global $G_container_base;
$uum = $G_container_base->getInstance('uum');

$login = $uum->getLoginUser();
$login_id = $login->getOID();

$date = new CB_Date();
if ( ! $date->parse($str_date)) {
    $date = null;
}

$event = $app->getEvent($login, $event_id, $date);
if ( ! $event) {
    cb_throw_error(E_GRN_SCHD_NOTFOUND_EVENT);
}

// アクセス権のチェック
require_once('schedule/access_logic.csp');
$acc_logic = GRN_Schedule_Access_Logic::getInstance();
$dynamic_role = $uum->listGrantedRoles();
$access = $acc_logic->getEventAccess($login, $event, ['read', 'modify'],
    $dynamic_role);
if ($access['read'] == GRN_SCHD_ACCESS_DENY) {
    cb_throw_error(E_GRN_SCHD_ACCESSDENY_EVENT);
}
if ($access['modify'] == GRN_SCHD_ACCESS_DENY) {
    cb_throw_error(E_GRN_SCHD_ACCESSDENY_MODIFY);
}

// check participate
$is_participate = false;
if (is_array($event->users) && array_key_exists($login_id, $event->users)) {
    $is_participate = true;
}

require_once('schedule/facility_system_logic.csp');
$facility_logic = GRN_Facility_SystemLogic::getInstance();
if (is_array($event->facilities) && count($event->facilities) > 0) {
    $f_settings
        = $facility_logic->getFacilitySetting(array_keys($event->facilities));
    foreach (array_keys($event->facilities) as $key) {
        $object = &$event->facilities[$key];
        $faid = $object->getOID();
        $modify_user = $facility_logic->getModifyUserByPriority($f_settings,
            $faid);
        // 登録者にのみ変更を許可する
        if ($modify_user === 'creator') {
            // 施設で登録者しか変更を許していない場合
            if (is_array($event->facilities) && count($event->facilities) > 0) {
                require_once('schedule/facility_privilege.csp');
                $privilege_logic = GRN_Facility_Privilege_Logic::getInstance();
                if ( ! $privilege_logic->hasPrivilegeOfFacilities($login,
                        $event->facilities, 'OR')
                     && ((is_a($event->creator, 'CB_User')
                          && $login_id != $event->creator->getOID())
                         || is_string($event->creator))
                ) {
                    cb_throw_error(E_GRN_FCLT_DENY_MODIFY);
                }
            }
        } // 登録者と共有メンバーに変更を許可する
        elseif ($modify_user === 'member') {
            // 施設で登録者しか変更を許していない場合
            if (is_array($event->facilities) && count($event->facilities) > 0) {
                require_once('schedule/facility_privilege.csp');
                $privilege_logic = GRN_Facility_Privilege_Logic::getInstance();
                // Login user is not a member
                if (( ! $is_participate || is_null($event->users))
                    && ((is_a($event->creator, 'CB_User')
                         && $login_id !== $event->creator->getOID())
                        || is_string($event->creator))
                    && ! $privilege_logic->hasPrivilegeOfFacilities($login,
                        $event->facilities, 'OR')
                ) {
                    cb_throw_error(E_GRN_FCLT_DENY_MODIFY);
                }
            }
        }
    }
}

$participation = false;
if (is_array($event->users) && count($event->users) > 0) {
    foreach (array_keys($event->users) as $key) {
        $_user = &$event->users[$key];
        if ($_user->getOID() == $login_id) {
            $participation = $login_id;
            break;
        }
    }
}

// 既に参加している
if ($participation !== false) {
    cb_throw_error(E_GRN_SCHD_ALREADY_PARTICIPATE);
}

$apply = @ $G_INPUT['apply'];

/* -------------- VCBSCH0010 START ----------------- */
require_once('schedule/netmeeting_event_logic.csp');
$vcb_event_logic = GRN_Netmeeting_EventLogic::getInstance();

// NETMEETING連携あり
if ($vcb_event_logic->isNetmeetingAvailable($event)) {
    // 選択されている施設がある場合
    $vcb_facility = $vcb_event_logic->getNetmeetingFacilityById($event);
    if (isset($vcb_facility)) {
        // 連携データ取得
        $coop_data
            = $vcb_event_logic->getNetmeetingCoopDataByEventId($event_id);

        // 連携データあり
        if (isset($coop_data)) {
            // 連携が正常終了している場合
            if ($coop_data->cooperation_status
                == GRN_NETMEETING_COOPERATION_STATUS_COMPLETE
            ) {
                // 時間のチェック
                $event_status
                    = $vcb_event_logic->getEventStatus($event->setdatetime,
                    $event->enddatetime);

                if ($event_status !== GRN_NETMEETING_MEETING_STATUS_END) {
                    $t->assign('netmeeting', true);
                }
            }
        }
    }
}
/* -------------- VCBSCH0010 END   ----------------- */

$t->assign(
    'schedule_event', [
        'event_id' => $event->id,
        //予定のID
        'type'     => $util->getViewEventType($event->getEventType(),
            $event->isShared()),
        //予定の種類
        'date'     => $date->format(),
        //予定の日付
        'str_date' => cb_date_format('DateFull_YMDW', $date),
        //予定の日付
        'data'     => html_entity_decode($event->getTitle()),
        //予定のタイトル
    ]
);


$t->assign('user_id', $user_id);
$t->assign('group_id', $group_id);
$t->assign('bdate', $date);

$referer_key = array_key_exists('referer_key', $G_INPUT)
    ? $G_INPUT['referer_key'] : null;
$referer_exists = false;
if ($referer_key) {
    require_once('fw/session_manager.csp');
    $session_manager = CB_SessionManager::getInstance();
    $session = $session_manager->getSession('schedule.referer');
    $referer = $session->get($referer_key);
    if (is_array($referer)) {
        // page title
        $page_title = grn_get_current_page_display_name();
        $t->assign('page_title', $page_title);
        // site position 
        $t->assign(
            'site_position', [
                $referer,
                [
                    'page'        => "schedule/view",
                    'name'        => grn_get_page_display_name('schedule/view'),
                    'event'       => $event_id,
                    'bdate'       => $str_date,
                    'referer_key' => $referer_key
                ],
                ['page' => "", 'name' => $page_title]
            ]
        );
        $referer_exists = true;
    }
}

if ($referer_exists === false) {
    // page title
    $page_title = grn_get_current_page_display_name();
    $t->assign('page_title', $page_title);
    // site position 
    $t->assign(
        'site_position', [
            [
                'page' => 'schedule/index',
                'name' => grn_get_page_display_name('schedule/schedule_index')
            ],
            [
                'page'  => 'schedule/view',
                'name'  => grn_get_page_display_name('schedule/view'),
                'bdate' => $str_date,
                'event' => $event_id,
                'uid'   => $user_id,
                'gid'   => $group_id
            ],
            ['page' => '', 'name' => $page_title]
        ]
    );
}

$t->assign('referer_key', $referer_key);


