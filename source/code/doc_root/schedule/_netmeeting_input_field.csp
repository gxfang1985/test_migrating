<?php
/**
 * @updated:
 *    2011/06/08 VCBSCH0010 Sync for V-CUBE
 */
require_once('schedule/netmeeting_system_logic.csp');
$vcb_system_logic = GRN_Netmeeting_SystemLogic::getInstance();

require_once('schedule/netmeeting_event_logic.csp');
$vcb_event_logic = GRN_Netmeeting_EventLogic::getInstance();

// NETMEETING連携あり
if ($vcb_system_logic->isNetmeetingAvailable()) {
    // 全NETMEETING施設取得
    $vcb_available_facilities
        = $vcb_system_logic->getNetmeetingAvailableFacilityData();
    if (isset($vcb_available_facilities)) {
        $netmeeting_data = null;
        $netmeeting_data['available_facilities']
            = array_keys($vcb_available_facilities);

        // 選択されている施設がある場合
        $vcb_facility = null;
        if (array_key_exists('facilities', $schedule_event)) {
            // NETMEETING施設かチェック
            foreach (array_keys($schedule_event['facilities']) as $vcb_key) {
                if (array_key_exists($vcb_key, $vcb_available_facilities)) {
                    if ($vcb_available_facilities[$vcb_key]->get(GRN_FACILITY_NETMEETING_AVAILABLE)
                        == '1'
                    ) {
                        // V-CUBE欄表示あり
                        $netmeeting_data['netmeeting_field_dsp'] = true;
                        $vcb_facility
                            = $vcb_available_facilities[$vcb_key];
                        break;
                    }
                }
            }
        }

        $event_status = null;
        if (isset($event_id) && strlen($event_id) > 0) {
            // 連携データ取得
            $coop_data
                = $vcb_event_logic->getNetmeetingCoopDataByEventId($event_id);

            // 変更画面の場合
            if (strcmp(cb_get_pagename(), 'schedule/modify') == 0) {
                // 時間のチェック
                $event_status
                    = $vcb_event_logic->getEventStatus($event->setdatetime,
                    $event->enddatetime);

                // 連携データあり
                if (isset($coop_data)) {
                    // 未開催予定の場合
                    if ($event_status === GRN_NETMEETING_MEETING_STATUS_WAIT) {
                        // パスワード表示
                        $schedule_event['netmeeting_password_dsp'] = true;
                    } // 開催中予定の場合
                    elseif ($event_status
                            === GRN_NETMEETING_MEETING_STATUS_NOW
                    ) {
                        // 選択されている施設がある場合
                        if ($vcb_event_logic->getNetmeetingFacilityById($event)) {
                            // 連携が正常終了している場合
                            if ($coop_data->cooperation_status
                                == GRN_NETMEETING_COOPERATION_STATUS_COMPLETE
                            ) {
                                // 予約変更時のメッセージ表示
                                $schedule_event['netmeeting_update_msg_now']
                                    = true;
                            } else {
                                // 予約変更不可時のメッセージ表示
                                $schedule_event['netmeeting_notupdate_msg_now']
                                    = true;
                                $event_status
                                    = GRN_NETMEETING_MEETING_STATUS_END;
                            }
                        }
                    } // 終了予定の場合
                    elseif ($event_status
                            === GRN_NETMEETING_MEETING_STATUS_END
                    ) {
                        // 選択されている施設がある場合
                        if ($vcb_event_logic->getNetmeetingFacilityById($event)) {
                            // 予約変更不可時のメッセージ表示
                            $schedule_event['netmeeting_notupdate_msg_end']
                                = true;
                        }
                    }
                } else {
                    $event_status = GRN_NETMEETING_MEETING_STATUS_WAIT;
                    // パスワード表示
                    $schedule_event['netmeeting_password_dsp'] = true;
                }
            }
        }
        // 予定の変更以外
        if ( ! isset($event_status)) {
            $event_status = GRN_NETMEETING_MEETING_STATUS_WAIT;
            // パスワード表示
            $schedule_event['netmeeting_password_dsp'] = true;
        }

        // 終了予定以外
        if ($event_status !== GRN_NETMEETING_MEETING_STATUS_END) {
            if (isset($coop_data)) {
                // パスワードあり
                if (strlen($coop_data->password) > 0) {
                    if (strcmp(cb_get_pagename(), 'schedule/modify') == 0) {
                        $netmeeting_data['password_mod'] = true;
                    } else {
                        $netmeeting_data['password_add'] = true;
                    }
                }
            }

            // 外部ユーザー入力欄表示行数取得
            $vcb_outside_rows
                = $vcb_system_logic->getNetmeetingOutsideMemberInputRows();
            if ($vcb_outside_rows !== false && $vcb_outside_rows > 0) {
                $netmeeting_data['outside_rows'] = $vcb_outside_rows;
                $netmeeting_data['outside_pass_len']
                    = GRN_NETMEETING_API_PASSWORD_LIMIT;
                $netmeeting_data['outside_name_len']
                    = GRN_NETMEETING_API_USER_NAME_LIMIT;
                $netmeeting_data['outside_mail_len']
                    = GRN_NETMEETING_API_USER_MAIL_LIMIT;

                // 初期値
                $vcb_def_tmzn = '';
                $vcb_def_lang = '';

                // ロケール取得
                require_once('fw/i18n.csp');
                $vcb_i18n = CB_I18N::getInstance();
                $vcb_locale = $vcb_i18n->getCurrentLanguage();
                unset($vcb_i18n);

                // タイムゾーンリスト取得
                $vcb_tmzn_options = null;
                if (($vcb_tmzn_list
                        = $vcb_system_logic->getNetmeetingTimezoneList())
                    !== false
                ) {
                    if (array_key_exists('',
                        $vcb_tmzn_list)
                    )   // リストの先頭選択肢を「予約者と同じ」に変換する
                    {
                        $defult_tmzn_name = cb_msg('grn.schedule.netmeeting',
                            'netmeeting_defult_tmzn');
                        $vcb_tmzn_list[''] = $defult_tmzn_name;
                    }
                    $netmeeting_data['netmeeting_tmzn_dsp'] = true;

                    $vcb_tmzn_options = [];
                    foreach (array_keys($vcb_tmzn_list) as $vcb_tmzn) {
                        $vcb_tmzn_options[$vcb_tmzn] = [
                            'value' => $vcb_tmzn,
                            'label' => $vcb_tmzn_list[$vcb_tmzn]
                        ];
                    }
                }
                // 言語リスト取得
                $vcb_lang_options = null;
                if (($vcb_lang_list
                        = $vcb_system_logic->getNetmeetingLanguageList($vcb_locale))
                    !== false
                ) {
                    if (array_key_exists('',
                        $vcb_lang_list)
                    )   // リストの先頭選択肢を「予約者と同じ」に変換する
                    {
                        $defult_lang_name = cb_msg('grn.schedule.netmeeting',
                            'netmeeting_defult_lang');
                        $vcb_lang_list[''] = $defult_lang_name;
                    }
                    $netmeeting_data['netmeeting_lang_dsp'] = true;

                    $vcb_lang_options = [];
                    foreach (array_keys($vcb_lang_list) as $vcb_lang) {
                        $vcb_lang_options[$vcb_lang] = [
                            'value' => $vcb_lang,
                            'label' => $vcb_lang_list[$vcb_lang]
                        ];
                    }
                }

                $vcb_outside_members = [];
                if (isset($coop_data)) {
                    // 外部ユーザーセット
                    if (is_array($coop_data->outside_members)
                        && count($coop_data->outside_members)
                    ) {
                        $vcb_outside_members = $coop_data->outside_members;
                    }
                }

                // 画面表示用変数にセット
                $vcb_outside_items = [];
                if (count($vcb_outside_members) > 0) {
                    $vcb_outside_members = array_slice($vcb_outside_members, 0,
                        $vcb_outside_rows);
                    foreach (array_keys($vcb_outside_members) as $vcb_key) {
                        $vcb_outside = $vcb_outside_members[$vcb_key];

                        $vcb_lang = null;
                        if (is_array($vcb_lang_options)) {
                            $vcb_lang = $vcb_lang_options;
                            if (array_key_exists($vcb_outside['user_lang'],
                                $vcb_lang)
                            ) {
                                $vcb_lang[$vcb_outside['user_lang']]['selected']
                                    = true;
                            }
                        }

                        $vcb_tmzn = null;
                        if (is_array($vcb_tmzn_options)) {
                            $vcb_tmzn = $vcb_tmzn_options;
                            if (array_key_exists($vcb_outside['user_timezone'],
                                $vcb_tmzn)
                            ) {
                                $vcb_tmzn[$vcb_outside['user_timezone']]['selected']
                                    = true;
                            }
                        }

                        $vcb_outside_items[] = [
                            'name'         => $vcb_outside['user_name'],
                            'email'        => $vcb_outside['user_email'],
                            'lang'         => $vcb_outside['user_lang'],
                            'tmzn'         => $vcb_outside['user_timezone'],
                            'type'         => $vcb_outside['user_type'],
                            'lang_options' => $vcb_lang,
                            'tmzn_options' => $vcb_tmzn,
                        ];
                    }
                }

                // 空欄の行をセット
                if (($vcb_outside_def_rows = ($vcb_outside_rows
                                              - count($vcb_outside_items))) > 0
                ) {
                    $vcb_lang = null;
                    if (is_array($vcb_lang_options)) {
                        $vcb_lang = $vcb_lang_options;
                        if (array_key_exists($vcb_def_lang, $vcb_lang)) {
                            $vcb_lang[$vcb_def_lang]['selected'] = true;
                        }
                    }

                    $vcb_tmzn = null;
                    if (is_array($vcb_tmzn_options)) {
                        $vcb_tmzn = $vcb_tmzn_options;
                        if (array_key_exists($vcb_def_tmzn, $vcb_tmzn)) {
                            $vcb_tmzn[$vcb_def_tmzn]['selected'] = true;
                        }
                    }

                    for ($i = 0; $i < $vcb_outside_def_rows; $i++) {
                        $vcb_outside_items[] = [
                            'name'         => '',
                            'email'        => '',
                            'lang'         => $vcb_def_lang,
                            'tmzn'         => $vcb_def_tmzn,
                            'type'         => '',
                            'lang_options' => $vcb_lang,
                            'tmzn_options' => $vcb_tmzn,
                        ];
                    }
                }
                $netmeeting_data['outside_items'] = $vcb_outside_items;
            }

            $schedule_event['netmeeting'] = $netmeeting_data;
        }


        $before_delete_adjust = [
            'title'         => grn_get_page_display_name('schedule/adjust_search'),
            'page'          => 'schedule/unadjust_search.tpl',
            'no_confirm'    => 'custom',
            'handler'       => 'link-adjust-schedule',
            'handler2'      => 'link2-adjust-schedule',
            'before_delete' => 'netmeeting_check_facility',
        ];
        $t->assign('before_delete_adjust', $before_delete_adjust);

    }
}

