<?php

global $G_INPUT;

// ログインユーザを取得
if ( ! isset($login)) {
    global $G_container_base;
    $uum = $G_container_base->getInstance('uum');
    $login = $uum->getLoginUser();
}

// 今日の日付を取得
require_once('fw/date.csp');
$tsex = new CB_TimeStampEx();
$today = $tsex->getDate();

$view_date = null;
if (array_key_exists('vwdate', $G_INPUT)) {
    $view_date = new CB_Date();
    if ( ! $view_date->parse($G_INPUT['vwdate'])) {
        $view_date = null;
    }
}
if (is_null($view_date)) {
    if (array_key_exists('bdate', $G_INPUT)) {
        $view_date = new CB_Date();
        if ( ! $view_date->parse($G_INPUT['bdate'])) {
            $view_date->year = $today->year;
            $view_date->month = $today->month;
            $view_date->day = $today->day;
        }
    } else {
        $view_date = new CB_Date();
        $view_date->year = $today->year;
        $view_date->month = $today->month;
        $view_date->day = $today->day;
    }
}
if ( ! is_null($view_date)) {
    $t->assign('view_date', $view_date->format());
}

// 指定された日付を取得
if (array_key_exists('cndate', $G_INPUT)) {
    $str_calendar_date = $G_INPUT['cndate'];
} else {
    $str_calendar_date = @ $G_INPUT['bdate'];
}

$calendar_date = new CB_Date();
if ( ! $calendar_date->parse($str_calendar_date)) {
    $calendar_date->year = $today->year;
    $calendar_date->month = $today->month;
    $calendar_date->day = $today->day;
}

require_once('schedule/view_util.csp');
$util = GRN_Schedule_View_Util::getInstance();

// カレンダー上の開始日と終了日を取得
$start_date = getCalendarStartDate($calendar_date);
$end_date = getCalendarEndDate($calendar_date);

// 日付配列の生成
$dateex = new CB_DateEx($start_date);
$dateex->month = 1;
$dateex->day = 1;
$month_count = [];
for ($i = 1; $i <= 12; ++$i) {
    $info = [
        'date'  => $dateex->format(),
        'month' => $dateex->month
    ];
    if ($dateex->year === $view_date->year
        && $dateex->month === $view_date->month
    ) {
        $info['disable'] = true;
    }
    $month_count[] = $info;
    $dateex->moveMonths(1);
}
$t->assign('month_count', $month_count);

// 前月・翌月を取得
$prev_year = $util->getPrevYearDate($calendar_date);
$next_year = $util->getNextYearDate($calendar_date);

$t->assign('calendar_prev_year', $prev_year->format());
$t->assign('calendar_next_year', $next_year->format());

$year_list = [];
$ym = new CB_DateEx($calendar_date);
$ym->moveYears(-1);
for ($i = 0; $i < 5; $i++) {
    $ym->day = 1;
    $year_list[] = $ym->format();
    $ym->moveYears(1);
}
$t->assign('calendar_year_list', $year_list);

/**
 * カレンダーの最初の日付を求める
 *
 * @param  CB_Date $date　求める日付
 *
 * @return CB_DateEx カレンダーの最初の日付
 */
function getCalendarStartDate($date)
{
    $dateex = new CB_DateEx($date);
    $dateex->day = 1;

    return $dateex;
}

/**
 * カレンダーの最終の日付を求める
 *
 * @param  CB_Date $date　求める日付
 *
 * @return CB_DateEx カレンダーの最終の日付
 */
function getCalendarEndDate($date)
{
    $dateex = new CB_DateEx($date);
    $dateex->day = $dateex->getEndOfMonthDay();

    return $dateex;
}


