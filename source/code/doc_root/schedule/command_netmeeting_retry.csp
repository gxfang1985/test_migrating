<?php
/**
 * @updated:
 *    2011/06/08 VCBSCH0010 Sync for V-CUBE
 */

$event_id = array_key_exists('event', $G_INPUT) ? $G_INPUT['event'] : null;
$user_id = array_key_exists('uid', $G_INPUT) ? $G_INPUT['uid'] : null;
$group_id = array_key_exists('gid', $G_INPUT) ? $G_INPUT['gid'] : null;
$str_date = array_key_exists('date', $G_INPUT) ? $G_INPUT['date'] : null;
$referer_key = array_key_exists('referer_key', $G_INPUT)
    ? $G_INPUT['referer_key'] : null;
$date = new CB_Date();
if ( ! $date->parse($str_date)) {
    $date = null;
}

if (strcasecmp(@ $_SERVER['REQUEST_METHOD'], 'POST') == 0) {
    // イベントの取得
    require_once('fw/string_util.csp');
    require_once('schedule/application.csp');
    $app = GRN_Schedule_Application::getInstance();

    /*
        // --------
        // brabrabra after success
        // --------
        $follow = array_key_exists( 'data', $G_INPUT ) ? $G_INPUT['data'] : '';
        if( mb_strlen( cb_trim( $follow ) ) == 0 )
        {
            cb_throw_error( E_GRN_SCHD_NOTINPUT_EVENTFOLLOW );
        }
    */

    global $G_container_base;
    $uum = $G_container_base->getInstance('uum');

    $login = $uum->getLoginUser();

    $event = $app->getEvent($login, $event_id, $date);
    if ( ! $event) {
        cb_throw_error(E_GRN_SCHD_NOTFOUND_EVENT);
    }

    // アクセス権のチェック
    require_once('schedule/access_logic.csp');
    $acc_logic = GRN_Schedule_Access_Logic::getInstance();
    $dynamic_role = $uum->listGrantedRoles();
    $access = $acc_logic->getEventAccess($login, $event,
        ['read', 'add', 'modify', 'delete'], $dynamic_role);

    if ($access['read'] == GRN_SCHD_ACCESS_DENY) {
        cb_throw_error(E_GRN_SCHD_ACCESSDENY_EVENT);
    }

    /*
        if( $access['add'] == GRN_SCHD_ACCESS_DENY &&
            $access['modify'] == GRN_SCHD_ACCESS_DENY &&
            $access['delete'] == GRN_SCHD_ACCESS_DENY )
        {
            cb_throw_error( E_GRN_SCHD_DENYENTRY_EVENTFOLLOW );
        }

        $event_id = $app->writeFollow( $login, $follow, $event_id, $date );
    */

    require_once('schedule/netmeeting_event_logic.csp');
    $vcb_event_logic = GRN_Netmeeting_EventLogic::getInstance();

    $vcb_input_data = null;
    $coop_data = null;

    // NETMEETING連携あり
    if ($vcb_event_logic->isNetmeetingAvailable($event)) {
        // 連携データ取得
        $coop_data
            = $vcb_event_logic->getNetmeetingCoopDataByEventId($event_id);

        // 時間のチェック
        $event_status = $vcb_event_logic->getEventStatus($event->setdatetime,
            $event->enddatetime);

        // 終了予定以外の場合
        if ($event_status !== GRN_NETMEETING_MEETING_STATUS_END) {
            // NETMEETING入力値取得
            if (($vcb_input_data
                = $vcb_event_logic->getNetmeetingEventParam($event, $login))
            ) {
                // 連携データあり
                if (isset($coop_data)) {
                    if (isset($coop_data->password)
                        && strlen($coop_data->password) > 0
                    ) {
                        $vcb_input_data->password_set = '1';
                        $vcb_input_data->password = $coop_data->password;
                        $vcb_input_data->retype = $coop_data->password;
                    }
                    $vcb_input_data->outside_members
                        = $coop_data->outside_members;
                }

                // 入力チェック
                if ($vcb_event_logic->checkNetmeetingInput($vcb_input_data)
                    === false
                ) {
                    $vcb_event_logic->throwError();
                }
            }
        }
    }

    // 入力値あり
    if (isset($vcb_input_data)) {
        // 連携データあり
        if (isset($coop_data)) {
            // 予約削除
            $vcb_event_logic->cmmandNetmeetingReservationDelete($event->id);
        }
        // 予約追加
        $status = $vcb_event_logic->cmmandNetmeetingReservationAdd($event->id,
            $vcb_input_data);
        if ($status != GRN_NETMEETING_COOPERATION_STATUS_COMPLETE) {
            // エラーメッセージ表示
            cb_throw_error(E_GRN_NETMEETING_RESERVE_RETRY_ERROR);
        }
    }
}
cb_redirect('schedule/view', [
    'bdate'       => $date->format(),
    'event'       => $event_id,
    'uid'         => $user_id,
    'gid'         => $group_id,
    'referer_key' => $referer_key
]);


