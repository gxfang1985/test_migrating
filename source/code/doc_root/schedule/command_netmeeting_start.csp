<?php
/**
 * @updated:
 *    2011/06/08 VCBSCH0010 Sync for V-CUBE
 */

$event_id = array_key_exists('event', $G_INPUT) ? $G_INPUT['event'] : null;
$user_id = array_key_exists('uid', $G_INPUT) ? $G_INPUT['uid'] : null;
$group_id = array_key_exists('gid', $G_INPUT) ? $G_INPUT['gid'] : null;
$str_date = array_key_exists('date', $G_INPUT) ? $G_INPUT['date'] : null;
$referer_key = array_key_exists('referer_key', $G_INPUT)
    ? $G_INPUT['referer_key'] : null;
$date = new CB_Date();
if ( ! $date->parse($str_date)) {
    $date = null;
}
$room_id = null;
$reservation_id = null;
if (strcasecmp(@ $_SERVER['REQUEST_METHOD'], 'POST') == 0) {
    // イベントの取得
    require_once('fw/string_util.csp');
    require_once('schedule/application.csp');
    $app = GRN_Schedule_Application::getInstance();


    global $G_container_base;
    $uum = $G_container_base->getInstance('uum');

    $login = $uum->getLoginUser();

    $event = $app->getEvent($login, $event_id, $date);
    if ( ! $event) {
        cb_throw_error(E_GRN_SCHD_NOTFOUND_EVENT);
    }

    // アクセス権のチェック
    require_once('schedule/access_logic.csp');
    $acc_logic = GRN_Schedule_Access_Logic::getInstance();
    $dynamic_role = $uum->listGrantedRoles();
    $access = $acc_logic->getEventAccess($login, $event,
        ['read', 'add', 'modify', 'delete'], $dynamic_role);

    if ($access['read'] == GRN_SCHD_ACCESS_DENY) {
        cb_throw_error(E_GRN_SCHD_ACCESSDENY_EVENT);
    }

    require_once('schedule/netmeeting_event_logic.csp');
    $vcb_event_logic = GRN_Netmeeting_EventLogic::getInstance();

    $vcb_input_data = null;
    $coop_data = null;

    // NETMEETING連携あり
    if ($vcb_event_logic->isNetmeetingAvailable($event)) {
        $event_status = $vcb_event_logic->getEventStatus($event->setdatetime,
            $event->enddatetime);
        // 終了予定以外の場合
        if ($event_status == GRN_NETMEETING_MEETING_STATUS_NOW) {
            // 連携データ取得
            $coop_data
                = $vcb_event_logic->getNetmeetingCoopDataByEventId($event_id);
            if (isset($coop_data) && ! is_null($coop_data->reservation_id)) {
                require_once('schedule/netmeeting_sync_logic.csp');
                $syn_logic = GRN_Netmeeting_SyncLogic::getInstance();
                $url
                    = $syn_logic->netmeeting_start_url($coop_data->reservation_id,
                    $coop_data->old_password);
                if ($url) {
                    header("Location: $url");
                    exit;
                }
            }
        }

    }

}
cb_redirect('schedule/view', [
    'bdate'                  => $date->format(),
    'event'                  => $event_id,
    'uid'                    => $user_id,
    'gid'                    => $group_id,
    'referer_key'            => $referer_key,
    'isNetMeetingStartError' => 1
]);


