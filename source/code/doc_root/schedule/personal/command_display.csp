<?php

if (strcasecmp(@ $_SERVER['REQUEST_METHOD'], 'POST') == 0) {
    require_once('schedule/personal_logic.csp');
    $logic = GRN_Schedule_PersonalLogic::getInstance();

    $listStartHour = [
        0,
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23
    ];
    $listEndHour = [
        1,
        2,
        3,
        4,
        5,
        6,
        7,
        8,
        9,
        10,
        11,
        12,
        13,
        14,
        15,
        16,
        17,
        18,
        19,
        20,
        21,
        22,
        23,
        24
    ];

    $sethour = intval(@ $G_INPUT['sethour']);
    $endhour = intval(@ $G_INPUT['endhour']);

    $startwday = intval(@ $G_INPUT['startwday']);
    if ( ! $startwday) {
        $startwday = '0';
    }
    $showendhour = @ $G_INPUT['showendhour'];
    if ( ! $showendhour) {
        $showendhour = '0';
    }
    if ( ! in_array($sethour, $listStartHour)
         || ! in_array($endhour, $listEndHour)
    ) {
        cb_throw_error(E_GRN_SYSTEM_INVALID_FORM_DATA);
    }
    if ($sethour >= $endhour) {
        cb_throw_error(E_GRN_SCHD_INVALID_SETHOUR);
    }
    $usingDragDrop = (array_key_exists('usingDragDrop', $G_INPUT))
        ? $G_INPUT['usingDragDrop'] : 0;

    // ログインユーザーの取得
    global $G_container_base;
    $uum = $G_container_base->getInstance('uum');
    $login = $uum->getLoginUser();

    // データの反映
    $logic->setViewHour($login, $sethour, $endhour);

    $logic->setCalendarWeekStart($login, $startwday);

    $logic->setShowEndTime($login, $showendhour);

    $logic->setUsingDragDrop($login, $usingDragDrop);

    $week = [
        0 => 'sunday',
        1 => 'monday',
        2 => 'tuesday',
        3 => 'wednesday',
        4 => 'thursday',
        5 => 'friday',
        6 => 'saturday'
    ];
    // 監査ログ
    require_once('grn/logger.csp');
    $lm = CB_LoggerManager::getInstance();
    $l = $lm->getLogger(GRN_SCHEDULE_MODULE_ID);

    $log_params = ['view_hour' => $sethour . '-' . $endhour];
    $l->noticeEx('config', 'display', $log_params);
    $log_params = [
        'start_wday' => html_entity_decode(cb_msg('grn.schedule',
            $week[$startwday]))
    ];
    $l->noticeEx('config', 'display', $log_params);

    if ($showendhour) {
        $log_params = ['show_endtime' => 'ON'];
    } else {
        $log_params = ['show_endtime' => 'OFF'];
    }
    $l->noticeEx('config', 'display', $log_params);

    if ($usingDragDrop) {
        $log_params = ['using_dragdrop' => 'ON'];
    } else {
        $log_params = ['using_dragdrop' => 'OFF'];
    }
    $l->noticeEx('config', 'display', $log_params);
}

cb_redirect('personal/application_list', ['app_id' => 'schedule']);

