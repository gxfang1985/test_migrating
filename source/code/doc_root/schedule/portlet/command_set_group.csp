<?php

// Check HTTP-POST Method
if (strcasecmp(@ $_SERVER['REQUEST_METHOD'], 'POST') == 0) {
    require_once('portal/error_code.csp');
    if ( ! isset($portlet)) {
        cb_throw_error(E_GRN_PRTL_PORTLET_INVALID_ACCESS);
    }

    require_once('fw/session_manager.csp');
    $sm = CB_SessionManager::getInstance();
    $session = $sm->getSession('schedule/portlet/settings');

    if (@ $G_INPUT['cancel']) {
        $session->set('portlet', null);

        if ('set-personal' == @ $G_INPUT['display']) {
            cb_redirect('portal/personal/view', ['pid' => $G_INPUT['pid']]);
        } elseif ('set-operation' == @ $G_INPUT['display']) {
            cb_redirect('portal/operation/view', ['pid' => $G_INPUT['pid']]);
        } else {
            cb_redirect('portal/system/view', ['pid' => $G_INPUT['pid']]);
        }
    }

    $portlet_settings = $session->get('portlet_settings');
    if (@ ! $G_INPUT['apply']) {
        $portlet_settings['gid'] = @ $G_INPUT['gid'];

        $session->set('portlet_settings', $portlet_settings);


        if ('set-personal' == @ $G_INPUT['display']) {
            $page = 'portal/personal/portlet_display_modify';
        } elseif ('set-operation' == @ $G_INPUT['display']) {
            $page = 'portal/operation/portlet_display_modify';
        } else {
            $page = 'portal/system/portlet_display_modify';
        }

        cb_redirect($page,
            [
                'pid'   => $G_INPUT['pid'],
                'plid'  => $G_INPUT['plid'],
                'ppid'  => $G_INPUT['ppid'],
                'ss'    => 1,
                's_hid' => @$G_INPUT['s_hid'],
                'apply' => 1,
            ]
        );
    }

    global $G_container_base;
    $uum = $G_container_base->getInstance('uum');

    $group_type = @ $G_INPUT['group'];
    if (($group_type == 'org' && ! @ $G_INPUT['gid'])
        || ($group_type == 'mygroup' && ! @ $G_INPUT['mygroup_id'])
        || ($group_type == 'facility_group'
            && ! @ $G_INPUT['facility_group_id'])
    ) {
        cb_throw_error(E_GRN_SCHEDULE_CANTSELECT_GROUP);
    }

    $group_id = null;
    $group = null;
    $notice_string = '';
    switch ($group_type) {
        case 'login':
            $group_id = null;
            $notice_string = 'uid:0) '
                             . html_entity_decode(cb_msg('grn.schedule',
                    'login_user'));
            break;

        case 'org':
            $group_id = $G_INPUT['gid'];
            $group = $uum->getGroup($group_id);
            if ( ! $group) {
                cb_throw_error(E_GRN_GROUP_NOT_FOUND);
            }
            $notice_string = 'oid:' . $group->getOID() . ') '
                             . $group->get('name');
            break;

        //Myグループの場合
        case 'mygroup':
            $group_id = $G_INPUT['mygroup_id'];
            $group = $uum->getMyGroup(mb_substr($group_id, 1));
            if ( ! $group) {
                cb_throw_error(E_GRN_PERSONAL_MYGROUP_NOT_FOUND);
            }
            $notice_string = 'mid:' . $group->getOID() . ') '
                             . $group->get('name');
            break;

        //施設グループの場合
        case 'facility_group':
            $group_id = $G_INPUT['facility_group_id'];
            require_once('schedule/facility_system_logic.csp');
            $facility_logic = GRN_Facility_SystemLogic::getInstance();
            $group
                = $facility_logic->getFacilityGroup(mb_substr($group_id,
                1));
            if ($group === false) {
                cb_throw_error(E_GRN_FCLT_NOTFOUND_FACILITYGROUP);
            }
            $notice_string = 'fgid:' . $group->getOID() . ') '
                             . $group->get('name');
            break;
    }

    $portlet_settings['gid'] = $group_id;

    $display = cb_at($G_INPUT, 'display', 'set-personal');
    if (is_a($group, 'CB_Group')) {
        // 個人設定の場合は、アクセス権のチェック
        if ($display === 'set-personal') {
            $login = $uum->getLoginUser();
            $dynamic_roles = $uum->listGrantedRoles();
            require_once('schedule/access_logic.csp');
            $acc_logic = GRN_Schedule_Access_logic::getInstance();
            if ( ! $acc_logic->evaluateAccess($login, $group, ['read'],
                $dynamic_roles)
            ) {
                cb_throw_error(E_GRN_SCHEDULE_DENYSELECT_GROUP);
            }
        }
    } elseif (is_a($group, 'GRN_Facility_Facilitygroup')) {
        // 個人設定/運用管理の場合は、アクセス権のチェック
        if ($display !== 'set-system') {
            $login = $uum->getLoginUser();
            $dynamic_roles = $uum->listGrantedRoles();
            require_once('schedule/access_logic.csp');
            $acc_logic = GRN_Schedule_Access_logic::getInstance();
            if ( ! $acc_logic->evaluateAccess($login, $group, ['read'],
                $dynamic_roles)
            ) {
                cb_throw_error(E_GRN_SCHEDULE_DENYSELECT_GROUP);
            }
        }
    }

    // instantiate an Smarty object
    require_once('grn/smarty.csp');
    $t = new GRN_Smarty;

    // Create Parameter Translation Map
    $translation_map = [
        'pid'       => '_pid',
        'plid'      => '_plid',
        'ppid'      => '_ppid',
        'font_size' => 'font_size',
    ];

    // Do Parameter Translation
    $properties = [];
    foreach ($translation_map as $view_name => $model_name) {
        $properties[$model_name] = @ $G_INPUT[$view_name];
    }

    //Create Infomation Portlet Settings
    $settings['font_size'] = $properties['font_size'];  //User Week Font Size
    $settings['gid'] = $group_id;

    //Set Infomation Portlet Settings Application
    require_once('grn/application.csp');
    $app_locator = GRN_ApplicationLocator::instance();
    /** @var GRN_Portal_Application $app_portal */
    $app_portal = $app_locator->getInstance('portal');
    $app_portal->setPortletSettings($properties['_plid'], $settings);

    //Switch Redirect Page
    if (@ $G_INPUT['display'] === 'set-system') {
        //redirect System page
        cb_redirect('portal/system/view', ['pid' => $G_INPUT['pid']]);
    } elseif (@ $G_INPUT['display'] === 'set-operation') {
        //redirect Operation page
        cb_redirect('portal/operation/view', ['pid' => $G_INPUT['pid']]);
    } else {
        //redirect Personal page
        cb_redirect('portal/personal/view', ['pid' => $G_INPUT['pid']]);
    }
}


