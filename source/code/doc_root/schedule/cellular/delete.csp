<?php
if (@$G_INPUT['eid']) {
    // Smarty をインスタンス化
    require_once('cellular/smarty.csp');
    $smarty = new GRN_Cellular_Smarty;

    // SmartyValidate should be initialized when an input form is there.
    require_once('SmartyValidate.class.php');
    SmartyValidate::connect($smarty);
    $form_name = 'schedule/cellular/delete';
    SmartyValidate::register_form($form_name, true);
    $smarty->assign('form_name', $form_name);

    $mid = $G_INPUT['mid'];
    if ( ! $mid) {
        $mid = $G_login_user->getOID();
    }    // 自分をdefault

    $eid = $G_INPUT['eid'];

    //日付
    $str_date = $G_INPUT['day'];
    $date = new CB_Date();
    if ( ! $date->parse($str_date)) {
        $date = null;
    }

    $smarty->assign('mid', @$mid);
    $smarty->assign('day', @$str_date);

    // スケジュールＩＤ
    $smarty->assign('eid', $eid);

    // スケジュールの取得
    $event = $G_application->getEvent($G_login_user, $eid, $date);
    if ( ! $event) {
        cb_throw_error(E_GRN_SCHD_NOTFOUND_EVENT);
    }

    // 通常予定のみ削除可能
    if (is_a($event, 'GRN_Schedule_NormalEvent')
        || is_a($event, 'GRN_Schedule_BannerEvent')
    ) {
        // アクセス権のチェック
        require_once('schedule/access_logic.csp');
        $acc_logic = GRN_Schedule_Access_Logic::getInstance();
        $dynamic_role = $G_uum->listGrantedRoles();
        $access = $acc_logic->getEventAccess($G_login_user, $event,
            ['read', 'delete'], $dynamic_role);
        if ($access['read'] == GRN_SCHD_ACCESS_DENY) {
            cb_throw_error(E_GRN_SCHD_ACCESSDENY_EVENT);
        }
        if ($access['delete'] == GRN_SCHD_ACCESS_DENY) {
            cb_throw_error(E_GRN_SCHD_ACCESSDENY_DELETE);
        }

        // 共有スケジュールで、自分が参加者に入ってる場合だけ選択radio
        $participation = '0';
        if ($event->isShared()) {
            if ($event->users && count($event->users) > 0) {
                $login_id = $G_login_user->getOID();
                foreach ($event->users as $_user) {
                    if ($_user->getOID() == $login_id) {
                        $participation = $login_id;
                        break;
                    }
                }
            }
        }

        if ($participation) {
            $smarty->assign('joint', true);
        } else {
            $smarty->assign('joint', false);
        }
    } else {
        // GRN_Schedule_RepeatEvent
        // に関しては、そもそも削除リンクを出さない
        grn_cellular_switch_page($G_pagepath . "/look1");
    }

    $smarty->assign('title', $event->getTitle());

    // ページタイトル
    $smarty->assign('pagetitle', grn_get_current_page_display_name());
    // アプリケーション名
    $smarty->assign('appname', $G_application->getName());
    // パス情報
    $smarty->assign('pagepath', $G_pagepath);

    // smartyの出力
    $smarty->display(cb_get_pagename() . '.tpl');
} else {
    // session lost
    grn_cellular_switch_page("cellular/index");
}

