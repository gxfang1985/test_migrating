<?php
// Smarty をインスタンス化
require_once('cellular/smarty.csp');
$smarty = new GRN_Cellular_Smarty;

// ページタイトル
$smarty->assign('pagetitle', grn_get_current_page_display_name());
// アプリケーション名
$smarty->assign('appname', $G_application->getName());
// パス情報
$smarty->assign('pagepath', $G_pagepath);
//echo "<pre>".nl2br(print_r($G_INPUT,true))."</pre>";

$day = (isset($G_INPUT['day'])) ? $G_INPUT['day'] : null;
$mid = (isset($G_INPUT['mid'])) ? $G_INPUT['mid']
    : $G_login_user->getOID();// 自分をdefault

$error_facility_input_return = (isset($G_INPUT['error_facility']))
    ? $G_INPUT['error_facility'] : false;
$smarty->assign('error_facility_input_flag', $error_facility_input_return);
//mid が施設の場合、バナー登録ボタンを出さないflag。
$facility_flag = false;
if (mb_substr($mid, 0, 1) == 'f') {
    $facility_flag = true;
}

// 日付時刻クラス
require_once("fw/date.csp");

// このページで使用するセッション情報の取得
$sess_sche_add = $G_cellular_session->get('sess_sche_add');

$start_time = null;
$end_time = null;
if (isset($G_INPUT['re']) && isset($sess_sche_add['flag'])) {
    $datetime_options_unserialize = [
        'allowed_classes' => [
            'CB_DateTimeEx',
            'CB_Date'
        ]
    ];
    $start_date = cb_unserialize($sess_sche_add['start_date'],
        $datetime_options_unserialize);
    $end_date = cb_unserialize($sess_sche_add['end_date'],
        $datetime_options_unserialize);
    if (is_a($start_date, 'CB_DateTime')) {
        $start_time = $start_date;
    }
    if (is_null($end_date)) {
        $end_date = $start_date;
    } elseif (is_a($end_date, 'CB_DateTime')) {
        $end_time = $end_date;
    }
} else {
    // セッション未設定
    $sess_sche_add = [];
    $G_cellular_session->set('sess_sche_add', $sess_sche_add);

    // 日付時刻（タイムスタンプ）クラス生成
    $ts = new CB_TimeStamp();
    $ts->unix_ts = time();
    $tsex = new CB_TimeStampEx($ts);
    $day_today = $tsex->getDate();

    // 表示日の設定
    $day_disp = new CB_Date();
    if ( ! $day_disp->parse($day)) {
        // 今日をdefault
        $day_disp = $day_today;
        $day = $day_disp->format();
    }
    $start_date = $day_disp;
    $end_date = $day_disp;
}

//分のintervalの取得
require_once('schedule/system_logic.csp');
$systemlogic = GRN_Schedule_SystemLogic::getInstance();

$schedule_event = [];
$schedule_event['minute_interval'] = $systemlogic->getScheduleUnit();
$schedule_event['start_yy'] = $start_date->year;
$schedule_event['start_mm'] = $start_date->month;
$schedule_event['start_dd'] = $start_date->day;
$schedule_event['start_time'] = $start_time;
$schedule_event['end_yy'] = $end_date->year;
$schedule_event['end_mm'] = $end_date->month;
$schedule_event['end_dd'] = $end_date->day;
$schedule_event['end_time'] = $end_time;
$schedule_event['facility_flag'] = $facility_flag;

$smarty->assign('day', $day);
$smarty->assign('mid', $mid);
$smarty->assign('schedule_event', $schedule_event);

$smarty->display(cb_get_pagename() . '.tpl');

