<?php
// Smarty をインスタンス化
use grn\schedule\FacilityApprovalLogic;

require_once('cellular/smarty.csp');
$smarty = new GRN_Cellular_Smarty;

$eid = (isset($G_INPUT['eid'])) ? $G_INPUT['eid'] : null;
$day = (isset($G_INPUT['day'])) ? $G_INPUT['day'] : null;
$mid = (isset($G_INPUT['mid'])) ? $G_INPUT['mid'] : $G_login_user->getOID();

$login_id = $G_login_user->getOID();

// 日付チェック
/*
require_once( "fw/date.csp" );
$day_tmp = new CB_Date();

if( !$day_tmp->parse(@$G_INPUT['syy'].'-'.@$G_INPUT['smm'].'-'.@$G_INPUT['sdd']) ||
    !$day_tmp->parse(@$G_INPUT['eyy'].'-'.@$G_INPUT['emm'].'-'.@$G_INPUT['edd']) )
{
    grn_cellular_switch_page( $G_pagepath."/change_time", $G_INPUT );
}
else
{
*/
require_once("schedule/view_util.csp");
$sche_date_util = GRN_Schedule_View_Util::getInstance();
$s_time
    = $sche_date_util->createDateTimeFromParameters(@$G_INPUT['syy'],
    @$G_INPUT['smm'],
    @$G_INPUT['sdd'],
    isset($G_INPUT['start_hour']) ? $G_INPUT['start_hour'] : null,
    isset($G_INPUT['start_minute']) ? $G_INPUT['start_minute'] : null);
$e_time
    = $sche_date_util->createDateTimeFromParameters(@$G_INPUT['eyy'],
    @$G_INPUT['emm'],
    @$G_INPUT['edd'],
    isset($G_INPUT['end_hour']) ? $G_INPUT['end_hour'] : null,
    isset($G_INPUT['end_minute']) ? $G_INPUT['end_minute'] : null);

require_once('schedule/application.csp');
$sche_app = GRN_Schedule_Application::getInstance();

if (isset($G_INPUT['schedule_type'])
    && $G_INPUT['schedule_type'] == 'normal_type'
) {
    // 日付のチェック
    $sche_app->checkDateTime($s_time, $e_time);

    if (is_a($s_time, 'CB_DateTime') && is_a($e_time, 'CB_Date')) {
        if (($s_time->year != $e_time->year)
            || ($s_time->month != $e_time->month)
            || ($s_time->day != $e_time->day)
        ) {
            cb_throw_error(E_GRN_SCHD_INVALID_ENDDATE);
        }
    }
} else {
    // 日付のチェック
    $sche_app->_checkDate($s_time, $e_time);
}
$start_time = $s_time;
$end_time = $e_time;

$date = new CB_Date();
if ( ! $date->parse($day)) {
    $date = null;
}

// イベントの取得
require_once('schedule/application.csp');
$app = GRN_Schedule_Application::getInstance();
require_once('schedule/view_util.csp');
$util = GRN_Schedule_View_Util::getInstance();
require_once('schedule/facility_system_logic.csp');
$facility_logic = GRN_Facility_SystemLogic::getInstance();

// 変更前のイベントの取得
$old_event = $app->getEvent($G_login_user, $eid, $date);
if ( ! $old_event) {
    cb_throw_error(E_GRN_SCHD_NOTFOUND_EVENT);
}

// 参加者の設定
$members = [];
if ($old_event->groups) {
    foreach ($old_event->groups as $group) {
        $members['g' . $group->getOID()] = $group->get('name');
    }
}

if ($old_event->users) {
    foreach ($old_event->users as $user) {
        $members[$user->getOID()] = $user->get('display_name');
    }
}
$sche_mem = [];
if (count($members) > 0) {
    foreach ($members as $key => $value) {
        $sche_mem[] = $key;
    }
}
//施設
$fac_members = [];
if ($old_event->facilities) {
    foreach ($old_event->facilities as $facility) {
        $fac_members[] = $facility->getOID();
    }
}

$conmenu = $old_event->menu;
if ( ! is_null($old_event->menucolor)) {
    $conmenu .= ";#" . $old_event->menucolor;
}

// 入力されたデータ
$sche_input = [
    'start_year'   => $start_time->year,
    'start_month'  => $start_time->month,
    'start_day'    => $start_time->day,
    'start_hour'   => @$start_time->hour,
    'start_minute' => @$start_time->minute,
    'end_year'     => $end_time->year,
    'end_month'    => $end_time->month,
    'end_day'      => $end_time->day,
    'end_hour'     => @$end_time->hour,
    'end_minute'   => @$end_time->minute,
    'menu'         => $conmenu,
    'title'        => $old_event->detail,
    'memo'         => $old_event->memo,
    'sUID'         => $sche_mem,
    'sITEM'        => $fac_members,
];
if (isset($G_INPUT['BN'])) {
    $sche_input = array_merge($sche_input, ['BN' => @$G_INPUT['BN']]);
}

$event_id = $eid;
$str_date = $day;

$sche_input['using_purpose']
    = (new FacilityApprovalLogic())->getFacilityUsingPurpose($event_id);

include('_modify.csp');

$re_day = $start_time->year . '-' . $start_time->month . '-' . $start_time->day;
// redirect
grn_cellular_redirect($G_pagepath . "/look1", [
    'eid' => $eid,
    'mid' => $mid,
    'day' => $re_day
]);
/*
}
*/
