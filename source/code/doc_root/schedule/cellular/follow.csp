<?php
// Smarty をインスタンス化
require_once('cellular/smarty.csp');
$smarty = new GRN_Cellular_Smarty;

// SmartyValidate should be initialized when an input form is there.
require_once('SmartyValidate.class.php');
SmartyValidate::connect($smarty);
SmartyValidate::register_form(cb_get_pagename(), true);

// ページタイトル
$smarty->assign('pagetitle', grn_get_current_page_display_name());
// アプリケーション名
$smarty->assign('appname', $G_application->getName());
// パス情報
$smarty->assign('pagepath', $G_pagepath);


$mid = $G_INPUT['mid'];
if ( ! $mid) {
    $mid = $G_login_user->getOID();
}

$eid = @$G_INPUT['eid'];
$day = @$G_INPUT['day'];
$follow = @ $G_INPUT['follow'];

$date = new CB_Date();
if ( ! $date->parse($day)) {
    $date = null;
}
$event = $G_application->getEvent($G_login_user, $eid, $date);
if ( ! $event) {
    cb_throw_error(E_GRN_SCHD_NOTFOUND_EVENT);
}
// アクセス権のチェック
require_once('schedule/access_logic.csp');
$acc_logic = GRN_Schedule_Access_Logic::getInstance();
$dynamic_role = $G_uum->listGrantedRoles();
$access = $acc_logic->getEventAccess($G_login_user, $event,
    ['read', 'add', 'modify', 'delete'], $dynamic_role);

if ($access['read'] == GRN_SCHD_ACCESS_DENY) {
    cb_throw_error(E_GRN_SCHD_ACCESSDENY_EVENT);
}

if ($access['add'] == GRN_SCHD_ACCESS_DENY
    && $access['modify'] == GRN_SCHD_ACCESS_DENY
    && $access['delete'] == GRN_SCHD_ACCESS_DENY
) {
    cb_throw_error(E_GRN_SCHD_DENYENTRY_EVENTFOLLOW);
}

if (mb_strlen($follow) > 1024) {
    $follow = mb_substr($follow, 0, 1024);
}

// assign
$smarty->assign('eid', $eid);
$smarty->assign('mid', $mid);
$smarty->assign('day', $day);
$smarty->assign('follow', $follow);


// display
$smarty->display(cb_get_pagename() . '.tpl');

