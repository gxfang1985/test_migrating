<?php
// Smarty をインスタンス化
require_once('cellular/smarty.csp');
$smarty = new GRN_Cellular_Smarty;

require_once('schedule/cellular_utils.csp');


// 
$smarty->assign('pagetitle', grn_get_current_page_display_name());
$smarty->assign('pagepath', $G_pagepath);
$smarty->assign('pagename', cb_get_pagename());

// 使用するパラメータの定義
$from = (isset($G_INPUT['from'])) ? $G_INPUT['from'] : null;
$day = (isset($G_INPUT['day'])) ? $G_INPUT['day'] : null;
$mid = (isset($G_INPUT['mid'])) ? $G_INPUT['mid'] : null;
$gid = (isset($G_INPUT['gid'])) ? $G_INPUT['gid'] : null;
$page = (isset($G_INPUT['pg'])) ? $G_INPUT['pg'] : null;

$params = (isset($G_INPUT)) ? $G_INPUT : null;
unset($params['pg']);
unset($params['gid']);
$smarty->assign('params', $params);

// 遷移先（遷移してきた元に戻る
if ($from == 'day') {
    $to_pagename = $G_pagepath . '/day';
} else {
    $to_pagename = $G_pagepath . '/week';
}
$smarty->assign('to_pagename', $to_pagename);
$smarty->assign('from', $from);
$smarty->assign('day', $day);
$smarty->assign('mid', $mid);

$tab = [
    'mode'   => 'b',
    'page'   => cb_get_pagename(),
    'params' => $params,
    'add'    => [
        // 施設tab
        [
            'mode' => 'f',
            'name' => cb_msg('grn.schedule.cellular', 'tab_facility'),
        ],
        // 検索tab
        [
            'mode' => 's',
            'name' => cb_msg('grn.cellular.common', 'tab_search'),
        ],
    ],
];

$smarty->assign('access_plugin', [
    'name'   => 'schedule',
    'params' => ['action' => ['read']],
]);

require_once('grn/application.csp');
$locator = GRN_ApplicationLocator::instance();
$cellular = $locator->getInstance('cellular');
$uconfig = $cellular->getUserConfig($G_login_user);
$limit = $uconfig->getListMax();

require_once('schedule/system_logic.csp');
$systemlogic = GRN_Schedule_SystemLogic::getInstance();
require_once('schedule/personal_logic.csp');
$personallogic = GRN_Schedule_PersonalLogic::getInstance();
require_once('schedule/access_logic.csp');
$acc_logic = GRN_Schedule_Access_Logic::getInstance();

$show_organize = $systemlogic->getShowOrganize();
$dynamic_roles = $G_uum->listGrantedRoles();

if ( ! strlen($gid)) {
    $smarty->assign('gid', 'b');
} else {
    // gid分割
    $smarty->assign('gid', $gid);
    if (($p = strpos($gid, ':')) !== false) {
        $group_id = substr($gid, 0, $p);
    } elseif (($p = strpos($gid, '_')) !== false) {
        $group_id = substr($gid, 0, $p);
    } else {
        $group_id = $gid;
    }
    $prefix = substr($group_id, 0, 1);
    if ( ! is_numeric($prefix)) {
        $group_id = substr($group_id, 1);
    } else {
        $prefix = 'g';
    }
    $tab['mode'] = $prefix;

    $display_obj = [];

    if ($prefix == 's') {
        // 検索ページにswitch
        $G_cellular_session->set('schedule_search_group', cb_get_pagename());
        $G_cellular_session->set('schedule_search_user', $to_pagename);
        $G_cellular_session->set('schedule_search_access', ['read']);
        grn_cellular_switch_page($G_pagepath . '/search_object');
    } elseif ($prefix == 'f') {
        // 施設グループ
        require_once('schedule/facility_system_logic.csp');
        $facility_logic = GRN_Facility_SystemLogic::getInstance();

        $tmp_access = ['read'];
        $f_list
            = GRN_ScheduleCellularUtil::makeFacilityGroupArray($group_id,
            $G_login_user, $dynamic_roles, $tmp_access, $facility_logic,
            $acc_logic, $systemlogic, 'f', cb_get_pagename());

        // 施設グループのassign
        $smarty->assign('option_list', $f_list);

        $facilities = GRN_ScheduleCellularUtil::makeFacilityArray($group_id,
            $G_login_user, $dynamic_roles, $tmp_access, $facility_logic,
            $acc_logic, $systemlogic);

        // 絞り込む
        $display_obj = [];
        if ($facilities) {
            foreach ($facilities as $id => $obj) {
                $display_obj[] = [
                    'mid'  => 'f' . $obj->getOID(),
                    'name' => $obj->get('name'),
                ];
            }
        }
    } elseif ($prefix == 'm') {
        if ($group_id) {
            // Myグループ
            $group = $G_uum->getMyGroup($group_id);
            if ( ! $group) {
                cb_throw_error(E_GRN_MYGROUP_NOT_FOUND);
            }
            // ユーザーの取得
            $members = $G_uum->getMyGroupUsers($group->getOID(), 0, -1, null,
                null, GRN_SCHEDULE_APPLICATION_ID);
            // アクセス権 絞り込み
            $members = $acc_logic->evaluateAccesses($G_login_user, $members,
                ['read'], $dynamic_roles, "user");

            if ($members) {
                foreach ($members as $id => $obj) {
                    $display_obj[] = [
                        'mid'  => $obj->getOID(),
                        'name' => $obj->get('display_name'),
                    ];
                }
            }
        }
    } elseif ($prefix == 'u') {
        // 最近選択したユーザー
        $lists = $G_uum->getFrequentUsersInfo($G_login_user->getOID(), -1,
            null, GRN_SCHEDULE_APPLICATION_ID);
        $members = [];
        foreach (array_keys($lists) as $_id) {
            $members[$_id] = $G_uum->getUser($_id);
        }
        // アクセス権 絞り込み
        $members = $acc_logic->evaluateAccesses($G_login_user, $members,
            ['read'], $dynamic_roles, "user");

        if ($members) {
            foreach ($members as $id => $obj) {
                $display_obj[] = [
                    'mid'  => $obj->getOID(),
                    'name' => $obj->get('display_name'),
                ];
            }
        }
    } elseif ($prefix == 'q') {
        // 最近選択した施設
        require_once('schedule/facility_system_logic.csp');
        $facility_logic = GRN_Facility_SystemLogic::getInstance();
        $facility_history_manager = GRN_Facility_HistoryManager::getInstance();

        $lists
            = $facility_history_manager->getFacilityHistory($G_login_user->getOID());

        $facilities = [];
        if (count($lists)) {
            foreach ($lists as $_id) {
                $facilities[$_id] = $facility_logic->getFacility($_id);
            }
        }
        // アクセス権 絞り込み
        $facilities = $acc_logic->evaluateAccesses($G_login_user, $facilities,
            ['read'], $dynamic_roles, 'facility');

        // 絞り込む
        if ($facilities) {
            foreach ($facilities as $id => $obj) {
                $display_obj[] = [
                    'mid'  => 'f' . $obj->getOID(),
                    'name' => $obj->get('name'),
                ];
            }
        }
    } else {
        if ($group_id) {
            // 組織
            $group = $G_uum->getGroup($group_id);
            if ( ! $group) {
                cb_throw_error(E_GRN_GROUP_NOT_FOUND);
            }
            if ($show_organize) {
                // アクセス権
                $accecc = $acc_logic->evaluateAccess($G_login_user, $group,
                    ['read'], $dynamic_roles);
                if ($accecc) {
                    $display_obj[] = [
                        'mid'  => 'g' . $group->getOID(),
                        'name' => $group->get('name'),
                    ];
                }
            }
            // ユーザーの取得
            $members = $G_uum->getGroupUsers($group->getOID(), 0, -1, null,
                null, GRN_SCHEDULE_APPLICATION_ID);

            // アクセス権 絞り込み
            $members = $acc_logic->evaluateAccesses($G_login_user, $members,
                ['read'], $dynamic_roles, "user");

            if ($members) {
                foreach ($members as $id => $obj) {
                    $display_obj[] = [
                        'mid'  => $obj->getOID(),
                        'name' => $obj->get('display_name'),
                    ];
                }
            }
        }
    }

    //ページ毎に表示するリストを取得。
    $total_count = count($display_obj);
    if ($total_count > $limit) {
        $start_point = ($page) * $limit;
        $end_point = ($page + 1) * $limit;

        $temp = [];
        for ($i = $start_point; $i < $end_point; $i++) {
            if (isset($display_obj[$i])) {
                array_push($temp, $display_obj[$i]);
            }
        }
        if ($end_point < $total_count) {
            $next = $page + 1;
            $smarty->assign('next_page', @$next);
            $smarty->assign('next', true);
        }
        if ($page > 0) {
            $before = $page - 1;
            $smarty->assign('prev_page', @$before);
            $smarty->assign('prev', true);
        }
        $smarty->assign('objects', $temp);
    } else {
        $smarty->assign('objects', $display_obj);
    }
}

$smarty->assign('tab', $tab);

// this value will be used to come back from /address/cellular/view 
$G_cellular_session->set('back-from-address-view', $G_INPUT);

// smartyの出力
$smarty->display(cb_get_pagename() . '.tpl');


