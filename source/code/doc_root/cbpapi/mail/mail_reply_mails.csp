<?php
if (isset($cbpapi_service)) {
    $action = $cbpapi_service->getAction();
    global $G_container_base;
    $uum = $G_container_base->getInstance('uum');
    $login = $uum->getLoginUser();
    require_once('mail/utility.csp');
    $utility = GRN_Mail_Utility::getInstance();
    // メールの使用が許可されているか
    $system_config = $utility->getSystemConfig();
    $personal_config = $utility->getPersonalConfig($login);

    // get parameters of SOAP message
    $node_parameters = $cbpapi_service->getRequestParameters();
    $operation = 'reply';
    if ( ! isset($node_parameters['attributes']['reply_all'])) {
        require_once('cbpapi/error_code.csp');
        cb_throw_error(E_GRN_CBPAPI_MISSING_PARAMETER, null,
            ['param' => 'reply_all']);
    }
    $action_node = $node_parameters['attributes']['reply_all'];
    if ($action_node == 'true') {
        $operation = 'reply-all';
    }

    $node_reply_mail = $cbpapi_service->selectNodes($node_parameters,
        'reply_mail');
    if ( ! $node_reply_mail) {
        require_once('cbpapi/error_code.csp');
        cb_throw_error(E_GRN_CBPAPI_MISSING_PARAMETER, null,
            ['param' => 'reply_mail']);
    }
    $mails_for_view = [];
    $reply_mail_ids = [];
    require_once('cbpapi/mail_logic.csp');
    $cbpapi_mail_logic = GRN_CBPApi_Mail_Logic::getInstance();
    foreach (array_keys($node_reply_mail) as $send_reply_key) {
        $mail_params = [];
        $mail_params
            = $cbpapi_mail_logic->getInputParamerters($node_reply_mail[$send_reply_key]);
        $account_id = '';
        $to = '';
        $cc = '';
        $bcc = '';
        $from = '';
        $reply_to = '';
        if (array_key_exists('attributes', $node_reply_mail[$send_reply_key])) {
            $attributes = $node_reply_mail[$send_reply_key]['attributes'];
            if ( ! array_key_exists('account_id', $attributes)) {
                require_once('cbpapi/error_code.csp');
                cb_throw_error(E_GRN_CBPAPI_MISSING_PARAMETER, null,
                    ['param' => 'account_id']);
            }
            $account_id = $attributes['account_id'];
            // check account id
            if (strlen($account_id) > 0 && is_numeric($account_id)) {
                $account = $personal_config->getAccountData($account_id);
                if (is_null($account)) {
                    require_once('mail/error_code.csp');
                    cb_throw_error(E_GRN_MAIL_ACCOUNT_DATA_NOT_FOUND);
                }
                if ( ! array_key_exists('user_id', $account)
                     || $account['user_id'] != $login->getOID()
                ) {
                    require_once('mail/error_code.csp');
                    cb_throw_error(E_GRN_MAIL_ACCOUNT_DATA_NOT_FOUND);
                }
                if ($account['disabled']) {
                    // アカウント停止中
                    cb_throw_error(E_GRN_MAIL_DISABLED_ACCOUNT);
                }
                $folder = $utility->getFolderLogic();
                // initialize special folders
                $folder->initSpecialFolders($login, $account_id);
            } else {
                require_once('mail/error_code.csp');
                cb_throw_error(E_GRN_MAIL_ACCOUNT_DATA_NOT_FOUND);
            }
            if (array_key_exists('from_string', $attributes)) {
                $from = $attributes['from_string'];
            }
            if (array_key_exists('to_string', $attributes)) {
                $to
                    = $cbpapi_mail_logic->escapeDisplayName($attributes['to_string']);
            }
            if (array_key_exists('cc_string', $attributes)) {
                $cc
                    = $cbpapi_mail_logic->escapeDisplayName($attributes['cc_string']);
            }
            if (array_key_exists('bcc_string', $attributes)) {
                $bcc
                    = $cbpapi_mail_logic->escapeDisplayName($attributes['bcc_string']);
            }
            if (array_key_exists('reply_to_string', $attributes)) {
                $reply_to_string
                    = $cbpapi_mail_logic->escapeDisplayName($attributes['reply_to_string']);
            }
        }
        if (strlen($to) > 0 || strlen($cc) > 0 || strlen($bcc) > 0) {
            $mail_params['recipient'] = 'dummy';
        }

        $origin_mid = array_key_exists('mid', $mail_params)
            ? $mail_params['mid'] : '';
        // check mail id
        if (strlen($origin_mid) > 0 && is_numeric($origin_mid)) {
            $mail = $utility->getMailLogic();
            $mail_data = $mail->getMailData($origin_mid, false);
            if (is_null($mail_data)) {
                require_once('mail/error_code.csp');
                cb_throw_error(E_GRN_MAIL_MAIL_DATA_NOT_FOUND);
            }
            if ( ! array_key_exists('user_id', $mail_data)
                 || $mail_data['user_id'] != $login->getOID()
            ) {
                require_once('mail/error_code.csp');
                cb_throw_error(E_GRN_MAIL_MAIL_ACCESS_DENIED);
            }
        } else {
            require_once('mail/error_code.csp');
            cb_throw_error(E_GRN_MAIL_MAIL_DATA_NOT_FOUND);
        }

        $system_config->getGeneralSetting($general_settings);
        $disable_mail = $general_settings['disable_mail'];
        $check_mail_on_login = $general_settings['check_mail_on_login'];
        if ($disable_mail) {
            // メール使用停止中
            cb_throw_error(E_GRN_MAIL_CANNOT_USE);
        }
        // 総メールサイズをチェック
        $user_id = $login->getOID();
        $system_config->getSizeUserLimitSetting($size_settings, $user_id);
        $mail_size = $personal_config->getMailSize(null);
        if ((0 <= $size_settings['user_limit_' . $user_id])
            && ($mail_size >= $size_settings['user_limit_' . $user_id] * 1024
                              * 1024)
        ) {
            cb_throw_error(E_GRN_MAIL_LIMIT, null,
                ['limit' => $size_settings['user_limit_' . $user_id] . 'MB']);
        }

        $properties = [];
        $properties['subject'] = @ $mail_params['subject'];
        $properties['to'] = $to;
        $properties['cc'] = $cc;
        $properties['bcc'] = $bcc;
        $properties['data'] = $mail_params['data'];

        // attached files
        $files_uploaded = [];
        if (array_key_exists('files', $mail_params)) {
            $files = $mail_params['files'];
            foreach ($files as $file_key => $value) {
                $files_uploaded[$file_key] = cbpapi_upload_file($value);
            }
        }
        require_once('mail/include_send.csp');
        $send_logic = $utility->getSendLogic();
        // メールの送信
        $personal_config->getGeneralSetting($general_settings);
        $mail_id = $send_logic->sendMail($login, $account_id, $properties,
            $files_uploaded, null, $operation, $origin_mid, null, true,
            $general_settings['save_sentfile']);
        $utility->addIncrementalSearch($to, $cc, $bcc);
        $reply_mail_ids[] = $mail_id;
    }

    $mail_for_view = $cbpapi_mail_logic->getMailForViewByIds($login,
        $reply_mail_ids);
    require_once('grn/smarty.csp');
    $t = new GRN_Smarty;
    $t->assign('xml_namespaces', [grn_cbpapi_get_namespace('mail')]);
    $t->assign('mails', $mail_for_view);
    $t->assign('action', $action);
    grn_cbpapi_response($t, __FILE__);
}

