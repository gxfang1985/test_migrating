<?php
if (isset($cbpapi_service)) {
    global $G_container_base;
    $uum = $G_container_base->getInstance('uum');
    $login = $uum->getLoginUser();
    $login_id = $login->getOID();

    //check is a Admin?
    require_once('grn/system_logic.csp');
    $system = GRN_System::getInstance();
    if ( ! $system->adminApplication('mail', $login)) {
        cb_throw_error(E_GRN_NO_SYSTEM_PRIVILEGE);
    }

    //get Parametter
    $request = $cbpapi_service->getRequestParameters();
    $user_accounts = $cbpapi_service->selectNodes($request,
        'mail_user_accounts');

    //check param require?
    $user_accounts = checkParam($user_accounts);
    if (count($user_accounts) == 0) {
        require_once('cbpapi/error_code.csp');
        cb_throw_error(E_GRN_CBPAPI_MISSING_PARAMETER, null,
            ['param' => 'params']);
    }

    if (count($user_accounts) == 1) {
        //check user id
        global $G_container_base;
        $uum = $G_container_base->getInstance('uum');
        $user
            = $uum->getUser($user_accounts[0]['children'][0]['attributes']['user_id']);
        if ( ! $user) {
            cb_throw_error(E_GRN_USER_NOT_FOUND);
        }
    }
    $account_data = [];
    //GRN2-4366
    require_once('mail/system_config.csp');
    //GRN2-4366
    foreach ($user_accounts as $user_acc) {
        //check user id
        global $G_container_base;
        $uum = $G_container_base->getInstance('uum');
        $user
            = $uum->getUser($user_acc['children'][0]['attributes']['user_id']);
        if ( ! $user) {
            continue;
        }
        $account_info = new GRN_Mail_AccountInfo();
        $foreign_key
            = @ $user_acc['children'][0]['attributes']['user_acount_code'];
        $name
            = @ $user_acc['children'][0]['attributes']['user_account_name'];
        $account_info->email
            = @ $user_acc['children'][1]['attributes']['email'];
        $account_info->server_id
            = @ $user_acc['children'][1]['attributes']['mail_server_id'];
        $account_info->retrieve_account
            = @ $user_acc['children'][1]['attributes']['acount_name'];
        $account_info->retrieve_password
            = @ $user_acc['children'][1]['attributes']['password'];
        //$account_info->smtp_account         = @ $G_INPUT['send_account'];
        //$account_info->smtp_password        = @ $G_INPUT['send_password'];
        if (isset($user_acc['children'][1]['attributes']['leave_server_mail'])
            && $user_acc['children'][1]['attributes']['leave_server_mail']
               == 'true'
        ) {
            $account_info->retrieve_save = 'LEAVE';
        } else {
            $account_info->retrieve_save = 'DELETE';
        }
        if (isset($user_acc['children'][1]['attributes']['deactivate_user_account'])
            && $user_acc['children'][1]['attributes']['deactivate_user_account']
               == 'true'
        ) {
            $disabled = true;
        } else {
            $disabled = false;
        }

        $send_vcard = null;
        $default_bcc = null;
        $sender = null;
        $system_config
            = GRN_Mail_SystemConfig::getInstance();
        $account_id
            = $system_config->addAccountData($user,
            $foreign_key, $name, null, $account_info, $send_vcard, $default_bcc,
            $sender, false, $disabled);
        $account_data[$account_id]['user_id']
            = $user_acc['children'][0]['attributes']['user_id'];
        $account_data[$account_id]['user_acount_code'] = $foreign_key;
        $account_data[$account_id]['user_acount_name'] = $name;
        $account_data[$account_id]['mail_server_id']
            = $account_info->server_id;
        $account_data[$account_id]['email'] = $account_info->email;
        $account_data[$account_id]['acount_name']
            = $account_info->retrieve_account;
        if ($account_info->retrieve_save == 'LEAVE') {
            $account_data[$account_id]['leave_server_mail'] = "true";
        } else {
            $account_data[$account_id]['leave_server_mail'] = "false";
        }

        if ($disabled == true) {
            $account_data[$account_id]['status'] = "true";
        } else {
            $account_data[$account_id]['status'] = "false";
        }
    }
    // SOAP response
    require_once('grn/smarty.csp');
    $t = new GRN_Smarty();
    $t->assign('xml_namespaces', [grn_cbpapi_get_namespace('mail')]);
    $t->assign('action', $cbpapi_service->getAction());
    $t->assign('account_info', $account_data);
    grn_cbpapi_response($t, __FILE__);
}

function checkParam($user_accounts)
{
    if (count($user_accounts) > 1) {
        foreach ($user_accounts as $key => $user_acc) {
            if ( ! isset($user_acc['children'][0]['attributes']['user_id'])
                 || ! isset($user_acc['children'][0]['attributes']['user_acount_code'])
                 || ! isset($user_acc['children'][1]['attributes']['mail_server_id'])
                 || ! isset($user_acc['children'][1]['attributes']['email'])
                 || ! isset($user_acc['children'][1]['attributes']['acount_name'])
            ) {
                unset($user_accounts[$key]);
                continue;
            }
        }

        for ($i = 0; $i < count($user_accounts) - 1; $i++) {
            for ($j = $i + 1; $j < count($user_accounts); $j++) {
                $mail_server_id_1
                    = $user_accounts[$i]['children'][1]['attributes']['mail_server_id'];
                $mail_server_id_2
                    = $user_accounts[$j]['children'][1]['attributes']['mail_server_id'];

                if ($mail_server_id_1 == $mail_server_id_2) {
                    $mail_address_1
                        = trim($user_accounts[$i]['children'][1]['attributes']['email']);
                    $mail_address_2
                        = trim($user_accounts[$j]['children'][1]['attributes']['email']);
                    if ($mail_address_1 == $mail_address_2) {
                        cb_throw_error(E_GRN_MAIL_DUPLICATE_EMAIL_ADDRESS);
                    }
                }
            }
        }

        return $user_accounts;
    } else {
        if ( ! isset($user_accounts[0]['children'][0]['attributes']['user_id'])) {
            require_once('cbpapi/error_code.csp');
            cb_throw_error(E_GRN_CBPAPI_MISSING_PARAMETER, null,
                ['param' => 'user_id']);
        }

        if ( ! isset($user_accounts[0]['children'][0]['attributes']['user_acount_code'])) {
            require_once('cbpapi/error_code.csp');
            cb_throw_error(E_GRN_CBPAPI_MISSING_PARAMETER, null,
                ['param' => 'user_acount_code']);
        }

        if ( ! isset($user_accounts[0]['children'][1]['attributes']['mail_server_id'])) {
            require_once('cbpapi/error_code.csp');
            cb_throw_error(E_GRN_CBPAPI_MISSING_PARAMETER, null,
                ['param' => 'mail_server_id']);
        }

        if ( ! isset($user_accounts[0]['children'][1]['attributes']['email'])) {
            require_once('cbpapi/error_code.csp');
            cb_throw_error(E_GRN_CBPAPI_MISSING_PARAMETER, null,
                ['param' => 'email']);
        }

        if ( ! isset($user_accounts[0]['children'][1]['attributes']['acount_name'])) {
            require_once('cbpapi/error_code.csp');
            cb_throw_error(E_GRN_CBPAPI_MISSING_PARAMETER, null,
                ['param' => 'acount_name']);
        }

        return $user_accounts;
    }
}

