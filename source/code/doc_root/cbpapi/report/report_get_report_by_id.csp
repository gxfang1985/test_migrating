<?php
if (isset($cbpapi_service)) {
    // get parameters of SOAP message
    $node_parameters = $cbpapi_service->getRequestParameters();

    $report_ids = [];
    $report_ids = $cbpapi_service->selectNodesValue($node_parameters,
        'report_id');
    if ( ! $report_ids) {
        require_once('cbpapi/error_code.csp');
        cb_throw_error(E_GRN_CBPAPI_MISSING_PARAMETER, null,
            ['param' => 'report_id']);
    }

    $validate_report_ids = [];
    foreach ($report_ids as $rid) {
        if (is_numeric($rid)) {
            $validate_report_ids[] = $rid;
        }
    }

    if (count($validate_report_ids) == 0) {
        // SOAP response
        require_once('grn/smarty.csp');
        $t = new GRN_Smarty();
        $t->assign('action', $cbpapi_service->getAction());
        $t->assign('xml_namespaces', [grn_cbpapi_get_namespace('report')]);
        grn_cbpapi_response($t, __FILE__);

        return;
    }

    global $G_container_base;
    $uum = $G_container_base->getInstance('uum');
    $login = $uum->getLoginUser();

    require_once('cbpapi/report_logic.csp');
    $logic = GRN_CBPApi_Report_Logic::getInstance();
    $reports = $logic->getReportListByIdList($login, $validate_report_ids);

    require_once('cbpapi/util.csp');
    foreach ($reports as $rid => $report) {
        $ctime = new CB_TimeStamp();
        $ctime->unix_ts = $report['ctime'];
        $reports[$rid]['creator_date'] = grn_cbpapi_iso8601($ctime);

        $mtime = new CB_TimeStamp();
        $mtime->unix_ts = $report['mtime'];
        $reports[$rid]['modifier_date'] = grn_cbpapi_iso8601($mtime);
    }

    // SOAP response
    require_once('grn/smarty.csp');
    $t = new GRN_Smarty();
    $t->assign('action', $cbpapi_service->getAction());
    $t->assign('xml_namespaces', [grn_cbpapi_get_namespace('report')]);
    $t->assign('reports', $reports);

    grn_cbpapi_response($t, __FILE__);

}
