<?php
if (isset($cbpapi_service)) {
    $request = $cbpapi_service->getRequestParameters();

    $required_fields = ['report_id', 'offset', 'limit'];
    foreach ($required_fields as $field) {
        if ( ! isset($request['attributes'][$field])) {
            require_once('cbpapi/error_code.csp');
            cb_throw_error(E_GRN_CBPAPI_MISSING_PARAMETER, null,
                ['param' => $field]);
        }
    }

    $relation_id = $request['attributes']['report_id'];
    $offset = intval(@$request['attributes']['offset']);
    $limit = intval(@$request['attributes']['limit']);

    global $G_container_base;
    $uum = $G_container_base->getInstance('uum');
    $login = $uum->getLoginUser();
    unset($uum);

    require_once('report/controller_util.csp');
    $report_util = GRN_Report_Report_Controller_Utility::getInstance();
    if ( ! $report_util->isViewable($login->getOID(), $relation_id)) {
        require_once('report/error_code.csp');
        cb_throw_error(E_GRN_RPRT_REPORT_DENY_ACCESS);
    }

    require_once('cbpapi/report_logic.csp');
    $logic = GRN_CBPApi_Report_Logic::getInstance();
    $follows_for_view = $logic->getFollows($relation_id, $offset, $limit);
    foreach ($follows_for_view as $follow_id => $follow) {
        $date = grn_cbpapi_iso8601($follow['ctime']);
        $follows_for_view[$follow_id]['creator_date'] = $date;
    }

    //Create Parameter Translation Map for Follow File
    $translation_map_follow_file = [
        'id'     => '_id',            //Follow File ID
        'follow' => 'follow',         //Follow ID
        'file'   => 'file',           //File ID
    ];

    //Get Follow File
    $follow_file_util = GRN_Report_FollowFile_Controller_Utility::getInstance();
    $follow_file_list
        = $follow_file_util->getListViewByFollowIdList($translation_map_follow_file,
        array_keys($follows_for_view));

    foreach ($follow_file_list as $follow_id => $files) {
        $follows_for_view[$follow_id]['attach_files'] = $files;
    }

    // SOAP response
    require_once('grn/smarty.csp');
    $t = new GRN_Smarty();
    $t->assign('action', $cbpapi_service->getAction());
    $t->assign('xml_namespaces', [grn_cbpapi_get_namespace('report')]);
    $t->assign('follows', $follows_for_view);

    grn_cbpapi_response($t, __FILE__);
}
