<?php
if (isset($cbpapi_service)) {
    $action = $cbpapi_service->getAction();
    global $G_container_base;
    $uum =& $G_container_base->getInstance('uum');
    $login =& $uum->getLoginUser();
    // get parameters of SOAP message
    $node_parameters = &$cbpapi_service->getRequestParameters();
    $candidate_items_version = [];
    $book_id = null;
    if (array_key_exists('attributes', $node_parameters)) {
        if (array_key_exists('book_id', $node_parameters['attributes'])) {
            $book_id = $node_parameters['attributes']['book_id'];
        } else {
            require_once('cbpapi/error_code.csp');
            cb_throw_error(E_GRN_CBPAPI_MISSING_PARAMETER, null,
                ['param' => 'book_id']);
        }
    }
    if (0 == strlen($book_id) || $book_id <= 0) {
        cb_throw_error(E_GRN_ADDRESS_INVALID_BOOK_ID);
    }
    // アドレス帳を取得する
    require_once('address/application.csp');
    $app_locator = GRN_ApplicationLocator::instance();
    /** @var GRN_Address_Application $app */
    $app =& $app_locator->getInstance(GRN_ADDRESS_APPLICATION_ID);

    $book_manager =& $app->getBookManager();

    // 使用権限を取得する
    require_once('address/access.csp');
    $access_manager = GRN_Address_AccessManager::getInstance();
    if ( ! ($row =& $access_manager->getAbstractData(GRN_ADDRESS_AVAILABLE))) {
        assert('FALSE');
    }

    // ダイナミックロールを取得する
    $dynamic_roles = $uum->listGrantedRoles();

    //共有アドレス帳の使用権限を評価する
    $authorities = ['shared_address'];
    $security_model
        = $access_manager->getSecurityModel($row);
    $access = $access_manager->evaluateAccess($row, $login, $dynamic_roles,
        $authorities, $security_model);
    $access_for_view['shared_address']
        = $access_manager->isAllowedAccess($access, $authorities,
        $security_model);

    $books = [];
    $cards = [];
    if ($book_id > 0) {
        if ( ! $access_for_view['shared_address']) {
            cb_throw_error(E_GRN_ADDRESS_ACCESS_DENY_SHARED_ADDRESS);
        }
        // 共有アドレスブック一覧を取得する
        $books = $book_manager->listSharedAddressBooks();
        if ( ! array_key_exists($book_id, $books)) {
            cb_throw_error(E_GRN_ADDRESS_INVALID_BOOK_ID);
        }
        $book =& $books[$book_id];
        $row =& $book->getRow();
        $authorities = ['browse'];
        $access = $access_manager->evaluateAccess($row, $login,
            $dynamic_roles, $authorities);
        $security_model = $access_manager->getSecurityModel($row);
        if ( ! $access_manager->isAllowedAccess($access, $authorities,
            $security_model)
        ) {
            cb_throw_error(E_GRN_ADDRESS_ACCESS_DENY_EDITING);
        }
        require_once('cbpapi/address_logic.csp');
        $address = GRN_CBPApi_Address_Logic::getInstance();
        $candidate_items_version = $address->getCardsIdList($book);
        require_once('cbpapi/util.csp');
        $item_name = 'card_item';
        $items_version = grn_cbpapi_parse_item_versions($node_parameters,
            $item_name);
        $cards = grn_cbpapi_compare_item_versions($items_version,
            $candidate_items_version);
    }
    require_once('grn/smarty.csp');
    $t = new GRN_Smarty;
    $t->assign('xml_namespaces', [grn_cbpapi_get_namespace('address')]);
    $t->assign('cards', $cards);
    $t->assign('action', $action);
    grn_cbpapi_response($t, __FILE__);
}

