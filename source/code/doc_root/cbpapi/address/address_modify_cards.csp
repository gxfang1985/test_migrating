<?php
if (isset($cbpapi_service)) {
    $action = $cbpapi_service->getAction();
    // get parameters of SOAP message
    $node_parameters = &$cbpapi_service->getRequestParameters();
    $node_modify_card = &$cbpapi_service->selectNodes($node_parameters,
        'modify_card');
    if ( ! isset($node_modify_card)) {
        require_once('cbpapi/error_code.csp');
        cb_throw_error(E_GRN_CBPAPI_MISSING_PARAMETER, null,
            ['param' => 'modify_card']);
    }

    $cards_for_view = [];
    foreach (array_keys($node_modify_card) as $modify_card_key) {
        require_once('cbpapi/address_logic.csp');
        $cbpapi_address_logic = GRN_CBPApi_Address_Logic::getInstance();
        $card_params = [];
        $card_params
            = $cbpapi_address_logic->getInputParamerters($node_modify_card[$modify_card_key]);
        $bid = null;
        if (array_key_exists('bid', $card_params)) {
            $bid = $card_params['bid'];
        }
        if (0 == strlen($bid) || ! is_numeric($bid)) {
            cb_throw_error(E_GRN_ADDRESS_INVALID_BOOK_ID);
        }

        if (array_key_exists('cid', $card_params)) {
            $cid = $card_params['cid'];
        }
        if (0 == strlen($cid)) {
            cb_throw_error(E_GRN_ADDRESS_INVALID_CARD_ID);
        }

        require_once('fw/string_util.csp');
        $subject = @ cb_trim($card_params['subject']);
        if (strlen($subject) == 0) {
            require_once('address/error_code.csp');
            cb_throw_error(E_GRN_ADDRESS_SUBJECT_NOT_INPUTTED);
        }

        // アドレス帳を取得する
        require_once('address/application.csp');
        $app_locator = GRN_ApplicationLocator::instance();
        /** @var GRN_Address_Application $app */
        $app =& $app_locator->getInstance(GRN_ADDRESS_APPLICATION_ID);

        $book_manager =& $app->getBookManager();

        // ログインユーザーを取得する
        global $G_container_base;
        $uum =& $G_container_base->getInstance('uum');
        $login =& $uum->getLoginUser();
        $login_id = $login->getOID();

        // 使用権限を取得する
        require_once('address/access.csp');
        $access_manager = GRN_Address_AccessManager::getInstance();
        if ( ! ($row
            =& $access_manager->getAbstractData(GRN_ADDRESS_AVAILABLE))
        ) {
            assert('FALSE');
        }

        // ダイナミックロールを取得する
        $dynamic_roles = $uum->listGrantedRoles();

        // 使用権限を評価する
        $authorities = ['private_address', 'shared_address'];
        $security_model = $access_manager->getSecurityModel($row);
        $access = $access_manager->evaluateAccess($row, $login,
            $dynamic_roles, $authorities, $security_model);

        if (0 > $bid) {
            // 個人アドレス帳の使用権限を評価する
            $authorities = ['private_address'];
            if ( ! $access_manager->isAllowedAccess($access, $authorities,
                $security_model)
            ) {
                cb_throw_error(E_GRN_ADDRESS_ACCESS_DENY_PRIVATE_ADDRESS);
            }

            // 個人アドレスブックを取得する
            if ( ! ($book
                =& $book_manager->getPrivateAddressBookByUserId($login_id))
            ) {
                cb_throw_error(E_GRN_ADDRESS_CARD_NOT_FOUND);
            }
        } else {
            // 共有アドレス帳の使用権限を評価する
            $authorities = ['shared_address'];
            if ( ! $access_manager->isAllowedAccess($access, $authorities,
                $security_model)
            ) {
                cb_throw_error(E_GRN_ADDRESS_ACCESS_DENY_SHARED_ADDRESS);
            }

            // 共有アドレスブックを取得する
            if ( ! ($book =& $book_manager->getSharedAddressBook($bid))) {
                cb_throw_error(E_GRN_ADDRESS_SHARED_ADDRESS_BOOK_NOT_FOUND);
            }

            // 共有アドレス帳の閲覧、編集権限を評価する
            $row =& $book->getRow();
            $authorities = ['browse', 'editing'];
            $access = $access_manager->evaluateAccess($row, $login,
                $dynamic_roles, $authorities);
            $security_model = $access_manager->getSecurityModel($row);
            if ( ! $access_manager->isAllowedAccess($access, $authorities,
                $security_model)
            ) {
                cb_throw_error(E_GRN_ADDRESS_ACCESS_DENY_EDITING);
            }
        }

        // アドレスを取得する
        if ( ! ($data =& $book->getData($cid))) {
            cb_throw_error(E_GRN_ADDRESS_CARD_NOT_FOUND);
        }

        $properties = $card_params;

        // get FILE modify process 
        $book_type = $book->getDataType();
        $table_name = strtolower('tab_grn_address_' . $book_type . 'item');
        if (array_key_exists('extensions', $properties)) {
            $extension = $properties['extensions'];
            foreach ($extension as $field_code => $value) {
                $key = $cbpapi_address_logic->getExtensionIdByCode($field_code,
                    $table_name);
                if (is_null($key)) {
                    cb_throw_error(E_GRN_ADDRESS_INVALID_EXTENDED_ITEM_ID);// error: invalid code of the item .
                }
                $properties[$key] = $value;
            }
            unset($properties['extensions']);
        }

        if (array_key_exists('image', $properties)) {
            $file = $properties['image'];
            $file_uploaded = cbpapi_upload_file($file);
            $properties['image'] = $file_uploaded;
        }

        if (array_key_exists('files', $properties)) {
            $file = $properties['files'];
            foreach ($file as $field_code => $value) {
                $key = $cbpapi_address_logic->getExtensionIdByCode($field_code,
                    $table_name);
                if (is_null($key)) {
                    cb_throw_error(E_GRN_ADDRESS_INVALID_EXTENDED_ITEM_ID);// error: invalid code of the item file.
                }
                $file_uploaded = cbpapi_upload_file($value);
                $properties[$key] = $file_uploaded;
            }
            unset($properties['files']);
        }
        unset($properties['map']);
        // アドレスを変更する
        $data->setProperties($properties);
        $card_id = [];
        $card_id[] = $cid;

        $cards_for_view[] = $cbpapi_address_logic->getCardsForViewByIds($book,
            $card_id);

    }
    require_once('grn/smarty.csp');
    $t = new GRN_Smarty;
    $t->assign('cards_for_view', $cards_for_view);
    $t->assign('xml_namespaces', [grn_cbpapi_get_namespace('address')]);
    $t->assign('address_namespace',
        'xmlns="http://schemas.cybozu.co.jp/address/2008"');
    $t->assign('action', $action);
    grn_cbpapi_response($t, __FILE__);
}

