<?php

if (isset($cbpapi_service)) {
    $node_parameter =& $cbpapi_service->getRequestParameters();
    $action = $cbpapi_service->getAction();

    global $G_container_base;
    $uum =& $G_container_base->getInstance('uum');
    $login =& $uum->getLoginUser();
    $login_id = $login->getOID();

    require_once('address/application.csp');
    $app_locator = GRN_ApplicationLocator::instance();
    /** @var GRN_Address_Application $app */
    $app =& $app_locator->getInstance(GRN_ADDRESS_APPLICATION_ID);
    if ( ! is_object($app) || ! is_a($app, 'GRN_Address_Application')) {
        cb_throw_error(E_GRN_APPLICATION_NOT_AVAILABLE);
    }
    $book_manager =& $app->getBookManager();

    // Using permission
    require_once('address/access.csp');
    $access_manager = GRN_Address_AccessManager::getInstance();
    if ( ! ($row =& $access_manager->getAbstractData(GRN_ADDRESS_AVAILABLE))) {
        assert('FALSE');
    }

    // Get dynamic roles
    $dynamic_roles = $uum->listGrantedRoles();

    // Evaluate using permission
    $security_model = $access_manager->getSecurityModel($row);
    $access = $access_manager->evaluateAccess($row, $login,
        $dynamic_roles, ['shared_address'], $security_model);

    // Get shared books's using permission
    $is_allowed = $access_manager->isAllowedAccess($access,
        ['shared_address'], $security_model);
    $books = [];
    $allow_books = [];
    $books_for_view = [];
    $accesses = [];
    require_once('address/view_util.csp');
    $view_util = GRN_Address_ViewUtil::getInstance();
    if ($is_allowed) {
        $books = $book_manager->listSharedAddressBooks();

        if (0 < count($books)) {
            $rows = [];
            foreach (array_keys($books) as $book_id) {
                $rows[$book_id] =& $books[$book_id]->getRow();
            }
            $authorities = ['browse', 'editing'];
            $accesses = $access_manager->evaluateAccesses($rows, $login,
                $dynamic_roles, $authorities);

            foreach ($accesses as $book_id => $access) {
                $row =& $rows[$book_id];
                $security_model = $access_manager->getSecurityModel($row);
                if ($access_manager->isAllowedAccess($accesses[$book_id],
                    $authorities, $security_model)
                ) {
                    $allow_books[$book_id] =& $row;
                }
            }

            $books_for_view = $view_util->listBooks($books, $allow_books);
        }
    }

    // SOAP response
    require_once('grn/smarty.csp');
    $t = new GRN_Smarty();

    $t->assign('xml_namespaces', [grn_cbpapi_get_namespace('address')]);
    $t->assign('action', $action);
    $t->assign('books', $books_for_view);

    grn_cbpapi_response($t, __FILE__);
}

