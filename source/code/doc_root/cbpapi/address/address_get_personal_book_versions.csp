<?php
if (isset($cbpapi_service)) {
    $action = $cbpapi_service->getAction();
    // get parameters of SOAP message
    $node_parameters = &$cbpapi_service->getRequestParameters();
    // アドレス帳を取得する
    require_once('address/application.csp');
    $app_locator = GRN_ApplicationLocator::instance();
    /** @var GRN_Address_Application $app */
    $app =& $app_locator->getInstance(GRN_ADDRESS_APPLICATION_ID);
    $book_manager =& $app->getBookManager();
    // ログインユーザーを取得する
    global $G_container_base;
    $uum =& $G_container_base->getInstance('uum');
    $login =& $uum->getLoginUser();
    // 使用権限を取得する
    require_once('address/access.csp');
    $access_manager = GRN_Address_AccessManager::getInstance();
    if ( ! ($row =& $access_manager->getAbstractData(GRN_ADDRESS_AVAILABLE))) {
        assert('FALSE');
    }
    // ダイナミックロールを取得する
    $dynamic_roles = $uum->listGrantedRoles();

    // 個人アドレス帳の使用権限を評価する
    $authorities = ['private_address'];
    $security_model = $access_manager->getSecurityModel($row);
    $access = $access_manager->evaluateAccess($row, $login,
        $dynamic_roles, $authorities, $security_model);
    if ( ! $access_manager->isAllowedAccess($access, $authorities,
        $security_model)
    ) {
        cb_throw_error(E_GRN_ADDRESS_ACCESS_DENY_PRIVATE_ADDRESS);
    }
    // 個人アドレスブックを取得する
    if ( ! ($book
        =& $book_manager->getPrivateAddressBookByUserId($login->getOID()))
    ) {
        if ( ! ($book =& $book_manager->addPrivateAddressBook('cyde',
            $login->getOID(), []))
        ) {
            cb_throw_error(E_GRN_ADDRESS_PRIVATE_ADDRESS_BOOK_NOT_FOUND);
        }
    }
    $candidate_items_version = [];
    $candidate_items_version = listPrivateAddressBooksVersions($login);
    require_once('cbpapi/util.csp');
    $item_name = 'book_item';
    $items_version = grn_cbpapi_parse_item_versions($node_parameters,
        $item_name);

    $books = grn_cbpapi_compare_item_versions($items_version,
        $candidate_items_version);
    require_once('grn/smarty.csp');
    $t = new GRN_Smarty;
    $t->assign('xml_namespaces', [grn_cbpapi_get_namespace('address')]);
    $t->assign('books', $books);
    $t->assign('action', $action);
    grn_cbpapi_response($t, __FILE__);
}

function listPrivateAddressBooksVersions(&$login)
{
    //get db connection
    $app_locator = GRN_ApplicationLocator::instance();
    $dbconn =& $app_locator->getConnection('address');
    $query
        = 'SELECT _id, col_mtime FROM tab_grn_address_privatebook WHERE col_user='
          . $login->getOID();
    $query = cb_queryf($dbconn, $query);
    $query = $dbconn->select_format($query, 0, -1, CB_DATABASE_NO_LOCK);
    $result = $dbconn->query($query);
    if ($result === false) {
        $dbconn->throwError(['query' => 'failed query on SELECT: ' . $query]);
    }
    $books = [];
    while ($row = $dbconn->fetch_assoc($result)) {
        $book = [];
        $book['id'] = $row['_id'];
        $book['version'] = $row['col_mtime'];
        $books[$row['_id']] = $book;
    }

    // 結果の開放
    $dbconn->free_result($result);

    return $books;
}
