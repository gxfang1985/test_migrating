<?php
if (isset($cbpapi_service)) {
    $action = $cbpapi_service->getAction();
    $node_parameter =& $cbpapi_service->getRequestParameters();
    $mygroup_ids = $cbpapi_service->selectNodesValue($node_parameter,
        'my_address_group_id');
    if ( ! isset($mygroup_ids)) {
        require_once('cbpapi/error_code.csp');
        cb_throw_error(E_GRN_CBPAPI_MISSING_PARAMETER, null,
            ['param' => 'my_address_group_id']);
    }

    global $G_container_base;
    $uum =& $G_container_base->getInstance('uum');
    $login =& $uum->getLoginUser();

    require_once('address/mygroup_logic.csp');
    $mygroup_logic = GRN_Address_MyGroup_Logic::getInstance();

    require_once('address/mygroup_data_logic.csp');
    $data_logic = GRN_Address_MyGroupData_Logic::getInstance();

    include('_mygroup_book_access.csp');

    $mygroup_for_view = [];
    foreach ($mygroup_ids as $mgid) {
        $mygroup =& $mygroup_logic->getMyGroup($login, $mgid);
        if ($mygroup == false) {
            continue;
        }
        $mygroup_data = $data_logic->listGroupData($mygroup, $allow_books);

        $cards = [];
        $users = [];
        foreach ($mygroup_data as $key => $data) {
            if ($data['type'] == GRN_ADDRESS_MYGROUP_DATA_TYPE_USER) {
                $users[] = ['id' => $data['card_id']];
            } else {
                if ($data['type'] == GRN_ADDRESS_MYGROUP_DATA_TYPE_SHARED) {
                    $cards[] = ['id' => $data['card_id'], 'type' => 'shared'];
                } else // private book
                {
                    $cards[] = ['id' => $data['card_id'], 'type' => 'private'];
                }
            }
        }
        $mtime = $mygroup->get('mtime');
        $mygroup_for_view[$mgid] = [
            'id'          => $mgid,
            'name'        => $mygroup->get('name'),
            'version'     => $mtime->unix_ts,
            'description' => $mygroup->get('description')
        ];
        $mygroup_for_view[$mgid]['users'] = $users;
        $mygroup_for_view[$mgid]['cards'] = $cards;
    }

    // SOAP response
    require_once('grn/smarty.csp');
    $t = new GRN_Smarty();

    $t->assign('xml_namespaces', [grn_cbpapi_get_namespace('address')]);
    $t->assign('action', $action);
    $t->assign('mygroups', $mygroup_for_view);

    grn_cbpapi_response($t, __FILE__);
}
