<?php

if (isset($cbpapi_service) || true) {
    $action = $cbpapi_service->getAction();
    $node_parameters =& $cbpapi_service->getRequestParameters();
    $my_address_groups = $cbpapi_service->selectNodes($node_parameters,
        'my_address_group');
    if ( ! isset($my_address_groups)) {
        require_once('cbpapi/error_code.csp');
        cb_throw_error(E_GRN_CBPAPI_MISSING_PARAMETER, null,
            ['param' => 'my_address_group']);
    }
    foreach ($my_address_groups as $group) {
        if ( ! isset($group['attributes']['id'])) {
            require_once('cbpapi/error_code.csp');
            cb_throw_error(E_GRN_CBPAPI_MISSING_PARAMETER, null,
                ['param' => 'id']);
        }
        if ( ! isset($group['attributes']['name'])) {
            require_once('cbpapi/error_code.csp');
            cb_throw_error(E_GRN_CBPAPI_MISSING_PARAMETER, null,
                ['param' => 'name']);
        }
    }

    global $G_container_base;
    $uum =& $G_container_base->getInstance('uum');
    $user =& $uum->getLoginUser();

    require_once('address/mygroup_logic.csp');
    $mygroup = GRN_Address_MyGroup_Logic::getInstance();

    $my_groups_for_view = [];
    foreach ($my_address_groups as $group) {
        $mgid = $group['attributes']['id'];
        if (array_key_exists($mgid, $my_groups_for_view)) {
            continue;
        }
        $name = $group['attributes']['name'];
        if ( ! isset($group['attributes']['description'])) {
            $memo = '';
            $tmp_group = $mygroup->getMyGroupInfo($user, $mgid);
            if ( ! $tmp_group) {
                cb_throw_error(E_GRN_ADDRESS_MYGROUP_NOT_FOUND);
            }
            $memo = $tmp_group['memo'];
        } else {
            $memo = $group['attributes']['description'];
        }

        if ( ! ($mygroup->modifyMyGroup($user, $mgid, $name, $memo))) {
            cb_throw_error(E_GRN_ADDRESS_MYGROUP_NOT_FOUND);
        }

        // make group for view
        $mgroup = $mygroup->getMyGroup($user,
            $mgid);
        $my_groups_for_view[$mgid]['id'] = $mgid;
        $my_groups_for_view[$mgid]['name'] = $name;
        $my_groups_for_view[$mgid]['description'] = $memo;
        $mtime = $mgroup->get('mtime');
        $my_groups_for_view[$mgid]['version'] = $mtime->unix_ts;
    }

    //response SOAP message
    require_once("grn/smarty.csp");
    $t = new GRN_Smarty;

    $t->assign('xml_namespaces', [grn_cbpapi_get_namespace('address')]);
    $t->assign('action', $action);
    $t->assign('my_groups', $my_groups_for_view);

    grn_cbpapi_response($t, __FILE__);
}

