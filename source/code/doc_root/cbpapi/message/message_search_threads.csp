<?php
if (isset($cbpapi_service)) {
    $request = $cbpapi_service->getRequestParameters();
    // check required field
    $required_fields = [
        'text',
        'title_search',
        'body_search',
        'from_search',
        'addressee_search',
        'follow_search'
    ];
    foreach ($required_fields as $field) {
        if ( ! isset($request['attributes'][$field])) {
            require_once('cbpapi/error_code.csp');
            cb_throw_error(E_GRN_CBPAPI_MISSING_PARAMETER, null,
                ['param' => $field]);
        }
    }

    global $G_container_base;
    $uum = $G_container_base->getInstance('uum');
    $login = $uum->getLoginUser();
    unset($uum);

    require_once('message/search_logic.csp');
    $search = new GRN_Message_SearchLogic();

    $search_text = $request['attributes']['text'];

    $I18N = CB_I18N::getInstance();
    $timezone = $I18N->getCurrentTimezone();

    $start_ts = null;
    if (isset($request['attributes']['start'])) {
        $start = grn_cbpapi_parse_iso8601($request['attributes']['start']);
        // convert timezone
        $start_ts = new CB_TimeStampEx();
        if ($start) {
            $start_ts->setDateTime($start, 'UTC');
            $start_ts->setTimeZone($timezone);
        }
    }

    $last_ts = null;
    if (isset($request['attributes']['end'])) {
        $end = grn_cbpapi_parse_iso8601($request['attributes']['end']);
        // convert timezone
        $last_ts = new CB_TimeStampEx();
        $last_ts->setDateTime($end, 'UTC');
        $last_ts->setTimeZone($timezone);
        if ($start_ts->compare($last_ts) > 0) {
            $app_name = cb_msg(GRN_MESSAGE_MODULEID, 'application_name');
            require_once('message/error_code.csp');
            cb_throw_error(E_GRN_MESSAGE_INVALID_TERM_PARAM,
                ['app_name' => $app_name]);
        }
    } else {
        $last_ts = new CB_TimeStampEx();
    }

    $search_keys = [];
    if (isset($request['attributes']['search_sub_folders'])
        && strcmp($request['attributes']['search_sub_folders'], 'true') === 0
    ) {
        $search_keys['sub'] = true;
    }
    if (strcmp($request['attributes']['title_search'], 'true') === 0) {
        $search_keys['subject'] = true;
    }
    if (strcmp($request['attributes']['body_search'], 'true') === 0) {
        $search_keys['data'] = true;
    }
    if (strcmp($request['attributes']['from_search'], 'true') === 0) {
        $search_keys['sender'] = true;
    }
    if (strcmp($request['attributes']['addressee_search'], 'true') === 0) {
        $search_keys['addressee'] = true;
    }
    if (strcmp($request['attributes']['follow_search'], 'true') === 0) {
        $search_keys['follow'] = true;
    }
    if (is_null($subfolder = @$search_keys['sub'])) {
        $subfolder = false;
    }

    $hid = '-1';
    if (isset($request['attributes']['folder_id'])) {
        $hid = $request['attributes']['folder_id'];
        require_once('message/folder_logic.csp');
        require_once('message/resources.csp');
        $folder_logic = new GRN_Message_FolderLogic();
        if ( ! is_numeric($hid)
             || strcmp($folder_logic->getFolderType($login, $hid),
                GRN_MESSAGE_ROOTFOLDER) === 0
        ) {
            $hid = '-1';
        }
    }

    $retval = $search->getSearchItems($login,
        $search_keys, $search_text,
        0, -1,
        $start_ts, $last_ts,
        $hid, $subfolder);

    $thread_ids = [];
    foreach ($retval as $ret) {
        $thread_ids[$ret['rid']] = $ret['mid'];
    }
    require_once('cbpapi/message_logic.csp');
    $message_logic = GRN_CBPApi_Message_Logic::getInstance();
    $threads_for_view = $message_logic->getMessageForViewByIds($login,
        $thread_ids, true);

    // SOAP response
    require_once('grn/smarty.csp');
    $t = new GRN_Smarty();
    $t->assign('action', $cbpapi_service->getAction());
    $t->assign('xml_namespaces', [grn_cbpapi_get_namespace('message')]);
    $t->assign('threads', $threads_for_view);

    grn_cbpapi_response($t, __FILE__);
}
