<?php
if (isset($cbpapi_service)) {
    $action = $cbpapi_service->getAction();
    global $G_container_base;
    $uum = $G_container_base->getInstance('uum');
    $login = $uum->getLoginUser();

    // get parameters of SOAP message
    $node_parameters = $cbpapi_service->getRequestParameters();
    $node_modify_thread = $cbpapi_service->selectNodes($node_parameters,
        'modify_thread');
    if ( ! $node_modify_thread) {
        require_once('cbpapi/error_code.csp');
        cb_throw_error(E_GRN_CBPAPI_MISSING_PARAMETER, null,
            ['param' => 'modify_thread']);
    }
    $threads_for_view = [];
    $modify_thread_ids = [];
    require_once('cbpapi/message_logic.csp');
    $cbpapi_message_logic = GRN_CBPApi_Message_Logic::getInstance();
    foreach (array_keys($node_modify_thread) as $modify_thread_key) {
        $params = [];
        $params
            = $cbpapi_message_logic->getInputParamerters($cbpapi_service,
            $node_modify_thread[$modify_thread_key]);
        $message_id = @$params['id'];
        $message = $cbpapi_message_logic->hasPrivilege($login, $message_id);
        if ($message === false) {
            require_once('message/error_code.csp');
            cb_throw_error(E_GRN_MESSAGE_MESSAGE_NOT_FOUND,
                [
                    'app_name' => cb_msg(GRN_MESSAGE_MODULEID,
                        'application_name')
                ],
                [
                    'app_name' => cb_msg(GRN_MESSAGE_MODULEID,
                        'application_name')
                ],
                [
                    'app_name' => cb_msg(GRN_MESSAGE_MODULEID,
                        'application_name')
                ]);
        }
        require_once('fw/string_util.csp');
        $title = @ cb_trim($params['subject']);
        if (strlen($title) <= 0) {
            require_once('message/error_code.csp');
            cb_throw_error(E_GRN_MESSAGE_SUBJECT_NOT_INPUTTED);
        }

        // follow
        $format = 0;
        $data = array_key_exists('data', $params) ? $params['data'] : '';

        // get addressees data
        $sUIDs = @ $params['sUID'];
        if ( ! is_array($sUIDs) || count($sUIDs) <= 0) {
            require_once('message/error_code.csp');
            cb_throw_error(E_GRN_MESSAGE_ADDRESSEES_NOT_SELECTED,
                null,
                [
                    'app_name' => cb_msg(GRN_MESSAGE_MODULEID,
                        'application_name')
                ]);
        }

        if ( ! $uum->isAllActiveUsers($sUIDs)) {
            cb_throw_error(E_GRN_USER_NOT_FOUND);
        }

        require_once('grn/uum_util.csp');
        $uum_util = GRN_UumUtil::getInstance();
        $uum_util->selectUsers($login, $sUIDs);

        $addressees = [];
        foreach ($sUIDs as $key => $sUID) {
            $addressee = [];
            $addressee['order'] = $key;
            $addressees[$sUID] = $addressee;
        }
        $message_logic = new GRN_Message_Logic();

        // メッセージのオーナが宛先に存在しているか
        $current_addressees = $message_logic->getAddressees($login, $message_id,
            true);
        $owner = $message_logic->getMessageOwner($message_id);
        if ( ! $owner) {
            require_once('grn/error_code.csp');
            cb_throw_error(E_GRN_USER_NOT_FOUND);
        }
        $owner_id = $owner->getOID();

        $include_owner = false;
        if (is_array($current_addressees) && count($current_addressees) > 0) {
            foreach ($current_addressees as $current_addressee) {
                if ($current_addressee['id'] == $owner_id) {
                    $include_owner = true;
                    break;
                }
            }
        }
        if ($include_owner) {
            if ( ! array_key_exists($owner_id, $addressees)) {
                require_once('message/error_code.csp');
                cb_throw_error(E_GRN_MESSAGE_OWNER_NOT_FOUND);
            }
        }

        // attached files
        $attached_files = [];

        // old attached files
        require_once('message/file.csp');
        $fm = new GRN_Message_FileManager();
        $old_attached_files = $fm->getMessageFiles($message_id, false);
        $remove_file_ids = [];
        if (array_key_exists('remove_file_ids', $params)) {
            $remove_file_ids = $params['remove_file_ids'];
            if (count($remove_file_ids) > 0) {
                foreach (array_keys($remove_file_ids) as $remove_key) {
                    if (array_key_exists($remove_key, $old_attached_files)) {
                        require_once('message/file.csp');
                        $fm = new GRN_Message_FileManager();
                        $file =& $fm->getFile($remove_key);
                        if ( ! $file || ! $file->isCreator($login)) {
                            require_once('message/error_code.csp');
                            cb_throw_error(E_GRN_MESSAGE_FILE_NOT_FOUND,
                                null,
                                [
                                    'app_name' => cb_msg(GRN_MESSAGE_MODULEID,
                                        'application_name')
                                ]);
                        }

                        $ret = $fm->deleteFile($remove_key, false);
                        if ($ret === false) {
                            require_once('message/error_code.csp');
                            cb_throw_error(E_GRN_MESSAGE_FILE_NOT_FOUND,
                                null,
                                [
                                    'app_name' => cb_msg(GRN_MESSAGE_MODULEID,
                                        'application_name')
                                ]);
                        }
                    }
                }
            }
        }
        // get new attach files
        if (array_key_exists('files', $params)) {
            $files = $params['files'];
            foreach ($files as $file_key => $value) {
                $attached_files['file' . $file_key]
                    = cbpapi_upload_file($value);
            }
        }
        $message_row = $cbpapi_message_logic->modifyMessageByApi($login,
            $message_id, mb_substr($title, 0, 100), $data, $format,
            $attached_files, $addressees);
        if ( ! $message_row) {
            require_once('message/error_code.csp');
            cb_throw_error(E_GRN_MESSAGE_MESSAGE_NOT_FOUND,
                [
                    'app_name' => cb_msg(GRN_MESSAGE_MODULEID,
                        'application_name')
                ],
                [
                    'app_name' => cb_msg(GRN_MESSAGE_MODULEID,
                        'application_name')
                ],
                [
                    'app_name' => cb_msg(GRN_MESSAGE_MODULEID,
                        'application_name')
                ]);
        }
        $mid = $message_row->getOID();
        $modify_thread_ids[] = $mid;

    }

    $cbpapi_message_logic->saveNow();
    // get send for view
    $threads_for_view = $cbpapi_message_logic->getMessageForViewByIds($login,
        $modify_thread_ids);
    require_once('grn/smarty.csp');
    $t = new GRN_Smarty;
    $t->assign('xml_namespaces', [grn_cbpapi_get_namespace('message')]);
    $t->assign('threads', $threads_for_view);
    $t->assign('action', $action);
    grn_cbpapi_response($t, __FILE__);
}

