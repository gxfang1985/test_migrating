<?php
if (isset($cbpapi_service)) {
    $request = $cbpapi_service->getRequestParameters();
    $add_follows = $cbpapi_service->selectNodes($request, 'add_follow');
    if ( ! isset($add_follows)) {
        require_once('cbpapi/error_code.csp');
        cb_throw_error(E_GRN_CBPAPI_MISSING_PARAMETER, null,
            ['param' => 'add_follow']);
    }

    global $G_container_base;
    $uum = $G_container_base->getInstance('uum');
    $login = $uum->getLoginUser();
    unset($uum);

    require_once('cbpapi/message_logic.csp');
    $cbpapi_logic = GRN_CBPApi_Message_Logic::getInstance();

    //$follows = array();
    $thread_ids = [];
    foreach ($add_follows as $follow_tmp) {
        if ( ! isset($follow_tmp['attributes']['thread_id'])) {
            require_once('cbpapi/error_code.csp');
            cb_throw_error(E_GRN_CBPAPI_MISSING_PARAMETER, null,
                ['param' => 'thread_id']);
        }
        $thread_id = $follow_tmp['attributes']['thread_id'];
        if (array_search($thread_id, $thread_ids)) {
            require_once('message/error_code.csp');
            $app_name = cb_msg(GRN_MESSAGE_MODULEID, 'application_name');
            cb_throw_error(E_GRN_MESSAGE_DUPLICATE_MESSAGE, null,
                ['app_name' => $app_name]);
        }
        $follow = $cbpapi_service->selectSingleNode($follow_tmp, 'follow');
        if ( ! isset($follow['attributes']['text'])) {
            require_once('cbpapi/error_code.csp');
            cb_throw_error(E_GRN_CBPAPI_MISSING_PARAMETER, null,
                ['param' => 'text']);
        }

        $add_follow = [];
        $add_follow['creator'] =& $login;
        $add_follow['format_type'] = 0;
        $add_follow['data'] = $follow['attributes']['text'];
        // file
        $files = [];
        $uploaded_files_info = grn_add_follow_get_file_info($cbpapi_service,
            $follow, 'file');
        if (isset($uploaded_files_info) && is_array($uploaded_files_info)) {
            $uploaded_files_content
                = grn_add_follow_get_file_content($cbpapi_service, $follow_tmp,
                'file');

            foreach (array_keys($uploaded_files_info) as $key) {
                $uploaded_files_info[$key]['content']
                    = @$uploaded_files_content[$key];
                $uploaded_files_info[$key]
                    = cbpapi_upload_file($uploaded_files_info[$key]);
            }
            $files = $uploaded_files_info;
        }
        if (cb_trim($add_follow['data']) == '') {
            $found_files = false;
            foreach (array_keys($files) as $name) {
                if ($files[$name]['error'] == UPLOAD_ERR_OK) {
                    $found_files = true;
                    break;
                }
            }
            if ( ! $found_files) {
                require_once('message/error_code.csp');
                cb_throw_error(E_GRN_MESSAGE_FOLLOW_NOT_INPUTTED);
            }
        }
        // write follow
        $message_id = $thread_id;
        $ret = $cbpapi_logic->writeFollow($login, $message_id,
            $add_follow, $files);
        if ($ret === false) {
            require_once('grn/application.csp');
            $locator = GRN_ApplicationLocator::instance();
            $app =& $locator->getInstance('message');
            $app_name = $app->getName();
            unset($app);

            require_once('message/error_code.csp');
            cb_throw_error(E_GRN_MESSAGE_MESSAGE_NOT_FOUND,
                ['app_name' => $app_name],
                ['app_name' => $app_name],
                ['app_name' => $app_name]);
        }
        $thread_ids[$thread_id] = $thread_id;
    }

    $threads_for_view = $cbpapi_logic->getMessageForViewByIds($login,
        $thread_ids);

    // SOAP response
    require_once('grn/smarty.csp');
    $t = new GRN_Smarty();
    $t->assign('action', $cbpapi_service->getAction());
    $t->assign('xml_namespaces', [grn_cbpapi_get_namespace('message')]);
    $t->assign('threads', $threads_for_view);

    grn_cbpapi_response($t, __FILE__);
}

/**
 * get file content
 *
 * @param    object $service   GRN_Util_Api_Service object
 * @param    object $node      current node
 * @param    string $node_name name of node you want to get
 *
 * @return   array      Array: [id],    file content
 *                             [content],
 */
function grn_add_follow_get_file_content(&$service, $current_node, $node_name)
{
    $files =& $service->selectNodes($current_node, $node_name);
    $file_content = null;
    if ( ! isset($files) || ! is_array($files)) {
        return $file_content;
    }
    foreach (array_keys($files) as $key) {
        $file =& $files[$key];
        if ( ! isset($file['attributes']['id'])) {
            require_once('cbpapi/error_code.csp');
            cb_throw_error(E_GRN_CBPAPI_MISSING_PARAMETER, null,
                ['param' => 'id']);
        }
        $file_id = $file['attributes']['id'];
        $content =& $service->selectSingleNode($file, 'content');
        if ( ! isset($content) || ! is_array($content)) {
            require_once('cbpapi/error_code.csp');
            cb_throw_error(E_GRN_CBPAPI_MISSING_PARAMETER, null,
                ['param' => 'content']);
        }
        $file_content[$file_id] = array_key_exists('text', $content)
            ? $content['text'] : '';
    }

    return $file_content;
}

/**
 * get follow's file information
 *
 * @param    object $service   GRN_Util_Api_Service object
 * @param    object $node      current node
 * @param    string $node_name name of node you want to get
 *
 * @return   array      Array: [name],    file information
 *                             [content],
 *                             [mime_type],
 *                             [size]
 */
function grn_add_follow_get_file_info(&$service, $current_node, $node_name)
{
    $files = $service->selectNodes($current_node, $node_name);
    $file_info = null;
    if ( ! isset($files) || ! is_array($files)) {
        return $file_info;
    }
    foreach (array_keys($files) as $key) {
        $file =& $files[$key];
        if ( ! isset($file['attributes']['id'])) {
            require_once('cbpapi/error_code.csp');
            cb_throw_error(E_GRN_CBPAPI_MISSING_PARAMETER, null,
                ['param' => 'id']);
        }
        if ( ! isset($file['attributes']['name'])) {
            require_once('cbpapi/error_code.csp');
            cb_throw_error(E_GRN_CBPAPI_MISSING_PARAMETER, null,
                ['param' => 'name']);
        }
        $file_id = $file['attributes']['id'];
        $file_name = $file['attributes']['name'];
        $file_size = null;
        $mime_type = '';
        if (isset($file['attributes']['size'])) {
            $file_size = intval($file['attributes']['size']);
        }
        if (isset($file['attributes']['mime_type'])) {
            $mime_type = $file['attributes']['mime_type'];
        }
        $file_info[$file_id] = [
            'name'      => $file_name,
            'mime_type' => $mime_type,
            'size'      => $file_size,
            'content'   => ''
        ];
    }

    return $file_info;
}
