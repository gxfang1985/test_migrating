<?php
if (isset($cbpapi_service)) {
    $request = $cbpapi_service->getRequestParameters();
    $thread_ids = $cbpapi_service->selectNodesValue($request, 'thread_id');
    if ( ! isset($thread_ids)) {
        require_once('cbpapi/error_code.csp');
        cb_throw_error(E_GRN_CBPAPI_MISSING_PARAMETER, null,
            ['param' => 'thread_id']);
    }

    global $G_container_base;
    $uum = $G_container_base->getInstance('uum');
    $login = $uum->getLoginUser();
    unset($uum);

    require_once('cbpapi/message_logic.csp');
    $cbpapi_logic = GRN_CBPApi_Message_Logic::getInstance();
    foreach ($thread_ids as $thread_id) {
        $my_message = $cbpapi_logic->hasPrivilege($login, $thread_id);
        if ($my_message === false) {
            // get application name
            $app_name = cb_msg(GRN_MESSAGE_MODULEID, 'application_name');
            require_once('message/error_code.csp');
            cb_throw_error(E_GRN_MESSAGE_MESSAGE_NOT_FOUND,
                ['app_name' => $app_name],
                ['app_name' => $app_name],
                ['app_name' => $app_name]);
        }

        $relation_id = $my_message['rid'];
        $message_id = $my_message['mid'];
        $message = $cbpapi_logic->getMessageByApi($login, $relation_id,
            $message_id);
        if ($message['need_confirm'] == 1 && $message['confirmed'] == 0
            && $message['message_type'] != GRN_MESSAGE_TYPE_SENT
        ) {
            $ret = $cbpapi_logic->confirmMessage($login, $thread_id);
            if ( ! $ret) {
                // get application name
                $app_name = cb_msg(GRN_MESSAGE_MODULEID, 'application_name');
                require_once('message/error_code.csp');
                cb_throw_error(E_GRN_MESSAGE_MESSAGE_NOT_FOUND,
                    ['app_name' => $app_name],
                    ['app_name' => $app_name],
                    ['app_name' => $app_name]);
            }
        }
    }
    $cbpapi_logic->saveNow();
    $threads_for_view = $cbpapi_logic->getMessageForViewByIds($login,
        $thread_ids);

    // SOAP response
    require_once('grn/smarty.csp');
    $t = new GRN_Smarty();
    $t->assign('action', $cbpapi_service->getAction());
    $t->assign('xml_namespaces', [grn_cbpapi_get_namespace('message')]);
    $t->assign('threads', $threads_for_view);

    grn_cbpapi_response($t, __FILE__);
}
