<?php
if (isset($cbpapi_service)) {
    $action = $cbpapi_service->getAction();
    global $G_container_base;
    $uum = $G_container_base->getInstance('uum');
    $login = $uum->getLoginUser();
    // get parameters of SOAP message
    $node_parameters = $cbpapi_service->getRequestParameters();

    $folder_ids = [];
    $folder_ids = $cbpapi_service->selectNodesValue($node_parameters,
        'folder_id');
    if ( ! $folder_ids) {
        require_once('cbpapi/error_code.csp');
        cb_throw_error(E_GRN_CBPAPI_MISSING_PARAMETER, null,
            ['param' => 'folder_id']);
    }
    require_once('cbpapi/message_logic.csp');
    $message_logic = GRN_CBPApi_Message_Logic::getInstance();
    // message instance
    require_once('message/message_logic.csp');
    $folder_logic = new GRN_Message_FolderLogic();
    $folders_for_view = [];
    foreach ($folder_ids as $folder_id) {
        if ( ! is_numeric($folder_id)) {
            require_once('message/error_code.csp');
            cb_throw_error(E_GRN_MESSAGE_FOLDER_NOT_FOUND);
        }
        $folder_for_view = [];
        $folder_info = $folder_logic->getFolderInfo($login, $folder_id);
        if ( ! $folder_info) {
            require_once('message/error_code.csp');
            cb_throw_error(E_GRN_MESSAGE_FOLDER_NOT_FOUND);
        }
        $folder_type = $folder_info['folder_type'];

        if ($folder_type == GRN_MESSAGE_GARBAGEFOLDER) {
            require_once('message/personal_logic.csp');
            $personal_logic = GRN_Message_PersonalLogic::getInstance();
            if ($personal_logic->getUseGarbageBoxAttribute($login) == '0') {
                continue;
            }
        }
        switch ($folder_type) {
            case GRN_MESSAGE_RECEIVINGFOLDER:
                $folder_type = 'received';
                break;
            case GRN_MESSAGE_SENDINGFOLDER:
                $folder_type = 'sent';
                break;
            case GRN_MESSAGE_DRAFTFOLDER:
                $folder_type = 'draft';
                break;
            case GRN_MESSAGE_GARBAGEFOLDER:
                $folder_type = 'trash';
                break;
            case GRN_MESSAGE_ROOTFOLDER:
                $folder_type = 'root';
                break;
            default:
                $folder_type = 'user_folder';
                break;
        }
        $folder_info['folder_type'] = $folder_type;
        $folder_for_view = $folder_info;
        $folder_tree = [];
        $folder_logic->getFolderTree($login, $folder_id, $folder_tree);
        if (array_key_exists('children_num', $folder_tree[$folder_id])
            && $folder_tree[$folder_id]['children_num'] > 0
        ) {
            $root_folder_children = $folder_tree[$folder_id]['children'];
            $folder_for_view['children'] = $root_folder_children;
        }

        // get thread data list
        $threads = $message_logic->getThreadDataList($login,
            [$folder_id]);
        $folder_for_view['threads'] = $threads;
        $folders_for_view[$folder_id] = $folder_for_view;
    }

    require_once('grn/smarty.csp');
    $t = new GRN_Smarty;
    $t->assign('xml_namespaces', [grn_cbpapi_get_namespace('message')]);
    $t->assign('folders', $folders_for_view);
    $t->assign('action', $action);
    grn_cbpapi_response($t, __FILE__);
}
