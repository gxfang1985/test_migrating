<?php
if (isset($cbpapi_service)) {
    // get SOAP action
    $action = $cbpapi_service->getAction();

    // get parameters of SOAP request
    $request_params = $cbpapi_service->getRequestParameters();
    $request_uids = $cbpapi_service->selectNodesValue($request_params,
        'user_id');
    if ( ! $request_uids) {
        require_once('grn/error_code.csp');
        cb_throw_error(E_GRN_CBPAPI_MISSING_PARAMETER, null,
            ['param' => 'user_id']);
    }

    // check exist user
    global $G_container_base;
    $uum = $G_container_base->getInstance('uum');
    $uids = [];
    foreach ($request_uids as $uid) {
        // wrong param
        if (0 == strlen($uid) || ! is_numeric($uid)) {
            continue;
        }
        // user not exist
        $user = $uum->getUser($uid, true);
        if ( ! $user) {
            continue;
        }
        // deleted user 
        $user = $uum->getUser($uid, false);
        if ( ! $user) {
            continue;
        }

        $uids[] = $uid;
    }

    // get authority
    require_once('grn/license.csp');
    $lm = GRN_LicenseManager::getInstance();
    $license_info = $lm->getLicense(GRN_LICENSE_BASESYSTEM);
    $availability_users_view = [];

    require_once('workflow/availability_user.csp');
    $logic = GRN_Workflow_AvailabilityUsers::getInstance();
    $availability_users = $logic->getList($uids);
    foreach ($uids as $uid) {
        $availability_user = [];
        $availability_user['id'] = $uid;
        if (array_key_exists($uid, $availability_users)) {
            $availability_user['workflow'] = 'true';
            $availability_user['keitai'] = 'true';
        } else {
            $availability_user['workflow'] = 'false';
            $availability_user['keitai'] = 'false';
        }
        $availability_users_view[$uid] = $availability_user;
    }

    // SOAP response
    require_once('grn/smarty.csp');
    $t = new GRN_Smarty();

    $t->assign('xml_namespaces', [grn_cbpapi_get_namespace('workflow')]);
    $t->assign('action', $cbpapi_service->getAction());
    $t->assign('users', $availability_users_view);

    grn_cbpapi_response($t, __FILE__);
}
