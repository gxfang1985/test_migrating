<?php
if (isset($cbpapi_service)) {
    $action = $cbpapi_service->getAction();
    global $G_container_base;
    $uum = $G_container_base->getInstance('uum');
    $login = $uum->getLoginUser();

    //check is a Admin?
    require_once('grn/system_logic.csp');
    $system = GRN_System::getInstance();
    if ( ! $system->adminApplication('workflow', $login)) {
        cb_throw_error(E_GRN_NO_SYSTEM_PRIVILEGE);
    }

    // get parameters of SOAP message
    $node_parameters = $cbpapi_service->getRequestParameters();
    $category_ids = [];
    $category_ids = $cbpapi_service->selectNodesValue($node_parameters,
        'category_id');
    if ( ! $category_ids) {
        require_once('cbpapi/error_code.csp');
        cb_throw_error(E_GRN_CBPAPI_MISSING_PARAMETER, null,
            ['param' => 'category_id']);
    }
    require_once('workflow/controller_util.csp');
    $form_util = GRN_Workflow_Form_Controller_Utility::getInstance();
    //Create Parameter Translation for Form
    $translation_map_form = [
        'fid'       => '_id',          //Form ID
        'type'      => 'type',         //Form Type
        'name'      => 'name',         //Form Name
        'active'    => 'active',       //Form Active
        'icon_type' => 'icon_type',    //Form Icon Type
        'icon_id'   => 'icon_id',      //Form Icon ID
        'icon_url'  => 'icon_url',     //Form Icon URL
    ];

    foreach ($category_ids as $category_id) {
        if ($category_id == 0) {
            $form_list_for_view[0] = [];
            continue;
        }
        $form_list_for_view[$category_id]
            = $form_util->getListView($translation_map_form, $category_id);
    }
    require_once('grn/smarty.csp');
    $t = new GRN_Smarty;
    $t->assign('xml_namespaces', [grn_cbpapi_get_namespace('workflow')]);
    $t->assign('form_list_for_view', $form_list_for_view);
    $t->assign('action', $action);
    grn_cbpapi_response($t, __FILE__);
}
