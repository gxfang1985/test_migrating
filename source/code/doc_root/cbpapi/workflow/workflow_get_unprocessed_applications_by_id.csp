<?php
if (isset($cbpapi_service)) {
    $action = $cbpapi_service->getAction();
    // get parameters of SOAP message
    $node_parameters = $cbpapi_service->getRequestParameters();
    $app_id_list = [];
    $app_id_list = $cbpapi_service->selectNodesValue($node_parameters,
        'application_id');
    if ( ! $app_id_list) {
        require_once('cbpapi/error_code.csp');
        cb_throw_error(E_GRN_CBPAPI_MISSING_PARAMETER, null,
            ['param' => 'application_id']);
    }
    require_once("grn/smarty.csp");
    $t = new GRN_Smarty;
    global $G_container_base;
    $uum = $G_container_base->getInstance('uum');
    $login = $uum->getLoginUser();
    $login_id = $login->getOID();
    $agent_id = '';
    //Get Controller Utilities
    require_once('workflow/controller_util.csp');
    $folder_util = GRN_Workflow_Folder_Controller_Utility::getInstance();
    $category_util = GRN_Workflow_Category_Controller_Utility::getInstance();
    //Check Initialize User
    $initialize_flag = false;
    if ($folder_util->isInitializeUser($login_id)) {
        $initialize_flag = true;
        $folder_util->initializeUser($login_id);
    }

    $unprocessed_folder = [];
    require_once('workflow/folder_logic.csp');
    $logic = GRN_Workflow_Folder_Logic::getInstance();
    $unprocessed_folder = $logic->getByForeignKey($login_id,
        'UNPROCESSED_FOLDER_FOREIGN_KEY');

    //Get Current Folder Folder Relation
    $application_ids = [];
    require_once('cbpapi/workflow_logic.csp');
    $cbpapi_logic = GRN_CBPApi_Workflow_Logic::getInstance();
    if ( ! $initialize_flag) {
        //Get Unprocessed Folder Data
        $unprocessed_folder_id = array_key_exists('_id', $unprocessed_folder)
            ? $unprocessed_folder['_id'] : '';
        $app_list_unprocessed_folder
            = $cbpapi_logic->getAppicationByFolderID($login_id,
            $unprocessed_folder_id);
        if (count($app_list_unprocessed_folder) > 0) {
            foreach (array_keys($app_list_unprocessed_folder) as $key) {
                if (array_key_exists('id',
                    $app_list_unprocessed_folder[$key])
                ) {
                    $petition_id = $app_list_unprocessed_folder[$key]['id'];
                    foreach ($app_id_list as $app_id) {
                        if ($petition_id == $app_id) {
                            $application_ids[] = $petition_id;
                        }
                    }
                }
            }
        }
    }
    if (count($app_id_list) != count($application_ids)) {
        cb_throw_error(E_GRN_WRKF_PETITION_NOT_FOUND);
    }
    $application_for_view = [];
    $application_for_view = $cbpapi_logic->getAppsForViewByIds($login,
        $application_ids, $unprocessed_folder, CB_DATABASE_NO_LOCK);
    $t->assign('applications', $application_for_view);
    $t->assign('action', $action);
    $t->assign('xml_namespaces', [grn_cbpapi_get_namespace('workflow')]);
    grn_cbpapi_response($t, __FILE__);
}
