<?php
if (isset($cbpapi_service)) {
    $action = $cbpapi_service->getAction();
    global $G_container_base;
    $uum = $G_container_base->getInstance('uum');
    $login = $uum->getLoginUser();
    // get parameters of SOAP message
    $node_parameters = $cbpapi_service->getRequestParameters();
    $children = array_key_exists('children', $node_parameters)
        ? $node_parameters['children'] : null;
    if (0 >= count($children)) {
        require_once('cbpapi/error_code.csp');
        cb_throw_error(E_GRN_CBPAPI_MISSING_PARAMETER, null,
            ['param' => 'notification_id']);
    }
    $notification_for_view = [];
    foreach (array_keys($children) as $children_key) {
        $node = $children[$children_key]['node_name'];
        $notification = [];
        if ($node == 'notification_id') {
            $required_fields = ['module_id', 'item'];
            if (array_key_exists('attributes', $children[$children_key])) {
                $attributes = $children[$children_key]['attributes'];
                foreach ($required_fields as $field) {
                    if ( ! array_key_exists($field, $attributes)) {
                        require_once('cbpapi/error_code.csp');
                        cb_throw_error(E_GRN_CBPAPI_MISSING_PARAMETER, null,
                            ['param' => $field]);
                    }
                }
                //$module_id = 'grn.' . $attributes['module_id'];
                require_once('cbpapi/util.csp');
                require_once('cbpapi/error_code.csp');
                $module_id = cbpapi_trim_check($attributes['module_id'],
                    E_GRN_CBPAPI_EMPTY_PARAMETER_VALUE, 'module_id');
                $unique_id = cbpapi_trim_check($attributes['item'],
                    E_GRN_CBPAPI_EMPTY_PARAMETER_VALUE, 'item');
                require_once('cbpapi/notification_logic.csp');
                $cbapi_notification_logic
                    = GRN_CBPApi_Notification_Logic::getInstance();
                $notification
                    = $cbapi_notification_logic->getNotificationForView($login,
                    $module_id, $unique_id, 'notify');
                if (is_null($notification)) {
                    continue;
                }
                $notification_key = $module_id
                                    . $unique_id;
                $notification_for_view[$notification_key] = $notification;

            }
        }
    }
    require_once('grn/smarty.csp');
    $t = new GRN_Smarty;
    $t->assign('xml_namespaces', [grn_cbpapi_get_namespace('notification')]);
    $t->assign('notifications', $notification_for_view);
    $t->assign('action', $action);
    grn_cbpapi_response($t, __FILE__);
}

