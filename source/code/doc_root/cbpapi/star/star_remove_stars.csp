<?php

use grn\grn\access\utility\AppAvailabilityUtil;
use grn\grn\access\service\AppAccess;

if (isset($cbpapi_service)) {
    $parameters = $cbpapi_service->getRequestParameters();
    $star_ids = $cbpapi_service->selectNodes($parameters, 'star_item');

    require_once('cbpapi/error_code.csp');

    if ( ! isset($star_ids)) {
        cb_throw_error(E_GRN_CBPAPI_MISSING_PARAMETER, null,
            ['param' => 'star_item']);
    }

    global $G_container_base;
    $uum = $G_container_base->getInstance('uum');
    $login = $uum->getLoginUser();

    require_once('grn/application.csp');
    $locator = GRN_ApplicationLocator::instance();
    $star_app = $locator->getInstance('star');
    $allow_applications = $star_app->getSupportedApplications();

    require_once('cbpapi/star_logic.csp');
    $star_logic = GRN_CBPApi_StarLogic::getInstance();
    $appid_list_allow_external_access
        = AppAccess::getAvailabilityExternalAppIdsByUserId($login->getOID(),
        AppAvailabilityUtil::getActiveAppIds());
    $deleted_star_list = [];
    foreach ($star_ids as $star) {
        if (isset($star['attributes'])) {
            $requireds = ['module_id', 'item'];
            foreach ($requireds as $field) {
                if ( ! array_key_exists($field, $star['attributes'])) {
                    cb_throw_error(E_GRN_CBPAPI_MISSING_PARAMETER, null,
                        ['param' => $field]);
                }
            }
            $module_id = cbpapi_trim_check($star['attributes']['module_id'],
                E_GRN_CBPAPI_EMPTY_PARAMETER_VALUE, 'module_id');
            if (array_search($module_id, $allow_applications) === false) {
                require_once('star/error_code.csp');
                cb_throw_error(E_GRN_STAR_INVALID_MODULE_ID);
            }
            if ( ! $star_logic->isAvailableFor($login, $module_id)) {
                continue;
            }

            $app_id = cb_get_app_id($module_id);
            $evaluate_access = cb_at($appid_list_allow_external_access, $app_id,
                AppAvailabilityUtil::ACCESS_ALLOWED);
            if ($evaluate_access === AppAvailabilityUtil::ACCESS_DENIED) {
                continue;
            }
            $unique_id = cbpapi_trim_check($star['attributes']['item'],
                E_GRN_CBPAPI_EMPTY_PARAMETER_VALUE, 'item');
            if (strcmp('grn.schedule', $module_id) === 0) {
                $bdate = cbpapi_trim_check(@$star['attributes']['date'],
                    E_GRN_CBPAPI_EMPTY_PARAMETER_VALUE, 'date');
                $date = new CB_Date();
                $date->parse($bdate);
                if ( ! cb_date_validate_date($date)) {
                    cb_throw_error(E_COMMON_INVALID_DATE);
                }
                require_once('grn/application.csp');
                $app_locator = GRN_ApplicationLocator::instance();
                /** @var GRN_Schedule_Application $app */
                $app = $app_locator->getInstance('schedule', true);
                $event = $app->getEvent($login, $unique_id, $date,
                    CB_DATABASE_NO_LOCK, false, GRN_SCHEDULE_GET_MEMBER_ID);
                if ($event && is_a($event, 'GRN_Schedule_RepeatEvent')) {
                    $unique_id = 'rp_' . $unique_id . '_' . $bdate;
                }
            }
            if (strcmp('grn.bulletin', $module_id) === 0) {
                $is_draft = cbpapi_trim_check(@$star['attributes']['is_draft'],
                    E_GRN_CBPAPI_EMPTY_PARAMETER_VALUE, 'is_draft');
                if ($is_draft == 'true') {
                    $unique_id = 'draft_' . $unique_id;
                }
            }
            $deleted_star_list[$module_id][] = $unique_id;
        }
    }

    foreach ($deleted_star_list as $module_id => $unique_ids) {
        $star_logic->removeStarByUniqueIDs($login, $module_id, $unique_ids);
    }

    require_once('grn/smarty.csp');
    $t = new GRN_Smarty;
    $t->assign('xml_namespaces', [grn_cbpapi_get_namespace('star')]);
    $t->assign('action', $cbpapi_service->getAction());
    grn_cbpapi_response($t, __FILE__);
}


