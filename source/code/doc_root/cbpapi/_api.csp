<?php

use grn\grn\access\service\AppAccess;
use grn\grn\access\utility\AppAvailabilityUtil;

cb_require_role('LoginUser');

$i18n = CB_I18N::getInstance();
$i18n->switchUserLocale();
$i18n->switchTimezone();

// API execution permissions may limited to some roles
// Check if this user has the role to execute API
require_once('util_api/logic.csp');
grn_util_role_check_for_api('papi_roles');

$page_path = strtolower(cb_get_pagename());
$page_parts = explode('/', $page_path);
$app_id = $page_parts[1];

require_once('grn/application.csp');
$locator = GRN_ApplicationLocator::instance();
$app_ids = AppAvailabilityUtil::getApplicationIds();

$is_application = true;
if ( ! in_array($app_id, $app_ids)) {
    $app_id = 'common';
    $is_application = false;
}

if ($is_application && $app = $locator->getInstance($app_id)) {
    global $G_container_base;
    $uum = $G_container_base->getInstance('uum');
    // Check application license.
    if ($redirect = $app->forceRedirect($page_parts) !== false) {
        cb_throw_error(E_GRN_CBPAPI_LICENSE_EXPIRED);
    }

    // ignore checking with these following fucntions.
    $no_check_apis = [];
    $no_check_apis['workflow'] = ['WorkflowGetAvailabilityUsers'];
    if (array_key_exists($app_id, $no_check_apis)) {
        require_once('util_api/logic.csp');
        $util_api_service = GRN_Util_Api_Service::getInstance();
        $action = $util_api_service->getAction();
        if (array_search($action, $no_check_apis[$app_id]) === false) {
            AppAccess::checkAccess($app_id);
        }
    } else// availability check
    {
        AppAccess::checkAccess($app_id);
    }
} else {
    // activity check
    if (in_array($app_id, $app_ids)) {
        require_once('grn/error_code.csp');
        cb_throw_error(E_GRN_APPLICATION_NOT_ACTIVE);
    }
}

// execute SOAP action
require_once('cbpapi/util.csp');
require_once('cbpapi/logic.csp');
require_once('util_api/logic.csp');

/** @var GRN_Util_Api_Service $cbpapi_service */
global $cbpapi_service;
grn_util_api_service_execute();


