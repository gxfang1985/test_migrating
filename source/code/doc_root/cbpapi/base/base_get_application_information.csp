<?php

use grn\kunai\service\KunaiService;
use grn\grn\access\service\AppAccess;
use grn\grn\access\utility\AppAvailabilityUtil;

define('KUNAI_CLIENT_NAME', 'kunai');

if (isset($cbpapi_service)) {
    // get kunai available application list
    $logged_in_id = cb_get_login_user()->getOID();
    $kunai_service = new KunaiService;
    $kunai_available_app_list
        = $kunai_service->getAvailableKunaiUseAppsFor($logged_in_id);
    require_once('grn/application.csp');
    $app_locator = GRN_ApplicationLocator::instance();

    // get the applications that be sent notification
    /** @var $notification_app GRN_Notification_App */
    $notification_app = $app_locator->getInstance('notification', true);
    $notification_app_list = &$notification_app->getApplicationList(false);

    // get LoginUser's available application list
    $app_ids = AppAccess::getAllAppIdsAvailableByUserId($logged_in_id);
    $key = array_search('kunai', $app_ids);
    if ($key !== false) {
        unset($app_ids[$key]);
    }

    $app_list = [];
    foreach ($app_ids as $app_id) {
        $app = $app_locator->getInstance($app_id, true);

        $application = [];

        // module_id
        $application['module_id'] = $app->getModuleId();

        // name
        $application['name'] = $app->getDefaultName();

        // url
        if ($app->getConfig('show_index_for_api') && $app->getConfig('index')) {
            $application['url'] = cb_get_full_url($app->getConfig('index'));
        }

        // available_feature
        if ($app_id == 'address') {
            // address is special
            $available_feature = 2;
        } else {
            $available_feature = (array_key_exists($app_id,
                    $notification_app_list) ? 2 : 0)
                                 + ($app->getConfig('mobile_view') ? 1 : 0);
        }
        $application['available_feature'] = $available_feature;

        // app_icon
        $application['app_icon'] = [];

        // available_client
        $available_client_list = [];
        if (array_key_exists($app_id, $kunai_available_app_list)) {
            $client = [];
            $client['name'] = KUNAI_CLIENT_NAME;
            $available_client_list[] = $client;
        }
        $application['available_client'] = $available_client_list;

        $app_list[$app_id] = $application;
    }
    unset($app_list["job"]);

    // get SOAP action
    $action = $cbpapi_service->getAction();

    //response SOAP message
    require_once("grn/smarty.csp");

    $t = new GRN_Smarty;
    $t->assign('xml_namespaces', [grn_cbpapi_get_namespace('base')]);
    $t->assign('action', $action);
    $t->assign('app_list', $app_list);

    grn_cbpapi_response($t, __FILE__);
}
