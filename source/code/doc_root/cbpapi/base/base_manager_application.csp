<?php

if (isset($cbpapi_service)) {
    // check admin right
    global $G_container_base;
    $uum = $G_container_base->getInstance('uum');
    $login = $uum->getLoginUser();
    require_once('grn/system_logic.csp');
    $system = GRN_System::getInstance();
    if ( ! $system->isSuperAdmin($login)) {
        cb_throw_error(E_GRN_NO_SYSTEM_PRIVILEGE);
    }

    // get SOAP action
    $action = $cbpapi_service->getAction();

    // get parameters of SOAP request
    $request_params = $cbpapi_service->getRequestParameters();
    $codes_request = $cbpapi_service->selectNodes($request_params,
        'application');

    require_once('grn/application.csp');
    require_once('workflow/resources.csp');
    require_once('report/resources.csp');

    // get application list
    $app_locator = GRN_ApplicationLocator::instance();
    $app_ids = $app_locator->getApplicationIds();

    //check param require?
    if ( ! $codes_request) {
        require_once('cbpapi/error_code.csp');
        cb_throw_error(E_GRN_CBPAPI_MISSING_PARAMETER, null,
            ['param' => 'application']);
    }

    $arr_app = [];
    foreach ($codes_request as $key => $node) {
        if ( ! array_key_exists('code', $node['attributes'])) {
            require_once('cbpapi/error_code.csp');
            cb_throw_error(E_GRN_CBPAPI_MISSING_PARAMETER, null,
                ['param' => 'code']);
        }

        if ( ! in_array($node['attributes']['code'], $app_ids)) {
            require_once('grn/error_code.csp');
            cb_throw_error(E_GRN_SYSTEM_INVALID_APPLICATION_ID);
        }

        if ( ! isset($node['attributes']['active'])
             || $node['attributes']['active'] == 'false'
        ) {
            $app_locator->deactivate($node['attributes']['code']);
        } else {
            $app_locator->activate($node['attributes']['code']);
        }
        $arr_app[] = $node['attributes']['code'];
    }

    $app_list = [];
    foreach ($app_ids as $app_id) {
        if ( ! in_array($app_id, $arr_app)) {
            continue;
        }

        $app = $app_locator->getInstance($app_id, true);

        $application = [];
        $application['code'] = $app_id;
        $application['status'] = $app_locator->isActive($app_id) ? 'active'
            : 'deactive';

        if (strcmp($app_id, GRN_WORKFLOW_APPLICATION_ID) == 0) {
            // check license of Workflow
            if ( ! $app->isLicensed()) {
                $application['status'] = 'license_expired';
            }
        }

        if (strcmp($app_id, GRN_REPORT_APPLICATION_ID) == 0) {
            // check license of Report
            if ( ! $app->isLicensed()) {
                $application['status'] = 'license_expired';
            }
        }

        $app_list[$app_id] = $application;
    }


    //response SOAP message
    require_once("grn/smarty.csp");

    $t = new GRN_Smarty;
    $t->assign('xml_namespaces', [grn_cbpapi_get_namespace('base')]);
    $t->assign('action', $action);
    $t->assign('app_list', $app_list);

    grn_cbpapi_response($t, __FILE__);
}

