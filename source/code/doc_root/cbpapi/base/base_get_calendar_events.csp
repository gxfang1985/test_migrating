<?php

if (isset($cbpapi_service)) {
    // get SOAP action
    $action = $cbpapi_service->getAction();

    require_once('grn/application.csp');

    // get login user
    global $G_container_base;
    $uum = $G_container_base->getInstance('uum');
    $login = $uum->getLoginUser();

    // get user calendar
    require_once('grn/calendar.csp');
    $cal_man = GRN_CalendarManager::getInstance();
    $user_calendar = $cal_man->getPreferenceUserCalendar($login);
    $tab_user_calendar_attribute = $user_calendar->getAttributeTable();

    // get system calendar
    require_once('fw/i18n/base.csp');
    $sys_calendar = CB_BaseManager::getUserCalendar($login->getOID());
    if ( ! $sys_calendar) {
        $sys_calendar
            =& $cal_man->getSystemCalendar(GRN_CALENDAR_SYSTEM_DEFAULT);
    }
    $tab_sys_calendar_attribute = $sys_calendar->getAttributeTable();

    // get calendar list
    global $G_container_base;
    $db = $G_container_base->getInstance('dbconn');

    $query_format
        = 'SELECT col_date as `date`, col_info as `content`, col_type as `type`'
          . ' FROM tab_@S'
          . ' WHERE col_calendar = "@S"';

    $query[] = cb_queryf($db, $query_format,
        $tab_user_calendar_attribute->getTableName(),
        $user_calendar->getOID());

    $query[] = cb_queryf($db, $query_format,
        $tab_sys_calendar_attribute->getTableName(),
        $sys_calendar->getOID());

    $query = implode(' UNION ', $query);

    $result = $db->query($query);
    if ($result === false) {
        $db->throwError(['query' => 'query failed: ' . $query]);
    }

    // event types for view
    $EVENT_TYPES = [
        GRN_CALENDAR_TYPE_PUBLICHOLIDAY => 'public_holiday',
        GRN_CALENDAR_TYPE_MEMORIALDAY   => 'memorial_day',
        GRN_CALENDAR_TYPE_SYSTEM_MEMO   => 'system_memo',
        GRN_CALENDAR_TYPE_USER_MEMO     => 'user_memo',
        GRN_CALENDAR_TYPE_WORKDAY       => 'public_workday'
    ];

    $calendar_events = [];
    $result_count = $db->num_rows($result);
    for ($i = 0; $i < $result_count; $i++) {
        $row = $db->fetch_assoc($result);

        // convert calendar type for view
        $row['type'] = $EVENT_TYPES[$row['type']];

        $calendar_events[] = $row;
    }

    //response SOAP message
    require_once("grn/smarty.csp");

    $t = new GRN_Smarty;
    $t->assign('xml_namespaces', [grn_cbpapi_get_namespace('base')]);
    $t->assign('action', $action);
    $t->assign('calendar_events', $calendar_events);

    grn_cbpapi_response($t, __FILE__);
}




