<?php

if (isset($cbpapi_service)) {
    // get parameter values
    require_once('cbpapi/util.csp');
    $item_name = 'facility_profile_item';
    $node_parameters = $cbpapi_service->getRequestParameters();
    $items_version = grn_cbpapi_parse_item_versions($node_parameters,
        $item_name);

    // get all facilities
    require_once('schedule/facility_system_logic.csp');
    $facility_logic = GRN_Facility_SystemLogic::getInstance();
    $facilities = $facility_logic->getGroupFacilitiesInfo();

    // evaluate facilities authority
    $uum = cb_lwc_uum();
    $login = $uum->getLoginUser();
    $dynamic_roles = $uum->listGrantedRoles();
    require_once('schedule/access_logic.csp');
    $acc_logic = GRN_Schedule_Access_Logic::getInstance();
    $evaluated_facilities = $acc_logic->evaluateAccessesById(
        $login, $facilities, ['read'], $dynamic_roles, 'facility'
    );

    // filter items
    $candidate_items_version = [];
    foreach ($evaluated_facilities as $key => $item) {
        $candidate_items_version[$key] = [
            'id'      => $item['_id'],
            'version' => $item['col_settings_mtime']
        ];
    }
    $facilities_for_view = grn_cbpapi_compare_item_versions($items_version,
        $candidate_items_version);

    // response SOAP message
    require_once("grn/smarty.csp");
    $t = new GRN_Smarty;
    $t->assign('xml_namespaces', [grn_cbpapi_get_namespace('schedule')]);
    $t->assign('facilities', $facilities_for_view);
    grn_cbpapi_response($t, __FILE__);
}
