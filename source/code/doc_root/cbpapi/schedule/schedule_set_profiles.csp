<?php

if (isset($cbpapi_service)) {
    $action = $cbpapi_service->getAction();
    $node_parameters = $cbpapi_service->getRequestParameters();
    $node_personal_profile = $cbpapi_service->selectSingleNode($node_parameters,
        'personal_profile');
    if ( ! isset($node_personal_profile)) {
        require_once('cbpapi/error_code.csp');
        cb_throw_error(E_GRN_CBPAPI_MISSING_PARAMETER, null,
            ['param' => 'personal_profile']);
    }

    global $G_container_base;
    $uum = $G_container_base->getInstance('uum');
    $login = $uum->getLoginUser();

    require_once('schedule/personal_logic.csp');
    $personal_logic = GRN_Schedule_PersonalLogic::getInstance();
    $personal_profile = [
        'start_time_in_dayview' => 0,
        'end_time_in_dayview'   => 0,
        'show_sunday'           => 'false',
        'show_end_time'         => 'false',
        'plan_menu'             => '',
        'notify_mail'           => 'false',
        'is_user_address_mail'  => 'false',
        'notify_mail_address'   => ''
    ];

    // Get data from SOAP request
    // 日表示画面で表示する時間帯
    $sethour
        = intval(@ $node_personal_profile['attributes']['start_time_in_dayview']);
    $endhour
        = intval(@ $node_personal_profile['attributes']['end_time_in_dayview']);
    if ($sethour >= $endhour) {
        cb_throw_error(E_GRN_SCHD_INVALID_SETHOUR);
    }
    $personal_logic->setViewHour($login, $sethour, $endhour);
    $personal_profile['start_time_in_dayview'] = $sethour;
    $personal_profile['end_time_in_dayview'] = $endhour;

    // 日曜日の表示
    if (isset($node_personal_profile['attributes']['show_sunday'])) {
        $startwday = $node_personal_profile['attributes']['show_sunday'];
        if (strcasecmp($startwday, 'false') == 0) {
            $startwday = '0';
        } else {
            $startwday = '1';
            $personal_profile['show_sunday'] = 'true';
        }
        $personal_logic->setCalendarWeekStart($login, $startwday);
    } else {
        unset($personal_profile['show_sunday']);
    }

    // 終了時刻の表示
    if (isset($node_personal_profile['attributes']['show_end_time'])) {
        $showendhour = $node_personal_profile['attributes']['show_end_time'];
        if (strcasecmp($showendhour, 'false') == 0) {
            $showendhour = '0';
        } else {
            $showendhour = '1';
            $personal_profile['show_end_time'] = 'true';
        }
        $personal_logic->setShowEndTime($login, $showendhour);
    } else {
        unset($personal_profile['show_end_time']);
    }

    // 予定メニューの設定
    if (isset($node_personal_profile['attributes']['plan_menu'])) {
        $menus = $node_personal_profile['attributes']['plan_menu'];
        $personal_logic->setMenus($login, $menus);
        $personal_profile['plan_menu'] = $menus;
    } else {
        unset($personal_profile['plan_menu']);
    }

    // 予定の通知の転送
    if (isset($node_personal_profile['attributes']['notify_mail'])) {
        $forward_mail = $node_personal_profile['attributes']['notify_mail'];
        if (strcasecmp($forward_mail, 'false') == 0) {
            $forward_mail = false;
        } else {
            $forward_mail = true;
            $personal_profile['notify_mail'] = 'true';
        }
        $personal_logic->setForwardMail($login, $forward_mail);
    } else {
        unset($personal_profile['notify_mail']);
    }

    // 通知を受け取るメールアドレス
    if (isset($node_personal_profile['attributes']['is_user_address_mail'])) {
        $forward_type
            = $node_personal_profile['attributes']['is_user_address_mail'];
        if (strcasecmp($forward_type, 'true') == 0) {
            $forward_type = GRN_SCHD_FORWARD_TYPE_MAIL;
            $personal_profile['is_user_address_mail'] = 'true';
        } else {
            $forward_type = GRN_SCHD_FORWARD_TYPE_OTHER;
        }
        $personal_logic->setForwardMailType($login, $forward_type);
    } else {
        unset($personal_profile['is_user_address_mail']);
    }
    if (isset($node_personal_profile['attributes']['notify_mail_address'])) {
        $forward_address
            = $node_personal_profile['attributes']['notify_mail_address'];
        $forward_address = cb_trim($forward_address);
        $personal_logic->setForwardMailAddress($login, $forward_address);
        $personal_profile['notify_mail_address'] = $forward_address;
    } else {
        unset($personal_profile['notify_mail_address']);
    }

    //response SOAP message
    require_once("grn/smarty.csp");
    $t = new GRN_Smarty;
    $t->assign('xml_namespaces', [grn_cbpapi_get_namespace('schedule')]);

    $t->assign('profile', $personal_profile);
    $t->assign('action', $action);

    grn_cbpapi_response($t, __FILE__);
}

