<?php

if (isset($cbpapi_service)) {
    $node_parameters = $cbpapi_service->getRequestParameters();

    $include_system_profile = false;
    if (isset($node_parameters['attributes']['include_system_profile'])
        && strcmp('true',
            $node_parameters['attributes']['include_system_profile']) === 0
    ) {
        $include_system_profile = true;
    }

    global $G_container_base;
    $uum = $G_container_base->getInstance('uum');
    $login = $uum->getLoginUser();

    //Get personal profile
    $personal_profile = [];
    require_once("schedule/personal_logic.csp");
    $logic = GRN_Schedule_PersonalLogic::getInstance();

    $start_time_in_dayview = 8;
    $end_time_in_dayview = 19;
    $logic->getViewHour($login, $start_time_in_dayview, $end_time_in_dayview);

    $personal_profile['start_time_in_dayview'] = $start_time_in_dayview;
    $personal_profile['end_time_in_dayview'] = $end_time_in_dayview;
    $personal_profile['show_sunday']
        = $logic->getCalendarWeekStart($login)
        ? 'true' : 'false';

    $personal_profile['show_end_time'] = $logic->getShowEndTime($login) ? 'true'
        : 'false';

    $menus = $logic->getMenus($login);
    $plan_menu = '';
    foreach ($menus as $menu) {
        $plan_menu .= $menu . "\n";
    }
    $personal_profile['plan_menu'] = $plan_menu;

    $personal_profile['notify_mail'] = $logic->getForwardMail($login) ? 'true'
        : 'false';

    $personal_profile['notify_mail_address']
        = $logic->getForwardMailAddress($login);

    $personal_profile['is_user_address_mail']
        = $logic->getForwardMailType($login);
    if (isset($personal_profile['is_user_address_mail'])
        && ($personal_profile['is_user_address_mail']
            == GRN_SCHD_FORWARD_TYPE_MAIL)
    ) {
        $personal_profile['is_user_address_mail'] = 'true';
    } else {
        $personal_profile['is_user_address_mail'] = 'false';
    }

    $sys_profile = [];
    if ($include_system_profile) {
        require_once('schedule/system_logic.csp');
        $sys_logic = GRN_Schedule_SystemLogic::getInstance();

        $str_menu = '';
        $menus = $sys_logic->getMenus();
        foreach ($menus as $menu) {
            $str_menu .= $menu[0] . "\n";
        }
        $sys_profile['plan_menu'] = $str_menu;
        $sys_profile['event_reserve_unit'] = $sys_logic->getScheduleUnit();
        $sys_profile['event_repeat_max_time'] = $sys_logic->getRepeatLimit();
        $sys_profile['register_private_event'] = $sys_logic->getUsePrivate()
            ? 'true' : 'false';
        $sys_profile['show_private_event'] = $sys_logic->getHiddenPrivate()
            ? 'true' : 'false';
        $sys_profile['managed_notify'] = $sys_logic->getManagedNotify()
            ? 'true' : 'false';
        $sys_profile['show_group_event'] = $sys_logic->getShowOrganize()
            ? 'true' : 'false';
        $sys_profile['show_holiday'] = $sys_logic->getShowHoliday()
            ? 'true' : 'false';
        $sys_profile['allow_file_attachment']
            = $sys_logic->getAllowFileAttachment()
            ? 'true' : 'false';
        $sys_profile['allow_attendance_check']
            = $sys_logic->getAllowAttendanceCheck()
            ? 'true' : 'false';
        $sys_profile['visibility_default'] = '';
        if ($sys_profile['register_private_event'] == 'true') {
            $sys_profile['visibility_default']
                = $sys_logic->getDefaultPrivateSet();
        }

        require_once('schedule/facility_system_logic.csp');
        $fac_logic = GRN_Facility_SystemLogic::getInstance();
        $sys_profile['show_memo'] = $fac_logic->getFacilityShowMemo() ? 'true'
            : 'false';
    }

    //response SOAP message
    require_once("grn/smarty.csp");
    $t = new GRN_Smarty;
    $t->assign('xml_namespaces', [grn_cbpapi_get_namespace('schedule')]);

    $t->assign('profile', $personal_profile);
    //System profile included
    $t->assign('include_system_profile', $include_system_profile);
    $t->assign('sys', $sys_profile);

    grn_cbpapi_response($t, __FILE__);
}

