<?php

/**
 * API schedule_remove_follows : remove the follow from schedule event
 *
 * @author : Tien Nguyen
 **/
if (isset($cbpapi_service)) {
    $node_parameters = $cbpapi_service->getRequestParameters();

    if ( ! (isset($node_parameters['children']))) {
        require_once 'cbpapi/error_code.csp';
        cb_throw_error(E_GRN_CBPAPI_MISSING_PARAMETER, null,
            ['param' => 'follow_id']);
    }
    $follows = $node_parameters['children'];
    global $G_container_base;
    $uum = $G_container_base->getInstance('uum');
    $login = $uum->getLoginUser();

    require_once('schedule/event_base_logic.csp');
    $eventbase_logic = new GRN_Schedule_EventBaseLogic();
    $followtable = $eventbase_logic->_getFollowTable();

    require_once('schedule/access_logic.csp');
    $acc_logic = GRN_Schedule_Access_Logic::getInstance();
    $dynamic_role = $uum->listGrantedRoles();

    require_once('schedule/application.csp');
    $app = GRN_Schedule_Application::getInstance();

    require_once('cbpapi/schedule_logic.csp');
    $papi_logic = GRN_CBPApi_Schedule_Logic::getInstance();

    foreach ($follows as $follow) {
        if ( ! (isset($follow['text']))) {
            require_once 'cbpapi/error_code.csp';
            cb_throw_error(E_GRN_CBPAPI_MISSING_PARAMETER, null,
                ['param' => 'follow_id']);
        }
        $follow_id = $follow['text'];
        if ( ! is_numeric($follow_id)) {
            cb_throw_error(E_GRN_SCHD_NOTFOUND_EVENTFOLLOW);
        }
        $row = $followtable->getRow($follow_id);
        if ( ! $row) {
            cb_throw_error(E_GRN_SCHD_NOTFOUND_EVENTFOLLOW);
        }

        $event = $row->get('event');

        //must use api to get real event info
        $event = $app->getEvent($login, $event->getOID());

        $access = $acc_logic->getEventAccess($login, $event,
            ['read', 'add', 'modify', 'delete'], $dynamic_role);
        if ($access['read'] == GRN_SCHD_ACCESS_DENY) {
            cb_throw_error(E_GRN_SCHD_ACCESSDENY_EVENT);
        }

        $app->deleteFollow($login, $event->id, $follow_id);
        $papi_logic->createFollowNotify($login, $event, $event->id, '', null,
            GRN_SCHEDULE_NOTIFY_FOLLOWDELETE);
    }
    require_once "grn/smarty.csp";
    $t = new GRN_Smarty;
    grn_cbpapi_response($t, __FILE__);
}
