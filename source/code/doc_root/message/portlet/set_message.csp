<?php

require_once('portal/error_code.csp');
if ( ! isset($portlet)) {
    cb_throw_error(E_GRN_PRTL_PORTLET_INVALID_ACCESS);
}

//Get Smarty Instance
require_once("grn/smarty.csp");
$t = new GRN_Smarty;

// ----------

$settings = array_key_exists('settings', $portlet) ? $portlet['settings'] : [];

// font options
$font_options_for_view = [
    ['value' => 'small', 'label' => cb_msg('grn.message', 'font_size_small')],
    ['value' => 'normal', 'label' => cb_msg('grn.message', 'font_size_normal')],
    ['value' => 'large', 'label' => cb_msg('grn.message', 'font_size_large')],
];
switch (array_key_exists('font_size', $settings) ? $settings['font_size']
    : '') {
    case 'small':
        $font_options_for_view[0]['selected'] = true;
        break;
    case 'normal':
        $font_options_for_view[1]['selected'] = true;
        break;
    case 'large':
        $font_options_for_view[2]['selected'] = true;
        break;
    default:
        $font_options_for_view[1]['selected'] = true;
        break;
}
$t->assign('font_options', $font_options_for_view);

global $G_container_base;
$uum = $G_container_base->getInstance('uum');
$user = $uum->getLoginUser();

if ( ! $user) {
    require_once('grn/error_code.csp');
    cb_throw_error(E_GRN_USER_NOT_FOUND);
}

// display folder
require_once('message/folder_logic.csp');
$folder_logic = new GRN_Message_FolderLogic();

$folder_for_view = array_key_exists('folder', $settings) ? $settings['folder']
    : '';
if ($folder_for_view == '') {
    $folder_for_view = $folder_logic->getSpecificFolderID($user,
        GRN_MESSAGE_RECEIVINGFOLDER);
    if ($folder_for_view === false) {
        require_once('message/error_code.csp');
        cb_throw_error(E_GRN_MESSAGE_FOLDER_NOT_FOUND);
    }
} else {
    if ($display != 'set-personal') {
        $folder_for_view = $folder_logic->getFolderIDBySpecificFolderID($user,
            $folder_for_view);
        if ($folder_for_view === false) // specified folder doesn't exist.
        {
            // choose an inbox
            $category_id = $folder_logic->getSpecificFolderID($user,
                GRN_MESSAGE_RECEIVINGFOLDER);
        }
    }
}
$t->assign('folder', $folder_for_view);

// display columns
$display_keys = ['sender', 'time', 'remarks'];
if (is_array($settings)) {
    foreach ($display_keys as $key) {
        if (array_key_exists($key, $settings)) {
            $t->assign($key, $settings[$key]);
        } else {
            $t->assign($key, true);
        }
    }
} else {
    foreach ($display_keys as $key) {
        $t->assign($key, true);
    }
}

// order
$order_for_view = ['element' => false, 'whatsnew' => false];
switch (array_key_exists('order', $settings) ? $settings['order'] : '') {
    case 'element':
        $order_for_view['element'] = true;
        break;
    case 'whatsnew':
    default:
        $order_for_view['whatsnew'] = true;
        break;
}
$t->assign('order', $order_for_view);

// row number

$t->assign(
    'select1', [
        'name'    => 'rows',
        'options' => [
            1,
            2,
            3,
            4,
            5,
            6,
            7,
            8,
            9,
            10,
            11,
            12,
            13,
            14,
            15,
            16,
            17,
            18,
            19,
            20
        ],
        'padding' => '&nbsp;',
    ]
);

$settings_for_view = [];
$rows_for_view = array_key_exists('rows', $settings) ? $settings['rows']
    : '';
if ($rows_for_view == '') {
    $rows_for_view = 5;
}
$settings_for_view['rows'] = $rows_for_view;
$t->assign('settings', $settings_for_view);

// ----------

//Assign include_php Parameter
$t->assign('portlet', $portlet);
$t->assign('display', $display);

// Ignore Licence Warnning
$t->skipWarning();

//Display Smarty Template
$doc_name = 'message/portlet/set_message';
$t->display("{$doc_name}.tpl");


