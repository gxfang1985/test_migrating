<?php

use grn\grn\MemberLogic;

$category_id = @ $G_INPUT['cid'];
$relation_id = @ $G_INPUT['rid'];
$message_id = @ $G_INPUT['mid'];

if ($category_id == '' || $relation_id == '' || $message_id == '') {
    require_once('message/error_code.csp');
    cb_throw_error(E_GRN_MESSAGE_MESSAGE_NOT_FOUND,
        ['app_name' => $G_message_name],
        ['app_name' => $G_message_name],
        ['app_name' => $G_message_name]);
}

$t->assign('category_id', $category_id);
$t->assign('relation_id', $relation_id);
$t->assign('message_id', $message_id);

global $G_container_base;
$uum = $G_container_base->getInstance('uum');
$user = $uum->getLoginUser();

if ( ! $user) {
    require_once('grn/error_code.csp');
    cb_throw_error(E_GRN_USER_NOT_FOUND);
}

$user_id = $user->getOID();

require_once('message/system_logic.csp');
$system_logic = GRN_Message_SystemLogic::getInstance();
$use_editor = $system_logic->getUseREConfigAttribute();
$t->assign('use_editor', $use_editor);

// set original message data

require_once('message/message_logic.csp');
$message_logic = new GRN_Message_Logic();
$message = $message_logic->getMessageBody($user, $relation_id,
    $message_id, strcmp($use_editor, '1') === 0 ? false : true);

if ( ! $message) {
    require_once('message/error_code.csp');
    cb_throw_error(E_GRN_MESSAGE_MESSAGE_NOT_FOUND,
        ['app_name' => $G_message_name],
        ['app_name' => $G_message_name],
        ['app_name' => $G_message_name]);
}

$message_for_view = [];
foreach ($message as $key => $value) {
    $message_for_view[$key] = $value;
}

$t->assign('app_name', $G_message_name);

// for rich editor
if ($message['format_type'] == 1) {
    $message_for_view['html'] = $message['data'];
}

$t->assign('rows', $G_message_ui_config->getAreaHeight());
$t->assign('cols', $G_message_ui_config->getAreaWidth());

// attached files
if ( ! $message['is_snapshot']) {
    require_once('message/file.csp');
    $fm = new GRN_Message_FileManager();
    $attached_files = $fm->getMessageFiles($message_id, false);

    require_once('grn/controller.csp');
    $tmp_key = grn_get_temporary_key();
    $message_for_view['attached_files'] = grn_init_attached_file($form_name
                                                                 . $tmp_key,
        $attached_files, false, 'message');
    $t->assign('tmp_key', $tmp_key);
}

$addressees = $message_logic->getAddressees($user, $message_id);
if ($addressees === false) {
    require_once('message/error_code.csp');
    cb_throw_error(E_GRN_MESSAGE_MESSAGE_NOT_FOUND,
        ['app_name' => $G_message_name],
        ['app_name' => $G_message_name],
        ['app_name' => $G_message_name]);
}
if ($message['is_snapshot']) {
    $addressees = [];
}

global $G_container_base;
$uum = $G_container_base->getInstance('uum');
$uids = [];
foreach ($addressees as $addressee) {
    $uids[] = $addressee['id'];
}
require_once("grn/controller.csp");
$users_info = GRN_ControllerUtil::getUserInfoToShowUserName($uids, $user);

$addressee_users_for_view = [];
$addressee_users_for_filter_view = [];
$operation_users_for_filter_view = [];
foreach ($addressees as $addressee) {
    if ($addressee['id'] != '' && $addressee['dtime']->unix_ts == 0) {
        $addressee_users_for_view[] = $addressee['id'];
        if ($addressee['is_operator']) {
            $operation_users_for_filter_view[] = $addressee['id'];
        }
    }
}

$creator_id = $message_logic->getMessageCreatorId($message_id);
require_once("message/view_utils.csp");
$t->assign('operator_open',
    GRN_Message_ViewUtils::is_operator_open($operation_users_for_filter_view,
        $creator_id));

$addressee_users_for_view = MemberLogic::getInstance()
                                       ->getDisplayUsersByUserIds($addressee_users_for_view);
$t->assign('addressee_users', $addressee_users_for_view);

$addressee_users_for_filter_view = $addressee_users_for_view;
$t->assign('addressee_users_filter', $addressee_users_for_filter_view);

$operation_users_for_filter_view = MemberLogic::getInstance()
                                              ->getDisplayUsersByUserIds($operation_users_for_filter_view);
$t->assign('operation_users', $operation_users_for_filter_view);


$t->assign('message', $message_for_view);

$t->assign('plugin', [
    'name'   => 'common',
    'params' => [
        'action'       => null,
        'session_name' => cb_get_pagename(),
        'app_id'       => 'message'
    ]
]);

