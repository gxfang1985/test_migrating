<?php

if (strcasecmp(@ $_SERVER['REQUEST_METHOD'], 'POST') == 0) {

    $cmd = @ $G_INPUT['cmd'];
    $is_draft = false;
    if ($cmd == 'draft' && @ $G_INPUT['sUID'] == '') {
        $G_INPUT['sUID'] = 'dummy';
        $is_draft = true;
    }
    $sUIDs = @ $G_INPUT['sUID'];
    if (is_array($sUIDs)) {
        $G_INPUT['sUID'] = 'dummy';
    }
    $operator_set = array_key_exists('operator-set', $G_INPUT)
                    && $G_INPUT['operator-set'] ? 1 : 0;

    $operators = @ $G_INPUT['sUID_o'];
    if ( ! is_array($operators)) {
        $operators = [];
    }

    // instantiate an Smarty object
    require_once("grn/smarty.csp");
    $t = new GRN_Smarty;

    require_once('grn/controller.csp');
    $tmp_key = grn_get_temporary_key();
    $t->assign('tmp_key', $tmp_key);

    // Validation check
    $target_name = '';
    if (array_key_exists('fn', $G_INPUT)) {
        $target_name = $G_INPUT['fn'];
    }
    require_once('SmartyValidate.class.php');
    SmartyValidate::connect($t);
    SmartyValidate::register_form($target_name);

    // validate after a POST
    if (SmartyValidate::is_valid($G_INPUT, $target_name)) {

        $category_id = @ $G_INPUT['cid'];
        $relation_id = @ $G_INPUT['rid'];
        $message_id = @ $G_INPUT['mid'];

        if ($category_id == '' || $relation_id == '' || $message_id == '') {
            require_once('message/error_code.csp');
            cb_throw_error(E_GRN_MESSAGE_MESSAGE_NOT_FOUND,
                ['app_name' => $G_message_name],
                ['app_name' => $G_message_name],
                ['app_name' => $G_message_name]);
        }

        $title = @ $G_INPUT['title'];
        if ($title == '') {
            require_once('message/error_code.csp');
            cb_throw_error(E_GRN_MESSAGE_SUBJECT_NOT_INPUTTED);
        }

        global $G_container_base;
        $uum = $G_container_base->getInstance('uum');
        $user = $uum->getLoginUser();

        if ( ! $user) {
            require_once('grn/error_code.csp');
            cb_throw_error(E_GRN_USER_NOT_FOUND);
        }

        // for rich editor
        if (array_key_exists('editor', $G_INPUT) && $G_INPUT['editor']) {
            $format = 1;
            $data = $G_INPUT['data'];
        } else {
            $format = 0;
            $data = $G_INPUT['data'];
        }

        require_once('message/message_logic.csp');
        $message_logic = new GRN_Message_Logic();
        $files = grn_get_attached_files($target_name . $tmp_key,
            'message');
        require_once('grn/upload.csp');
        $upload_files
            = GRN_UploadFile::getUploadedFiles(@$G_INPUT['upload_ticket'],
            @$G_INPUT['upload_fileids'], true);
        foreach ($upload_files as $fid => $file) {
            $files[$fid] = $file;
        }

        // attached files
        require_once('message/file.csp');
        $fm = new GRN_Message_FileManager();
        $current_files = $fm->getMessageFiles($message_id, false);

        $fids = @$G_INPUT['fids'];
        $file_id_list = [];
        if (is_array($fids)) {
            foreach ($fids as $v) {
                $file_id_list[$v] = 1;
            }
        }

        foreach (array_keys($current_files) as $key) {
            if ( ! array_key_exists($key, $file_id_list)) {
                require_once('message/file.csp');
                $fm = new GRN_Message_FileManager();
                $fm->deleteFile($key);
            } else {
                if (array_key_exists($key, $files)) {
                    unset($files[$key]);
                }
            }
        }

        $ret = $message_logic->modifyMessage($user, $message_id,
            mb_substr($title, 0, 100), $data, $format,
            $files);

        if ( ! $ret) {
            require_once('message/error_code.csp');
            cb_throw_error(E_GRN_MESSAGE_MESSAGE_NOT_FOUND,
                ['app_name' => $G_message_name],
                ['app_name' => $G_message_name],
                ['app_name' => $G_message_name]);
        }

        cb_redirect('message/view', [
            'cid' => $category_id,
            'rid' => $relation_id,
            'mid' => $message_id
        ]);
    } else {
        // if error, show the source form
        $t->setPageInfo('message/modify');
        $t->assign('form_name', $target_name);

        include('_modify.csp');

        $message_for_view =& $t->get_template_vars('message');
        $message_for_view['subject'] = @ $G_INPUT['title'];

        // for rich editor
        if (array_key_exists('editor', $G_INPUT) && $G_INPUT['editor']) {
            $t->assign('editor', 1);
            $message_for_view['html'] = $G_INPUT['data'];
        }
        $message_for_view['data'] = $G_INPUT['data'];
        require_once('_command_send_validate.csp');
        $t->assign('upload_ticket', @$G_INPUT['upload_ticket']);
        //remove unchecked files
        require_once('grn/upload.csp');
        GRN_UploadFile::removeUploadedFilesByFileIds(@$G_INPUT['upload_ticket'],
            @$G_INPUT['upload_fileids']);

        $t->display('message/modify.tpl');
    }

}
