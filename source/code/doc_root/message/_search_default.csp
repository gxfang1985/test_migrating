<?php

// Smarty をインスタンス化
require_once("grn/smarty.csp");
$t = new GRN_Smarty;
//------------------

// check cid

global $G_INPUT;

require_once('grn/controller.csp');
$utility = new GRN_ControllerUtil();
$session = $utility->getSession();

if (@ $G_INPUT['sf']) {
    $search_text = $session->get('search_text');
    $keywords = $session->get('search_keys');
    $folder_id = $session->get('folder_id');
    $default_search_term = $session->get('search_term');
    $target_id = $session->get('target_id');
} else {
    $search_text = @ $G_INPUT['search_text'];
    $keywords = @ $G_INPUT['search_keys'];
    $optional_search = @ $G_INPUT['optional_search'];
    $folder_id = @ $G_INPUT['dcid'];
    if (array_key_exists('tcid', $G_INPUT)) {
        $target_id = $G_INPUT['tcid'];
    }

    $default_search_term = 3;

    // simple search
    if (is_null($optional_search) || ! strlen($optional_search)) {
        $keywords = [
            'subject',
            'data',
            'sender',
            'addressee',
            'follow',
            'sub'
        ];
    }
}

if ( ! isset($target_id) || strlen($target_id) === 0) {
    $target_id = $folder_id;
}

// 検索期間を決定する
$search_term = @ $G_INPUT['search_term'];
if (empty($start_ts) && empty($last_ts)) {
    if (is_null($search_term) || 0 == strlen($search_term)) {
        $search_term = $default_search_term;
    }
    $search_term = intval($search_term);

    if (0 < $search_term) {
        require_once('fw/date.csp');

        $ts = new CB_TimeStamp();
        $ts->unix_ts = time();

        $start_ts = new CB_TimeStampEx($ts);
        $last_ts = new CB_TimeStampEx($ts);

        $datetime = $last_ts->getDateTime();
        $datetime->hour = 0;
        $datetime->minute = 0;
        $datetime->second = 0;

        $datetime->moveMonths(-$search_term);
        $start_ts->setDateTime($datetime);
    } else {
        $start_ts = null;
        $last_ts = null;
    }
}

// Smartyに割り当てる検索項目を列挙する
$search_keys = [];
if (is_array($keywords)) {
    foreach ($keywords as $keyword) {
        $search_keys[$keyword] = true;
    }
}

// assign parameters to session.
$session->set('search_text', $search_text);
$session->set('search_keys', $keywords);
$session->set('folder_id', $folder_id);
$session->set('search_term', $search_term);
$session->set('target_id', $target_id);

require_once('message/message_logic.csp');
$message_logic = new GRN_Message_Logic();
$message_logic->receiveMessages($G_message_login);

require_once('message/search_logic.csp');
$search = new GRN_Message_SearchLogic();

if (is_null($subfolder = @$search_keys['sub'])) {
    $subfolder = false;
}

$hid = $target_id;
require_once('message/folder_logic.csp');
require_once('message/resources.csp');
$folder_logic = new GRN_Message_FolderLogic();
$folder_type = $folder_logic->getFolderType($G_message_login, $target_id);
if (strcmp($folder_type, GRN_MESSAGE_ROOTFOLDER) === 0) {
    $hid = '-1';
}

$number_of_all = $search->getSearchItemCount($G_message_login,
    $search_keys, $search_text,
    $start_ts, $last_ts,
    $hid, $subfolder);

// 一覧表示件数を取得する
if (is_null($number_on_page = $G_message_ui_config->getListMax())) {
    $number_on_page = 20;
}
// 文字列の長さを取得する
if (is_null($subject_cols = $G_message_ui_config->getSubjectWidth())) {
    $subject_cols = 30;
}

if (is_null($truncate_cols = $G_message_ui_config->getTruncateWidth())) {
    $truncate_cols = 30;
}

if (is_null($name_cols = $G_message_ui_config->getNameWidth())) {
    $name_cols = 30;
}

// ごみ箱を利用するか
require_once('message/personal_logic.csp');
$personal = GRN_Message_PersonalLogic::getInstance();
$hide_garbage = $personal->getUseGarbageBoxAttribute($G_message_login);
$t->assign('hide_garbage', strcmp($hide_garbage, '0') === 0 ? true : false);

$navi_params = ['sf' => 1, 'cid' => $folder_id];

$start_position = $utility->getNaviStartPosition();
$navi_information = $utility->makeNaviInformation($start_position,
    $number_on_page,
    $number_of_all,
    $navi_params);

$search_count = $navi_information['end_count']
                - $navi_information['start_count'] + 1;

$retval = [];
if ($number_of_all > 0) {
    $retval = $search->getSearchItems($G_message_login,
        $search_keys, $search_text,
        $start_position, $search_count,
        $start_ts, $last_ts,
        $hid, $subfolder);
}

// truncate message body
if (isset($retval['data'])) {
    $retval['data'] = mb_strimwidth($retval['data'], 0, $truncate_cols, '...');
}

$page_index = 'message/index';
$t->assign(
    'site_position',
    [
        [
            'page' => $page_index,
            'name' => grn_get_page_display_name($page_index),
        ],
        [
            'page' => '',
            'name' => grn_get_current_page_display_name(['app_name' => $G_message_name]),
        ],
    ]
);

// Smartyにページタイトルを割り当てる
$page_title
    = grn_get_current_page_display_name(['app_name' => $G_message_name]);
$t->assign('page_title', $page_title);

$t->assign('search', [
        'search_item' => $retval,
        'all_id'      => $number_of_all,
    ]
);

$uids = [];
foreach ($retval as $val) {
    $uids[] = $val['creator_uid'];
}
$uum = $G_container_base->getInstance('uum');
require_once("grn/controller.csp");
$users_info = GRN_ControllerUtil::getUserInfoToShowUserName($uids,
    $uum->getLoginUser());
$t->assign('users_info', $users_info);

$t->assign('search_text', $search_text);
$t->assign('search_keys', $search_keys);
$t->assign('search_term', $search_term);
$t->assign('target_id', $target_id);

$t->assign('subject_cols', $subject_cols);
$t->assign('truncate_cols', $truncate_cols);
$t->assign('name_cols', $name_cols);

$t->assign('navi', $navi_information);

$t->assign('folder', ['id' => $folder_id]);

//delete multi info
$no_confirm_multi = false;

$delete_multi_info = [
    'title'         => grn_get_page_display_name('message/delete_multi'),
    'page'          => 'message/delete_multi.tpl',
    'no_confirm'    => $no_confirm_multi,
    'data'          => [
        'search'      => true,
        'category_id' => $folder_id,
        'messages'    => [
            'category_type'  => $folder_type,
            'use_garbagebox' => $hide_garbage
        ],
    ],
    'handler'       => ['btn_delete_multi1', 'btn_delete_multi2'],
    'multi_target'  => 'ids[]',
    'form_target'   => 'message/search_cmd',
    'before_delete' => 'on_before_show_popup',
];
$t->assign('delete_multi_info', $delete_multi_info);

// Smarty実行
$doc_name = cb_get_pagename();
$t->display("{$doc_name}.tpl");

