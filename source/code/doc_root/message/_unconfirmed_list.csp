<?php

// ユーザー取得
global $G_container_base;
$uum = $G_container_base->getInstance('uum');
$user = $uum->getLoginUser();

if ( ! $user) {
    require_once('grn/error_code.csp');
    cb_throw_error(E_GRN_USER_NOT_FOUND);
}

// Smarty をインスタンス化
if ( ! isset($t) || ! is_a($t, 'GRN_Smarty')) {
    require_once("grn/smarty.csp");
    $t = new GRN_Smarty;
}

//------------------

// set parameters
$default_parameters = [
    'sort'    => 'last_mtime',
    'reverse' => false
];

$params = [];
foreach ($default_parameters as $key => $value) {
    $params[$key] = @ $G_INPUT[$key];
    if ($params[$key] == '') {
        $params[$key] = $value;
    }
}

require_once('message/message_logic.csp');
$message_logic = new GRN_Message_Logic();

// get new messages
$message_logic->receiveMessages($user);

// limit
$limit = $G_message_ui_config->getListMax();

require_once('grn/controller.csp');
$utility = new GRN_ControllerUtil();
$utility->setNaviStartPosition(0);
$offset = $utility->getNaviStartPosition();
$utility->setNaviStartPosition($offset);

$sort_list = ['creator', 'last_mtime', 'folder'];
$sort_params_for_view = [];
foreach ($sort_list as $sort_key) {
    $sort_param = [];
    $sort_param['reverse'] = false;
    $sort_param['disable'] = true;
    $sort_params_for_view[$sort_key] = $sort_param;
}
$sort_params_for_view[$params['sort']]['reverse'] = ! $params['reverse'];
$sort_params_for_view[$params['sort']]['disable'] = false;

$t->assign('sort_params', $sort_params_for_view);

$messages = $message_logic->getUnconfirmedMessageList($user, $params['sort'],
    $params['reverse'], $offset, $limit + 1);
if ($messages === false) {
    require_once('message/error_code.csp');
    cb_throw_error(E_GRN_MESSAGE_WRONG_PARAMETER);
}

$isNextPageExists = (count($messages) > $limit);
if ($isNextPageExists) {
    array_pop($messages);
}

$navi_info_for_view = [];
$navi_info_for_view = $utility->makeSimpleNaviInformation($offset, $limit,
    count($messages), $isNextPageExists);
$t->assign('navi_info', $navi_info_for_view);

$uids = [];
foreach ($messages as $message) {
    $uids[] = $message['creator_id'];
}
require_once("grn/controller.csp");
$users_info = GRN_ControllerUtil::getUserInfoToShowUserName($uids, $user);
$t->assign('users_info', $users_info);

$t->assign('messages', $messages);

// application name
require_once('grn/application.csp');
$locator = GRN_ApplicationLocator::instance();
if ( ! ($message = $locator->getInstance('message'))) {
    require_once('message/error_code.csp');
    $name = $locator->getName('message');
    $name = htmlspecialchars($name);
    cb_throw_error(E_GRN_MESSAGE_DEACTIVATED,
        ['app_name' => $name],
        ['app_name' => $name]);
}
$app_name = $message->getName();
$t->assign('app_name', $app_name);

$t->assign('subject_width', $G_message_ui_config->getSubjectWidth());
$t->assign('name_width', $G_message_ui_config->getNameWidth());


