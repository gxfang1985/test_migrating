<?php

if (strcasecmp(@ $_SERVER['REQUEST_METHOD'], 'POST') == 0) {
    // instantiate an Smarty object
    require_once("grn/smarty.csp");
    $t = new GRN_Smarty;

    global $G_container_base;
    $uum = $G_container_base->getInstance('uum');
    $user = $uum->getLoginUser();

    if ( ! $user) {
        require_once('grn/error_code.csp');
        cb_throw_error(E_GRN_USER_NOT_FOUND);
    }

    require_once('message/message_logic.csp');
    $message_logic = new GRN_Message_Logic();

    if (@ $G_INPUT['subs'] == '') {
        require_once('message/error_code.csp');
        cb_throw_error(E_GRN_MESSAGE_SUBSCRIPTION_NOT_INPUTTED);
    }

    if (@ $G_INPUT['cid'] == '') {
        require_once('message/error_code.csp');
        cb_throw_error(E_GRN_MESSAGE_FOLDER_NOT_FOUND);
    }

    if (@ $G_INPUT['rid'] == '' || @ $G_INPUT['mid'] == '') {
        require_once('message/error_code.csp');
        cb_throw_error(E_GRN_MESSAGE_MESSAGE_NOT_FOUND,
            ['app_name' => $G_message_name],
            ['app_name' => $G_message_name],
            ['app_name' => $G_message_name]);
    }

    $subscription = array_key_exists('subs', $G_INPUT) ? $G_INPUT['subs'] : '0';
    if ($subscription == '1') {
        $ret = $message_logic->setSubscription($user, @ $G_INPUT['rid'], '1');
    } else {
        $ret = $message_logic->setSubscription($user, @ $G_INPUT['rid'], '0');
    }

    global $G_config_grn;
    $i18n = CB_I18N::getInstance();

    $charset = mb_preferred_mime_name(cb_get_http_output_encoding());
    // Copyrightを表示しない、Content-Typeの変更など
    cb_prepare_download('', 'application/xml; charset=' . $charset, false);

    $xml_writer = new XMLWriter();

    $xml_writer->openURI('php://output');
    $xml_writer->setIndentString("\t");
    $xml_writer->setIndent(true);
    $xml_writer->startDocument('1.0', $charset);
    $xml_writer->startElement('garoon');
    $xml_writer->writeAttribute('version',
        $G_config_grn->get('System', 'version'));
    $xml_writer->writeAttribute('xml:lang', $i18n->getCurrentLanguage());
    $ts = new CB_TimeStampEx();
    $ts->setTimezone('UTC');
    $dt = $ts->getDateTime();
    $xml_writer->writeAttribute('datetime',
        sprintf('%04d-%02d-%02dT%02d:%02d:%02dZ', $dt->year, $dt->month,
            $dt->day, $dt->hour, $dt->minute, $dt->second));

    $xml_writer->startElement('data');

    if ($ret) {
        $xml_writer->startElement('result');
        $xml_writer->text('true');
        $xml_writer->endElement();   // result
        $xml_writer->startElement('subscription');
        $xml_writer->text($subscription ? 'on' : 'off');
        $xml_writer->endElement();   // subscription
    } else {
        $xml_writer->startElement('result');
        $xml_writer->text('false');
        $xml_writer->endElement();   // result
    }

    $xml_writer->endElement();   // data
    $xml_writer->endElement();   // garoon
    $xml_writer->endDocument();
    $xml_writer->flush();
}


