<?php

if (strcasecmp(@ $_SERVER['REQUEST_METHOD'], 'POST') == 0) {
    require_once('_command_send_initialize.csp');

    // instantiate an Smarty object
    require_once("grn/smarty.csp");
    $t = new GRN_Smarty;

    require_once('grn/controller.csp');
    $tmp_key = grn_get_temporary_key();
    $t->assign('tmp_key', $tmp_key);

    // Validation check
    $target_name = '';
    if (array_key_exists('fn', $G_INPUT)) {
        $target_name = $G_INPUT['fn'];
    }
    require_once('SmartyValidate.class.php');
    SmartyValidate::connect($t);
    SmartyValidate::register_form($target_name);

    // validate after a POST
    if (SmartyValidate::is_valid($G_INPUT, $target_name)) {
        require_once('message/message_logic.csp');
        $operators = grn_message_form_operators($operators, $operator_set);

        require('_command_send.csp');

        // create addressees data
        $addressees = [];
        if ($is_draft === false) {
            $addressees = grn_message_sUIDs2addressees($sUIDs, $operators);
        }

        $category_id = @ $G_INPUT['cid'];

        require_once('message/message_logic.csp');
        $message_logic = new GRN_Message_Logic();

        switch ($cmd) {
            case 'send':
                require_once('grn/upload.csp');
                $files = GRN_UploadFile::getUploadedFiles(
                    $G_INPUT['upload_ticket'] ?? '',
                    $G_INPUT['upload_fileids'] ?? '',
                    true);
                $ret = $message_logic->sendMessage($user, $message,
                    $addressees, $files);
                if ($ret === false) {
                    require_once('message/error_code.csp');
                    cb_throw_error(E_GRN_MESSAGE_FAIL_TO_SEND_MESSAGE,
                        ['app_name' => $G_message_name],
                        ['app_name' => $G_message_name]);
                }

                // get outbox folder id
                require_once('message/folder_logic.csp');
                $folder = new GRN_Message_FolderLogic();
                $category_id = $folder->getSpecificFolderID($user,
                    GRN_MESSAGE_SENDINGFOLDER);
                break;
            case 'draft':
                require_once('grn/upload.csp');
                $files = GRN_UploadFile::getUploadedFiles(
                    $G_INPUT['upload_ticket'] ?? '',
                    $G_INPUT['upload_fileids'] ?? '',
                    true);
                $ret = $message_logic->saveDraft($user, $message, $addressees,
                    $files);
                if ($ret === false) {
                    require_once('message/error_code.csp');
                    cb_throw_error(E_GRN_MESSAGE_FAIL_TO_SAVE_MESSAGE,
                        ['app_name' => $G_message_name],
                        ['app_name' => $G_message_name]);
                }
                require_once('message/folder_logic.csp');
                $folder_logic = new GRN_Message_FolderLogic();
                $category_id = $folder_logic->getSpecificFolderID($user,
                    GRN_MESSAGE_DRAFTFOLDER);
                break;
            default:
                require_once('message/error_code.csp');
                cb_throw_error(E_GRN_MESSAGE_WRONG_PARAMETER);
        }

        cb_redirect('message/index', ['cid' => $category_id, 'sf' => 1]);
    } else {
        // if error, show the source form
        $t->setPageInfo('message/send_other');

        require('_send_other.csp');
        require('_command_send_validate.csp');

        $t->assign('upload_ticket', @$G_INPUT['upload_ticket']);
        //remove unchecked files
        require_once('grn/upload.csp');
        GRN_UploadFile::removeUploadedFilesByFileIds(@$G_INPUT['upload_ticket'],
            @$G_INPUT['upload_fileids']);

        $t->display('message/send_other.tpl');
    }

}

