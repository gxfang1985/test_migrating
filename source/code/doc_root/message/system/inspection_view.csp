<?php

use grn\favour\service\FavourService;
use grn\grn\MemberLogic;
use grn\grn\mention\MentionController;
use grn\grn\GrnGenericScreenBase;

$follow_id = array_key_exists('follow_id', $G_INPUT) ? $G_INPUT['follow_id']
    : '';

// message id
if ( ! array_key_exists('mid', $G_INPUT) || $G_INPUT['mid'] == '') {
    require_once('message/error_code.csp');
    cb_throw_error(E_GRN_MESSAGE_MESSAGE_NOT_FOUND,
        ['app_name' => $G_message_name],
        ['app_name' => $G_message_name],
        ['app_name' => $G_message_name]);
}
$message_id = $G_INPUT['mid'];

// smarty
require_once("grn/smarty.csp");
$t = new GRN_Smarty;

// site position
$page_title = grn_get_current_page_display_name();
$page_search = 'message/system/inspection_search';
$t->assign('page_title', $page_title);
$t->assign('site_position',
    [
        [
            'page' => $page_search,
            'name' => grn_get_page_display_name($page_search),
            'sf'   => '1'
        ],
        [
            'page' => '',
            'name' => $page_title
        ]
    ]);

// login user
$uum = $G_container_base->getInstance('uum');
$user = $uum->getLoginUser();

// user config
require_once('grn/ui.csp');
$cm = GRN_UIConfigManager::getInstance();
$user_config = $cm->getUserConfig($user);

// for word navi
require_once('grn/controller.csp');
require_once('message/inspection.csp');
$utility = new GRN_ControllerUtil();
$offset = $utility->getNaviStartPosition();
$limit = $user_config->getFollowMax();
//$offset = (int)( $offset / $limit ) * $limit;

if (strlen($follow_id) > 0 && is_numeric($follow_id)) {
    $offset = grn_message_inspection_getFollowOffset($message_id, $follow_id);
}

$utility->setNaviStartPosition($offset);
$total = grn_message_inspection_total_follow_num($message_id);

$navi_info_for_view = $utility->makeNaviInformation($offset,
    $limit, $total);
$navi_info_for_view['navi']['params'] = ['mid' => $message_id];
$t->assign('navi_info', $navi_info_for_view);

// inline
$t->assign('inline', $user_config->getInlineSetting());

// message
if (strlen($follow_id) > 0 && is_numeric($follow_id)) {
    $message = grn_message_inspection_get_message_byFID($message_id, $follow_id,
        $limit);
} else {
    $message = grn_message_inspection_get_message($message_id, $offset, $limit);
}

if ( ! $message) {
    require_once('message/error_code.csp');
    cb_throw_error(E_GRN_MESSAGE_MESSAGE_NOT_FOUND,
        ['app_name' => $G_message_name],
        ['app_name' => $G_message_name],
        ['app_name' => $G_message_name]);
}

$t->assign('name_width', $user_config->getNameWidth());

// メッセージ本文
$assign_message_map = [
    'mid'           => 'message_id',
    'data'          => 'data',
    'creator_uid'   => 'creator_id',
    'creator_name'  => 'creator_name',
    'ctime'         => 'ctime',
    'mtime'         => 'mtime',
    'modifier_uid'  => 'modifier_id',
    'modifier_name' => 'modifier_name',
    'format_type'   => 'format_type'
];

$message_for_view = [];
foreach ($assign_message_map as $view_name => $data_name) {
    $message_for_view[$view_name] = $message[$data_name];
}
$message_for_view['subject'] = $message['subject'];
$t->assign('page_title', ($message['subject']));

// attached files
require_once('message/message_logic.csp');
$file_list = $message['files'];
if (count($file_list) > 0) {
    $file_info = _grn_message_attached_files($file_list);
    $message_for_view['attach_files'] = $file_info['files'];
    $message_for_view['del_file_num'] = $file_info['del_file_num'];
}

// addressees
$addressee_list = $message['addressees'];
$all_addressees = count($addressee_list);
$addressees_for_log = [];


$addressees = [];
foreach ($addressee_list as $addressee) {
    $_addressee = [];
    $_addressee['id'] = $addressee['id'];
    $_addressee['name'] = $addressee['name'];
    $addressees_for_log[] = $addressee['name'];
    if ($addressee['dtime']->unix_ts == 0 && $addressee['delete_flag'] == 0) {
        $addressees[] = $_addressee;
    }
}
$message_for_view['addressee'] = $addressees;
$message_for_view['all_addressees'] = $all_addressees;

require_once('message/message_logic.csp');
$message_logic = new GRN_Message_Logic();

$mention_collection = [];
$mention_count = [];

// follow
$follow_list =& $message['follows'];
if (count($follow_list) > 0) {
    $assign_follow_map = [
        'creator_uid'  => 'creator_id',
        'creator_name' => 'creator_name',
        'ctime'        => 'ctime',
        'data'         => 'data',
        'id'           => 'id',
        'format_type'  => 'format_type'
    ];

    $message_for_view['follow'] = [];
    $users_id = []; //GRB-15046

    $follow_id_list = array_keys($follow_list);
    $mention_collection
        = $message_logic->getMentionByFollowIdList($follow_id_list);

    foreach ($follow_list as $follow_id => $follow_data) {
        $follow = [];
        $follow['follow_id'] = $follow_id;
        foreach ($assign_follow_map as $view_name => $data_name) {
            $follow[$view_name] =& $follow_data[$data_name];
            //start GRB-15046
            if ($view_name == 'creator_uid' && $follow[$view_name] > 0) {
                $users_id[] = $follow[$view_name];
            }
            //end GRB-15046
        }
        // attached files
        $file_list =& $follow_data['files'];
        if (count($file_list) > 0) {
            $file_info = _grn_message_attached_files($file_list);
            $follow['attach_files'] = $file_info['files'];
            $follow['del_file_num'] = $file_info['del_file_num'];
        }
        $message_for_view['follow'][$follow_id] = $follow;

        $has_mention = count($mention_collection) > 0
                       && array_key_exists($follow_id, $mention_collection);
        if ($has_mention) {
            /** @var \grn\grn\mention\bean\MentionObjectCollection $mention */
            $mention = $mention_collection[$follow_id];
            $follow['mention'] = $mention;
            $mention_count[$follow_id] = $mention->count();
        }
    }
    //start GRB-15046
    require_once("grn/controller.csp");
    $users_id = array_values(array_unique($users_id));
    $users_info = GRN_ControllerUtil::getUserInfoToShowUserName($users_id,
        $user);
    $t->assign('users_info', $users_info);
    //end GRB-15046

    $t->assign('mention_count', $mention_count);
}

// for favour
$favour_service = new FavourService();
$is_favour_active = $favour_service->isFavourAppActive();
$is_favour_on = $favour_service->isAppAllowedRespond('message');
if ($is_favour_active && $is_favour_on) {
    $params = ['is_system' => true];
    $favour_info = $favour_service->constructFavourInfo(
        GRN_Message_Application::GRN_MESSAGE_MODULE_ID,
        GRN_Message_Application::FAVOUR_MESSAGE_BODY,
        $message_id,
        $user->getOID(),
        $params
    );
    $t->assign('favour_info', $favour_info);

    if (isset($message_for_view['follow'])
        && count($message_for_view['follow']) > 0
    ) {
        $follow_list = &$message_for_view['follow'];

        $params_for_follow = [
            'mid'       => $message_id,
            'is_system' => true
        ];
        $favours_list = $favour_service->getFavourersCount($user->getOID(),
            GRN_Message_Application::GRN_MESSAGE_MODULE_ID,
            GRN_Message_Application::FAVOUR_MESSAGE_COMMENT,
            array_keys($follow_list)
        );

        foreach ($follow_list as $follow_id => $follow_data) {
            if (isset($favours_list[$follow_id])) {
                $favour_info = $favours_list[$follow_id];
            } else {
                $favour_info = ['type_value' => $follow_id];
            }
            $favour_info['module_id']
                = GRN_Message_Application::GRN_MESSAGE_MODULE_ID;
            $favour_info['sub_module_id']
                = GRN_Message_Application::GRN_MESSAGE_SUB_MODULE_ID;
            $favour_info['type']
                = GRN_Message_Application::FAVOUR_MESSAGE_COMMENT;
            $params_for_follow['follow_id'] = $follow_data['id'];
            $favour_info['params'] = $params_for_follow;
            $follow_list[$follow_id]['favour_info'] = $favour_info;
        }
    }
}
$t->assign('is_favour_active', $is_favour_active);
$t->assign('message', $message_for_view);
$t->assign('is_favour_on', $is_favour_on);

// log
$logger = GRN_Message_Logger_25::getInstance();
$params = [
    'mid'            => $message['message_id'],
    'creator_name'   => $message['creator_name'],
    'subject'        => $message['subject'],
    'data'           => $message['data'],
    'receiver_name_' => $addressees_for_log
];
$logger->info('inspection_browse', 'message', $params);

require_once('fw/plugin.csp');
$mention_access_plugin_encoded = \CB_PluginLoader::encodeParam(
    [
        'name'   => 'message',
        'params' => [
            'app_id'     => 'message',
            'message_id' => $message_id,
            'target'     => [MemberLogic::TYPE_USER]
        ]
    ]
);
$t->assign('mention_access_plugin_encoded', $mention_access_plugin_encoded);

$offset_member = GrnGenericScreenBase::DEFAULT_OFFSET_DISPLAY_MEMBER;
$max_member = GrnGenericScreenBase::MAX_NUM_DISPLAY_MEMBER;
$mention_list
    = MentionController::createMemberListsForView($mention_collection,
    $offset_member, $max_member);
$t->assign('mention_list', $mention_list);

// Smarty実行
$t->display(cb_get_pagename() . '.tpl');
