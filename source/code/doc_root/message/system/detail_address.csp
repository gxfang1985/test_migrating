<?php

// ユーザー取得
global $G_container_base;
$uum = $G_container_base->getInstance('uum');
$user = $uum->getLoginUser();

if ( ! $user) {
    require_once('grn/error_code.csp');
    cb_throw_error(E_GRN_USER_NOT_FOUND);
}

//-- get parameters from URL parameters
$message_id = @ $G_INPUT['mid'];

if ($message_id == '') {
    require_once('message/error_code.csp');
    cb_throw_error(E_GRN_MESSAGE_MESSAGE_NOT_FOUND,
        ['app_name' => $G_message_name],
        ['app_name' => $G_message_name],
        ['app_name' => $G_message_name]);
}

//-- instantiate Smarty object
require_once("grn/smarty.csp");
$t = new GRN_Smarty;

//------------------

// user config
require_once('grn/ui.csp');
$cm = GRN_UIConfigManager::getInstance();
$user_config = $cm->getUserConfig($user);

// Get Message
require_once('grn/controller.csp');
require_once('message/inspection.csp');
$utility = new GRN_ControllerUtil();
$offset = $utility->getNaviStartPosition();
$limit = $user_config->getFollowMax();
$message = grn_message_inspection_get_message($message_id, $offset, $limit);
if ( ! $message) {
    require_once('message/error_code.csp');
    cb_throw_error(E_GRN_MESSAGE_MESSAGE_NOT_FOUND,
        ['app_name' => $G_message_name],
        ['app_name' => $G_message_name],
        ['app_name' => $G_message_name]);
}

//Get Addressees
require_once('message/message_logic.csp');
$message_logic = new GRN_Message_Logic();
$addressees = $message_logic->getAddressees($user, $message_id, false,
    true, false);
$unsubscribe_users = $message_logic->getUnsubscribeUsers($message_id,
    $addressees);

$addressee_num = 0;
$addressee_info_for_view = [];
$delete_num = 0;
$delete_info_for_view = [];
$deleted_num = 0;
$deleted_info_for_view = [];
$uids = [];
foreach ($addressees as $addressee) {
    $addressee['manager'] = @$addressee['is_operator'];
    if (array_key_exists($addressee['id'], $unsubscribe_users)) {
        $addressee['unsubscribe'] = 1;
    }

    if ($addressee['dtime']->unix_ts == 0 && $addressee['delete_flag'] == 0) {
        $addressee_num++;
        $addressee_info_for_view[$addressee['id']] = $addressee;
    } elseif ($addressee['dtime']->unix_ts > 0) {
        $delete_num++;
        $delete_info_for_view[$addressee['id']] = $addressee;
    } else {
        $deleted_num++;
        $deleted_info_for_view[$addressee['id']] = $addressee;
    }

    $uids[] = $addressee['id'];
}
require_once("grn/controller.csp");
$users_info = GRN_ControllerUtil::getUserInfoToShowUserName($uids, $user);

//-- Sort --//

//Sort
$addressee_sort = @ $G_INPUT['addressee_sort'];
$addressee_reverse = @ $G_INPUT['addressee_reverse'] ? '1' : '0';
$delete_sort = @ $G_INPUT['delete_sort'];
$delete_reverse = @ $G_INPUT['delete_reverse'] ? '1' : '0';
$deleted_sort = @ $G_INPUT['deleted_sort'];
$deleted_reverse = @ $G_INPUT['deleted_reverse'] ? '1' : '0';
if ($addressee_sort) {
    $order = $addressee_reverse ? SORT_DESC : SORT_ASC;
    $sort = [];
    foreach ($addressee_info_for_view as $key => $addressee) {
        $sort[$key] = @$addressee[$addressee_sort];
    }
    array_multisort($sort, $order, $addressee_info_for_view);
}
if ($delete_sort) {
    $order = $delete_reverse ? SORT_DESC : SORT_ASC;
    $sort = [];
    foreach ($delete_info_for_view as $key => $addressee) {
        $sort[$key] = $addressee[$delete_sort];
    }
    array_multisort($sort, $order, $delete_info_for_view);
}
if ($deleted_sort) {
    $order = $deleted_reverse ? SORT_DESC : SORT_ASC;
    $sort = [];
    foreach ($deleted_info_for_view as $key => $addressee) {
        $sort[$key] = $addressee[$deleted_sort];
    }
    array_multisort($sort, $order, $deleted_info_for_view);
}

// sort disabled
$addressee_user_disabled = true;
$addressee_manager_disabled = true;
$addressee_unsubscribe_disabled = true;
$delete_user_disabled = true;
$delete_dtime_disabled = true;
$deleted_user_disabled = true;
$deleted_dtime_disabled = true;
switch ($addressee_sort) {
    case 'name':
        $addressee_user_disabled = false;
        $t->assign('addressee_user_reverse', ! $addressee_reverse);
        break;
    case 'manager':
        $addressee_manager_disabled = false;
        $t->assign('addressee_manager_reverse', ! $addressee_reverse);
        break;
    case 'unsubscribe':
        $addressee_unsubscribe_disabled = false;
        $t->assign('addressee_unsubscribe_reverse', ! $addressee_reverse);
        break;
}
switch ($delete_sort) {
    case 'name':
        $delete_user_disabled = false;
        $t->assign('delete_user_reverse', ! $delete_reverse);
        break;
    case 'dtime':
        $delete_dtime_disabled = false;
        $t->assign('delete_dtime_reverse', ! $delete_reverse);
        break;
}
switch ($deleted_sort) {
    case 'name':
        $deleted_user_disabled = false;
        $t->assign('deleted_user_reverse', ! $deleted_reverse);
        break;
    case 'dtime':
        $deleted_dtime_disabled = false;
        $t->assign('deleted_dtime_reverse', ! $deleted_reverse);
        break;
}
$t->assign('addressee_user_disabled', $addressee_user_disabled);
$t->assign('addressee_manager_disabled', $addressee_manager_disabled);
$t->assign('addressee_unsubscribe_disabled', $addressee_unsubscribe_disabled);
$t->assign('delete_user_disabled', $delete_user_disabled);
$t->assign('delete_dtime_disabled', $delete_dtime_disabled);
$t->assign('deleted_user_disabled', $deleted_user_disabled);
$t->assign('deleted_dtime_disabled', $deleted_dtime_disabled);

// addressee sort parameters
$sort_params = [
    'mid'               => $message_id,
    'addressee_sort'    => $addressee_sort,
    'addressee_reverse' => $addressee_reverse,
    'delete_sort'       => $delete_sort,
    'delete_reverse'    => $delete_reverse,
    'deleted_sort'      => $deleted_sort,
    'deleted_reverse'   => $deleted_reverse
];

$addressee_sort_params_for_view = $sort_params;
$addressee_sort_params_for_view['addressee_sort'] = 'name';
$addressee_sort_params_for_view['addressee_reverse'] = $addressee_user_disabled
    ? '1' : ! $addressee_reverse;
$t->assign('addressee_user_sort_params', $addressee_sort_params_for_view);
$addressee_sort_params_for_view['addressee_sort'] = 'manager';
$addressee_sort_params_for_view['addressee_reverse']
    = $addressee_manager_disabled
    ? '1' : ! $addressee_reverse;
$t->assign('addressee_manager_sort_params', $addressee_sort_params_for_view);
$addressee_sort_params_for_view['addressee_sort'] = 'unsubscribe';
$addressee_sort_params_for_view['addressee_reverse']
    = $addressee_unsubscribe_disabled
    ? '1' : ! $addressee_reverse;
$t->assign('addressee_unsubscribe_sort_params',
    $addressee_sort_params_for_view);
$t->assign('addressee_reverse', ! $addressee_reverse);

// delete addressee sort parameters
$delete_sort_params_for_view = $sort_params;
$delete_sort_params_for_view['delete_sort'] = 'name';
$delete_sort_params_for_view['delete_reverse'] = $delete_user_disabled ? '1'
    : ! $delete_reverse;
$t->assign('delete_user_sort_params', $delete_sort_params_for_view);
$delete_sort_params_for_view['delete_sort'] = 'dtime';
$delete_sort_params_for_view['delete_reverse'] = $delete_dtime_disabled ? '1'
    : ! $delete_reverse;
$t->assign('delete_dtime_sort_params', $delete_sort_params_for_view);
$t->assign('delete_reverse', ! $delete_reverse);

// deleted addressee sort parameters
$deleted_sort_params_for_view = $sort_params;
$deleted_sort_params_for_view['deleted_sort'] = 'name';
$deleted_sort_params_for_view['deleted_reverse'] = $deleted_user_disabled ? '1'
    : ! $deleted_reverse;
$t->assign('deleted_user_sort_params', $deleted_sort_params_for_view);
$deleted_sort_params_for_view['deleted_sort'] = 'dtime';
$deleted_sort_params_for_view['deleted_reverse'] = $deleted_dtime_disabled ? '1'
    : ! $deleted_reverse;
$t->assign('deleted_dtime_sort_params', $deleted_sort_params_for_view);
$t->assign('deleted_reverse', ! $deleted_reverse);

//-- End Sort --//

//Assign
$t->assign('users_info', $users_info);
$t->assign('user_info', $addressee_info_for_view);
$t->assign('delete_user_info', $delete_info_for_view);
$t->assign('deleted_user_info', $deleted_info_for_view);

// page title
$page_title = grn_get_current_page_display_name();
$t->assign('page_title', $page_title);
$t->assign('app_name', $G_message_name);

// site position
$page_title = grn_get_current_page_display_name();
$page_search = 'message/system/inspection_search';
$page_view = 'message/system/inspection_view';


$t->assign('site_position',
    [
        [
            'page' => $page_search,
            'name' => grn_get_page_display_name($page_search),
            'sf'   => '1'
        ],
        [
            'page' => $page_view,
            'name' => grn_get_page_display_name($page_view),
            'mid'  => $message_id
        ],
        [
            'page' => '',
            'name' => $page_title
        ]
    ]);

// Smarty実行
$doc_name = cb_get_pagename();
$t->display("{$doc_name}.tpl");

