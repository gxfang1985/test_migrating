<?php
// Smarty をインスタンス化
require_once('cellular/smarty.csp');
$smarty = new GRN_Cellular_Smarty;

// ページ情報
$smarty->assign('pagetitle', grn_get_current_page_display_name());
$smarty->assign('pagepath', $G_pagepath);
$smarty->assign('pagename', cb_get_pagename());

// ページ構成情報
require_once('grn/application.csp');
$locator = GRN_ApplicationLocator::instance();
$cellular_app = $locator->getInstance('cellular');
$user_config = $cellular_app->getUserConfig($G_login_user);

$list_limit = $user_config->getListMax();
$width = $user_config->getSubjectWidth();
$menu_limit = 20;

$smarty->assign('width', $width);

// params
$cid = null;
if (array_key_exists('cid', $G_INPUT) && strlen($G_INPUT['cid'])) {
    $cid = $G_INPUT['cid'];
}

// message instance
require_once('message/message_logic.csp');
$message_logic = new GRN_Message_Logic();
$folder_logic = new GRN_Message_FolderLogic();

// メッセージ受信
$message_logic->receiveMessages($G_login_user);

// cid 解析
$menu_page = 0;
$folder_info = false;
if (strlen($cid)) {
    if (($p = strpos($cid, ':')) !== false) {
        $menu_page = substr($cid, $p + 1);
        if ( ! strlen($menu_page)) {
            $menu_page = 0;
        }
        $cid = substr($cid, 0, $p);
    }
    // 指定されたフォルダの詳細
    $folder_info = $folder_logic->getFolderInfo($G_login_user, $cid);
}

if ($folder_info === false
    || $folder_info['folder_type'] == GRN_MESSAGE_ROOTFOLDER
) {
    // デフォルトは受信箱
    $cid = $folder_logic->getSpecificFolderID($G_login_user,
        GRN_MESSAGE_RECEIVINGFOLDER);
    if ( ! $cid) {
        require_once('message/error_code.csp');
        cb_throw_error(E_GRN_MESSAGE_FOLDER_NOT_FOUND);
    }
    // 受信箱の詳細
    $folder_info = $folder_logic->getFolderInfo($G_login_user, $cid);
}
$smarty->assign('current_cid', $cid);

// フォルダのselectbox
$folders_for_view = [];

// 受信箱 選択肢追加
$folders_for_view[] = [
    'cid'  => $folder_logic->getSpecificFolderID($G_login_user,
        GRN_MESSAGE_RECEIVINGFOLDER),
    'name' => cb_msg('grn.message.cellular', 'specific_folder_prefix')
              . cb_msg('grn.message', 'inbox'),
];
// 送信箱 選択肢追加
$folders_for_view[] = [
    'cid'  => $folder_logic->getSpecificFolderID($G_login_user,
        GRN_MESSAGE_SENDINGFOLDER),
    'name' => cb_msg('grn.message.cellular', 'specific_folder_prefix')
              . cb_msg('grn.message', 'outbox'),
];
// 下書き 選択肢追加
$folders_for_view[] = [
    'cid'  => $folder_logic->getSpecificFolderID($G_login_user,
        GRN_MESSAGE_DRAFTFOLDER),
    'name' => cb_msg('grn.message.cellular', 'specific_folder_prefix')
              . cb_msg('grn.message', 'draftbox'),
];

// 指定されたフォルダチェック
if ($folder_info['folder_type'] == GRN_MESSAGE_GENERALFOLDER) {
    // root 選択肢追加
    $folders_for_view[] = [
        'cid'  => $folder_logic->getSpecificFolderID($G_login_user,
            GRN_MESSAGE_ROOTFOLDER),
        'name' => cb_msg('grn.cellular.common', 'selectbox_root',
            ['rootname' => cb_msg('grn.message', 'root_folder')])
    ];
    // 一つ上へ 選択肢追加
    $folders_for_view[] = [
        'cid'  => $folder_info['parent_id'],
        'name' => cb_msg('grn.cellular.common', 'selectbox_up')
    ];
    // カレント 選択肢追加
    $folders_for_view[] = [
        'cid'  => $folder_info['folder_id'],
        'name' => $folder_info['folder_name']
    ];
    $ret = $folder_logic->getFolderTree($G_login_user, $cid,
        $tmp);
    $folders =& $tmp[$cid]['children'];
} else {
    $root_fid = $folder_logic->getSpecificFolderID($G_login_user,
        GRN_MESSAGE_ROOTFOLDER);
    $ret = $folder_logic->getFolderTree($G_login_user, $root_fid, $tmp);
    $subfolders =& $tmp[$root_fid]['children'];
    $folders = [];
    foreach ($subfolders as $_id => $_data) {
        if ($_data['folder_type'] == GRN_MESSAGE_GENERALFOLDER) {
            $folders[$_id] = $_data;
        }
    }
}
$menu_prev = null;
$menu_next = null;
if ( ! is_null($folders)) {
    if (count($folders) > $menu_limit) {
        $_chunk = array_chunk($folders, $menu_limit, true);
        if ( ! is_null($cid)) {
            foreach ($_chunk as $_page => $_folders) {
                if (array_key_exists($cid, $_folders)) {
                    $menu_page = $_page;
                }
            }
        }
        if (array_key_exists($menu_page - 1, $_chunk)) {
            $menu_prev = $menu_page - 1;
        }
        if (array_key_exists($menu_page + 1, $_chunk)) {
            $menu_next = $menu_page + 1;
        }
        $folders_list = &$_chunk[$menu_page];
    } else {
        $folders_list = &$folders;
    }

    if ( ! is_null($menu_prev)) {
        $folders_for_view[] = [
            'cid'  => $cid . ':' . $menu_prev,
            'name' => cb_msg('grn.cellular.common', 'selectbox_back')
        ];
    }
    foreach ($folders_list as $_id => $_item) {
        $folders_for_view[] = [
            'cid'  => $_id,
            'name' => cb_msg('grn.cellular.common', 'selectbox_tree')
                      . $_item['folder_name']
        ];
    }
    if ( ! is_null($menu_next)) {
        $folders_for_view[] = [
            'cid'  => $cid . ':' . $menu_next,
            'name' => cb_msg('grn.cellular.common', 'selectbox_next')
        ];
    }
}

// メッセージ未読件数を取得
$unread_message_num = $message_logic->getUnreadMessageNum($G_login_user);
foreach (array_keys($folders_for_view) as $index) {
    if (array_key_exists($folders_for_view[$index]['cid'],
        $unread_message_num)
    ) {
        $folders_for_view[$index]['unread_num']
            = $unread_message_num[$folders_for_view[$index]['cid']];
    }
}

// ごみ箱を利用するか
require_once('message/personal_logic.csp');
$personal_logic = GRN_Message_PersonalLogic::getInstance();
$garbage_folder_id = null;
if ($personal_logic->getUseGarbageBoxAttribute($G_login_user)) {
    $garbage_folder_id = $folder_logic->getSpecificFolderID($G_login_user,
        GRN_MESSAGE_GARBAGEFOLDER);
    // ごみ箱 選択肢追加
    $folders_for_view[] = [
        'cid'  => $garbage_folder_id,
        'name' => cb_msg('grn.message.cellular', 'specific_folder_prefix')
                  . cb_msg('grn.message', 'garbagebox'),
    ];
}
$smarty->assign('folders_count', count($folders_for_view));
$smarty->assign('folders', $folders_for_view);

//var_dump($folders_for_view);

// メッセージリスト

require_once("cellular/controller.csp");
$controller_util = new GRN_Cellular_ControllerUtil();
$offset = $controller_util->getListOffset();

// メッセージ取得
//  送信ユーザーが削除されているかは画面表示で差がないので確認しない
$message_list = $message_logic->getMessageList($G_login_user, $cid,
    $folder_info['folder_type'],
    'last_mtime', true, $offset, $list_limit, 'ctime',
    false);
$smarty->assign('messages', $message_list);
//var_dump($message_list);

// N件ナビゲーション
$message_num = $message_logic->getTotalMessageNum($G_login_user, $cid);
$navigation_info = $controller_util->makeNaviInformation($offset,
    $list_limit,
    $message_num,
    ['cid' => $cid]);
$smarty->assign('navi', $navigation_info['navi']);

if ($cid == $garbage_folder_id) {
    $smarty->assign('is_garbage', true);
}

// display
$smarty->display(cb_get_pagename() . '.tpl');


