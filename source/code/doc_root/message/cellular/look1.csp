<?php

// 使用するパラメータの定義
$message_id = @ $G_INPUT['mid'];
$relation_id = @ $G_INPUT['rid'];
$body_page = @ $G_INPUT['bp'];
$follow_page = @ $G_INPUT['fp'];

// config
require_once('grn/application.csp');
$locator = GRN_ApplicationLocator::instance();
$cellular_app = $locator->getInstance('cellular');
$user_config = $cellular_app->getUserConfig($G_login_user);
$limit = $user_config->getListMax();
$width = $user_config->getSubjectWidth();

$app_name = $locator->getName('message');

// Smarty をインスタンス化
require_once('cellular/smarty.csp');
$smarty = new GRN_Cellular_Smarty;

// ページタイトル
$smarty->assign('pagetitle', grn_get_current_page_display_name());
// パス情報
$smarty->assign('pagepath', $G_pagepath);

if ($notify_app = $locator->getInstance('notification')) {
    $smarty->assign('enable_notification', true);
}

// メッセージ関連 instance
require_once('message/personal_logic.csp');
$personal_logic = GRN_Message_PersonalLogic::getInstance();
require_once('message/message_logic.csp');
$message_logic = new GRN_Message_Logic();
$folder_logic = new GRN_Message_FolderLogic();

// ごみ箱を利用するか
$garbage_folder_id = null;
if ($personal_logic->getUseGarbageBoxAttribute($G_login_user)) {
    // ごみ箱ID
    $garbage_folder_id = $folder_logic->getSpecificFolderID($G_login_user,
        GRN_MESSAGE_GARBAGEFOLDER);
}

$follow_offset = $follow_page * $limit;
$follow_limit = $limit + 1;

$my_message = $message_logic->hasPrivilege($G_login_user, $message_id,
    $relation_id);
if ($my_message === false) {
    require_once('message/error_code.csp');
    cb_throw_error(E_GRN_MESSAGE_MESSAGE_NOT_FOUND,
        ['app_name' => $app_name],
        ['app_name' => $app_name],
        ['app_name' => $app_name]);
}
$category_id = $my_message['cid'];
$relation_id = $my_message['rid'];
$message_id = $my_message['mid'];

// メッセージ＆フォロー取得
$message = $message_logic->getMessage(
    $G_login_user,                       // user
    $relation_id,                        // relation_id
    $message_id,                         // message_id
    $follow_offset,                      // follow offset
    $follow_limit,                       // follow limit
    false                                // 既読フラグの制御(TRUE:off)
);

$send_address = [];
foreach ($message['addressees'] as $address) {
    if ($address['dtime']->unix_ts > 0 || $address['delete_flag']) {
        continue;
    }
    $send_address[] = $address['name'];
}

$chunk_addresses = array_chunk($send_address, 5, true);
$smarty->assign('addresses',
    isset($chunk_addresses[0]) ? $chunk_addresses[0] : null);
$smarty->assign('more_address', isset($chunk_addresses[1]) ? true : false);

if ($message['format_type'] == 1) {
    // strip tags
    require_once('grn/controller.csp');
    $message['data'] = grn_strip_tags(grn_html_entity_decode($message['data']));
}

// assign
$smarty->assign('compdata', $message);

// 各種フラグのassign

// ゴミ箱
if ($message['folder_id'] == $garbage_folder_id) {
    $smarty->assign('is_garbage', true);
}

// 添付ファイル
if (count($message['files']) > 0) {
    $smarty->assign('attach_files', true);
}
// 「確認」の必要
if (@$message['need_confirm']) {
    $smarty->assign('need_confirm', true);
    if (@$message['confirmed']) {
        $smarty->assign('confirmed', true);
    }
}

//自分が差出人か管理者、あるいは自分が宛先にいて管理者が誰もいない場合に $is_operator = TRUE
if (_grn_message_regard_operator($message['addressees'],
    $message['creator_id'])
) {
    $smarty->assign('is_operator', true);
}

// フォロー
// follow view map
$assign_follow_map = [
    'post_user' => 'creator_name',      //
    'date'      => 'ctime',             //
    'title'     => 'data',              //
    'read'      => 'read_flag',         // フォロー閲覧フラグ(0: 未読, 1: 既読)
    'id'        => 'id',                // フォローID
];

$follow_list =& $message['follows'];
if ($follow_page > 0) {
    // 前のページがあるとき
    $smarty->assign('prev_follow', true);
    $smarty->assign('prev_fp', $follow_page - 1);
}
if (count($follow_list) == $follow_limit) {
    // 次のページがある時、最後の行を消す
    array_pop($follow_list);
    $smarty->assign('next_follow', true);
    $smarty->assign('next_fp', $follow_page + 1);
}

$follow_for_view = [];
if (count($follow_list) > 0) {
    foreach ($follow_list as $follow_id => $follow_data) {
        if ($follow_data['format_type'] == 1) {
            // strip tags
            require_once('grn/controller.csp');
            $follow_data['data']
                = grn_strip_tags(grn_html_entity_decode($follow_data['data']));
        }

        $follow = [];
        foreach ($assign_follow_map as $view_name => $data_name) {
            $follow[$view_name] =& $follow_data[$data_name];
        }
        $follow['fid'] = $follow_id;
        $follow_for_view[] = $follow;
    }
    if (isset($G_INPUT['follow_id'])) {
        $fol_id = $follow_for_view[0]['fid'];
        grn_cellular_switch_page($G_pagepath . "/look2", [
                'rid' => $relation_id,
                'mid' => $message_id,
                'fid' => $fol_id
            ]
        );
    }
}

// assign
$smarty->assign('followdata', $follow_for_view);

// assign
$smarty->assign([
    'cid'   => $category_id,
    'rid'   => $relation_id,
    'mid'   => $message_id,
    'bp'    => $body_page,
    'fp'    => $follow_page,
    'width' => $width,
]);

// display
$smarty->display(cb_get_pagename() . '.tpl');

