<?php

if (strcasecmp(@ $_SERVER['REQUEST_METHOD'], 'POST') == 0) {
    require_once('grn/multi_select_utility.csp');
    $G_INPUT = grn_deploy_selected_users('selected_users_sUID', 'sUID',
        $G_INPUT);
    $G_INPUT = grn_deploy_selected_users('selected_users_sUID_o', 'sUID_o',
        $G_INPUT);

    require_once('message/message_logic.csp');

    //uum
    global $G_container_base;
    $uum = $G_container_base->getInstance('uum');
    $user = $uum->getLoginUser();

    //頻度更新
    require_once('grn/uum_util.csp');
    $uum_util = GRN_UumUtil::getInstance();
    $input_keys = array_keys($G_INPUT);
    foreach ($input_keys as $input_key) {
        if (preg_match('#^selected_users_.*$#', $input_key)) {
            $input_value = $G_INPUT[$input_key];
            if ($input_value) {
                $input_values = explode(':', $input_value);
                $uum_util->selectUsers($user, $input_values);
            }
        } elseif (preg_match('#^selected_groups_.*$#', $input_key)) {
            $input_value = $G_INPUT[$input_key];
            if ($input_value) {
                $input_values = explode(':', $input_value);
                $uum_util->selectGroups($user, $input_values);
            }
        }
    }

    $category_id = @ $G_INPUT['cid'];
    $relation_id = @ $G_INPUT['rid'];
    $message_id = @ $G_INPUT['mid'];

    if ($category_id == '' || $relation_id == '' || $message_id == '') {
        require_once('message/error_code.csp');
        cb_throw_error(E_GRN_MESSAGE_MESSAGE_NOT_FOUND,
            ['app_name' => $G_message_name],
            ['app_name' => $G_message_name],
            ['app_name' => $G_message_name]);
    }

    $sUIDs = @ $G_INPUT['sUID'];
    if (is_array($sUIDs)) {
        $G_INPUT['sUID'] = 'dummy';
    }

    // instantiate an Smarty object
    require_once("grn/smarty.csp");
    $t = new GRN_Smarty;

    // Validation check
    $target_name = '';
    if (array_key_exists('fn', $G_INPUT)) {
        $target_name = $G_INPUT['fn'];
    }
    require_once('SmartyValidate.class.php');
    SmartyValidate::connect($t);
    SmartyValidate::register_form($target_name);

    // validate after a POST
    if (SmartyValidate::is_valid($G_INPUT, $target_name)) {

        if ( ! is_array($sUIDs)) {
            require_once('message/error_code.csp');
            cb_throw_error(E_GRN_MESSAGE_ADDRESSEES_NOT_SELECTED,
                null,
                ['app_name' => $G_message_name]);
        }

        if ( ! $user) {
            require_once('grn/error_code.csp');
            cb_throw_error(E_GRN_USER_NOT_FOUND);
        }

        // createt operator data
        $operator_set = array_key_exists('operator-set', $G_INPUT)
                        && $G_INPUT['operator-set'] ? 1 : 0;
        $operators = @ $G_INPUT['sUID_o'];
        //GRN35-550
        if ( ! is_null($operators)) {
            foreach ($operators as $key => $item) {
                $temp = explode(":", $item);
                if (count($temp) > 1) {
                    $operators[$key] = $temp[0];
                }
            }
        }
        //GRN35-550
        if ( ! is_array($operators)) {
            $operators = [];
        }

        $message_logic = new GRN_Message_Logic();

        // To check whether the login user can modify the list of addressees,
        // check the old list of the addressees
        $addressees = $message_logic->getAddressees($user, $message_id, true);
        if ($addressees === false) {
            require_once('message/error_code.csp');
            cb_throw_error(E_GRN_MESSAGE_MESSAGE_NOT_FOUND,
                ['app_name' => $G_message_name],
                ['app_name' => $G_message_name],
                ['app_name' => $G_message_name]);
        }
        unset($addressees);

        $message_info = $message_logic->getMessageInfo($user, $relation_id,
            $message_id);
        $creator_id = $message_info['creator_id'];

        $operators = grn_message_form_operators($operators, $operator_set,
            $creator_id);

        // create addressees data
        $addressees = [];
        foreach ($sUIDs as $key => $sUID) {
            $addressee = [];
            $addressee['addressee_id'] = $sUID;
            $addressee['order'] = $key;
            if (array_key_exists($sUID, $operators)) {
                $addressee['addressee_is_operator'] = 1;
            } else {
                $addressee['addressee_is_operator'] = 0;
            }
            $addressees[$sUID] = $addressee;
        }

        // メッセージのオーナが宛先に存在しているか
        $current_addressees = $message_logic->getAddressees($user, $message_id,
            true);
        $owner = $message_logic->getMessageOwner($message_id);

        /**
         * While the creator has been still available,
         * an error will be thrown when someone tries to remove the creator from addressees.
         */
        if ( ! is_null($owner)) {
            $owner_id = $owner->getOID();

            $addressee_include_owner = false;
            foreach ($current_addressees as $current_addressee) {
                if ($current_addressee['id'] == $owner_id) {
                    $addressee_include_owner = true;
                    break;
                }
            }

            if ($addressee_include_owner) {
                if ( ! array_key_exists($owner_id, $addressees)) {
                    require_once('message/error_code.csp');
                    cb_throw_error(E_GRN_MESSAGE_OWNER_NOT_FOUND);
                }
            }

            unset($addressee_include_owner);
            $addressee_include_owner = false;

        }

        $ret = $message_logic->modifyAddressees($user, $message_id,
            $addressees);
        if ( ! $ret) {
            require_once('message/error_code.csp');
            cb_throw_error(E_GRN_MESSAGE_MESSAGE_NOT_FOUND,
                ['app_name' => $G_message_name],
                ['app_name' => $G_message_name],
                ['app_name' => $G_message_name]);
        }

        cb_redirect('message/view', [
            'cid' => $category_id,
            'rid' => $relation_id,
            'mid' => $message_id
        ]);
    } else {
        // if error, show the source form
        $t->setPageInfo('message/address_modify');

        include('_address_modify.csp');

        $t->assign('initialize_users', []);

        $t->display('message/address_modify.tpl');
    }

}

