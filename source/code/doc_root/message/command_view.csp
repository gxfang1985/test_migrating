<?php

use grn\grn\mention\MentionController;
use grn\grn\MemberLogic;

require_once('message/error_code.csp');

if (strcasecmp(@ $_SERVER['REQUEST_METHOD'], 'POST') == 0) {
    // instantiate an Smarty object
    require_once("grn/smarty.csp");
    $t = new GRN_Smarty;

    global $G_container_base;
    $uum = $G_container_base->getInstance('uum');
    $user = $uum->getLoginUser();

    if ( ! $user) {
        require_once('grn/error_code.csp');
        cb_throw_error(E_GRN_USER_NOT_FOUND);
    }

    require_once('message/message_logic.csp');
    $message_logic = new GRN_Message_Logic();

    switch (@ $G_INPUT['cmd']) {
        case 'follow':
            $category_id = @ $G_INPUT['cid'];
            $relation_id = @ $G_INPUT['rid'];
            $message_id = @ $G_INPUT['mid'];

            if ($category_id == '' || $relation_id == '' || $message_id == '') {
                cb_throw_error(E_GRN_MESSAGE_MESSAGE_NOT_FOUND,
                    ['app_name' => $G_message_name],
                    ['app_name' => $G_message_name],
                    ['app_name' => $G_message_name]);
            }
            $follow = [];
            $follow['creator'] =& $user;

            // for rich editor
            if (array_key_exists('editor', $G_INPUT) && $G_INPUT['editor']) {
                $follow['format_type'] = 1;
                $follow['data'] = $G_INPUT['data'];
            } else {
                $follow['format_type'] = 0;
                $follow['data'] = $G_INPUT['data'];
            }

            require_once('grn/upload.csp');
            $files
                = GRN_UploadFile::getUploadedFiles(@$G_INPUT['upload_ticket'],
                @$G_INPUT['upload_fileids'], true);
            if (cb_trim($follow['data']) == '' && count($files) == 0) {
                cb_throw_error(E_GRN_MESSAGE_FOLLOW_NOT_INPUTTED);
            }

            $mentioned_objects
                = MentionController::getMentionObjectsFromRequestArgs($G_INPUT);
            $mention_member_ids = $mentioned_objects->getObjectIdsGroupByType();
            $mention_user_ids = $mention_member_ids[MemberLogic::TYPE_USER];

            $no_permission_mentioned_user_ids
                = $message_logic->filterUsersNotHavingPermission($message_id,
                $mention_user_ids);
            if ($no_permission_mentioned_user_ids) {
                cb_throw_error(
                    E_GRN_MESSAGE_HAS_NO_PERMISSION,
                    null,
                    ['users' => MemberLogic::getCommaSeparatedUserNames($no_permission_mentioned_user_ids)]);
            }
            $follow['mention'] = $mentioned_objects;

            $ret = $message_logic->writeFollow($user, $message_id, $follow,
                $files);
            if ($ret === false) {
                cb_throw_error(E_GRN_MESSAGE_MESSAGE_NOT_FOUND,
                    ['app_name' => $G_message_name],
                    ['app_name' => $G_message_name],
                    ['app_name' => $G_message_name]);
            }

            \grn\grn\JSONResponse::create()->response(['success' => true]);
            break;
        case 'move':
            $category_id = @ $G_INPUT['cid'];
            $dcategory_id = @ $G_INPUT['dcid'];
            $relation_id = @ $G_INPUT['rid'];
            if ($category_id == '' || $dcategory_id == ''
                || $relation_id == ''
            ) {
                cb_throw_error(E_GRN_MESSAGE_MESSAGE_NOT_FOUND,
                    ['app_name' => $G_message_name],
                    ['app_name' => $G_message_name],
                    ['app_name' => $G_message_name]);
            }

            $ret = $message_logic->moveMessages($user, @ $G_INPUT['cid'],
                @ $G_INPUT['dcid'],
                [@ $G_INPUT['rid']]);
            if ( ! $ret) {
                cb_throw_error(E_GRN_MESSAGE_MESSAGE_NOT_MOVED,
                    ['app_name' => $G_message_name],
                    ['app_name' => $G_message_name],
                    ['app_name' => $G_message_name]);
            }

            cb_redirect('message/index', ['cid' => @ $G_INPUT['cid']]);
            break;
        case 'subscribe':
            if (@ $G_INPUT['subs'] == '') {
                cb_throw_error(E_GRN_MESSAGE_SUBSCRIPTION_NOT_INPUTTED);
            }

            if (@ $G_INPUT['cid'] == '') {
                cb_throw_error(E_GRN_MESSAGE_FOLDER_NOT_FOUND);
            }

            if (@ $G_INPUT['rid'] == '' || @ $G_INPUT['mid'] == '') {
                cb_throw_error(E_GRN_MESSAGE_MESSAGE_NOT_FOUND,
                    ['app_name' => $G_message_name],
                    ['app_name' => $G_message_name],
                    ['app_name' => $G_message_name]);
            }

            if (@ $G_INPUT['subs'] == '1') {
                $ret = $message_logic->setSubscription($user, @ $G_INPUT['rid'],
                    '1');
            } else {
                $ret = $message_logic->setSubscription($user, @ $G_INPUT['rid'],
                    '0');
            }

            if ( ! $ret) {
                cb_throw_error(E_GRN_MESSAGE_FOLDER_NOT_FOUND,
                    ['app_name' => $G_message_name],
                    ['app_name' => $G_message_name],
                    ['app_name' => $G_message_name]);
            }

            cb_redirect('message/view', [
                'cid' => @ $G_INPUT['cid'],
                'rid' => @ $G_INPUT['rid'],
                'mid' => @ $G_INPUT['mid']
            ]);
            break;
        case 'confirm':
            $category_id = @ $G_INPUT['cid'];
            $relation_id = @ $G_INPUT['rid'];
            $message_id = @ $G_INPUT['mid'];

            if ($category_id == '' || $relation_id == '' || $message_id == '') {
                cb_throw_error(E_GRN_MESSAGE_MESSAGE_NOT_FOUND,
                    ['app_name' => $G_message_name],
                    ['app_name' => $G_message_name],
                    ['app_name' => $G_message_name]);
            }

            $ret = $message_logic->confirmMessage($user, $message_id);
            if ( ! $ret) {
                cb_throw_error(E_GRN_MESSAGE_MESSAGE_NOT_FOUND,
                    ['app_name' => $G_message_name],
                    ['app_name' => $G_message_name],
                    ['app_name' => $G_message_name]);
            }

            cb_redirect('message/view', [
                'cid' => $category_id,
                'rid' => $relation_id,
                'mid' => $message_id
            ]);

            break;
        default:
            cb_throw_error(E_GRN_MESSAGE_WRONG_PARAMETER);
    }
}


