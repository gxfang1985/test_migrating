<?php

cb_require_role('LoginUser');

require_once('grn/smarty.csp');
$t = new GRN_Smarty;

////////////////////////////////////////////////////////////////
global $G_INPUT;

global $G_state_set;
$G_state_set->set('copyright_should_be_written', false);
$G_state_set->set('html_should_be_closed', false);

// GET/POSTされたパラメータを取得する
$cid = cb_at($G_INPUT, 'cid');
$user_ids = [];
foreach (explode(':', $cid) as $user_id) {
    if (is_numeric($user_id) && $user_id > 0) {
        $user_ids[] = (int)$user_id;
    }
}
global $G_container_base;
/** @var $uum GRN_Uum */
$uum = $G_container_base->getInstance('uum');
// ログインユーザーを取得する
$login = $uum->getLoginUser();
if ( ! is_object($login) || ! is_a($login, 'CB_User')) {
    cb_throw_error(E_GRN_USER_NOT_FOUND);
}
$login_id = $login->getOID();
$cache_users_id = array_merge($user_ids, [$login_id]);

require_once('grn/controller.csp');
require_once("fw/i18n/base.csp");
\CB_UserBaseSetting::loadAndCache($cache_users_id);
\CB_UserLocaleSetting::loadAndCache($cache_users_id);
require_once('presence/logic.csp');
GRN_Presence_Logic::getInstance()->loadAndCache($cache_users_id);
$uum->loadAndCache($cache_users_id);
$uum->loadAndCacheUserGroups($cache_users_id);
$uum->loadAndCacheUserPrimaryGroup($cache_users_id);
$uum->loadAndCacheInfo("user", $cache_users_id);
$uum->loadAndCacheUserImage($cache_users_id);
$uum->loadAndCacheExtendedItems($cache_users_id);
$uum->getGroupUsersInfo($cache_users_id);

require_once('presence/access_logic.csp');
$access_logic = GRN_Presence_Access_Logic::getInstance();
$access_logic->loadAndCacheAccessForPresence($cache_users_id, $login_id);

$system_display = '0';
if (array_key_exists('system_display', $G_INPUT)) {
    $system_display = $G_INPUT['system_display'];
}
$controller_util = new GRN_ControllerUtil();
// 組み込み項目を取得する
$builtin_items = $controller_util->listBuiltinItems($login);
// カスタマイズ項目を取得する
$extended_items = $controller_util->listExtendedItems($login);


$t->assign('builtin_items', $builtin_items);
$t->assign('extended_items', $extended_items);

// User icon setting
require_once('grn/controller.csp');
$imageIcon = GRN_ControllerUtil::getUserIconFormat($login);
$t->assign('imageIcon', $imageIcon);

$user_list = [];
foreach ($user_ids as $user_id) {
    $user = $uum->getUser($user_id);
    if ( ! $user) {
        continue;
    }
    // 組み込み項目を取得する
    $builtin_items = $controller_util->listBuiltinItems($user);
    // カスタマイズ項目を取得する
    $extended_items = $controller_util->listExtendedItems($user);

    // ユーザー情報を取得する
    $user_list[$user_id] = [
        'builtin_items'  => $builtin_items,
        'extended_items' => $extended_items,
        'sso'            => ['user' => $user_id]
    ];
}

// add photo image path to user info
$users_info = GRN_ControllerUtil::getUserInfoToShowUserName($user_ids, $login,
    cb_at($G_INPUT, 'app'), true);
if ($imageIcon) {
    $users_info = GRN_ControllerUtil::addPhotoUrlForMultiUserByUsersInfo($users_info,
        GRN_ControllerUtil::getUserProfilePhotoLargeSize());
    $t->assign('iconSize', GRN_ControllerUtil::ICON_SIZE_LARGE);
}
$t->assign('users_info', $users_info);

$timestamp = new CB_TimeStampEx();
$datetime = $timestamp->getDateTime();
$datetime->hour = 0;
$datetime->minute = 0;
$datetime->second = 0;
$timestamp->setDateTime($datetime);

$t->assign('unix_timestamp', $timestamp->unix_ts);
$t->assign('system_display', $system_display);
$t->assign('user_list', $user_list);
$t->assign('login_id', $login_id);

////////////////////////////////////////////////////////////////

// Smartyにページタイトルを割り当てる
$page_title = grn_get_page_display_name('common/popup_user_list');
$t->assign('page_title', $page_title);

// Smartyを実行する
$t->display('grn/popup_user_list.tpl');


