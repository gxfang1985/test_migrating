<?php
cb_require_role('LoginUser');

global $G_INPUT;
$login = cb_get_login_user();

global $G_state_set;
$G_state_set->set('copyright_should_be_written', false);
$G_state_set->set('html_should_be_closed', false);
$G_state_set->set('error_page_type', 'json');

$calendar = [];
$year = cb_at($G_INPUT, 'year', null);
if ($year !== null) {
    require_once('grn/calendar.csp');
    $calendar_service = GRN_CalendarService::getInstance();

    if ($year < 1970) {
        $year = 1970;
    }

    $calendar_start_date = new CB_Date();
    $calendar_start_date->year = $year;
    $calendar_start_date->month = 1;
    $calendar_start_date->day = 1;

    $calendar_end_date = new CB_Date();
    $calendar_end_date->year = $year;
    $calendar_end_date->month = 12;
    $calendar_end_date->day = 31;

    $calendars = $calendar_service->getDaysInfo($calendar_start_date,
        $calendar_end_date, $login, null, false);

    require_once('fw/i18n/base.csp');
    $user_id = $login->getOID();
    $user_base_setting = CB_BaseManager::getCurrentBaseSetting($user_id);

    foreach ($calendars as $key_cal => $calendar) {
        foreach ($calendar as $key => $day_info) {
            if ( ! $user_base_setting->getApplyCalendar()
                 && $day_info['type'] == GRN_CALENDAR_TYPE_WORKDAY
            ) {
                unset($calendar[$key]);
            }
        }
        if (count($calendar) == 0) {
            unset($calendars[$key_cal]);
        }
    }
}

require_once("grn/JSONResponse.csp");
$json = \grn\grn\JSONResponse::create();
$json->response(['calendars' => $calendars]);
