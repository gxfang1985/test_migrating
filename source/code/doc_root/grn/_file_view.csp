<?php

cb_require_role('LoginUser');

/**
 * ファイル詳細画面用コントローラ
 *
 * 必須変数
 *  $t    : GRN_Smarty
 *  $file : GRN_File
 *
 * 予約Smarty変数
 *  file
 *  logs
 *  navi
 *  sort
 *  log_all_id
 *  log_view_id_start
 *  log_view_id_end
 */


require_once('grn/controller.csp');
$ctrlutil = new GRN_ControllerUtil();

global $G_container_base;
$uum = $G_container_base->getInstance('uum');
$login = $uum->getLoginUser();

/**
 * require_once( 'grn/ui.csp' );
 * $cm = GRN_UIConfigManager::getInstance();
 * $cf =& $cm->getUserConfig( $login );
 *
 * $limit = $cf->getListMax();
 **/
$limit = 20;


require_once('grn/file.csp');

// ファイル情報の取得

$body = $file->getCurrentBody();
$creator = $file->get('creator');
$modifier = $file->get('modifier');

$file_for_view = [
    'id'            => $file->getOID(),
    'filename'      => $body->get('name'),
    'mime'          => $body->get('mime'),
    'size'          => $body->get('size'),
    'version'       => $body->get('version'),
    'title'         => $file->getTitle(),
    'max_version'   => $file->getMaxVersion(),
    'memo'          => $file->getDescription(),
    'creator_uid'   => $creator ? $creator->getOID() : 0,
    'creator_name'  => $creator ? $creator->get('display_name')
        : $file->get('creator_name'),
    'ctime'         => $file->get('ctime'),
    'modifier_uid'  => $modifier ? $modifier->getOID() : 0,
    'modifier_name' => $modifier ? $modifier->get('display_name')
        : $file->get('modifier_name'),
    'mtime'         => $file->get('mtime'),
];

$lock = $file->getLockObject();
$lock_status = $lock->isLocked();

if ($lock_status == 1) {
    $lock_owner = $lock->get('lock_owner');
    $file_for_view['locked'] = 'other';
    $file_for_view['locked_owner_uid'] = $lock_owner->getOID();
    $file_for_view['locked_owner_name'] = $lock_owner->get('display_name');
} elseif ($lock_status == 2) {
    $file_for_view['locked'] = 'login';
}


// 更新履歴

$navi_start_position = $ctrlutil->getNaviStartPosition();
$ctrlutil->setNaviStartPosition($navi_start_position);

$navi_next_position_exists = false;

// ソートパラメータと対応するカラムのマップ
$sort_column_info = [
    'td' => ['column' => 'col_record_time', 'order' => true],
    'tu' => ['column' => 'col_record_time', 'order' => false],
    'ud' => ['column' => 'col_recorder_name', 'order' => true],
    'uu' => ['column' => 'col_recorder_name', 'order' => false],
    'nd' => ['column' => 'col_filename', 'order' => true],
    'nu' => ['column' => 'col_filename', 'order' => false],
];

// ソートの初期値は登録時降順
if ( ! ($sort = $ctrlutil->getSortParameter())) {
    $sort = 'td';
}
$t->assign('sort', $sort);


$rowset = $file->getLogSet();
if ($sort) {
    $rowset->addOrderColumn($sort_column_info[$sort]['column'],
        $sort_column_info[$sort]['order']);
}
$rowset->limit($navi_start_position, $limit + 1);

$navi_next_position_exists = false;

$logs_for_view = [];

while ( ! is_null(($log = $rowset->iterate()))) {
    // 次の一覧の有無をチェック
    if (count($logs_for_view) >= $limit) {
        $navi_next_position_exists = true;
        break;
    }

    $for_view = [];
    $for_view['id'] = $log->getOID();
    $for_view['filename'] = $log->get('filename');
    $for_view['version'] = $log->get('version');

    $op_code = $log->get('operation');

    if ($op_code == GRN_FILE_OPERATION_CREATE) {
        $for_view['operation'] = 'create';
    } elseif ($op_code == GRN_FILE_OPERATION_UPDATE) {
        $for_view['operation'] = 'update';
    } elseif ($op_code == GRN_FILE_OPERATION_RESTORE) {
        $for_view['operation'] = 'restore';
    } else {
        $for_view['operation'] = '';
    }

    $for_view['restore_version'] = $log->get('restore_version');
    $for_view['comment'] = $log->get('comment');
    $for_view['file_exists'] = $log->fileExists();
    $for_view['ctime'] = $log->get('record_time');

    if (($creator = $log->get('recorder'))) {
        $for_view['creator_name'] = $creator->get('display_name');
        $for_view['creator_uid'] = $creator->getOID();
    } else {
        $for_view['creator_name'] = $log->get('recorder_name');
        $for_view['creator_uid'] = 0;
    }

    $logs_for_view[$log->getOID()] = $for_view;
}


// 一覧ナビゲーションのパラメータ

$navi_for_view = [
    'previous_page_start_position' => -1,
    'next_page_start_position'     => -1,
    'number_on_page'               => $limit
];


if ($navi_start_position >= $limit) {
    $navi_for_view['previous_page_start_position'] = $navi_start_position
                                                     - $limit;
}
if ($navi_next_position_exists) {
    $navi_for_view['next_page_start_position'] = $navi_start_position + $limit;
}

$t->assign('file', $file_for_view);
$t->assign('logs', $logs_for_view);
$t->assign('navi', $navi_for_view);


// 一覧の表示件数
$rowset = $file->getLogSet();
$t->assign('log_all_id', $rowset->count());
$rowset->destroy();
$t->assign('log_view_id_start', $navi_start_position + 1);
$t->assign('log_view_id_end', $navi_start_position + count($logs_for_view));



