<?php

cb_require_role('LoginUser');

//Get Smarty Instance
require_once("grn/smarty.csp");
$t = new GRN_Smarty;

//Get Parameters
$smid = isset($G_INPUT['smid']) ? intval($G_INPUT['smid']) : 0;     //SSO Method ID
$said = $G_INPUT['said'] ?? '';     //SSO Application ID
$id_list = $G_INPUT['id_list'] ?? '';  //ID List

//Get SSO Method
require_once('grn/sso.csp');
$sso_service = GRN_SSO_Service::getInstance();
$sso_method =& $sso_service->getSSOMethod($smid);

//Create Parameter Translation Map
$translation_map = [
    //SSO Method Infomation
    'smid'            => '_smid',                //SSO Method ID
    'said'            => 'application',          //SSO Application ID
    'display_name'    => 'display_name',         //Display Name
    'driver_type'     => 'driver_type',          //Driver Type
    'driver_settings' => 'driver_settings',      //Driver Name
];

//Do Parameter Translation
$sso_method_for_view = [];
foreach ($translation_map as $view_name => $model_name) {
    switch ($model_name) {
        case '_smid':
            $sso_method_for_view[$view_name] = $sso_method->getOID();
            break;
        case 'driver_settings':
            $driver_settings = $sso_method->get($model_name);
            if ($driver_settings) {
                $driver_settings = cb_unserialize($driver_settings,
                    ["allowed_classes" => false]);
            }
            $sso_method_for_view[$view_name] = $driver_settings;
            break;
        default:
            $sso_method_for_view[$view_name] = $sso_method->get($model_name);
            break;
    }
}

//Check Allow Personal Setting
if ($sso_method->get(GRN_SSO_PROPERTY_AVAILABLE_PERSONAL) == 1) {
    //Get User Driver Settings
    $user_driver_settings = $sso_service->getUserDriverSettings($smid);

    //Overwrite Personal Parameters
    if (array_key_exists('personal_params', $user_driver_settings)) {
        $personal_params = $user_driver_settings['personal_params'];
        if (is_array($personal_params)) {
            foreach (array_keys($personal_params) as $name) {
                $driver_settings['personal_params'][$name]
                    = $personal_params[$name];
            }
        }
    }
}

//Get System and Personal Parameters
$params = $driver_settings['system_params']
          + $driver_settings['personal_params'];

//Get Identifier Value List
require_once('grn/sso.csp');
$sso_service = GRN_SSO_Service::getInstance();
$id_list = urldecode($id_list);
$id_list = @cb_unserialize($id_list, ["allowed_classes" => false]);
if ( ! is_array($id_list)) {
    $id_list = [];
}

$parse_id_list = [];
foreach (array_keys($id_list) as $id_name) {
    $parse_id_list[$id_name] = $id_list[$id_name];
}
$identifier_value_list = $sso_service->getIdentifierValueList($said,
    $parse_id_list);

//Replace Identifier Value List
$param_string_list = [];
$replaced_params = $sso_service->replaceIdentifierValueList($params,
    $identifier_value_list);

//Assign Display Infomation
//SSO Method
$t->assign('sso_method', $sso_method_for_view);

//SSO Param List
$t->assign('sso_param_list', $replaced_params);

// Ignore Licence Warnning
$t->skipWarning();

// Display Smarty Template
$doc_name = cb_get_pagename();
$t->display("grn/sso/sso/request_post_frame.tpl");


