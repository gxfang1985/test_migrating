<?php

use grn\grn\JSONResponse;

use grn\grn\MemberLogic;
use grn\grn\MemberSelectAdd;
use grn\grn\MemberSelectCondition;
use grn\schedule\ScheduleMemberLogic;

global $G_INPUT;

$session_name = cb_get_pagename();
$member_select_condition = new MemberSelectCondition();

$app_id = cb_at($G_INPUT, 'app_id');
$member_select_condition->setAppId($app_id);
$member_select_condition->setSessionName($session_name);

$is_system = cb_at($G_INPUT, 'is_system', true);
if ($is_system) {
    $is_allowed_role = true;
    $access_plugin = null;
    $show_group_role = true;
} else {
    $is_allowed_role = MemberLogic::getInstance()->isAllowedRole();
    $access_plugin = [
        "name"   => "schedule",
        "params" => [
            "action"       => ["read"],
            "session_name" => $session_name
        ]
    ];
    $show_group_role = ScheduleMemberLogic::getInstance()
                                          ->isAllowSettingGroupRoleToWatchers();
}

$member_select_condition->setCanSelectRole($is_allowed_role);
$member_select_condition->setSystem($is_system);

$member_select_condition->setShowGroupRole($show_group_role);
$member_select_condition->setAccessPlugin($access_plugin);

$member_select_add = new MemberSelectAdd($member_select_condition, $G_INPUT);
$candidate_info = $member_select_add->ajaxGetMemberSelectAdd();

$members_info = [];
foreach ($candidate_info as $member_info) {
    $members_info[] = $member_info;
}
$is_need_scroll = $member_select_add->getIsNeedScroll();
$json = JSONResponse::create();
$json->response([
    'members_info'   => $members_info,
    'is_need_scroll' => $is_need_scroll
]);
