<?php

if (0 == strcasecmp(@ $_SERVER['REQUEST_METHOD'], 'POST')) {
    // ログインユーザーを取得する
    global $G_container_base;
    $uum =& $G_container_base->getInstance('uum');
    $login =& $uum->getLoginUser();
    if ( ! is_object($login)) {
        cb_throw_error(E_COMMON_ACCOUNT_INVALIDATED);
    }

    // 通知本体を取得する
    require_once('notification/application.csp');
    $app_locator = GRN_ApplicationLocator::instance();
    /** @var GRN_Notification_App $notification_app */
    $notification_app =& $app_locator->getInstance(GRN_NOTIFICATION_APP_ID);
    if (is_null($notification_app)) {
        cb_throw_error(E_GRN_NTFC_NOT_AVAILABLE);
    }

    // POSTされたフォームデータを取得する
    $informations = [];
    if (array_key_exists('not_use', $G_INPUT)) {
        if ($G_INPUT['not_use']) {
            $not_use = true;
            $informations['not_use'] = 'true';
        } else {
            $not_use = false;
            $informations['not_use'] = 'false';
        }
    } else {
        $not_use = false;
        $informations['not_use'] = 'false';
    }

    // 個人設定を取得する
    $config =& $notification_app->getPersonalConfig($login);
    $config->setNotUseNotify($not_use);

    require_once('notification/inspection.csp');
    $inspection = GRN_Notification_Inspection::getInstance();
    if ($inspection->isEnabled()) {
        $action = GRN_NOTIFICATION_INSPECTION_PERSONAL_CONFIG;
        $target = GRN_NOTIFICATION_INSPECTION_PERSONAL_NOTIFY_SET;
        $inspection->record($action, $target, null, $informations);
    }
}

cb_redirect('personal/application_list', ['app_id' => 'notification']);


