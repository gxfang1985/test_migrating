<?php

use grn\grn\access\service\AppAccess;

// ログインユーザーを取得する
$uum =& $G_container_base->getInstance('uum');
$login =& $uum->getLoginUser();
if ( ! ($login instanceof CB_User)) {
    cb_throw_error(E_COMMON_ACCOUNT_INVALIDATED);
}

require_once('notification/application.csp');

// 通知サービスを取得する
$notification_service = GRN_Notification_Service::getInstance();
if (is_null($notification_service)) {
    cb_throw_error(E_GRN_CMMN_NTFC_NOT_AVAILABLE);
}

// 通知アプリを取得する
$app_locator = GRN_ApplicationLocator::instance();
/** @var GRN_Notification_App $notification_app */
$notification_app =& $app_locator->getInstance(GRN_NOTIFICATION_APP_ID);
if (is_null($notification_app)) {
    cb_throw_error(E_GRN_NTFC_NOT_AVAILABLE);
}

// GRN2-3902 スペースアプリの状態を調べる
require_once('space/GrnSpaceApplication.csp');
$available_space
    = AppAccess::isAppAvailableInternalAccess(GrnSpaceApplication::GRN_SPACE_APPLICATION_ID);
if ($available_space) {
    $available_space
        = AppAccess::isAppAvailableExternalAccess(GrnSpaceApplication::GRN_SPACE_APPLICATION_ID);
}
// 他のアプリの通知を更新する
if (isset($b_updateApplications) && $b_updateApplications) {
    // 通知更新処理対応アプリケーションの更新処理呼び出し
    $notification_app->updateApplications($login, true);
}

// 個人設定を取得する
$service_personal_config =& $notification_service->getPersonalConfig($login);
$app_personal_config =& $notification_app->getPersonalConfig($login);

//--------------------------------------------------------------

// モジュールID
$module_id = @ $G_INPUT['module_id'];

// n件移動中かをチェックする
if (1 == @ $G_INPUT['sf']) {
    // セッションからパラメータを取得する
    $session =& $notification_app->getSession();

    // 検索文字列
    $search_text = $session->get('search_text');
    // 検索項目
    $keywords = $session->get('search_keys');
    // デフォルト検索期間
    $default_search_term = $session->get('search_term');
} else {
    $search_fields = GRN_Notification_App::SEARCH_FIELDS;
    // 検索文字列
    $search_text = @ $G_INPUT['search_text'];
    // 検索項目
    $keywords = @ $G_INPUT['search_keys'];
    // デフォルト検索期間
    $default_search_term = 3;
    // 初回以降の検索かをチェックする
    $not_first_search = @ $G_INPUT['not_first_search'];
    if (is_null($not_first_search) || 0 == strlen($not_first_search)) {
        $keywords = $search_fields;
        if ( ! $available_space) {
            unset($keywords['space_name']);
        }
    } else {
        $keywords = array_intersect($keywords, $search_fields);
    }
}

// 検索期間を決定する
$search_term = GRN_NOTIFICATION_SEARCH_ALL;

if (empty($start_ts) && empty($last_ts)) {
    if (is_null($search_term) || 0 == strlen($search_term)) {
        $search_term = $default_search_term;
    }
    $search_term = intval($search_term);

    if (0 < $search_term) {
        require_once('fw/date.csp');

        $ts = new CB_TimeStamp();
        $ts->unix_ts = time();

        $start_ts = new CB_TimeStampEx($ts);
        $last_ts = new CB_TimeStampEx($ts);

        $datetime = $last_ts->getDateTime();
        $datetime->hour = 0;
        $datetime->minute = 0;
        $datetime->second = 0;

        $datetime->moveMonths(-$search_term);
        $start_ts->setDateTime($datetime);
    } else {
        $start_ts = null;
        $last_ts = null;
    }
}

//--------------------------------------------------------------

$ui_config_manager = GRN_UIConfigManager::getInstance();
$ui_user_config =& $ui_config_manager->getUserConfig($login);

// 一覧表示件数を取得する
$list_max = $ui_user_config->getListMax();

// 文字列の長さを取得する
$app_personal_config->getMaxLength($subject_cols, $abstract_cols, $name_cols,
    $space_cols);

//--------------------------------------------------------------

// 検索期間がないときは初期化する
if (empty($start_ts)) {
    $start_ts = null;
}
if (empty($last_ts)) {
    $last_ts = null;
}

// Smartyに割り当てる検索項目を列挙する
$search_keys = [];
if (is_array($keywords)) {
    foreach ($keywords as $keyword) {
        $search_keys[$keyword] = true;
    }
}

// n件ナビゲーション情報を取得する
if (empty($navi_params)) {
    $navi_params = [];
}
require_once('grn/controller.csp');
$utility = new GRN_ControllerUtil();
$start_position = $utility->getNaviStartPosition();
$utility->setNaviStartPosition($start_position);

// 検索該当データ一覧を取得する
$data_list = $notification_app->getQueriedDataListFast($data_type, $login,
    $module_id, $start_position, $list_max + 1, $start_ts,
    $last_ts, $keywords, $search_text, $number_of_all);

$isExistsNextPage = count($data_list) > $list_max;
if ($isExistsNextPage) {
    array_pop($data_list);
}

$navi_information = $utility->makeSimpleNaviInformation($start_position,
    $list_max,
    count($data_list),
    $isExistsNextPage,
    ['module_id' => $module_id, 'sf' => 1] + $navi_params);

// スペース情報を追加する
if ($available_space) {
    $notification_app->addSpaceInfoForDataList($data_list, $login->getOID());
}

$users_id = [];
foreach ($data_list as $d) {
    $users_id[] = $d['sender_id'];
}
$users_info = GRN_ControllerUtil::getUserInfoToShowUserName($users_id, $login);

// Smartyにパラメータを割り当てる
$t->assign('search_result', $data_list);
$t->assign('search_text', $search_text);
$t->assign('search_term', $search_term);
$t->assign('search_keys', $search_keys);
$t->assign('subject_cols', $subject_cols);
$t->assign('space_cols', $space_cols);
$t->assign('abstract_cols', $abstract_cols);
$t->assign('name_cols', $name_cols);
$t->assign('view_set', $navi_information);
$t->assign('module_id', $module_id);
$t->assign('users_info', $users_info);
$t->assign('available_space', $available_space);

// セッションにパラメータを割り当てる
$session =& $notification_app->getSession();
$session->set('search_text', $search_text);
$session->set('search_term', $search_term);
$session->set('search_keys', $keywords);


