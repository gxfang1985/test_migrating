<?php

if (0 == strcasecmp(@ $_SERVER['REQUEST_METHOD'], 'POST')) {
    // 通知一覧を取得する
    require_once('notification/application.csp');
    $app_locator = GRN_ApplicationLocator::instance();
    /** @var GRN_Notification_App $notification_app */
    $notification_app =& $app_locator->getInstance(GRN_NOTIFICATION_APP_ID);
    if ( ! is_object($notification_app)
         || ! is_a($notification_app, 'GRN_Notification_App')
    ) {
        cb_throw_error(E_GRN_NTFC_NOT_AVAILABLE);
    }

    // GET/POSTされたパラメータを取得する
    $app_id = null;
    if (array_key_exists('app_id', $G_INPUT)) {
        $app_id = $G_INPUT['app_id'];
    }
    if (0 == strlen($app_id)) {
        cb_throw_error(E_GRN_NTFC_INVALID_OUTSIDE_ID);
    }

    // 外部通知を取得する
    $app_manager =& $notification_app->getOutsideApplicationManager();
    $app =& $app_manager->get($app_id);
    if ( ! is_object($app) || ! is_a($app, 'GRN_Notification_Application')) {
        cb_throw_error(E_GRN_NTFC_OUTSIDE_NOT_FOUND);
    }
    // サイボウズからのお知らせを削除から除外する
    if (GRN_NOTIFICATION_CYBOZU_INFORMATION == $app->getName()) {
        cb_throw_error(E_GRN_NTFC_NOT_DELETE_OUTSIDE);
    }
    // 外部通知を削除する
    $app->delete();

    // 監査する
    require_once('notification/inspection.csp');
    $inspection = GRN_Notification_Inspection::getInstance();
    if ($inspection->isEnabled()) {
        $action = GRN_NOTIFICATION_INSPECTION_NOTIFYINFO_DELETE;
        $target = GRN_NOTIFICATION_INSPECTION_NOTIFYINFO_TARGET;
        $params = ['aid' => $app->getApplicationId()];
        $inspection->record($action, $target, $params);
    }
}

cb_redirect('notification/system/notifyinfo_list');


