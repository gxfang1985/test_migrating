<?php

require_once('portal/error_code.csp');
if ( ! isset($portlet)) {
    cb_throw_error(E_GRN_PRTL_PORTLET_INVALID_ACCESS);
}

//Get Smarty Instance
require_once("grn/smarty.csp");
$t = new GRN_Smarty;

//Initialize SmartyValidate and Register Form
require_once('SmartyValidate.class.php');
SmartyValidate::connect($t);
SmartyValidate::register_form('set_whatsnew', true);

// 通知アプリ取得
require_once("notification/application.csp");
$app_locator = GRN_ApplicationLocator::instance();
/** @var GRN_Notification_App $notification_app */
$notification_app = $app_locator->getInstance(GRN_NOTIFICATION_APP_ID);
if (is_null($notification_app)) {
    // 使用不可状態
    cb_throw_error(E_GRN_NTFC_NOT_AVAILABLE);
}

// 外部アプリケーション管理ロジックを取得する
$app_manager = $notification_app->getOutsideApplicationManager();

$portlet_logic = $notification_app->getPortletLogic();
$system_config = $notification_app->getSystemConfig();

// デフォルト値取得
$default_display_type = $portlet_logic->getDefaultDisplayType();

// ポートレットの設定
$portlet_common_settings = null;
$portlet_module_settings = null;
if (array_key_exists('settings', $portlet) && ! is_null($portlet['settings'])) {
    if (array_key_exists('common', $portlet['settings'])) {
        // 共通設定
        $portlet_common_settings =& $portlet['settings']['common'];
    }

    if (array_key_exists('application', $portlet['settings'])) {
        // アプリごとの設定
        $portlet_module_settings =& $portlet['settings']['application'];
    }
}

// 共通設定
$common_settings = [];
if ( ! is_null($portlet_common_settings)
     && array_key_exists('display_item', $portlet_common_settings)
) {
    // 以前設定されていたら反映
    $abstract = @ $portlet_common_settings['display_item']['abstract'];
    $sender_name
        = @ $portlet_common_settings['display_item']['sender_name'];
    $timestamp
        = @ $portlet_common_settings['display_item']['timestamp'];
    $common_settings['display_item'] = [
        'abstract'    => $abstract,
        'sender_name' => $sender_name,
        'timestamp'   => $timestamp
    ];
}

// 設定されていない場合はデフォルト
if ( ! array_key_exists('display_item', $common_settings)) {
    // デフォルト
    $portlet_logic->getWhatsNewDefaultDisplayItem($default_abstract,
        $default_sender_name, $default_timestamp);
    $common_settings['display_item'] = [
        'abstract'    => $default_abstract,
        'sender_name' => $default_sender_name,
        'timestamp'   => $default_timestamp
    ];
}

$t->assign('common_settings', $common_settings);

// ログインユーザーの所持ロールを検査
require_once('grn/uum.csp');
global $G_container_base;
$grn_uum = $G_container_base->getInstance('uum');
$login_user = $grn_uum->getLoginUser();
$role_list = $grn_uum->getUserRolesInfo($login_user->getOID());
$is_admin = false;
foreach (array_keys($role_list) as $index) {
    if ($role_list[$index]['col_foreign_key'] == 'Administrators') {
        $is_admin = true;
        break;
    }
}

// 通知対応アプリ一覧取得
$module_settings = [];

$available_only = true;
$apps_list = [];
$apps_list[] = $notification_app->getApplicationList($available_only);
$apps_list[] = $app_manager->getAllList();

// GRN2-2158
// 設定があれば、反映して表示
$apps_list_for_view = [];
$apps_list_for_view = $notification_app->orderApplicationList($apps_list,
    $portlet);
$apps_list_for_display
    = $notification_app->displayApplicationList($apps_list_for_view);
$t->assign('apps_list_for_display', $apps_list_for_display);

foreach (array_keys($apps_list) as $apps_id) {
    $apps =& $apps_list[$apps_id];
    foreach (array_keys($apps) as $app_id) {
        $app = $apps[$app_id];
        $module_id = $app->getModuleId();
        if ('grn.' == substr($module_id, 0, 4)) {
            $app = $app_locator->getInstance($app_id);
        }
        if ( ! ($app instanceof GRN_ApplicationBase)) {
            continue;
        }

        // システムの強制設定読み込み
        $system_set = false;
        $system_display_type = null;
        $system_setting = null;
        $system_config->getWhatsNewPortletForceSetting($module_id,
            $system_setting);
        if (is_array($system_setting)
            && array_key_exists('set', $system_setting)
            && array_key_exists('display_type', $system_setting)
        ) {
            if ( ! is_null($system_setting['set']) && $system_setting['set']) {
                $system_set = true;
                $system_display_type = $system_setting['display_type'];
            }
        }

        if ('set-personal' == $display) {
            $name = $app->getName();
        } else {
            $name = $app->getDefaultName();
        }

        if ( ! is_null($portlet_module_settings)
             && array_key_exists($module_id, $portlet_module_settings)
        ) {
            // 以前設定を反映
            $display_type
                = @ $portlet_module_settings[$module_id]['display_type'];
            $rows = @ $portlet_module_settings[$module_id]['rows'];
            $setting = [
                'id'                  => $module_id,
                'html_escaped_id'     => htmlspecialchars($module_id),
                'name'                => $name,
                'display_type'        => $display_type,
                'system_display_type' => $system_display_type,
                'rows'                => $rows,
            ];
        } else {
            // デフォルトセット
            $default_rows = $portlet_logic->getWhatsNewDefaultRows($module_id);
            $setting = [
                'id'                  => $module_id,
                'html_escaped_id'     => htmlspecialchars($module_id),
                'name'                => $name,
                'display_type'        => $default_display_type,
                'system_display_type' => $system_display_type,
                'rows'                => $default_rows,
            ];
        }

        // 外部通知の場合のみ外部通知コードを取得
        if ($app instanceof GRN_Notification_Application) {
            $setting['outside_id'] = $app->getID();
        }

        // Administratorsロールを所持していない場合、サイボウズからのお知らせは除外
        if ( ! $is_admin
             && $setting['outside_id'] == GRN_NOTIFICATION_CYBOZU_INFORMATION
        ) {
            continue;
        }

        $module_settings[$module_id] = $setting;
    }
}

$t->assign('module_settings', $module_settings);

//Create Font Options Array
$font_options = [
    ['value' => 'small', 'label' => cb_msg('grn.cabinet', 'font_size_small')],
    ['value' => 'normal', 'label' => cb_msg('grn.cabinet', 'font_size_normal')],
    ['value' => 'large', 'label' => cb_msg('grn.cabinet', 'font_size_large')],
];
$font_size = @$portlet['settings']['font_size'];
switch ($font_size) {
    case 'small':
        $font_options[0]['selected'] = true;
        break;
    case 'normal':
        $font_options[1]['selected'] = true;
        break;
    case 'large':
        $font_options[2]['selected'] = true;
        break;
    default:
        $font_options[1]['selected'] = true;
        break;
}
$t->assign('font_options', $font_options);

// Crerate Select Number Array
$rows_numbers = [
    0,
    1,
    2,
    3,
    4,
    5,
    6,
    7,
    8,
    9,
    10,
    11,
    12,
    13,
    14,
    15,
    16,
    17,
    18,
    19,
    20
];
$t->assign('rows_numbers', $rows_numbers);

//Assign include_php Parameter
$t->assign('portlet', $portlet);
$t->assign('display', $display);

// Ignore Licence Warnning
$t->skipWarning();

//Display Smarty Template
$doc_name = 'notification/portlet/set_whatsnew';
$t->display("{$doc_name}.tpl");


