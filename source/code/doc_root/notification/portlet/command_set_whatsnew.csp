<?php

require_once('portal/error_code.csp');
if ( ! isset($portlet)) {
    cb_throw_error(E_GRN_PRTL_PORTLET_INVALID_ACCESS);
}

//--- Smarty Section ---//

//Create Smarty Instance
require_once("grn/smarty.csp");
$t = new GRN_Smarty;

//--- Applitation Section ---//

// 通知アプリ取得
require_once("notification/application.csp");
$app_locator = GRN_ApplicationLocator::instance();
/** @var GRN_Notification_App $notification_app */
$notification_app = $app_locator->getInstance(GRN_NOTIFICATION_APP_ID);
if (is_null($notification_app)) {
    // 使用不可状態
    cb_throw_error(E_GRN_NTFC_NOT_AVAILABLE);
}

// 外部アプリケーション管理ロジックを取得する
$app_manager = $notification_app->getOutsideApplicationManager();

// ポータルアプリ取得
if ( ! $app_locator->isActive('portal')) {
    // ポータル使用不可状態
    cb_throw_error();
}
/** @var GRN_Portal_Application $app_portal */
$app_portal = $app_locator->getInstance('portal');

if (strcasecmp(@ $_SERVER['REQUEST_METHOD'], 'POST') == 0) {
    $uum = $G_container_base->getInstance('uum');
    $login = $uum->getLoginUser();
    if ( ! is_object($login)) {
        cb_throw_error(E_COMMON_ACCOUNT_INVALIDATED);
    }

    // 通知対応アプリ列挙
    $apps_list = [];
    $apps_list[] = $notification_app->getApplicationList(true);
    $apps_list[] = $app_manager->getAllList();

    // GRN2-2158
    // アプリ順取得
    $apps_order = @ $G_INPUT['list'];

    // 設定をまとめる
    $notification_settings = [];

    //文字サイズ
    $font_size = @ $G_INPUT['font_size'];
    $notification_settings['font_size'] = $font_size;

    // 共通設定
    $notification_settings['common'] = [];

    // 表示する項目
    // 内容
    $display_items = [];
    $abstract = @ $G_INPUT['abstract'];
    if ( ! is_null($abstract)) {
        $abstract = intval($abstract);
        $display_items[] = 'abstract';
    } else {
        $abstract = 0;
    }

    // 名前
    $sender_name = @ $G_INPUT['sender_name'];
    if ( ! is_null($sender_name)) {
        $sender_name = intval($sender_name);
        $display_items[] = 'sender_name';
    } else {
        $sender_name = 0;
    }

    // 日時
    $timestamp = @ $G_INPUT['timestamp'];
    if ( ! is_null($timestamp)) {
        $timestamp = intval($timestamp);
        $display_items[] = 'timestamp';
    } else {
        $timestamp = 0;
    }

    $notification_settings['common']['display_item'] = [
        'abstract'    => $abstract,                         // 内容
        'sender_name' => $sender_name,                      // 名前
        'timestamp'   => $timestamp                         // 日時
    ];

    // アプリごとの設定
    $notification_settings['application'] = [];
    foreach (array_keys($apps_list) as $apps_id) {
        $apps =& $apps_list[$apps_id];
        foreach (array_keys($apps) as $app_id) {
            $app = $apps[$app_id];
            if (is_null($app)) {
                continue;
            }

            $module_id = $app->getModuleId();
            $module_str = str_replace('.', '_', $module_id);  // '.' -> '_'

            // 表示する形式
            $display_type = @ $G_INPUT['display_type_' . $module_str];

            // 表示する件数
            $rows = @ $G_INPUT['rows_' . $module_str];
            if ( ! is_null($rows)) {
                $rows = intval($rows);
            }

            // GRN2-2158
            // 表示する順番
            if (isset($apps_order)) {
                foreach ($apps_order as $key => $module_id_for_order) {
                    if ($module_id == $module_id_for_order) {
                        $list_index = $key;
                        break;
                    }
                }
            } else {
                $list_index = null;
            }

            $notification_settings['application'][$module_id] = [
                'module_id'    => $module_id,
                // モジュールID
                'display_type' => $display_type,
                // 表示する形式
                'rows'         => $rows,
                // 表示する件数
                'list_index'   => $list_index,
                // 表示する順番
            ];
        }
    }

    // ポータルアプリ取得
    $app_portal->setPortletSettings($G_INPUT['plid'], $notification_settings);

    // 監査する
    require_once('notification/inspection.csp');
    $inspection = GRN_Notification_Inspection::getInstance();
    if ($inspection->isEnabled()) {
        if ('set-personal' == $G_INPUT['display']) {
            $action = GRN_NOTIFICATION_INSPECTION_PERSONAL_PORTLET_CONFIG;
        } else {
            $action = GRN_NOTIFICATION_INSPECTION_SYSTEM_PORTLET_CONFIG;
        }
        $target = GRN_NOTIFICATION_INSPECTION_WHATSNEW_PORTLET_SET;

        $params = ['plid' => $G_INPUT['plid']];

        $informations = [];
        if (0 < count($display_items)) {
            $informations['display_items'] = implode('/', $display_items);
        } else {
            $informations['display_items'] = 'none';
        }

        foreach ($notification_settings['application'] as $setting) {
            $module_id = $setting['module_id'];
            $informations[$module_id] = $setting['display_type'] .
                                        '/' .
                                        $setting['rows'] .
                                        '/order=' .
                                        $setting['list_index'];
        }

        $inspection->record($action, $target, $params, $informations);
    }

    //Switch Redirect Page
    if ($G_INPUT['display'] === 'set-system') {
        //redirect System page
        cb_redirect('portal/system/view', ['pid' => $G_INPUT['pid']]);
    } elseif ($G_INPUT['display'] === 'set-operation') {
        //redirect Operation page
        cb_redirect('portal/operation/view', ['pid' => $G_INPUT['pid']]);
    } else {
        //redirect Personal page
        cb_redirect('portal/personal/view', ['pid' => $G_INPUT['pid']]);
    }
}


