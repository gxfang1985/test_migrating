<?php

global $G_INPUT;

//Instantiate an Smarty object
require_once("grn/smarty.csp");
$t = new GRN_Smarty;

//Get Parameter
$category_id = @ $G_INPUT['cid'];    //Category ID
$link_id = @ $G_INPUT['lid'];    //Link ID
$type = @ $G_INPUT['type'];
if ($type != 'share') {
    $type = 'personal';
}
$category_id = $category_id ? $category_id : GRN_LINK_CATEGORY_ROOT_ID;

//Get Link and Category Controller Utility
require_once('link/controller_util.csp');
$link_util = GRN_Link_Link_Controller_Utility::getInstance();
$category_util = GRN_Link_Category_Controller_Utility::getInstance();

//Assigin Type
$link_util->setType(($type == 'share') ? 'manage' : 'personal');
$category_util->setType(($type == 'share') ? 'manage' : 'personal');
$t->assign('type', $type);

//Check Management Right
$management = $category_util->checkManage($category_id, null, false,
    CB_DATABASE_NO_LOCK);

//Check Move Category Right
$avail_move = 0;
if ($type != 'personal') {
    require_once('link/category_logic.csp');
    $category_logic = GRN_Link_System_Category_Logic::getInstance();
    $child_category_list = $category_logic->getChildList($category_id,
        CB_DATABASE_NO_LOCK);
    if (count($child_category_list) != 0) {
        $avail_move = 1;
    } else {
        $category =& $category_logic->get($category_id);
        $parent_category =& $category->get('parent');
        if ($parent_category) {
            if ($category_util->checkManage($parent_category->getOID(), null,
                false, CB_DATABASE_NO_LOCK)
            ) {
                $avail_move = 1;
            }
        }
        unset($category);
        unset($parent_category);
    }
    unset($child_category_list);
}

//Create Parameter Translation Map
$translation_map_link = [
    'lid'          => '_id',
    'title'        => 'name',
    'url'          => 'url',
    'memo'         => 'memo',
    'creator_uid'  => 'creator_uid',
    'creator_name' => 'creator_name',
    'modify_uid'   => 'modifier_uid',
    'modify_name'  => 'modifier_name',
    'ctime'        => 'ctime',
    'mtime'        => 'mtime',
    'sid'          => 'sid',
    'sso_name'     => 'sso_name',
];

//Create Parameter Translation Map
$translation_map_category = [
    'cid'   => '_id',
    'title' => 'name',
    'memo'  => 'memo',
];

//Get Link for view
$link_for_view = $link_util->getView($link_id, $translation_map_link, null,
    CB_DATABASE_NO_LOCK);

//Get Category for view
$category_for_view = $category_util->getView($category_id,
    $translation_map_category, null, true, CB_DATABASE_NO_LOCK);

//Get Tree Category List for View
$tree_category_list_for_view = $category_util->getTreeListView($category_id,
    $translation_map_category, true, false, CB_DATABASE_NO_LOCK);

//Create Link Information for View
$link_information_for_view = $link_for_view;
if ($type == 'share') {
    $link_information_for_view['sso_param'] = [
        'system_link'     => $link_id,
        'system_category' => $category_id
    ];
}

//Create Category Infoemation for View
$category_information_for_view = $category_for_view;
$category_information_for_view['path'] = $tree_category_list_for_view;

//Get Popup Setting
$config_list = $link_util->getGeneralConfig();

//Assign Category Information
$t->assign('link', $link_information_for_view);

//Assign Category Information
$t->assign('category', $category_information_for_view);

//Assign Management
$t->assign('management', $management ? 1 : 0);

//Assign Popup Settings
$t->assign('set_popup',
    array_key_exists('popup_set', $config_list) ? $config_list['popup_set']
        : 0);

//Assign Available Move
$t->assign('avail_move', $avail_move);

//page title
$page_title = grn_get_current_page_display_name();
$t->assign('page_title', $page_title);

//site position
$t->assign('site_position', [
        [
            'page' => 'link/index',
            'name' => grn_get_page_display_name('link/index'),
            'cid'  => $category_id,
            'type' => $type
        ],
        ['page' => '', 'name' => $page_title]
    ]
);
$delete_info = [
    'title'      => grn_get_page_display_name('link/delete'),
    'page'       => 'link/delete.tpl',
    'no_confirm' => false,
    'data'       => [
        'link'     => $link_for_view,
        'category' => $category_for_view
    ],
    'handler'    => 'lnk_delete'
];
$t->assign('delete_info', $delete_info);
//Display Smarty Template
$doc_name = cb_get_pagename();
$t->display("{$doc_name}.tpl");


