<?php

require_once('link/controller_util.csp');
require_once('portal/error_code.csp');
if ( ! isset($portlet)) {
    cb_throw_error(E_GRN_PRTL_PORTLET_INVALID_ACCESS);
}

global $G_INPUT;

//Instantiate an Smarty object
require_once("grn/smarty.csp");
$t = new GRN_Smarty;

//Initialize Portlet Settings
if ( ! array_key_exists('settings', $portlet)) {
    $portlet['settings'] = [];
    $portlet['settings']['type'] = ($display == 'set-personal')
        ? 'personal' : 'share';
    $portlet['settings']['cid'] = GRN_LINK_CATEGORY_ROOT_ID;
    $portlet['settings']['font_size'] = 'normal';
    $portlet['settings']['col_size'] = '5';
}

//Create Parameter Translation Map
$translation_map_category = [
    'cid'  => '_id',
    'name' => 'name',
];

//Get Category Controller Utility
$category_util = GRN_Link_Category_Controller_Utility::getInstance();
//Check Search Flag
if (array_key_exists('text', $G_INPUT)) {
    //Search
    $portlet['settings']['type'] = $G_INPUT['type'];
    $category_util->setType($portlet['settings']['type']);

    //Create Search Information
    $search_info['target_list'] = ['category'];
    $search_info['text'] = $G_INPUT['text'];
    $search_info['limit'] = -1;
    $search_info['term'] = 0;
    $search_info['recursive'] = true;
    $search_info['all'] = true;

    //Get Search Category List
    $search_category_list_for_view = $category_util->search(null, $search_info,
        $translation_map_category, CB_DATABASE_NO_LOCK);

    //Create Search Information for View
    $search_information_for_view = [];
    foreach (array_keys($search_category_list_for_view) as $search_category_id) {
        $tree_category_name_list = [];
        $tree_category_list_for_view
            = $category_util->getTreeListView($search_category_id,
            $translation_map_category, true, true, CB_DATABASE_NO_LOCK);
        foreach (array_keys($tree_category_list_for_view) as $tree_category_id) {
            $tree_category_name_list[]
                = $tree_category_list_for_view[$tree_category_id]['name'];
        }
        $search_category_list_for_view[$search_category_id]['path']
            = implode(' > ', $tree_category_name_list);
    }
    $search_information_for_view['result'] = $search_category_list_for_view;
    $search_information_for_view['count']
        = count($search_category_list_for_view);
    $search_information_for_view['count'] = $G_INPUT['text'];

    //Assign Search
    $t->assign('search', $search_information_for_view);
} else {
    //Not Search

    //Check SS
    if (array_key_exists('st', $G_INPUT)) {
        //Switch Category Type (Share or Personal)
        $portlet['settings']['cid'] = GRN_LINK_CATEGORY_ROOT_ID;
        $portlet['settings']['type'] = $G_INPUT['type'];
    } elseif (array_key_exists('ss', $G_INPUT)) {
        //Select Category        
        $portlet['settings']['cid'] = $G_INPUT['cid'];
        $portlet['settings']['type'] = $G_INPUT['type'];
    } else {
        //load portlet config
    }

    $category_util->setType($portlet['settings']['type']);

    //Get Category List
    require_once('link/category_logic.csp');
    if ($portlet['settings']['type'] == 'personal') {
        $category_logic = GRN_Link_Personal_Category_Logic::getInstance();
    } else {
        $category_logic = GRN_Link_System_Category_Logic::getInstance();
    }
    $category_list =& $category_logic->getList();

    //Check Category Exists
    if ( ! array_key_exists($portlet['settings']['cid'], $category_list)) {
        $portlet['settings']['cid'] = GRN_LINK_CATEGORY_ROOT_ID;
        $portlet['settings']['type'] = 'personal';
        $category_util->setType('personal');
    }

    //Check Access Right
    if ( ! $category_util->checkAccess($portlet['settings']['cid'], null, false,
        CB_DATABASE_NO_LOCK)
    ) {
        $portlet['settings']['cid'] = GRN_LINK_CATEGORY_ROOT_ID;
        $portlet['settings']['type'] = 'personal';
        $category_util->setType('personal');
    }

    if ($portlet['settings']['type'] == 'personal'
        && ($display == 'set-system'
            || $display == 'set-operation')
    ) {
        //Get Category for View
        $portlet['settings']['cid'] = GRN_LINK_CATEGORY_ROOT_ID;
        $category_for_view
            = $category_util->getView($portlet['settings']['cid'],
            $translation_map_category, null, true, CB_DATABASE_NO_LOCK);
        $parent_category_for_view = [];
        $child_category_list_for_view = [];
        $tree_category_for_view = [];
    } else {
        //Get Category for View
        $category_for_view
            = $category_util->getView($portlet['settings']['cid'],
            $translation_map_category, null, true, CB_DATABASE_NO_LOCK);

        //Parent Category for View
        $parent_category_for_view
            = $category_util->getParentView($portlet['settings']['cid'],
            $translation_map_category, null, true, CB_DATABASE_NO_LOCK);

        //Get Child Category for View
        $child_category_list_for_view
            = $category_util->getChildListView($portlet['settings']['cid'],
            $translation_map_category, CB_DATABASE_NO_LOCK);

        //Get Tree Category for View
        $tree_category_for_view
            = $category_util->getTreeListView($portlet['settings']['cid'],
            $translation_map_category, true, true, CB_DATABASE_NO_LOCK);
    }

    //Create Category Information
    $category_information_for_view = [];
    $category_information_for_view = $category_for_view;
    $category_information_for_view['parent'] = $parent_category_for_view;
    $category_information_for_view['ancestors']
        = $tree_category_list_for_view;
    $category_information_for_view['children']
        = $child_category_list_for_view;
    $category_information_for_view['child_count']
        = count($child_category_list_for_view);

    //Assign Other Category
    $t->assign('category', $category_information_for_view);
}

//Create Font Options
$font_options = [
    ['value' => 'small', 'label' => cb_msg('grn.link', 'font_size_small')],
    ['value' => 'normal', 'label' => cb_msg('grn.link', 'font_size_normal')],
    ['value' => 'large', 'label' => cb_msg('grn.link', 'font_size_large')],
];
switch ($portlet['settings']['font_size']) {
    case 'small':
        $font_options[0]['selected'] = true;
        break;
    case 'normal':
        $font_options[1]['selected'] = true;
        break;
    case 'large':
        $font_options[2]['selected'] = true;
        break;
    default:
        $font_options[1]['selected'] = true;
        break;
}

//Create Column Options
$column_options = [1, 2, 3];

//Create Portlet Params
$params_for_view['pid'] = $portlet['pid'];
$params_for_view['plid'] = $portlet['plid'];
$params_for_view['ppid'] = $portlet['ppid'];
$params_for_view['type'] = $portlet['settings']['type'];

//Assign Portlet
$t->assign('portlet', $portlet);
//Assign Display Type
$t->assign('display', $display);
//Assign Font Options
$t->assign('font_options', $font_options);
//Assign Column Options
$t->assign('column_options', $column_options);
//Assign Params
$t->assign('params', $params_for_view);

//Ignore Licence Warnning
$t->skipWarning();

//Display Smarty Template
$doc_name = cb_get_pagename();
$t->display("link/portlet/set_link.tpl");


