<?php

global $G_INPUT;

require_once("grn/smarty.csp");
$t = new GRN_Smarty;

//Set Application Name
global $G_link_app_name;
$t->assign('app_name', $G_link_app_name);

//Get Parameters
$node_id = isset($G_INPUT['nid']) ? $G_INPUT['nid'] : null;   //Category ID

// --- folder tree
$tree_info = [
    'link_url' => 'link/system/privilege_index',
    'oid_key'  => 'nid'
];
$tree_selected_oid = ($node_id != GRN_LINK_CATEGORY_ROOT_ID) ? $node_id : null;
include('_category_tree.csp');
$node_id = $tree_selected_oid;
// --- end: folder tree

//Get Link and Category Controller Utility
require_once('link/controller_util.csp');
$category_util = GRN_Link_Category_Controller_Utility::getInstance();
$category_util->setType('system');

//--category tree
//Check Category ID
require_once('link/resources.csp');
$node_id = $node_id ? $node_id : GRN_LINK_CATEGORY_ROOT_ID;

//Create Parameter Translation for Category
$translation_map_category = [
    'nid'         => '_id',          //Category ID
    'name'        => 'name',         //Cattegory Name
    'foreign_key' => 'foreign_key',  //Cattegory Foregin Key
    'memo'        => 'memo',         //Category Memo
    'child_count' => 'num_children', //Children Category Count
];

//Get Category for View
$category_for_view = $category_util->getView($node_id,
    $translation_map_category);
/*
//Get Child Category List for View
$child_category_list_for_view = $category_util->getChildListView($node_id, $translation_map_category);

//Get Tree Category List for View
if ($node_id == GRN_LINK_CATEGORY_ROOT_ID)
{
    $tree_category_list_for_view = $category_util->getTreeListView($node_id, $translation_map_category, FALSE, FALSE);
}
else
{
    $tree_category_list_for_view = $category_util->getTreeListView($node_id, $translation_map_category, TRUE, FALSE);
}
*/
//Create Category Information
$category_information_for_view = $category_for_view;
//$category_information_for_view['children']  = $child_category_list_for_view;
//$category_information_for_view['ancestors'] = $tree_category_list_for_view;

//Assign Category
$node =& $category_information_for_view;

//--privilege information
if ($node_id) {
    require_once('grn/access_resources.csp');

    $privilege = [];

    //Create Parameter Translation for Access
    $translation_map_manage = [
        'tid'            => 'target',           //Target ID
        'type'           => 'type',             //Target Type
        'data'           => 'authorities',      //Authority List
        'security_model' => 'security_model',   //Security Model
    ];

    //Get Access List
    require_once('link/controller_util.csp');
    $category_manage_util
        = GRN_Link_Category_Manage_Controller_Utility::getInstance();
    $manage_list_for_view
        = array_merge($category_manage_util->getListView($node_id, 'user',
        $translation_map_manage),
        $category_manage_util->getListView($node_id, 'group',
            $translation_map_manage),
        $category_manage_util->getListView($node_id, 'static_role',
            $translation_map_manage),
        $category_manage_util->getListView($node_id, 'dynamic_role',
            $translation_map_manage));

    //Create Access Information
    $manage_information_for_view['list'] = $manage_list_for_view;
    $manage_information_for_view['count'] = count($manage_list_for_view);
    $privilege =& $manage_information_for_view;
}

//Assign Smarty Variable
$t->assign('node_id', $node_id);    //Category ID
$t->assign('node',
    $node);                                                     //Category Tree
$t->assign('privilege',
    @ $privilege);                                               //Category Access Right
//$t->assign('is_root',   ($node_id == GRN_LINK_CATEGORY_ROOT_ID));                   //Root Category Flag

//-- set page title and site position

//page title
$page_title = grn_get_current_page_display_name();
$t->assign('page_title', $page_title);

//site position
$t->assign('site_position', [
        ['page' => '', 'name' => $page_title],
    ]
);

//Display Smarty Template
$doc_name = cb_get_pagename();
$t->display("{$doc_name}.tpl");


