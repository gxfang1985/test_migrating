<?php

if (strcasecmp(@ $_SERVER['REQUEST_METHOD'], 'POST') == 0) {
    global $G_INPUT;

    //Get Parameters
    $charset = @ $G_INPUT['charset'];     //Charactor Set
    $skip = @ $G_INPUT['skip'];        //Skip First Line Flag
    $file_id = @ $G_INPUT['file'];        //Temporary File ID

    //Get Default Charactor Set
    if ( ! $charset) {
        global $G_config_common;
        $charset = $G_config_common->get('I18N', 'default_external_encoding');
    }

    //Get Temporaruy File From Session
    require_once('fw/session_manager.csp');
    $sm = CB_SessionManager::getInstance();
    $session =& $sm->getSession('link/system/category_access_import1');
    $files = $session->getFiles('import_files');
    if ( ! array_key_exists($file_id, $files)) {
        require_once('grn/error_code.csp');
        cb_throw_error(E_GRN_CSV_FILE_NOT_FOUND);
    }

    //Create CSV Reader
    require_once('fw/csv.csp');
    $csv = new CB_CSVReader($charset, $files[$file_id]->getPath());

    //Import Category Access Right and Security Model
    $first = true;
    require_once('link/access_logic.csp');
    $category_access_logic = GRN_Link_Category_Access_Logic::getInstance();
    while (false !== ($line = $csv->readLine())) {
        //Check Skip First Line Flag
        if ($skip && $first) {
            $first = false;
            continue;
        }

        //Check Argument
        if ( ! isset($line[1])) {
            //InValid CSV Data
            require_once('link/error_code.csp');
            cb_throw_error(E_GRN_LINK_ACCESS_INVALID_CSV_DATA);
        }

        //Check Line Type
        if ($line[1] == GRN_LINK_PROPERTY_SECURITY_MODEL) {
            //Import Security Model
            $category_access_logic->importSecurityModel($line);
        } else {
            //Import Access Right
            $category_access_logic->importAccess($line);
        }
    }

    //Redirect Next Page
    cb_redirect('system/application_list', ['app_id' => 'link']);
}
