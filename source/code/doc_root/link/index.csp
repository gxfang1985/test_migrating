<?php

global $G_INPUT;

//Get User
global $G_container_base;
$uum = $G_container_base->getInstance('uum');
$user = $uum->getLoginUser();

//Instantiate an Smarty object
require_once("grn/smarty.csp");
$t = new GRN_Smarty;

//Set Application Name
global $G_link_app_name;
$t->assign('app_name', $G_link_app_name);

//Get Parameters
$category_id = @ $G_INPUT['cid'];    //Category ID
$type = @ $G_INPUT['type']; // Personal or Shared

//--- category tree
require_once('grn/org_tree.csp');
require_once('link/category_tree.csp');

$util = GRN_OrgTreeUtil::getInstance();
$tree =& $util->getTree(cb_get_pagename(), 'GRN_Link_CategoryTree');

$tree_for_view = [];
if (is_null($category_id)) {
    $category_id = $tree->getSelectedNode();
}
if (is_null($tree->getRoot()) || array_key_exists('top', $G_INPUT)) {
    $tree->initialize();
    if ( ! array_key_exists('cid', $G_INPUT)) {
        $category_id = null;
    }
    $t->assign('tree_init', true);
}

$selected_oid = null;
$oid_info = $tree->parseOID($category_id);
if (count($oid_info) == 2) {
    $selected_oid = $category_id;
    $type = $oid_info['type'];
} elseif (strlen($category_id) > 0
          && $category_id != GRN_LINK_CATEGORY_ROOT_ID
) {
    $selected_oid = $tree->makeOID($type, $category_id);
}

$tree_for_view = [
    'page_name'    => cb_get_pagename(),
    'root'         => $tree->getRoot(),
    'async_url'    => 'link/category_json',
    'link_url'     => 'link/index',
    'selected_oid' => $selected_oid,
    'oid_key'      => 'cid',
];
$t->assign('folder_tree', $tree_for_view);

$tree->setSelectedNode($selected_oid);
$util->setTree(cb_get_pagename(), $tree);
$category_id = (count($oid_info) == 2) ? $oid_info['id'] : $category_id;
//--- end: category tree

//Get Link and Category Controller Utility
require_once('link/controller_util.csp');
$link_util = GRN_Link_Link_Controller_Utility::getInstance();
$category_util = GRN_Link_Category_Controller_Utility::getInstance();

//Get navi parameter
require_once('grn/ui.csp');
$cm = GRN_UIConfigManager::getInstance();
$user_config = $cm->getUserConfig($user);
$subject_width = $user_config->getSubjectWidth();
$t->assign('subject_width', $subject_width);

//Check Category ID
require_once('link/resources.csp');
$category_id = $category_id ? $category_id : GRN_LINK_CATEGORY_ROOT_ID;
$t->assign('category_id', $category_id);

//Create Parameter Translation for Link
$translation_map_link = [
    'lid'    => '_id',          //Link ID
    'object' => 'type',         //Link Type
    'title'  => 'name',         //Link Name
    'url'    => 'url',          //Link URL
    'memo'   => 'memo',         //Link Memo
    'cid'    => 'cid',          //Category ID
    'sid'    => 'sid',          //SSO Method ID
];

//Create Parameter Translation for Category
$translation_map_category = [
    'cid'         => '_id',          //Category ID
    'title'       => 'name',         //Category Name
    'foreign_key' => 'foreign_key',  //Category Name
    'memo'        => 'memo',         //Category Memo
];
$category_name_in_popup = cb_msg('grn.link',
    GRN_LINK_ROOT_CATEGORY_NAME_DEFAULT);
if ($category_id == GRN_LINK_CATEGORY_ROOT_ID) {
    // for root category
    $t->assign('is_root', true);

    //-- personal link/category
    $link_util->setType('personal');
    $personal_link_list = $link_util->getListView($translation_map_link,
        $category_id, CB_DATABASE_NO_LOCK);
    $category_util->setType('personal');
    //$personal_category_list = $category_util->GetChildListView($category_id, $translation_map_category, CB_DATABASE_NO_LOCK);

    //-- shared link/category
    $management = 0;
    $share_link_list = [];
    //$share_category_list = array();
    $category_util->setType('share');
    if ($category_util->checkAccess($category_id, null, false,
        CB_DATABASE_NO_LOCK)
    ) {
        $link_util->setType('share');
        $share_link_list = $link_util->getListView($translation_map_link,
            $category_id, CB_DATABASE_NO_LOCK);
        //$category_util->setType( 'share' );
        //$share_category_list = $category_util->GetChildListView($category_id, $translation_map_category, CB_DATABASE_NO_LOCK);

        //Check Management Right
        $category_util->setType('manage');
        $management = $category_util->checkManage($category_id, null, false,
            CB_DATABASE_NO_LOCK);
    }

    //Add SSO Information to Shared Link
    foreach (array_keys($share_link_list) as $share_link_id) {
        $share_link_list[$share_link_id]['sso_param']['system_link']
            = $share_link_id;
        $share_link_list[$share_link_id]['sso_param']['system_category']
            = $share_link_list[$share_link_id]['cid'];
    }

    //Get Popup Setting
    $link_util->setType('share');
    $system_config_list = $link_util->getGeneralConfig();
    $link_util->setType('personal');
    $personal_config_list = $link_util->getGeneralConfig();

    $t->assign('personal_link_list', $personal_link_list);
    //$t->assign( 'personal_category_list', $personal_category_list );
    $t->assign('share_link_list', $share_link_list);
    //$t->assign( 'share_category_list', $share_category_list );
    $t->assign('management', $management ? 1 : 0);
    $t->assign('set_popup_share',
        array_key_exists('popup_set', $system_config_list)
            ? $system_config_list['popup_set'] : 0);
    $t->assign('set_popup_personal',
        array_key_exists('popup_set', $personal_config_list)
            ? $personal_config_list['popup_set'] : 0);
} elseif ($type == 'share') {
    // for shared category
    $link_util->setType('share');
    $share_link_list = $link_util->getListView($translation_map_link,
        $category_id, CB_DATABASE_NO_LOCK);
    $category_util->setType('share');
    $share_category = $category_util->getView($category_id,
        $translation_map_category, null, true, CB_DATABASE_NO_LOCK);
    $category_name_in_popup = $share_category['title'];
    //$share_category_list = $category_util->GetChildListView($category_id, $translation_map_category, CB_DATABASE_NO_LOCK);
    //$share_category_path = $category_util->getTreeListView($category_id, $translation_map_category, TRUE, TRUE, CB_DATABASE_NO_LOCK);

    //Check Management Right
    $category_util->setType('manage');
    $management = $category_util->checkManage($category_id, null, false,
        CB_DATABASE_NO_LOCK);

    //Add SSO Information to Shared Link
    foreach (array_keys($share_link_list) as $share_link_id) {
        $share_link_list[$share_link_id]['sso_param']['system_link']
            = $share_link_id;
        $share_link_list[$share_link_id]['sso_param']['system_category']
            = $share_link_list[$share_link_id]['cid'];
    }

    //Get Popup Setting
    $system_config_list = $link_util->getGeneralConfig();

    $t->assign('type', 'share');
    $t->assign('share_link_list', $share_link_list);
    //$t->assign( 'share_category_list', $share_category_list );
    $t->assign('category', $share_category);
    //$t->assign( 'category_path', $share_category_path );
    $t->assign('management', $management ? 1 : 0);
    $t->assign('set_popup_share',
        array_key_exists('popup_set', $system_config_list)
            ? $system_config_list['popup_set'] : 0);
} else {
    // for personal category
    $link_util->setType('personal');
    $personal_link_list = $link_util->getListView($translation_map_link,
        $category_id, CB_DATABASE_NO_LOCK);
    $category_util->setType('personal');
    $personal_category = $category_util->getView($category_id,
        $translation_map_category, null, true, CB_DATABASE_NO_LOCK);
    $category_name_in_popup = $personal_category['title'];
    //$personal_category_list = $category_util->GetChildListView($category_id, $translation_map_category, CB_DATABASE_NO_LOCK);
    //$personal_category_path = $category_util->getTreeListView($category_id, $translation_map_category, TRUE, TRUE, CB_DATABASE_NO_LOCK);

    $personal_config_list = $link_util->getGeneralConfig();

    $t->assign('type', 'personal');
    $t->assign('personal_link_list', $personal_link_list);
    //$t->assign( 'personal_category_list', $personal_category_list );
    $t->assign('category', $personal_category);
    //$t->assign( 'category_path', $personal_category_path );
    $t->assign('management', 0);
    $t->assign('set_popup_personal',
        array_key_exists('popup_set', $personal_config_list)
            ? $personal_config_list['popup_set'] : 0);
}

//Get Brother Category List for View
//$brother_category_list_for_view = $category_util->getBrotherListView($category_id, $translation_map_category);

//page title
$page_title = grn_get_current_page_display_name();
$t->assign('page_title', $page_title);

//site position
$site_position = [['page' => '', 'name' => $page_title]];
$t->assign('site_position', $site_position);
$delete_info_multi_personal = [
    'title'        => grn_get_page_display_name('link/delete_multi'),
    'page'         => 'link/delete_multi.tpl',
    'no_confirm'   => false,
    'data'         => [
        'category' => [
            'cid'  => $category_id,
            'name' => $category_name_in_popup
        ]
    ],
    'handler'      => ['btn_delete_multi1', 'btn_delete_multi2'],
    'multi_target' => 'ids[]',
    'form_target'  => 'link/index_personal',
];
$t->assign('delete_info_multi_personal', $delete_info_multi_personal);

//Display Smarty Template
$doc_name = cb_get_pagename();
$t->display("{$doc_name}.tpl");


