<?php

global $G_INPUT;

//Instantiate an Smarty object
require_once("grn/smarty.csp");
$t = new GRN_Smarty;

//Get Session
require_once('fw/session_manager.csp');
$session_manager = CB_SessionManager::getInstance();
$session =& $session_manager->getSession('link.search');

//Get Parameter
if (@ $G_INPUT['sf']) {
    //Get Parameter From Session
    $category_id = $session->get('category_id');
    $search_text = $session->get('search_text');
    $target_category = $session->get('target_category');
    $search_term = $session->get('search_term');
    $search_keys = $session->get('search_keys');
    $type = $session->get('type');

    $search_offset_1 = $session->get('search_offset_1');
    $search_offset_2 = $session->get('search_offset_2');
    $search_offset_3 = $session->get('search_offset_3');
    $search_offset_4 = $session->get('search_offset_4');

    //Get Default Offset
    $search_offset_1 = ( ! $search_offset_1) ? 0 : $search_offset_1;
    $search_offset_2 = ( ! $search_offset_2) ? 0 : $search_offset_2;
    $search_offset_3 = ( ! $search_offset_3) ? 0 : $search_offset_3;
    $search_offset_4 = ( ! $search_offset_4) ? 0 : $search_offset_4;
} else {
    //Get Parameter From $G_INPUT
    $category_id = @ $G_INPUT['cid'];            //Category ID
    $search_text = @ $G_INPUT['search_text'];     //Search Text
    $target_category = @ $G_INPUT['target_category']; //Target Category
    $search_term = @ $G_INPUT['search_term'];     //Search Term
    $search_keys = @ $G_INPUT['search_keys'];     //Search keys
    $type = @ $G_INPUT['type'];
    $optional_search = @ $G_INPUT['optional_search'];

    //Get Default Values
    if ($optional_search != 1) {
        $target_category = is_null($target_category) ? 'all' : $target_category;
        $search_term = is_null($search_term) ? 1 : $search_term;
        $search_keys = is_null($search_keys) ? [
            'category',
            'title',
            'url',
            'sub'
        ] : $search_keys;
    } else {
        $search_keys = is_null($search_keys) ? [] : $search_keys;
    }

    //Get Default Offset
    $search_offset_1 = 0;
    $search_offset_2 = 0;
    $search_offset_3 = 0;
    $search_offset_4 = 0;
}

//Set Parameter To Session
$session->set('category_id', $category_id);
$session->set('search_text', $search_text);
$session->set('target_category', $target_category);
$session->set('search_term', $search_term);
$session->set('search_keys', $search_keys);
$session->set('type', $type);

//Set Search Offset
require_once('grn/controller.csp');
$search_offset = (int)@ $G_INPUT['sp'];
$search_offset_number = (int)@ $G_INPUT['sn'];
switch ($search_offset_number) {
    case '1':
        $session->set('search_offset_1', $search_offset);
        $search_offset_1 = $search_offset;
        break;
    case '2':
        $session->set('search_offset_2', $search_offset);
        $search_offset_2 = $search_offset;
        break;
    case '3':
        $session->set('search_offset_3', $search_offset);
        $search_offset_3 = $search_offset;
        break;
    case '4':
        $session->set('search_offset_4', $search_offset);
        $search_offset_4 = $search_offset;
        break;
    default:
        $session->set('search_offset_1', 0);
        $session->set('search_offset_2', 0);
        $session->set('search_offset_3', 0);
        $session->set('search_offset_4', 0);
        break;
}

//Check Recursive
$search_recursive = in_array('sub', $search_keys) ? true : false;

//Check ALL
$search_all = ($target_category == 'all') ? true : false;

//Get Login User Config
global $G_link_login_user;
require_once('grn/ui.csp');
$manager = GRN_UIConfigManager::getInstance();
$config =& $manager->getUserConfig($G_link_login_user);

//Convert Search Term
if ($search_term > 0) {
    //Get Now TimeStamp
    require_once('fw/date.csp');
    $ts_now = new CB_TimeStamp();
    $ts_now->unix_ts = time();

    //Get Term TimeStamp
    $ts_term = new CB_TimeStampEx($ts_now);
    $dt_term = $ts_term->getDateTime();
    $dt_term->hour = 0;
    $dt_term->minute = 0;
    $dt_term->second = 0;
    $dt_term->moveMonths(-$search_term);
    $ts_term->setDateTime($dt_term);

    //Set Converted TimeStamp
    $ts_start = $ts_term->unix_ts;
} else {
    $ts_start = 0;
}

//Create Search Info
$limit = $config->getListMax();
$search_info['target_list'] = $search_keys;
$search_info['text'] = $search_text;
$search_info['limit'] = $limit + 1;
$search_info['term'] = $ts_start;
$search_info['recursive'] = $search_recursive;
$search_info['all'] = $search_all;

//Create Parameter Translation Map
$translation_map_category = [
    'cid'   => '_id',
    'title' => 'name',
];

//Create Parameter Translation Map
$translation_map_link = [
    'lid'      => '_id',              //Link ID
    'object'   => 'type',             //Link Type
    'title'    => 'name',             //Link Name
    'url'      => 'url',              //Link URL
    'category' => 'category_name',    //Category Name
    'cid'      => 'cid',              //Category id
    'sid'      => 'sid',              //SSO Method ID
];

//Get Link and Category Utility
require_once('link/controller_util.csp');
$link_util = GRN_Link_Link_Controller_Utility::getInstance();
$category_util = GRN_Link_Category_Controller_Utility::getInstance();

//Get Category for View
$category_for_view = [];
if ($category_id) {
    if ($type == 'share') {
        $category_util->setType('share');
    } else {
        $category_util->setType('personal');
    }
    $category_for_view = $category_util->getView($category_id,
        $translation_map_category, null, true, CB_DATABASE_NO_LOCK);
}

//Get Root Category Info for View
$category_util->setType(GRN_LINK_LINK_TYPE_PERSONAL);
$personalRoot = $category_util->getView(GRN_LINK_CATEGORY_ROOT_ID,
    $translation_map_category, null, true, CB_DATABASE_NO_LOCK);

$category_util->setType(GRN_LINK_LINK_TYPE_SYSTEM);
$systemRoot = $category_util->getView(GRN_LINK_CATEGORY_ROOT_ID,
    $translation_map_category, null, true, CB_DATABASE_NO_LOCK);

//Search Category
$system_category_list_for_view = [];
$personal_category_list_for_view = [];
if (in_array('category', $search_info['target_list'])
    && ! is_null($search_info['text'])
) {
    if ($search_info['all']) {
        //Search System Category
        $category_util->setType('share');
        $search_info['offset'] = $search_offset_1;
        $system_category_list_for_view = $category_util->search($category_id,
            $search_info, $translation_map_category, CB_DATABASE_NO_LOCK);

        //Search Personal Category
        $category_util->setType('personal');
        $search_info['offset'] = $search_offset_2;
        $personal_category_list_for_view = $category_util->search($category_id,
            $search_info, $translation_map_category, CB_DATABASE_NO_LOCK);
    } elseif ($type == 'share') {
        //Search System Category
        $category_util->setType('share');
        $search_info['offset'] = $search_offset_1;
        $system_category_list_for_view = $category_util->search($category_id,
            $search_info, $translation_map_category, CB_DATABASE_NO_LOCK);
    } else {
        //Search Personal Category
        $category_util->setType('personal');
        $search_info['offset'] = $search_offset_2;
        $personal_category_list_for_view = $category_util->search($category_id,
            $search_info, $translation_map_category, CB_DATABASE_NO_LOCK);
    }

    //Get Hit Category Path
    $category_util->setType('share');
    foreach (array_keys($system_category_list_for_view) as $system_category_id) {
        $system_category_list_for_view[$system_category_id]['path']
            = $category_util->getTreeListView($system_category_id,
            $translation_map_category, false, false, CB_DATABASE_NO_LOCK);
    }
    $category_util->setType('personal');
    foreach (
        array_keys($personal_category_list_for_view) as $personal_category_id
    ) {
        $personal_category_list_for_view[$personal_category_id]['path']
            = $category_util->getTreeListView($personal_category_id,
            $translation_map_category, false, false, CB_DATABASE_NO_LOCK);
    }
}

$isExistsNextPersonalCategoryPage = count($personal_category_list_for_view)
                                    > $limit;
if ($isExistsNextPersonalCategoryPage) {
    array_pop($personal_category_list_for_view);
}

$isExistsNextSystemCategoryPage = count($system_category_list_for_view)
                                  > $limit;
if ($isExistsNextPersonalCategoryPage) {
    array_pop($system_category_list_for_view);
}

//Search Link
$system_link_list_for_view = [];
$personal_link_list_for_view = [];
if ((in_array('title', $search_info['target_list'])
     || in_array('url', $search_info['target_list']))
    && ! is_null($search_info['text'])
) {
    if ($search_info['all']) {
        //Search System Link
        $link_util->setType('share');
        $search_info['offset'] = $search_offset_3;
        $system_link_list_for_view = $link_util->search($category_id,
            $search_info, $translation_map_link, CB_DATABASE_NO_LOCK);

        //Search Personal Link
        $link_util->setType('personal');
        $search_info['offset'] = $search_offset_4;
        $personal_link_list_for_view = $link_util->search($category_id,
            $search_info, $translation_map_link, CB_DATABASE_NO_LOCK);
    } elseif ($type == 'share') {
        //Search System Link
        $link_util->setType('share');
        $search_info['offset'] = $search_offset_3;
        $system_link_list_count = $link_util->searchCount($category_id,
            $search_info, CB_DATABASE_NO_LOCK);
        $system_link_list_for_view = $link_util->search($category_id,
            $search_info, $translation_map_link, CB_DATABASE_NO_LOCK);
    } else {
        //Search Personal Link
        $link_util->setType('personal');
        $search_info['offset'] = $search_offset_4;
        $personal_link_list_for_view = $link_util->search($category_id,
            $search_info, $translation_map_link, CB_DATABASE_NO_LOCK);
    }

    //Add SSO Information to System Link
    foreach (array_keys($system_link_list_for_view) as $system_link_id) {
        $system_link_list_for_view[$system_link_id]['sso_param']['system_link']
            = $system_link_id;
        $system_link_list_for_view[$system_link_id]['sso_param']['system_category']
            = $system_link_list_for_view[$system_link_id]['cid'];
    }

    //Get Hit Link Path
    $category_util->setType('share');
    foreach (array_keys($system_link_list_for_view) as $system_link_id) {
        $system_link_list_for_view[$system_link_id]['path']
            = $category_util->getTreeListView($system_link_list_for_view[$system_link_id]['cid'],
            $translation_map_category, false, false, CB_DATABASE_NO_LOCK);
    }
    $category_util->setType('personal');
    foreach (array_keys($personal_link_list_for_view) as $personal_link_id) {
        $personal_link_list_for_view[$personal_link_id]['path']
            = $category_util->getTreeListView($personal_link_list_for_view[$personal_link_id]['cid'],
            $translation_map_category, false, false, CB_DATABASE_NO_LOCK);
    }
}
$isExistsNextPersonalLinkPage = count($personal_link_list_for_view) > $limit;
if ($isExistsNextPersonalLinkPage) {
    array_pop($personal_link_list_for_view);
}
$isExistsNextSystemLinkPage = count($system_link_list_for_view) > $limit;
if ($isExistsNextSystemLinkPage) {
    array_pop($system_link_list_for_view);
}


//Create Search Information
$search_information_for_view = [];
$search_information_for_view['search_system_category']
    = $system_category_list_for_view;
$search_information_for_view['search_personal_category']
    = $personal_category_list_for_view;
$search_information_for_view['search_system_link']
    = $system_link_list_for_view;
$search_information_for_view['search_personal_link']
    = $personal_link_list_for_view;

//Create N-Navigation Information
$utility = new GRN_ControllerUtil();
$system_category_navi_for_view
    = $utility->makeSimpleNaviInformation($search_offset_1,
    $config->getListMax(), count($system_category_list_for_view),
    $isExistsNextSystemCategoryPage, ['sn' => 1, 'sf' => 1]);
$personal_category_navi_for_view
    = $utility->makeSimpleNaviInformation($search_offset_2,
    $config->getListMax(), count($personal_category_list_for_view),
    $isExistsNextPersonalCategoryPage, ['sn' => 2, 'sf' => 1]);
$system_link_navi_for_view
    = $utility->makeSimpleNaviInformation($search_offset_3,
    $config->getListMax(), count($system_link_list_for_view),
    $isExistsNextSystemLinkPage, ['sn' => 3, 'sf' => 1]);
$personal_link_navi_for_view
    = $utility->makeSimpleNaviInformation($search_offset_4,
    $config->getListMax(), count($personal_link_list_for_view),
    $isExistsNextPersonalLinkPage, ['sn' => 4, 'sf' => 1]);

//Create Search Keys
$search_keys_for_view = [];
$search_keys_for_view['sub'] = in_array('sub', $search_info['target_list'])
    ? 1 : 0;
$search_keys_for_view['category'] = in_array('category',
    $search_info['target_list']) ? 1 : 0;
$search_keys_for_view['title'] = in_array('title',
    $search_info['target_list']) ? 1 : 0;
$search_keys_for_view['url'] = in_array('url', $search_info['target_list'])
    ? 1 : 0;

//Assign Search Text
$t->assign('search_text', $search_text);
//Assign Target Category
$t->assign('target_category', $target_category);
//Assign Search keys
$t->assign('search_term', $search_term);
//Assign Search keys
$t->assign('search_keys', $search_keys_for_view);
//Assign Type
$t->assign('type', $type);
//Assign Category
$t->assign('category', $category_for_view);
//Assign Search
$t->assign('search', $search_information_for_view);
//Assign System Category Navi
$t->assign('system_category_navi', $system_category_navi_for_view);
//Assign Personal Category Navi
$t->assign('personal_category_navi', $personal_category_navi_for_view);
//Assign System Category Navi
$t->assign('system_link_navi', $system_link_navi_for_view);
//Assign Personal Category Navi
$t->assign('personal_link_navi', $personal_link_navi_for_view);
$t->assign('personal_root', $personalRoot);
$t->assign('system_root', $systemRoot);

//page title
$page_title = grn_get_current_page_display_name();
$t->assign('page_title', $page_title);

//site position
$t->assign('site_position', [
        [
            'page' => 'link/index',
            'name' => grn_get_page_display_name('link/index'),
            'type' => 'personal'
        ],
        ['page' => '', 'name' => $page_title]
    ]
);

//Display Smarty Template
$doc_name = cb_get_pagename();
$t->display("{$doc_name}.tpl");

