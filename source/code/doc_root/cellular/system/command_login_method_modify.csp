<?php

// Check HTTP-POST Method
if (strcasecmp(@ $_SERVER['REQUEST_METHOD'], 'POST') == 0) {
    // instantiate an Smarty object
    require_once("grn/smarty.csp");
    $t = new GRN_Smarty;

    // instantiate an Smarty object
    require_once("grn/smarty.csp");
    $t = new GRN_Smarty;

    // Validation check
    require_once('SmartyValidate.class.php');
    SmartyValidate::connect($t);
    $target_name = 'cellular/system/login_method_modify';
    SmartyValidate::register_form($target_name);

    // validate after a POST
    if (SmartyValidate::is_valid($G_INPUT, $target_name)) {
        // Create Parameter Translation Map
        $translation_map = [
            'rmid'         => '_rmid',               //Repository Method ID
            'display_name' => 'display_name',        //Login Method Display Name
            'use_multi'    => 'use_multi',
            'multi_rmid'   => 'multi_rmid',
        ];

        // Do Parameter Translation
        $properties = [];
        foreach ($translation_map as $view_name => $model_name) {
            $properties[$model_name] = @ $G_INPUT[$view_name];
        }


        require_once('grn/authentication.csp');
        $authentication_service = GRN_Authentication_Service::getInstance();

        //Get Login Method
        $login_method
            = $authentication_service->getSingleLoginMethod(GRN_AUTH_LOGIN_CELLULAR);

        //Update and Get Repository
        $child_repository_ids = [];
        foreach ($properties['multi_rmid'] as $child_repository_id => $selected) {
            if ($selected) {
                $child_repository_ids[] = $child_repository_id;
            }
        }
        $new_repository_method
            = $authentication_service->updateLoginMethodRepository(
            $login_method->getRepositoryMethod(), $properties['use_multi'],
            $properties['_rmid'], $child_repository_ids
        );

        //Create Infomation Login Driver Settings
        $driver_settings = [];

        //Modify Login Method
        $authentication_service->modifyLoginMethod(
            $login_method->getOID(), $properties['display_name'],
            $driver_settings, $new_repository_method
        );

        // the validation session is finished
        SmartyValidate::unregister_form($target_name);

        //Switch Redirect Page
        cb_redirect('cellular/system/login_method_view');
    } else {
        //Assign Template Name
        $t->setPageInfo('_login_method_modify');

        //include sharing codes with command_*
        include('_login_method_modify.csp');

        //Rewrite Authenticate Method Infomation
        $login_method_for_view = &$t->get_template_vars('login_method');
        $login_method_for_view['amid'] = @ $G_INPUT['amid'];
        $login_method_for_view['display_name'] = @ $G_INPUT['display_name'];
        $login_method_for_view['rmid'] = @ $G_INPUT['rmid'];

        //Display Previous Page
        $t->display('cellular/system/login_method_modify.tpl');
    }
}


