<?php

global $G_INPUT;

if ( ! isset($t) || ! is_a($t, 'GRN_Smarty')) {
    require_once("grn/smarty.csp");
    $t = new GRN_Smarty;
}
if ( ! isset($utility) || ! is_a($utility, 'GRN_Cabinet_ControllerUtil')) {
    require_once('cabinet/controller.csp');
    $utility = new GRN_Cabinet_ControllerUtil();
}

$t->assign('config', $utility->getConfigValues($G_cabinet_login));

$cabinet_app =& $G_cabinet;

// get common ui configuration
$ui_config =& $G_cabinet_ui_config;

// initialize
$folder_id = null;
$folder_title = null;
$target_folder = null;

if (1 == @ $G_INPUT['sf']) {
    $session =& $utility->getSession();
    $search_text = cb_trim($session->get('search_text'));
    $input_search_text = $session->get('search_text');
    $keywords = $session->get('search_keys');

    $folder_id = $session->get('folder_id');
    $folder_title = $session->get('folder_title');
    $target_folder = $session->get('target_folder');
    $search_term = $session->get('search_term');

    $default_search_term = $session->get('search_term');
} else {
    $search_text = cb_trim(@ $G_INPUT['text']);
    $input_search_text = @ $G_INPUT['text'];
    $keywords = @ $G_INPUT['search_keys'];
    $optional_search = @ $G_INPUT['optional_search'];

    $target_folder = @ $G_INPUT['target_folder'];
    $folder_id = @ $G_INPUT['hid'];
    $folder_title = @ $G_INPUT['fn'];
    $search_term = @ $G_INPUT['search_term'];

    if (($folder =& $G_cabinet->getFolder($G_cabinet_login, $folder_id))) {
        $folder_title = $folder->get('name');
    }

    $default_search_term = 3;

    // simple search
    if (is_null($optional_search) || ! strlen($optional_search)) {
        $keywords = [
            'folder_name',
            'sub',
            'file_name',
            'title',
            'description',
            'creator',
            'modifier'
        ];
    }
}

// 検索期間を決定する
if (empty($term_ts)) {
    if (is_null($search_term) || 0 == strlen($search_term)) {
        $search_term = $default_search_term;
    }
    $search_term = intval($search_term);

    if (0 < $search_term) {
        require_once('fw/date.csp');

        $ts = new CB_TimeStamp();
        $ts->unix_ts = time();

        $term_ts = new CB_TimeStampEx($ts);

        $datetime = $term_ts->getDateTime();
        $datetime->hour = 0;
        $datetime->minute = 0;
        $datetime->second = 0;

        $datetime->moveMonths(-$search_term);
        $term_ts->setDateTime($datetime);
    } else {
        $term_ts = null;
    }
}

// Smartyに割り当てる検索項目を列挙する
$search_keys = [];
if (is_array($keywords)) {
    foreach ($keywords as $keyword) {
        $search_keys[$keyword] = true;
    }
}


// -------
// assign parameters to session.
$session =& $utility->getSession();
$session->set('search_text', $input_search_text);
$session->set('search_keys', $keywords);
$session->set('folder_id', $folder_id);
$session->set('folder_title', $folder_title);
$session->set('target_folder', $target_folder);
$session->set('search_term', $search_term);

$t->assign('search_text', $input_search_text);
$t->assign('search_keys', $search_keys);
$t->assign('search_term', $search_term);

$t->assign('target_folder', $target_folder);

$t->assign('folder', [
    'id'    => $folder_id,
    'title' => $folder_title
]);


// 一覧表示件数を取得する
if (is_null($ui_config)
    || is_null($number_on_page = $ui_config->getListMax())
) {
    $number_on_page = 20;
}

$navi_params = ['sf' => 1, 'hid' => $folder_id];

// search

$searchFolderId = null;
$isSearchSubfolder = false;

// サブフォルダを検索するか？
if (array_key_exists('sub', $search_keys)) {
    if ($search_keys['sub']) {
        $isSearchSubfolder = true;
    }
    unset($search_keys['sub']);
}

// 検索フォルダ
if ( ! is_null($folder_id)) {
    $searchFolderId = $folder_id;
}

if ($target_folder === 'all') {
    $searchFolderId = null;
}

require_once('cabinet/include_search.csp');

if (strlen($search_text) > 0 && array_key_exists('folder_name', $search_keys)) {
    // フォルダは常に指定フォルダ以下で検索される
    $offset = $utility->getListOffset('fsp');
    require_once('cabinet/bean/GrnCabinetFolderCondition.csp');
    $searchFolderCondition = new GrnCabinetFolderCondition();
    $searchFolderCondition->setUser($G_cabinet_login);
    $searchFolderCondition->setFolderId($searchFolderId);
    $searchFolderCondition->setEnableSubFolder($isSearchSubfolder);
    $searchFolderCondition->setOffset($offset);
    $searchFolderCondition->setLimit($number_on_page);
    $searchFolderCondition->setSearchWords($search_text);

    $search = new GRN_Cabinet_FolderSearch($searchFolderCondition);
    $result = $search->searchExecute();
    $number_of_all = $search->count();

    $navi_information = $utility->makeNaviInformation($offset,
        $number_on_page,
        $number_of_all,
        $navi_params);

    $search_item = [
        'search_item' => $result,
        'view_set'    => $navi_information,
    ];

    $t->assign('search_folder', $search_item);

    unset($search_keys['folder_name']);
} else {
    $navi_information = $utility->makeNaviInformation(0,
        $number_on_page,
        0,
        $navi_params);

    $search_item = [
        'search_item' => null,
        'view_set'    => $navi_information,
    ];

    $t->assign('search_folder', $search_item);
}


if (strlen($search_text) > 0 && count($search_keys) > 0) {
    $offset = $utility->getListOffset();

    require_once('cabinet/bean/GrnCabinetFileCondition.csp');
    $searchFileCondition = new GrnCabinetFileCondition();
    $searchFileCondition->setUser($G_cabinet_login);
    $searchFileCondition->setFolderId($searchFolderId);
    $searchFileCondition->setEnableSubFolder($isSearchSubfolder);
    $searchFileCondition->setOffset($offset);
    $searchFileCondition->setLimit($number_on_page);
    $searchFileCondition->setSearchWords($search_text);
    $searchFileCondition->setFileTerm($term_ts);
    $searchFileCondition->setSearchColumns($search_keys);

    $search = new GRN_Cabinet_FileSearch($searchFileCondition);
    $result = $search->searchExecute();
    $number_of_all = $search->count();

    $navi_information = $utility->makeNaviInformation($offset,
        $number_on_page,
        $number_of_all,
        $navi_params);

    //GTM-528
    $enable_link = true;
    $checked = false;
    if ( ! is_null($searchFolderId)) {
        if (($folder =& $G_cabinet->getFolder($G_cabinet_login, $folder_id))) {
            $enable_link = ! $folder->checkDeletedFlag();
        }
        if ( ! $enable_link) {
            foreach ($result as $key => $item) {
                $result[$key]['enable_link'] = $enable_link;
            }
            $checked = true;
        }
    }
    if ( ! $checked) {
        $folder_ids = [];
        foreach ($result as $key => $item) {
            if (array_key_exists($item['folder_id'], $folder_ids)) {
                $result[$key]['enable_link'] = $folder_ids[$item['folder_id']];
            } else {
                if (($folder =& $G_cabinet->getFolder($G_cabinet_login,
                    $item['folder_id']))
                ) {
                    $folder_ids[$item['folder_id']]
                        = ! $folder->checkDeletedFlag();
                } else {
                    $folder_ids[$item['folder_id']] = true;
                }
                $result[$key]['enable_link'] = $folder_ids[$item['folder_id']];
            }
        }
    }

    $search_item = ['search_item' => $result];

    $users_id = [];
    foreach ($result as $item) {
        $users_id[] = $item['modifier_uid'];
    }

    global $G_container_base;
    $uum =& $G_container_base->getInstance('uum');
    require_once("grn/controller.csp");
    $users_info = GRN_ControllerUtil::getUserInfoToShowUserName($users_id,
        $G_cabinet_login);

    $t->assign('users_info', $users_info);
    $t->assign('search', $search_item);
    $t->assign('view_set', $navi_information);
} else {
    $navi_information = $utility->makeNaviInformation(0,
        $number_on_page,
        0,
        $navi_params);

    $t->assign('search', null);
    $t->assign('view_set', $navi_information);
}

// Smartyにページタイトルを割り当てる
$page_title = grn_get_current_page_display_name();
$t->assign('page_title', $page_title);


