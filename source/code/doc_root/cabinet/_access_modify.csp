<?php

global $G_INPUT;

if ( ! isset($t) || ! is_a($t, 'GRN_Smarty')) {
    require_once("grn/smarty.csp");
    $t = new GRN_Smarty;
}

require_once('../_access_util.csp');

// access information
$item_type = @ $G_INPUT['itype'];
$item_tid = @ $G_INPUT['itid'];
if ( ! $item_type || ! $item_tid) {
    cb_throw_error(E_GRN_CABINET_ACCESS_NOT_SELECT_TARGETS);
}

require_once('cabinet/access.csp');
$am = GRN_Cabinet_AccessManager::getInstance();

global $G_container_app;
$uum =& $G_container_app->getInstance('uum');

require_once('grn/access_resources.csp');

switch ($item_type) {
    case GRN_ACCESS_TARGET_TYPE_USER:
        $target =& $uum->getUser($item_tid);
        break;
    case GRN_ACCESS_TARGET_TYPE_GROUP:
        $target =& $uum->getGroup($item_tid);
        break;
    case GRN_ACCESS_TARGET_TYPE_STATIC_ROLE:
        $target =& $uum->getStaticRole($item_tid);
        break;
    default:
        assert('is_string($item_tid)');
        $target = $item_tid;
        break;
}

$authorities = $am->getTarget($node_row, $target);
$access_item = [
    'type' => $item_type,
    'tid'  => $item_tid,
    'data' => $authorities
];
$security_model = $am->getSecurityModelString($node_row);

$t->assign('access_item', $access_item);
$t->assign('security_model', $security_model);


