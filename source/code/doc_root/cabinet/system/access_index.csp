<?php

//-- instantiate Smarty object
require_once("grn/smarty.csp");
$t = new GRN_Smarty;

$node_id = null;

if (array_key_exists('nid', $G_INPUT)
    && $G_INPUT['nid'] != GRN_CABINET_ROOT_FOLDER_ID
) {
    $node_id = $G_INPUT['nid'];
}

// --- folder tree
$tree_info = [
    'link_url' => 'cabinet/system/access_index',
    'oid_key'  => 'nid'
];
$tree_selected_oid = $node_id;
include('../_folder_tree.csp');
$node_id = $tree_selected_oid ? $tree_selected_oid : GRN_CABINET_ROOT_FOLDER_ID;
// --- end: folder tree

//--folder tree
if ($node_id) {
    $node_row =& $G_cabinet->getFolder($G_cabinet_login, $node_id);
    if ( ! $node_row) {
        cb_throw_error(E_GRN_CABINET_FOLDER_NOT_FOUND);
    }
}

require_once('cabinet/hierarchy.csp');
$hierarchy = GRN_Cabinet_Hierarchy::getInstance();
$node = $hierarchy->build($G_cabinet_login, $node_row);

//--access information
if ($node_id) {
    require_once('grn/access_resources.csp');

    $access = [];

    //-- prepare cabinet access manager
    require_once('cabinet/access.csp');
    $am = GRN_Cabinet_AccessManager::getInstance();

    $access['security_model'] = $am->getSecurityModelString($node_row);

    $targets = $am->getTargets($node_row, null);

    $access_list = [];
    foreach ($targets as $class_type => $accesses) {
        switch ($class_type) {
            case 'cb_user':
                $type = GRN_ACCESS_TARGET_TYPE_USER;
                break;
            case 'cb_group':
                $type = GRN_ACCESS_TARGET_TYPE_GROUP;
                break;
            case 'cb_role':
                $type = GRN_ACCESS_TARGET_TYPE_STATIC_ROLE;
                break;
            default:
                $type = GRN_ACCESS_TARGET_TYPE_DYNAMIC_ROLE;
                break;
        }

        foreach ($accesses as $key => $authorities) {
            $access_list[] = [
                'type' => $type,
                'tid'  => $key,
                'data' => $authorities
            ];
        }
    }

    $access['list'] = $access_list;
    $access['count'] = count($access['list']);
}

$t->assign('node_id', $node_id);
$t->assign('node', $node);
$t->assign('access', @ $access);
$t->assign('is_root', ! $node_id);

//-- page title
$page_title = grn_get_current_page_display_name();
$t->assign('page_title', $page_title);

//-- site position
$site_position = [
    ['page' => '', 'name' => $page_title],
];
$t->assign('site_position', $site_position);

// exec smarty
$t->display(cb_get_pagename() . '.tpl');

