<?php

global $G_INPUT;

require_once("grn/smarty.csp");
$t = new GRN_Smarty;

$folder_id = null;
if (array_key_exists('hid', $G_INPUT)
    && $G_INPUT['hid'] != GRN_CABINET_ROOT_FOLDER_ID
) {
    $folder_id = $G_INPUT['hid'];
}

// --- folder tree
$tree_info = [
    'link_url' => 'cabinet/system/folder_list',
    'oid_key'  => 'hid'
];
$tree_selected_oid = $folder_id;
include('../_folder_tree.csp');
$folder_id = $tree_selected_oid ? $tree_selected_oid
    : GRN_CABINET_ROOT_FOLDER_ID;
// --- end: folder tree

if ( ! ($folder = $G_cabinet->getFolder($G_cabinet_login, $folder_id))) {
    cb_throw_error(E_GRN_CABINET_FOLDER_NOT_FOUND);
}
$t->assign('folder_id', $folder_id);
$t->assign('garbage_page', 'cabinet/system/garbage');
require_once('cabinet/controller.csp');
$utility = new GRN_Cabinet_ControllerUtil();

$utility->setSitePosition($t, null);

// 指定されたフォルダを取得
if ( ! ($folder = $G_cabinet->getFolder($G_cabinet_login, $folder_id))) {
    cb_throw_error(E_GRN_CABINET_FOLDER_NOT_FOUND);
}

require_once('cabinet/hierarchy.csp');
$hierarchy = GRN_Cabinet_Hierarchy::getInstance();

// フォルダツリーを生成
$folder_for_view = $hierarchy->buildUsingTree($G_cabinet_login, $folder, $tree);

// フォルダ内のファイル一覧を取得

$offset = $utility->getListOffset();

//get cabinet display order
$order = $folder->getCabinetDisplayOrder();
$arg = $utility->getListOrderArg($order);
$order_column = $utility->getListOrderColumn(null, $arg);

$t->assign('sort', $order_column['param']);

if (is_null($limit = $G_cabinet_ui_config->getListMax())) {
    $limit = 20;
}

require_once('cabinet/file_util.csp');
$list = new GRN_Cabinet_FileList($G_cabinet_login, $folder);
$list->setOffset($offset);
$list->setLimit($limit);
$list->addOrderColumn($order_column['column'], $order_column['order']);

$file_for_view = [];
$dummy = null;

while ( ! is_null(($file =& $list->iterate()))) {
    $file_for_view[$file->getOID()] = $utility->getFileListView($dummy, $file);
}

// ファイル一覧ナビゲーションのパラメータ
$navi_for_view = $utility->makeNaviInformation($offset,
    $limit,
    $list->count());

$navi_for_view['navi']['params'] = [
    'hid'  => $folder_id,
    'sort' => $order_column['param']
];

$folder_deleted = false;
if ($folder->checkDeletedFlag()) {
    $folder_deleted = true;
}

$this_folder_actually_not_delete = false;
if ( ! $folder->checkDeletedFlag(true, true)) {
    $this_folder_actually_not_delete = true;
}

$users_id = [];
foreach ($file_for_view as $key => $view) {
    $users_id[] = $view['modifier_uid'];
    if (isset($view['locked_owner_uid'])) {
        $users_id[] = $view['locked_owner_uid'];
    }

}
$t->assign("users_info",
    GRN_ControllerUtil::getUserInfoToShowUserName($users_id, $G_cabinet_login));
$t->assign('folder', $folder_for_view);
$t->assign('files', $file_for_view);
$t->assign('navi', $navi_for_view);
$t->assign('config', $utility->getConfigValues($G_cabinet_login));
$t->assign('folder_deleted', $folder_deleted);
$t->assign('this_folder_actually_not_delete', $this_folder_actually_not_delete);

$t->display(cb_get_pagename() . ".tpl");

