<?php

global $G_INPUT;

require_once("grn/smarty.csp");
$t = new GRN_Smarty;

$folder_id = GRN_CABINET_ROOT_FOLDER_ID;

if (array_key_exists('hid', $G_INPUT) && strlen($G_INPUT['hid']) > 0
    && $G_INPUT['hid'] > 0
) {
    $folder_id = $G_INPUT['hid'];
}

if ( ! ($folder =& $G_cabinet->getFolder($G_cabinet_login, $folder_id))) {
    cb_throw_error(E_GRN_CABINET_FOLDER_NOT_FOUND);
}

// Auto clean up files in Trash
global $G_cabinet_login;
$G_cabinet->deleteExpiredFiles($G_cabinet_login, $folder_id);

$t->assign('folder_page', 'cabinet/index');
$t->assign('folder_id', $folder_id);

require_once('cabinet/config.csp');
$sysconf = GRN_Cabinet_SystemConfig::getInstance();
$trash_period = $sysconf->getTrashPeriod();

$t->assign('trash_period', $trash_period);

require_once('cabinet/controller.csp');
$utility = new GRN_Cabinet_ControllerUtil();

// site position
// GRN35-209
if (@$G_INPUT['hid']) {
    $utility->prepareMakeSitePosition($t, @$G_INPUT['hid']);
} else {
    $page_path = [
        'cabinet/index' => ['hid' => @$G_INPUT['hid']]
    ];
    $utility->setSitePosition($t, $page_path);
}
// GRN35-209

// --- folder tree
$tree_info = [
    'link_url' => 'cabinet/index',
    'oid_key'  => 'hid'
];
$tree_name = 'cabinet/index';
$tree_selected_oid = array_key_exists('hid', $G_INPUT)
                     && ($folder_id != GRN_CABINET_ROOT_FOLDER_ID) ? $folder_id
    : null;
include('_folder_tree.csp');
// --- end: folder tree

require_once('cabinet/hierarchy.csp');
$hierarchy = GRN_Cabinet_Hierarchy::getInstance();
$hierarchy->setPrivileges(true);          // 特権情報取得

// フォルダツリーの表示データを生成
$folder_for_view = $hierarchy->buildUsingTree($G_cabinet_login, $folder, $tree);

$files_for_view = null;
$navi_for_view = null;

// get common ui configuration
if (is_null($limit = $G_cabinet_ui_config->getListMax())) {
    $limit = 20;
}

$sort = null;

require_once('cabinet/file_util.csp');

$offset = $utility->getListOffset();

$order_column = $utility->getListOrderColumn();

$t->assign('sort', $order_column['param']);

$coll = new GRN_Cabinet_FileList($G_cabinet_login, $folder);
$coll->setFileListMode(GRN_CABINET_FILELIST_MODE_IN_TRASH);
$coll->setOffset($offset);
$coll->setLimit($limit + 1);
$coll->setLock(CB_DATABASE_NO_LOCK);

$coll->addOrderColumn($order_column['column'], $order_column['order']);

$files_for_view = [];

$users_id = [];
while (($file = $coll->iterate())) {
    $files_for_view[$file->getOID()]
        = $utility->getFileListView($G_cabinet_login, $file);
    $users_id[] = $files_for_view[$file->getOID()]['modifier_uid'];
    if (isset($files_for_view[$file->getOID()]['locked_owner_uid'])) {
        $users_id[] = $files_for_view[$file->getOID()]['locked_owner_uid'];
    }
}

$isExistsNextPage = count($files_for_view) > $limit;
if ($isExistsNextPage) {
    array_pop($files_for_view);
}

global $G_container_base;
$uum = $G_container_base->getInstance('uum');
require_once("grn/controller.csp");
$users_info = GRN_ControllerUtil::getUserInfoToShowUserName($users_id,
    $G_cabinet_login);

// ファイル一覧のナビゲーション

$navi_for_view = $utility->makeSimpleNaviInformation($offset,
    $limit, count($files_for_view), $isExistsNextPage);
$navi_for_view['navi']['params'] = [
    'hid'  => $folder ? $folder->getOID() : 0,
    'sort' => $order_column['param']
];

$t->assign('folder', $folder_for_view);
$t->assign('files', $files_for_view);
$t->assign('navi', $navi_for_view);
$t->assign('config', $utility->getConfigValues($G_cabinet_login));
$t->assign('users_info', $users_info);

$t->display(cb_get_pagename() . ".tpl");

