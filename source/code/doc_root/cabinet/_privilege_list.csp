<?php

require_once("grn/smarty.csp");
$t = new GRN_Smarty;

$node_id = cb_at($G_INPUT, 'nid');
$node_row = $G_cabinet->getFolder($G_cabinet_login, $node_id);
if ( ! $node_row) {
    cb_throw_error(E_GRN_CABINET_FOLDER_NOT_FOUND);
}

$node = [];
$node['nid'] = $node_id;
$node['name'] = $node_row->get('name');

$t->assign('node', $node);

//--privilege information
require_once('cabinet/privilege.csp');
$privilege_manager = GRN_Cabinet_PrivilegeManager::getInstance();

require_once('grn/access_resources.csp');

$target_classes = [
    'dynamic_role' => null,
    'cb_role'      => null,
    'cb_group'     => null,
    'cb_user'      => null
];
$targets = $privilege_manager->getTargets($node_row, $target_classes);
$privilege_list = [];
$users_id = []; //GRB-15046
foreach ($targets as $class_type => $privileges) {
    switch ($class_type) {
        case 'cb_user':
            $type = GRN_ACCESS_TARGET_TYPE_USER;
            break;
        case 'cb_group':
            $type = GRN_ACCESS_TARGET_TYPE_GROUP;
            break;
        case 'cb_role':
            $type = GRN_ACCESS_TARGET_TYPE_STATIC_ROLE;
            break;
        default:
            $type = GRN_ACCESS_TARGET_TYPE_DYNAMIC_ROLE;
            break;
    }

    foreach ($privileges as $key => $authorities) {
        $privilege_list[] = [
            'type' => $type,
            'tid'  => $key,
            'data' => $authorities
        ];
        if ($type == GRN_ACCESS_TARGET_TYPE_USER) {
            $users_id[] = $key; //GRB-15046
        }
    }
}

$privilege = [];
$privilege['list'] = $privilege_list;
$privilege['count'] = count($privilege['list']);
$t->assign('access', $privilege);

//start GRB-15046
require_once("grn/controller.csp");
$users_info = GRN_ControllerUtil::getUserInfoToShowUserName($users_id,
    $G_cabinet_login);
$t->assign('users_info', $users_info);
//end GRB-15046

$ours_params = ['nid' => $node_id];
$t->assign('ours_params', $ours_params);
