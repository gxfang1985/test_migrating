<?php

if (strcasecmp(@ $_SERVER['REQUEST_METHOD'], 'POST') == 0) {
    global $G_INPUT;

    unset($G_INPUT['add']);

    if ( ! array_key_exists('nid', $G_INPUT)) {
        cb_throw_error(E_GRN_CABINET_FOLDER_NOT_FOUND);
    }
    $folder_id = $G_INPUT['nid'];

    if ( ! ($folder = $G_cabinet->getFolder($G_cabinet_login, $folder_id))) {
        cb_throw_error(E_GRN_CABINET_FOLDER_NOT_FOUND);
    }

    $text = null;
    if (array_key_exists('text', $G_INPUT)) {
        $text = $G_INPUT['text'];
    }

    $func = $G_INPUT['func'];
    if ($func == 'search') {
        cb_redirect($target_name, [
            'nid'  => $folder_id,
            'poid' => @$G_INPUT['poid'],
            'text' => $text
        ]);
    }

    //$aid = @ $G_INPUT['aid'];
    if (is_array($aid)) {
        global $G_container_base;
        $uum = $G_container_base->getInstance('uum');

        require_once('grn/uum_util.csp');
        $uum_util = GRN_UumUtil::getInstance();
        $dynamic_roles = $uum_util->listDynamicRoles();

        foreach (array_keys($aid) as $item) {
            $ids = explode(':', $item);
            if (count($ids) < 2) {
                continue;
            }
            $id = $ids[1];
            switch ($ids[0]) {
                case 'user':
                    if (($user = $uum->getUser($id))) {
                        $folder->setNotificationTarget($user, true);
                    }
                    break;

                case 'group':
                    if (($group = $uum->getGroup($id))) {
                        $folder->setNotificationTarget($group, true);
                    }
                    break;

                case 'static_role':
                    if (($role = $uum->getStaticRole($id))) {
                        $folder->setNotificationTarget($role, true);
                    }
                    break;

                case 'dynamic_role':
                    if (array_key_exists($id, $dynamic_roles)) {
                        $folder->setNotificationTarget($id, true);
                    }
                    break;
            }
        }

        _cabinet_rebuild_folder_tree($folder_id);
    }
}

