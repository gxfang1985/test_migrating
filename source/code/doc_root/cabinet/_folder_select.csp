<?php

global $G_INPUT;

if ( ! isset($t) || ! is_a($t, 'GRN_Smarty')) {
    require_once('grn/smarty.csp');
    $t = new GRN_Smarty();
}

if ( ! isset($folder_id)) {
    if ( ! array_key_exists('hid', $G_INPUT) || strlen($G_INPUT['hid']) < 1
         || $G_INPUT['hid'] < 1
    ) {
        $folder_id = GRN_CABINET_ROOT_FOLDER_ID;
    } else {
        $folder_id = $G_INPUT['hid'];
    }
}

if ( ! isset($set_folder_id)) {
    $set_folder_id = $folder_id;

    if (array_key_exists('s_hid', $G_INPUT) && strlen($G_INPUT['s_hid']) > 0) {
        $set_folder_id = $G_INPUT['s_hid'];
    }
}

$t->assign('folder_id', $folder_id);
$t->assign('set_folder_id', $set_folder_id);


// セッションに保存した購読フォルダを取得

require_once('fw/session_manager.csp');
$session_manager = CB_SessionManager::getInstance();

if (isset($target_name)) {
    $session =& $session_manager->getSession($target_name);
} else {
    $session =& $session_manager->getSession(cb_get_pagename());
}

if ( ! isset($session_id)) {
    $session_id = 'folder_select';
}

if ( ! array_key_exists('ss', $G_INPUT) || ! $G_INPUT['ss']) {
    // 初期化

    if ( ! isset($ignore_folders)) {
        $ignore_folders = [];
    }
    if ( ! isset($candidate_folders)) {
        $candidate_folders = [];
    }
    if ( ! isset($ignore_root_folder)) {
        $ignore_root_folder = null;
    }
    if ( ! isset($folder_privileges)) {
        $folder_privileges = null;
    }

    /**
     * インクルードしているコントローラから渡されるのはIDをキーとしたオブジェクト配列
     * その配列をセッションに保存するデータへ変換する
     */

    $for_session = [];
    foreach (array_keys($ignore_folders) as $key) {
        $item =& $ignore_folders[$key];

        $for_session[$key] = [
            'hid'  => $item->getOID(),
            'name' => $item->get('name'),
        ];
    }
    $ignore_folders = $for_session;

    $for_session = [];
    foreach (array_keys($candidate_folders) as $key) {
        if (array_key_exists($key, $ignore_folders)) {
            continue;
        }

        $item =& $candidate_folders[$key];

        require_once('cabinet/functions.csp');

        $for_session[$key] = [
            'hid'  => $item->getOID(),
            'name' => $item->get('name'),
            'path' => grn_cabinet_get_folder_path_string($item),
        ];
    }
    $candidate_folders = $for_session;
} else {
    $ignore_folders = $session->get($session_id . '_ignore');
    $candidate_folders = $session->get($session_id . '_candidate');
    $ignore_root_folder = $session->get($session_id . '_ignore_root');
    $folder_privileges = $session->get($session_id . '_privileges');

    if (is_null($ignore_folders)) {
        $ignore_folders = [];
    }
    if (is_null($candidate_folders)) {
        $candidate_folders = [];
    }
}

// 検索
if (array_key_exists('text', $G_INPUT)) {
    $result_for_view = [];

    // フォルダ検索
    if (array_key_exists('text', $G_INPUT) && strlen($G_INPUT['text']) > 0) {
        $t->assign('text', $G_INPUT['text']);

        require_once('cabinet/folder.csp');
        $cm = GRN_Cabinet_FolderManager::getInstance();

        // 移動でしかこのファイルは使用してないのでアクセス権は、書き込み権限をチェックする
        $acc = GRN_CABINET_ACCESS_RW;
        $prv = null;

        /*
                // 表示するフォルダのアクセス権を設定
                if( isset( $hierarchy_access ) )
                {
                    $acc = $hierarchy_access;
                }
        */
        // 管理権限のチェック
        if (isset($folder_privileges)) {
            $prv = $folder_privileges;
        }

        // 検索実行
        $folders = $cm->search($G_cabinet_login, $G_INPUT['text'], $acc, null,
            $prv);

        require_once('cabinet/functions.csp');

        // 検索結果
        foreach (array_keys($folders) as $hid) {
            // 無視するフォルダ
            if (array_key_exists($hid, $ignore_folders)) {
                continue;
            }
            // 選択済みのフォルダ
            if (array_key_exists($hid, $candidate_folders)) {
                continue;
            }
            // 選択フォルダ以下を表示させない場合
            if ( ! is_null($ignore_root_folder)
                 && $cm->isParent($folders[$hid], $ignore_root_folder)
            ) {
                continue;
            }

            $item =& $folders[$hid];

            $result_for_view[$hid] = [
                'name' => $item->get('name'),
                'hid'  => $hid,
                'path' => grn_cabinet_get_folder_path_string($item),
            ];
        }
    }

    $t->assign('search', [
            'result' => $result_for_view,
            'count'  => count($result_for_view),
            'text'   => $G_INPUT['text'],
        ]
    );

    if (count($result_for_view) < 1) {
        $t->assign('set_folder_id', null);
    }

} else {
    // 通常のフォルダツリーからの選択画面を表示する場合

    if ( ! ($folder =& $G_cabinet->getFolder($G_cabinet_login,
        $set_folder_id))
    ) {
        cb_throw_error(E_GRN_CABINET_FOLDER_NOT_FOUND);
    }

    require_once('cabinet/hierarchy.csp');
    $hierarchy = GRN_Cabinet_Hierarchy::getInstance();

    if (isset($hierarchy_notification)) {
        if (is_array($hierarchy_notification)) {
            $hierarchy->setNotificationFolders($hierarchy_notification);
        } else {
            $hierarchy->setNotificationFolders(true);
        }
    }

    if (isset($hierarchy_subscription)) {
        if (is_array($hierarchy_subscription)) {
            $hierarchy->setSubscriptionFolders($hierarchy_subscription);
        } else {
            $hierarchy->setSubscriptionFolders(true);
        }
    }

    if (isset($folder_privileges) && count($folder_privileges) > 0) {
        $hierarchy->setPrivileges($folder_privileges);
    }

    if (isset($hierarchy_access)) {
        $hierarchy->setAccessMode($hierarchy_access);
    }

    $folder_for_view = $hierarchy->build($G_cabinet_login, $folder);

    if ($set_folder_id == $ignore_root_folder) {
        $folder_for_view['children'] = null;
        $folder_for_view['child_count'] = 0;
    } elseif (array_key_exists('children', $folder_for_view)
              && is_array($folder_for_view['children'])
    ) {
        foreach (array_keys($folder_for_view['children']) as $hid) {
            if ($hid == $ignore_root_folder) {
                unset($folder_for_view['children'][$hid]);
                $folder_for_view['child_count']
                    = count($folder_for_view['children']);
                break;
            }
        }
    }

    // フォルダツリー
    $t->assign('folder', $folder_for_view);

    // 管理権限がない場合は、アクセス権のチェック
    if (isset($b_privileges) && ! $b_privileges) {
        $acc_manager = GRN_Cabinet_AccessManager::getInstance();
        $accesses = $acc_manager->getAuthorities($G_cabinet_login, $folder);
        if ($accesses['write'] == '0') {
            // 書き込み権限がない場合は、移動ボタンを無効にする
            $t->assign('move_disabled', true);
        }
    }
}

$session->set($session_id . '_ignore', $ignore_folders);
$session->set($session_id . '_candidate', $candidate_folders);
$session->set($session_id . '_ignore_root', $ignore_root_folder);
$session->set($session_id . '_privileges', $folder_privileges);

$t->assign('candidate_folders', $candidate_folders);

if (array_key_exists($set_folder_id, $candidate_folders)) {
    $t->assign('disable_select', true);
}
if ($set_folder_id == $ignore_root_folder) {
    $t->assign('disable_select', true);
}
if (isset($folder_privileges)) {
    if (($parent =& $folder->get('parent'))) {
        if ( ! $parent->privileged($G_cabinet_login, $folder_privileges)) {
            $t->assign('disable_select', true);
        }
    } else {
        $t->assign('disable_select', true);
    }
}


