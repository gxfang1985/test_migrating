<?php

global $G_INPUT;

if ( ! isset($t) || ! is_a($t, 'GRN_Smarty')) {
    require_once('grn/smarty.csp');
    $t = new GRN_Smarty();
}
if ( ! isset($utility) || ! is_a($t, 'GRN_Cabinet_ControllerUtil')) {
    require_once('cabinet/controller.csp');
    $utility = new GRN_Cabinet_ControllerUtil();
}

// SmartyValidate should be initialized when an input form is there.
require('SmartyValidate.class.php');
SmartyValidate::connect($t);
SmartyValidate::register_form(cb_get_pagename(), true);

if ( ! array_key_exists('hid', $G_INPUT)) {
    cb_throw_error(E_GRN_CABINET_FOLDER_NOT_FOUND);
}
$folder_id = $G_INPUT['hid'];

if ( ! ($folder =& $G_cabinet->getFolder($G_cabinet_login, $folder_id))) {
    cb_throw_error(E_GRN_CABINET_FOLDER_NOT_FOUND);
}

$t->assign('folder_id', $folder_id);

/** @var $parent GRN_Cabinet_Folder */
if (($parent =& $folder->get('parent'))) {
    $t->assign('parent_name', $parent->get('name'));
}

$t->assign('title', $folder->get('name'));
$t->assign('memo', $folder->get('description'));
$t->assign('foreign_key', $folder->get('foreign_key'));

require_once('cabinet/resources.csp');
require_once('cabinet/folder.csp');
$folderMgr = GRN_Cabinet_FolderManager::getInstance();
$localLanguageValues = $folderMgr->createMultiLanguageValuesArray($folder_id);

$multiLanguageInfoArray = [];
$multiLanguageInfoArray['element_name'] = GRN_CABINET_ELEMENT_NAME_FOLDER;
$multiLanguageInfoArray['values'] = $localLanguageValues;
$t->assign('multiLanguageInfoArray', $multiLanguageInfoArray);

if ($parent) {
    $privileges = $parent->getPrivileges($G_cabinet_login);
    $page_parts = explode('/', cb_get_pagename());
    $is_system = (cb_at($page_parts, 1) === 'system');

    if ($privileges['operation'] || $is_system) {
        require_once('cabinet/folder_tree.csp');
        $params = [
            'system'                  => $is_system,
            'force_hide_notification' => true
        ];
        $tree = new GRN_Cabinet_FolderTree($params);
        $tree_for_access = $tree->getTreeForView($parent, $is_system,
            'tree_for_access',
            'grn.page.folder_form.access_dropdown.selectCategory');
        $tree_for_notification = $tree->getTreeForView($parent, $is_system,
            'tree_for_notification',
            'grn.page.folder_form.notification_dropdown.selectCategory');

        $t->assign('tree_for_access', $tree_for_access);
        $t->assign('tree_for_notification', $tree_for_notification);
        $t->assign('tree_params', $params);
    }
}
