<?php

use grn\fts\Application as FtsApplication;

global $G_INPUT;

require_once("grn/smarty.csp");
$t = new GRN_Smarty;

$folder_id = null;

if (array_key_exists('hid', $G_INPUT) && strlen($G_INPUT['hid']) > 0
    && $G_INPUT['hid'] > 0
    && $G_INPUT['hid'] != GRN_CABINET_ROOT_FOLDER_ID
) {
    $folder_id = $G_INPUT['hid'];
}

// --- folder tree
if ( ! ($root_folder = $G_cabinet->getFolder($G_cabinet_login,
    GRN_CABINET_ROOT_FOLDER_ID))
) {
    cb_throw_error(E_GRN_CABINET_FOLDER_NOT_FOUND);
}

require_once('cabinet/notification.csp');
$notify_man = GRN_Cabinet_NotificationManager::getInstance();
$root_subcribled = $notify_man->isNotified($G_cabinet_login, $root_folder)
                   || $notify_man->isSubscribed($G_cabinet_login, $root_folder);

$tree_info = [
    'link_url'        => 'cabinet/index',
    'oid_key'         => 'hid',
    'root_subcribled' => $root_subcribled
];
$tree_selected_oid = $folder_id;
include('_folder_tree.csp');
$folder_id = $tree_selected_oid ? $tree_selected_oid
    : GRN_CABINET_ROOT_FOLDER_ID;
// --- end: folder tree

if ( ! ($folder = $G_cabinet->getFolder($G_cabinet_login, $folder_id))) {
    cb_throw_error(E_GRN_CABINET_FOLDER_NOT_FOUND);
}

$t->assign('folder_id', $folder_id);
$t->assign('garbage_page', 'cabinet/garbage');     // Huy added

require_once('cabinet/controller.csp');
$utility = new GRN_Cabinet_ControllerUtil();

// site position
$utility->setSitePosition($t, null);


require_once('cabinet/hierarchy.csp');
$hierarchy = GRN_Cabinet_Hierarchy::getInstance();
$hierarchy->setNotificationFolders(true); // 通知情報
$hierarchy->setSubscriptionFolders(true); // 購読情報
$hierarchy->setPrivileges(true);          // 特権情報取得

// フォルダツリーの表示データを生成
$folder_for_view = $hierarchy->buildUsingTree($G_cabinet_login, $folder, $tree);

$files_for_view = null;
$navi_for_view = null;

// get common ui configuration
if (is_null($limit = $G_cabinet_ui_config->getListMax())) {
    $limit = 20;
}

$sort = null;

require_once('cabinet/file_util.csp');

$offset = $utility->getListOffset();

//get cabinet display order
$order = $folder->getCabinetDisplayOrder();
$arg = $utility->getListOrderArg($order);
$order_column = $utility->getListOrderColumn(null, $arg);

$t->assign('sort', $order_column['param']);

$coll = new GRN_Cabinet_FileList($G_cabinet_login, $folder);
$coll->setOffset($offset);
$coll->setLimit($limit + 1);
$coll->setLock(CB_DATABASE_NO_LOCK);

$coll->addOrderColumn($order_column['column'], $order_column['order']);

$files_for_view = [];

$users_id = [];
$star_unique_ids = [];
while (($file = $coll->iterate())) {
    $files_for_view[$file->getOID()]
        = $utility->getFileListView($G_cabinet_login, $file);
    $users_id[] = $files_for_view[$file->getOID()]['modifier_uid'];
    if (isset($files_for_view[$file->getOID()]['locked_owner_uid'])) {
        $users_id[] = $files_for_view[$file->getOID()]['locked_owner_uid'];
    }
    $star_unique_ids[] = $file->getOID();
}

$isExistsNextPage = count($files_for_view) > $limit;
if ($isExistsNextPage) {
    array_pop($files_for_view);
}

global $G_container_base;
$uum = $G_container_base->getInstance('uum');
require_once("grn/controller.csp");
$users_info = GRN_ControllerUtil::getUserInfoToShowUserName($users_id,
    $G_cabinet_login);

// ファイル一覧のナビゲーション

$navi_for_view = $utility->makeSimpleNaviInformation($offset,
    $limit, count($files_for_view), $isExistsNextPage);
$navi_for_view['navi']['params'] = [
    'hid'  => $folder ? $folder->getOID() : 0,
    'sort' => $order_column['param']
];

//GRN35-512
$flag_update = $folder->access($G_cabinet_login, GRN_CABINET_ACCESS_W, false);
$t->assign('flag_update', $flag_update);
//GRN35-512

$t->assign('folder', $folder_for_view);
$t->assign('files', $files_for_view);
$t->assign('navi', $navi_for_view);
$t->assign('config', $utility->getConfigValues($G_cabinet_login));
$t->assign('users_info', $users_info);
$delete_info_multi = [
    'title'        => grn_get_page_display_name('cabinet/delete_multi'),
    'page'         => 'cabinet/delete_multi.tpl',
    'no_confirm'   => false,
    'data'         => [
        'delete_numbers' => true,
        'folder_id'      => $folder_id,
        'folder_name'    => $folder->get('name')
    ],
    'handler'      => [
        'btn_delete_multi1',
        'btn_delete_multi2'
    ],
    'multi_target' => 'eid[]',
    'form_target'  => 'cabinet/_file_list',
];
$t->assign('delete_info_multi', $delete_info_multi);
require_once('star/logic.csp');
$star_logic = GRN_Star_StarLogic::getInstance();
$use_star = $star_logic->isActive();
$t->assign('use_star', $use_star);
$user = $uum->getLoginUser();
$t->assign('star_infos',
    $star_logic->getStatusByIDs($user, 'grn.cabinet', $star_unique_ids));

//一括ダウンロードのためのエンコード情報
require_once('grn/download.csp');
$encodings = getEncodingAndLocaleList();
$t->assign('encodings', $encodings);

//一括ダウンロードでダウンロード可能な上限サイズ
$max_download_size = getMaxDownloadSize();
$t->assign('max_download_size', $max_download_size);

if (FtsApplication::isViewable()) {
    $t->assign('use_fts', true);
}

$t->display(cb_get_pagename() . ".tpl");
