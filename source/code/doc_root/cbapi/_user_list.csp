<?php

$gid = array_key_exists('gid', $G_INPUT) ? $G_INPUT['gid'] : null;
global $G_api_version;
if ($G_api_version < GRN_CBAPI_VERSION_1_02) {
    //  gid は省略できない。
    if (is_null($gid)) {
        require_once('cbapi/error_code.csp');
        grn_cbapi_throw_error(E_GRN_CBAPI_NO_PARAMETER);
    }

    //  停止ユーザーは取りださない。
    $sql_user_condition = 'tab_cb_user.col_valid IS NULL';
} else {
    //  停止ユーザーも取りだす
    $sql_user_condition = null;
}

$offset = array_key_exists('offset', $G_INPUT) ? $G_INPUT['offset'] : 1;
if (is_numeric($offset) === false || $offset < 1) {
    require_once('cbapi/error_code.csp');
    grn_cbapi_throw_error(E_GRN_CBAPI_INVALID_OFFSET);
}
$offset--;

$limit = array_key_exists('record_num', $G_INPUT) ? $G_INPUT['record_num']
    : null;
if ( ! is_null($limit) && (is_numeric($limit) === false || $limit < 0)) {
    require_once('cbapi/error_code.csp');
    grn_cbapi_throw_error(E_GRN_CBAPI_INVALID_LIMIT);
}
if (is_null($limit)) {
    $limit = -1;
}

$user_num = 0;
$count = 0;
if (strcmp($gid, 'root') !== 0) {
    global $G_container_base;
    $uum =& $G_container_base->getInstance('uum');

    // 組織に未所属のユーザーを取得
    if (strcmp($gid, '-1') === 0) {
        $users = $uum->getNoGroupUsers($offset, $limit, null,
            $sql_user_condition);
    } // 全ユーザーを取得
    elseif (strlen($gid) == 0) {
        $users = $uum->getUsers($offset, $limit, null, $sql_user_condition);
    } // 指定された組織のユーザーを取得
    else {
        $users = $uum->getGroupUsers($gid, $offset, $limit,
            'tab_cb_user.col_position, tab_cb_user._id',
            $sql_user_condition);
    }

    if ($users === false) {
        require_once('cbapi/error_code.csp');
        grn_cbapi_throw_error(E_GRN_CBAPI_NO_ORGANIZATION);
    }

    if (strcmp($gid, '-1') === 0) {
        $user_num = $uum->getNoGroupUserCount($sql_user_condition);
    } elseif (strlen($gid) == 0) {
        $user_num = $uum->getUserCount();
    } else {
        $user_num = $uum->getGroupUserCount($gid, $sql_user_condition);
    }

    $users_for_view = [];
    $order = $offset;
    foreach ($users as $uid => $user) {
        $order++;
        $users_for_view[$uid] = [
            'name'  => $user->get('display_name'),
            'kana'  => $user->get('sort_key'),
            'login' => $user->get('foreign_key'),
            'state' => is_null($user->get('valid')) ? 1 : 2,
            'order' => $order
        ];
    }

    $count = count($users_for_view);
}

$islast = $user_num - $offset - $count <= 0 ? 1 : 0;

$t->assign('islast', $islast);
$t->assign('count', $count);

if ($count > 0) {
    $t->assign('users', $users_for_view);
}


