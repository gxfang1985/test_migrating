<?php

$sig = array_key_exists('sig', $G_INPUT) ? $G_INPUT['sig'] : null;

if (is_null($sig)) {
    require_once('cbapi/error_code.csp');
    grn_cbapi_throw_error(E_GRN_CBAPI_NO_PARAMETER);
}

$decrypted_sig = grn_cbapi_decrypt(urldecode($sig));
$decrypted_sig_elements = explode(':', $decrypted_sig);
if (count($decrypted_sig_elements) != 3) {
    require_once('cbapi/error_code.csp');
    grn_cbapi_throw_error(E_GRN_CBAPI_FAILED_CLIENT_AUTHENTICATION);
}

$cli_expire = $decrypted_sig_elements[0];
$challenge = $decrypted_sig_elements[1];
$client_sig = $decrypted_sig_elements[2];

// auth key
$auth_key = '9Co4mb';

$result = grn_cbapi_client_auth($challenge, $cli_expire, $auth_key);
if ($result === false) {
    require_once('cbapi/error_code.csp');
    grn_cbapi_throw_error(E_GRN_CBAPI_FAILED_CLIENT_AUTHENTICATION);
}

$now = time();

// validate time
if (intval($cli_expire) < $now) {
    require_once('cbapi/error_code.csp');
    grn_cbapi_throw_error(E_GRN_CBAPI_FAILED_CLIENT_AUTHENTICATION);
}

// make the server auth data
$sig_for_view = urlencode(grn_cbapi_encrypt($cli_expire . ':' . $client_sig));

// get the product ID
require_once('grn/system_logic.csp');
$system = GRN_System::getInstance();
$product_id = $system->getProductId();

// make the auth cookie
$expire = $now + intval(GRN_CBAPI_COOKIE_LIFETIME);
$cookie = grn_cbapi_get_cookie($expire, $product_id, $auth_key);
grn_cbapi_set_cookie($cookie);

$t->assign('sig', $sig_for_view);


