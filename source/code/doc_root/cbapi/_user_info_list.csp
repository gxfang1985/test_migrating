<?php

/*
 *  APIバージョンチェック
 *  Relay Client が product_info でガルーンが返した API version を無視して
 *  未対応のAPIを投げてくるなら、はじく
 */
global $G_api_version;
if ($G_api_version < GRN_CBAPI_VERSION_1_02) {
    require_once('cbapi/error_code.csp');
    grn_cbapi_throw_error(E_GRN_CBAPI_INVALID_API_ID);
}

$uids = array_key_exists('userids', $G_INPUT) ? $G_INPUT['userids'] : null;
if (is_null($uids)) {
    require_once('cbapi/error_code.csp');
    grn_cbapi_throw_error(E_GRN_CBAPI_NO_PARAMETER);
}

// user list
global $G_container_base;
$uum =& $G_container_base->getInstance('uum');

$uids = array_map("trim", explode(',', $uids));

if (count($uids) > 0) {
    $columns = [
        'col_display_name',
        'col_foreign_key',
        'col_valid',
        'col_sort_key'
    ];
    $users = $uum->getUsersInfo($uids, $columns);
    $groups = $uum->getUsersGroupsInfo($uids);

    $users_for_view = [];
    $order = 1;
    foreach ($users as $uid => $user) {
        $users_for_view[$uid] = [
            'name'       => $user['col_display_name'],
            'kana'       => $user['col_sort_key'],
            'login'      => $user['col_foreign_key'],
            'state'      => is_null($user['col_valid']) ? 1 : 2,
            'order'      => $order++,
            'gid'        => '',
            'group_name' => ''
        ];
        if (count($groups[$uid]) > 1) {
            require_once('grn/org_util.csp');
            $primary_group = $uum->getUserPrimaryGroupInfo($uid);
            if ($primary_group === false) {
                $group = array_shift($groups[$uid]);
                while (count($group) == 0 && $groups[$uid] > 0) {
                    $group = array_shift($groups[$uid]);
                }

                if (count($group) != 0) {
                    $users_for_view[$uid]['gid'] = $group['_id'];
                    $users_for_view[$uid]['group_name'] = $group['col_name'];
                }
            } else {
                $users_for_view[$uid]['gid'] = $primary_group['_id'];
                $users_for_view[$uid]['group_name']
                    = $primary_group['col_name'];
            }
        } elseif (count($groups[$uid]) == 1) {
            $group = array_shift($groups[$uid]);
            if (count($group) != 0) {
                $users_for_view[$uid]['gid'] = $group['_id'];
                $users_for_view[$uid]['group_name'] = $group['col_name'];
            }
        } else {
            $users_for_view[$uid]['gid'] = -1;
            $users_for_view[$uid]['group_name'] = cb_msg('grn.system',
                'nogroup_users');
        }
    }
}

if (count($users_for_view) > 0) {
    $t->assign('users', $users_for_view);
}


