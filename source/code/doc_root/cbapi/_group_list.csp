<?php

$gid = array_key_exists('gid', $G_INPUT) ? $G_INPUT['gid'] : null;
if (is_null($gid)) {
    require_once('cbapi/error_code.csp');
    grn_cbapi_throw_error(E_GRN_CBAPI_NO_PARAMETER);
}

global $G_container_base;
$uum =& $G_container_base->getInstance('uum');

if (strcmp($gid, 'root') === 0) {
    $group_info = ['col_name' => ''];
    $groups = $uum->getRootGroups();
} elseif (strcmp($gid, '-1') === 0) {
    $group_info = ['col_name' => cb_msg('grn.system', 'nogroup_users')];
    $groups = [];
    $hierarchy_for_view = [
        'root' => [
            'name'  => '',
            'level' => 0
        ]
    ];
    $t->assign('hierarchy', $hierarchy_for_view);
} else {
    $group_info = $uum->getGroupInfo($gid);

    if ( ! $group_info) {
        require_once('cbapi/error_code.csp');
        grn_cbapi_throw_error(E_GRN_CBAPI_NO_ORGANIZATION);
    }

    $groups = $uum->getChildGroups($gid);

    // get the organization hierarchy
    require_once('grn/org_util.csp');
    $group_row =& grn_get_org_row($gid);
    if ( ! $group_row) {
        require_once('cbapi/error_code.csp');
        grn_cbapi_throw_error(E_GRN_CBAPI_NO_ORGANIZATION);
    }

    $hierarchy =& grn_get_org_ancestors($group_row);
    $level = 0;
    $hierarchy_for_view = [
        'root' => [
            'name'  => '',
            'level' => $level
        ]
    ];
    foreach ($hierarchy as $group) {
        $level++;
        $hierarchy_for_view[$group['oid']] = [
            'name'  => $group['name'],
            'level' => $level
        ];
    }

    $t->assign('hierarchy', $hierarchy_for_view);
}

if ($group_info === false || $groups === false) {
    require_once('cbapi/error_code.csp');
    grn_cbapi_throw_error(E_GRN_CBAPI_NO_ORGANIZATION);
}

$child_nums = $uum->getChildGroupsCountInfo();

$groups_for_view = [];
$order = 0;
$max_order = 0;
foreach ($groups as $id => $group) {
    $groups_for_view[$id]
        = [
        'name'     => $group->get('name'),
        'order'    => $order++,
        'children' => array_key_exists($id, $child_nums) ? $child_nums[$id] : 0
    ];
    $max_order = $max_order < $order ? $order : $max_order;
}
// get nogroup_users group
if (strcmp($gid, 'root') === 0) {
    $groups_for_view[-1]
        = [
        'name'     => cb_msg('grn.system', 'nogroup_users'),
        'order'    => $max_order + 1,
        'children' => 0
    ];
}

$count = count($groups_for_view);

$t->assign('group', [
    'id'    => $gid,
    'name'  => $group_info['col_name'],
    'count' => $count
]);

if ($count > 0) {
    $t->assign('groups', $groups_for_view);
}


