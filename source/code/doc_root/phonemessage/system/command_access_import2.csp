<?php

if (0 == strcasecmp(@ $_SERVER['REQUEST_METHOD'], 'POST')) {
    global $G_INPUT;

    if (array_key_exists('file_id', $G_INPUT)) {
        $file_id = $G_INPUT['file_id'];
    } else {
        cb_throw_error(E_GRN_CSV_FILE_NOT_FOUND);
    }

    require_once('fw/session_manager.csp');
    $session_manager = CB_SessionManager::getInstance();
    $session
        =& $session_manager->getSession('phonemessage/system/access_import1');
    $files = $session->getFiles('import_files');

    if ( ! is_array($files) || 0 == count($files)) {
        cb_throw_error(E_GRN_CSV_FILE_NOT_FOUND);
    }
    if ( ! array_key_exists($file_id, $files)) {
        cb_throw_error(E_GRN_CSV_FILE_NOT_FOUND);
    }

    if (array_key_exists('charset', $G_INPUT)) {
        $charset = $G_INPUT['charset'];
    }
    if (0 == strlen($charset)) {
        global $G_config_common;
        $charset = $G_config_common->get('I18N', 'default_external_encoding');
    }

    $skip = null;
    if (array_key_exists('skip', $G_INPUT)) {
        $skip = $G_INPUT['skip'] ? intval($G_INPUT['skip']) : 0;
    }

    require_once('phonemessage/access.csp');
    $access_manager = GRN_PhoneMessage_AccessManager::getInstance();

    global $G_container_base;
    $uum =& $G_container_base->getInstance('uum');
    $login = &$uum->getLoginUser();

    require_once('fw/csv.csp');
    $csv = new CB_CSVReader($charset, $files[$file_id]->getPath());

    // 監査する
    require_once('phonemessage/inspection.csp');
    $inspection = GRN_PhoneMessage_Inspection::getInstance();
    if ($inspection->isEnabled()) {
        $section = GRN_PHONEMESSAGE_INSPECTION_IMPORT;
        $message = GRN_PHONEMESSAGE_INSPECTION_ACCESS;

        $inspection->record($section, $message);
    }

    for ($i = 0; $i < $skip; ++$i) {
        $csv->readLine();
    }

    $csv_columns = [
        'object_type',
        'object_key',
        'target_type',
        'authorities',
        'target_key'
    ];
    $csv_columns_num = count($csv_columns);

    while (($line = $csv->readLine()) !== false) {
        if ($csv_columns_num > count($line)) {
            cb_throw_error(E_GRN_PHONEMESSAGE_CSV_INVALID_COLUMNS);
        }

        $object = null;
        $target = null;

        $object_type = $line[0];
        $object_id = $line[1];
        $object_row = null;
        switch ($object_type) {
            case 'user':
                $object_row =& $uum->getUserByForeignKey($object_id);
                break;
            case 'group':
                $object_row =& $uum->getGroupByForeignKey($object_id);
                break;
            case 'role':
                $object_row =& $uum->getStaticRoleByForeignKey($object_id);
                break;
            default:
                cb_throw_error(E_GRN_PHONEMESSAGE_CSV_INVALID_OBJECT_TYPE, null,
                    ['object_type' => $object_type]);
                break;
        }

        if ( ! is_object($object_row)
             || ( ! is_a($object_row, 'CB_User')
                  &&
                  ! is_a($object_row, 'CB_Group')
                  &&
                  ! is_a($object_row, 'CB_Role'))
        ) {
            cb_throw_error(E_GRN_PHONEMESSAGE_CSV_INVALID_OBJECT, null,
                ['object_id' => $object_id]);
        }

        require_once('phonemessage/access.csp');
        $access_manager = GRN_Phonemessage_AccessManager::getInstance();
        if ( ! ($object =& $access_manager->getObject($object_row))) {
            $object =& $access_manager->addObject($object_row);
        }

        $target_type = $line[2];
        $target_id = $line[4];
        switch ($target_type) {
            case 'security_model':
                $target = 'security_model';
                $security_model = $line[3];
                break;
            case 'user':
                $target = &$uum->getUserByForeignKey($target_id);
                break;
            case 'static_role':
                $target = &$uum->getStaticRoleByForeignKey($target_id);
                break;
            case 'dynamic_role':
                $target = $target_id;
                break;
            case 'group':
                $target = &$uum->getGroupByForeignKey($target_id);
                break;
            default:
                cb_throw_error(E_GRN_PHONEMESSAGE_CSV_INVALID_TARGET_TYPE, null,
                    ['target_type' => $target_type]);
                break;
        }

        if ('security_model' != $target_type
            && $csv_columns_num > count($line)
        ) {
            cb_throw_error(E_GRN_PHONEMESSAGE_CSV_INVALID_COLUMNS);
        }

        if (is_object($target)) {
            $target_id = $target->getOID();
        } else {
            if (0 == strlen($target)) {
                cb_throw_error(E_GRN_PHONEMESSAGE_CSV_INVALID_TARGET, null,
                    ['target_id' => $target_id]);
            }
            $target_id = $target;
        }

        if ('security_model' == $target_type) {
            if ('revoke' == $security_model) {
                $security_model = GRN_PHONEMESSAGE_SECURITYMODEL_REVOKE;
            } elseif ('grant' == $security_model) {
                $security_model = GRN_PHONEMESSAGE_SECURITYMODEL_GRANT;
            } else {
                cb_throw_error(E_GRN_PHONEMESSAGE_ACCESS_INVALID_SECURITYMODEL);
            }
            $access_manager->setSecurityModel($object, $security_model);
            continue;
        }

        $value = $line[3];
        if ($value !== '' && preg_match('/[^BA]/i', $value)) {
            cb_throw_error(E_GRN_PHONEMESSAGE_CSV_INVALID_AUTHORITIES, null,
                ['value' => $value]);
        }

        $sum = 0;
        $authorities = ['browse' => 0, 'add' => 0];
        if (GRN_PHONEMESSAGE_SECURITYMODEL_REVOKE
            == $access_manager->getSecurityModel($object)
        ) {
            if (0 === preg_match('/B/i', $value)) {
                $authorities['browse'] = 1;
            }
            if (0 === preg_match('/A/i', $value)) {
                $authorities['add'] = 1;
            }

            /*
            if( $authorities['browse'] == 1 && $authorities['add'] == 0 )
            {
                cb_throw_error( E_GRN_PHONEMESSAGE_CSV_INVALID_ACCESS );
            }
            */

            foreach ($authorities as $key => $value) {
                $sum += $value;
            }
        } else {
            if (0 !== preg_match('/B/i', $value)) {
                $authorities['browse'] = 1;
            }
            if (0 !== preg_match('/A/i', $value)) {
                $authorities['add'] = 1;
            }

            /*
            if( $authorities['browse'] == 0 && $authorities['add'] == 1 )
            {
                cb_throw_error( E_GRN_PHONEMESSAGE_CSV_INVALID_ACCESS );
            }
            */

            foreach ($authorities as $key => $value) {
                $sum += $value;
            }
        }

        if (0 < $sum) {
            if ($access =& $access_manager->getAccess($object, $target)) {
                foreach ($authorities as $key => $value) {
                    $access->set('authority_' . $key, $value);
                }

                // 監査する
                require_once('phonemessage/inspection.csp');
                $inspection = GRN_PhoneMessage_Inspection::getInstance();
                if ($inspection->isEnabled()) {
                    $row =& $object->get('object');
                    $object_name = substr(strtolower(get_class($row)), 3);
                    $target_name = $access_manager->getTargetName($target);
                    $target_id = $access_manager->getTargetId($target);

                    $section = GRN_PHONEMESSAGE_INSPECTION_CONFIG;
                    $message
                        = GRN_PHONEMESSAGE_INSPECTION_MODIFY;
                    $message .= GRN_PHONEMESSAGE_INSPECTION_DELIMITER;
                    $message .= GRN_PHONEMESSAGE_INSPECTION_ACCESS;
                    $params = [];
                    $informations = [];
                    $informations['object'] = $object_name . '/'
                                              . $object->getOID();
                    $informations['access'] = $target_name . '/' . $target_id;
                    $keys = [];
                    foreach ($authorities as $key => $value) {
                        if ($value) {
                            $keys[] = $key;
                        }
                    }
                    $informations['authorities'] = implode('/', $keys);

                    $inspection->record($section, $message, $params,
                        $informations);
                }
            } else {
                $access_manager->addAccess($object, $target, $authorities);
            }
        } else {
            $access_manager->removeAccess($object, $target);
        }
    }
    $csv->close();

    foreach (array_keys($files) as $id) {
        $session->unsetFile('import_files', $id);
    }

    cb_redirect('system/application_list', ['app_id' => 'phonemessage']);

}


