<?php

//-- instantiate Smarty object
require_once("grn/smarty.csp");
$t = new GRN_Smarty;

//-- get parameters from URL parameters
$tid = @ $G_INPUT['tid'];
$rid = @ $G_INPUT['rid'];
$oid = @ $G_INPUT['oid'];
$uid = @ $G_INPUT['uid'];

// 電話メモを取得する
//tv
/*require_once( 'phonemessage/application.csp' );
$app_locator = GRN_ApplicationLocator::instance();
$app = $app_locator->getInstance( GRN_PHONEMESSAGE_APPLICATION_ID );
if( ! is_object( $app ) || ! is_a( $app, 'GRN_PhoneMessage_Application' ) )
{
    cb_throw_error( E_GRN_APPLICATION_NOT_AVAILABLE );
}*/

// アクセスを制御する対象を取得する
global $G_container_base;
$uum = $G_container_base->getInstance('uum');
if (0 < strlen($rid)) {
    $row = $uum->getStaticRole($rid);
    $class_name = 'CB_Role';
} elseif (0 < strlen($uid)) {
    $row = $uum->getUser($uid);
    $class_name = 'CB_User';
} elseif (0 < strlen($oid)) {
    $row = $uum->getGroup($oid);
    $class_name = 'CB_Group';
} else {
    cb_throw_error(E_GRN_PHONEMESSAGE_INVALID_TARGET);
}

if ( ! is_object($row) || ! is_a($row, $class_name)) {
    cb_throw_error(E_GRN_PHONEMESSAGE_INVALID_TARGET);
}


$session_name = 'phonemessage.system.access_add';
$ous_params = [
    'tid' => $tid,
    'rid' => $rid,
    'oid' => $oid,
    'uid' => $uid
];
$can_select_role = true;
$search_login_name = true;
require_once('org_user_role_select.csp');
$t->assign('ous_params', $ous_params);

$t->assign('listbox_size', $navigation_info['navi']['number_on_page'] + 1);

// tree link page
$t->assign('link_page', cb_get_pagename());

//-- page title
$page_title = grn_get_current_page_display_name();
$t->assign('page_title', $page_title);

//-- site position
require_once('phonemessage/controller.csp');
$controller_util = new GRN_PhoneMessage_ControllerUtil();
$page_info = [
    'access_index' => ['sf' => 1, 'tid' => $tid, 'oid' => $oid],
    'access_list'  => [
        'sf'    => 1,
        'tid'   => $tid,
        'rid'   => $rid,
        'oid'   => $oid,
        'uid'   => $uid,
        'reset' => 1
    ],
    'access_add'   => null
];
$site_position = $controller_util->makeSitePosition('phonemessage/system/',
    $page_info);
$t->assign('site_position', $site_position);

// （ビューで表示するための）権限情報一覧を取得する
$authority_types = [
    'browse' => cb_msg(GRN_PHONEMESSAGE_MODULE_ID, 'access_browse'),
    'add'    => cb_msg(GRN_PHONEMESSAGE_MODULE_ID, 'access_add')
];
$t->assign('authority_types', $authority_types);
$t->assign('authority_count', count($authority_types));
$t->assign('auth_disable_change_on_off', true);

//Get Security Model
require_once('phonemessage/access.csp');
$access_manager = GRN_PhoneMessage_AccessManager::getInstance();
$object = $access_manager->getObject($row);
$security_model = $access_manager->getSecurityModel($object);
$t->assign('is_grant', $security_model == 'grant');

// （GRANTの）権限一覧を取得する
require_once('fw/session_manager.csp');
$session_manager = CB_SessionManager::getInstance();
$session
    = $session_manager->getSession('phonemessage.system.access_list');
$authorities = $session->get('authorities');
if (@ $G_INPUT['reset'] || ! is_array($authorities)) {
    if (GRN_PHONEMESSAGE_SECURITYMODEL_REVOKE == $security_model) {
        $authorities = ['browse' => 0, 'add' => 0];
    } else {
        $authorities = ['browse' => 1, 'add' => 1];
    }
    $session->set('authorities', $authorities);
}
$t->assign('authorities', $authorities);

// exec smarty
$t->display(cb_get_pagename() . '.tpl');

