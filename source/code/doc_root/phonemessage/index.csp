<?php

require_once('grn/application.csp');

use grn\grn\access\service\AppAccess;

global $G_INPUT;

require_once('grn/smarty.csp');
$t = new GRN_Smarty;

////////////////////////////////////////////////////////////////
require_once('phonemessage/application.csp');
// 電話メモを取得する
$app_locator = GRN_ApplicationLocator::instance();
/** @var GRN_PhoneMessage_Application $app */
$app = $app_locator->getInstance(GRN_PHONEMESSAGE_APPLICATION_ID);
if ( ! is_object($app) || ! is_a($app, 'GRN_PhoneMessage_Application')) {
    cb_throw_error(E_GRN_APPLICATION_NOT_AVAILABLE);
}
$application_id = $app->getApplicationId();
$application_name = $app->getName();

// GET/POSTされたパラメータを取得する
$gid = null;
if (array_key_exists('gid', $G_INPUT)) {
    $gid = $G_INPUT['gid'];
}

// ログインユーザーを取得する
global $G_container_base;
/** @var GRN_Uum $uum */
$uum = $G_container_base->getInstance('uum');
$login = $uum->getLoginUser();
if ( ! is_object($login) || ! is_a($login, 'CB_User')) {
    cb_throw_error(E_GRN_USER_NOT_FOUND);
}
$login_for_view = $uum->getLoginUserInfo();
$login_id = $login->getOID();

// 電話メモの設定を取得する
require_once('grn/ui.csp');
$ui_config_manager = GRN_UIConfigManager::getInstance();
$ui_config = $ui_config_manager->getUserConfig($login);
require_once('phonemessage/config.csp');
$config_manager = GRN_PhoneMessage_ConfigManager::getInstance();
$system_config = $config_manager->getSystemConfig();

$selected_item_list = false;

// 組織IDを取得する
if ('selected' == $gid) {
    // Sessionから選択ユーザーを取得する
    require_once('fw/session_manager.csp');
    $session_manager = CB_SessionManager::getInstance();
    $session
        =& $session_manager->getSession('grn.common_multiple_user_select');
    if ($session) {
        $selected_item_list = $session->get($application_id);
    }

    // Sessionが取得できなければデフォルト
    if ( ! $selected_item_list) {
        // 優先する組織から取得する
        $group_info = $uum->getUserPrimaryGroupInfo($login_id);
        $group_id = ($group_info === false) ? -1 : $group_info['_id'];
        $gid = $group_id;
    } else {
        $group_id = 'selected';
    }
} elseif (0 == strlen($gid)) {
    // 優先する組織から取得する
    $group_info = $uum->getUserPrimaryGroupInfo($login_id);
    $group_id = ($group_info === false) ? -1 : $group_info['_id'];
    $gid = $group_id;
} elseif ('m' == $gid{0}) {
    // Myグループから取得する
    $group_id = substr($gid, 1);
    $groups_info = $uum->getMyGroupsInfo($login_id);
    if ( ! array_key_exists($group_id, $groups_info)) {
        cb_throw_error(E_GRN_MYGROUP_NOT_FOUND);
    }
} elseif (0 >= $gid) {
    // 全体を取得する
    $group_id = -1;
    $gid = -1;
} else {
    // 組織から取得する
    $group_id = $gid;
    $groups_info = $uum->getGroupInfoList();
    if ( ! array_key_exists($group_id, $groups_info)) {
        cb_throw_error(E_GRN_GROUP_NOT_FOUND);
    }
}

$usergroups_info = $uum->getUserGroupsInfo($login_id);

// ダイナミックロールを取得する
$dynamic_roles = $uum->listGrantedRoles();

// ユーザー一覧を取得する
require_once('phonemessage/controller.csp');
$controller_util = new GRN_PhoneMessage_ControllerUtil();
$offset = $controller_util->getNaviStartPosition();
$controller_util->setNaviStartPosition($offset);
$limit = $ui_config->getListMax();


//for escape!
$app_locator = GRN_ApplicationLocator::instance();
$dbconn = $app_locator->getConnection('phonemessage');

// 対象：複数ユーザー選択
if (is_array($selected_item_list)) {
    // 選択したユーザーを取得する
    $user_ids_selected = [];
    foreach ($selected_item_list as $selected_item) {
        if (is_array($selected_item)
            && array_key_exists('type', $selected_item) === true
        ) {
            if ($selected_item['type'] != 'user') {
                continue;
            }

            $user_ids_selected[$selected_item['value']]
                = $selected_item['value'];
        }
    }

    $order_by = 'ORDER BY col_position, _id';
    $start_position = $offset;
    $add_condition = null;
    // 次ページが存在するかどうかを判定させるために、表示設定より1件多い件数を取得する
    $user_ids_selected
        = AppAccess::filterUserIdsInternalAccessByAppId($user_ids_selected,
        GRN_PHONEMESSAGE_APPLICATION_ID);
    $users_for_view = $uum->getUsersInfo($user_ids_selected, null,
        $start_position, $limit + 1, $order_by, $add_condition);
} // 対象：全ユーザー
elseif (-1 == $group_id) {
    $order_by = 'ORDER BY col_position, _id';
    $start_position = $offset;
    $add_condition = null;
    if (0 < $offset) {
        // ログインユーザーを除外する
        $add_condition = '( _id <> \'' . $dbconn->escape($login_id) . '\' )';
        $start_position--;
    }
    // 次ページが存在するかどうかを判定させるために、表示設定より1件多い件数を取得する
    $user_ids_selected = $uum->getUsersId(null);
    $user_ids_selected
        = AppAccess::filterUserIdsInternalAccessByAppId($user_ids_selected,
        GRN_PHONEMESSAGE_APPLICATION_ID);
    $users_for_view = $uum->getUsersInfo($user_ids_selected, null,
        $start_position, $limit + 1, $order_by, $add_condition);

    // 最初のページは必ずログインユーザーが先頭に表示されるようにする
    if (0 == $offset) {
        // ログインユーザーが先頭になるように並び替える
        unset($users_for_view[$login_id]);
        $tmp = [$login_id => $login_for_view];
        foreach ($users_for_view as $user_id => $user_for_view) {
            $tmp[$user_id] = $user_for_view;
        }
        $users_for_view = $tmp;
    }
} // 対象：Myグループ
elseif ('m' == $gid{0}) {
    // 全件取得する
    //GTM-529 tv
    $users_for_view = $uum->getMyGroupUsersInfo($group_id, null, 0, -1, null,
        null, GRN_PHONEMESSAGE_APPLICATION_ID);
    // ログインユーザーが先頭になるように並び替える
    $tmp = [];
    if (array_key_exists($login_id, $users_for_view)) {
        unset($users_for_view[$login_id]);
        $tmp = [$login_id => $login_for_view];
    }

    foreach ($users_for_view as $user_id => $user_for_view) {
        $tmp[$user_id] = $user_for_view;
    }

    $users_for_view = [];
    $uid_list = array_keys($tmp);

    // 次ページが存在するかどうかを判定させるために、表示設定より1件多い件数を取得する
    $j = $offset + $limit + 1;
    if ($j > count($tmp)) {
        $j = count($tmp);
    }

    for ($i = $offset; $i < $j; $i++) {
        $user_id = $uid_list[$i];
        $users_for_view[$user_id] = $tmp[$user_id];
    }

} // 対象：全ユーザー、Myグループ以外
else {
    // 次ページが存在するかどうかを判定させるために、表示設定より1件多い件数を取得する
    //GTM-529 tv
    $users_for_view = $uum->getGroupUsersInfo($group_id, 0, -1, null, null,
        GRN_PHONEMESSAGE_APPLICATION_ID);
    $tmp = [];
    if (array_key_exists($login_id, $users_for_view)) {
        unset($users_for_view[$login_id]);
        $tmp = [$login_id => $login_for_view];
    }

    foreach ($users_for_view as $user_id => $user_for_view) {
        $tmp[$user_id] = $user_for_view;
    }

    $users_for_view = [];
    $uid_list = array_keys($tmp);

    // 次ページが存在するかどうかを判定させるために、表示設定より1件多い件数を取得する
    $j = $offset + $limit + 1;
    if ($j > count($tmp)) {
        $j = count($tmp);
    }

    for ($i = $offset; $i < $j; $i++) {
        $user_id = $uid_list[$i];
        $users_for_view[$user_id] = $tmp[$user_id];
    }
}

// 次ページか存在するかどうか
$isExistsNextPage = false;
if ($limit < count($users_for_view)) {
    $isExistsNextPage = true;
    // 表示設定の件数になるように末尾から削除する
    while ($limit < count($users_for_view)) {
        array_pop($users_for_view);
    }
}

// ユーザー一覧のアクセス権を評価する
require_once('phonemessage/access.csp');
$access_manager = GRN_PhoneMessage_AccessManager::getInstance();
$users_info = $access_manager->listObjectsInfo(array_keys($users_for_view),
    'user');
$authorities = ['browse', 'add'];
if (0 < count($users_info['by_object_id'])) {
    $users_info['accesses']
        = $access_manager->evaluateAccessesFast($users_info['by_object_id'],
        'user', $login_id, $dynamic_roles, $authorities);
} else {
    $users_info['accesses'] = [];
}

// 組織一覧を取得する
$groups_info = $uum->getGroupInfoList();

// 組織一覧のアクセス権を評価する
$groups_info = $access_manager->listObjectsInfo(array_keys($groups_info),
    'group');
if (0 < count($groups_info['by_object_id'])) {
    $groups_info['accesses']
        = $access_manager->evaluateAccessesFast($groups_info['by_object_id'],
        'group', $login_id, $dynamic_roles, $authorities);
} else {
    $groups_info['accesses'] = [];
}

// スタティックロール一覧を取得する
$roles_info = $uum->listStaticRolesInfo();

// スタティックロール一覧のアクセス権を評価する
$roles_info = $access_manager->listObjectsInfo(array_keys($roles_info), 'role');
if (0 < count($roles_info['by_object_id'])) {
    $roles_info['accesses']
        = $access_manager->evaluateAccessesFast($roles_info['by_object_id'],
        'role', $login_id, $dynamic_roles, $authorities);
} else {
    $roles_info['accesses'] = [];
}

// 組織、スタティックロールを考慮し、ユーザーのアクセス権を再評価する
$accesses_for_view
    = $controller_util->evaluateAccessesFast(array_keys($users_for_view),
    $users_info, $groups_info, $roles_info);
// 自分自身のアクセス権は無視する
if (array_key_exists($login_id, $accesses_for_view)) {
    $accesses_for_view[$login_id] = [];
}

//get presence info
require_once('presence/logic.csp');
$presence_logic = GRN_Presence_Logic::getInstance();
foreach (array_keys($accesses_for_view) as $uid) {
    $accesses_for_view[$uid]['presence'] = $presence_logic->getPresence($uid);
}
$t->assign('active_presence', $presence_logic->isActivePresence());
//save gid input parameter to session
$params = ['gid' => $gid];
//save current page
$presence_logic->setPreviousPage('phonemessage/index', $params);

// yonekawa add grn_user_name修正
$users_id = array_keys($accesses_for_view);
require_once("grn/controller.csp");
$users_info = GRN_ControllerUtil::getUserInfoToShowUserName($users_id, $login);

// User icon setting
$imageIcon = GRN_ControllerUtil::getUserIconFormat($login);
$t->assign('imageIcon', $imageIcon);

// for user image icon
if ($imageIcon) {
    $users_info = GRN_ControllerUtil::addPhotoUrlForUsersInfo($users_info,
        GRN_ControllerUtil::getUserProfilePhotoSmallSize());
    $t->assign('iconSize', GRN_ControllerUtil::ICON_SIZE_SMALL);
}

$t->assign('users_info', $users_info);

// n件ナビゲーション情報を生成する
$view_set = $controller_util->makeSimpleNaviInformation($offset, $limit,
    count($users_for_view), $isExistsNextPage, $params);

// ユーザー情報一覧を取得する
$controller_util->listUsersFast($users_for_view);

// シングルサインオン一覧を取得する
require_once('grn/sso.csp');
$sso_service = GRN_SSO_Service::getInstance();
$sso_list = $sso_service->getSSOMethodList('phonemessage');

// ユーザー名に割り当てたシングルサインオンを取得する
$sso_id = $system_config->getSSO();
if ( ! array_key_exists($sso_id, $sso_list)) {
    $sso_id = GRN_PHONEMESSAGE_SSO_DEFAULT;
}

//--- k.niizeki add

require_once('phonemessage/config.csp');

// 表示されているユーザー毎のフラグ情報を取得
$email_flags = [];

$users = [];
if ($users_for_view) {
    $uids = implode(',', array_keys($users_for_view));
    $add_condition = "_id IN({$uids})";
    $users = $uum->getUsers(0, count($users_for_view),
        'col_position,_id', $add_condition);
}

foreach (array_keys($users) as $user_id) {
    $user =& $users[$user_id];
    $config_manager = GRN_PhoneMessage_ConfigManager::getInstance();
    $config = $config_manager->getPersonalConfig($user);
    $email_flags[$user_id] = $config->getForwardEmailFlag();
}

foreach (array_keys($users_for_view) as $k) {
    $users_for_view[$k]['email_flags'] = $email_flags[$k];
}

//--- k.niizeki add end

require_once('grn/application.csp');
$locator = GRN_ApplicationLocator::instance();
if (AppAccess::isAppAvailable('schedule')) {
    include('_get_schedules.csp');
    $schedule_available = true;
    $t->assign('users_event', $users_event);
} else {
    $schedule_available = false;
}
$t->assign('schedule_available', $schedule_available);
$t->assign('login_id', $login_id);
$t->assign('selected_id', $gid);
$t->assign('app_id', $application_id);
$t->assign('application_name', $application_name);
$t->assign('group_id', $gid);
$t->assign('users', $users_for_view);
$t->assign('accesses', $accesses_for_view);
$t->assign('view_set', $view_set);
$t->assign('sso', $sso_id);

$plugin_session_name = cb_get_pagename();
$plugin_data_name = 'access_plugin';
$access_plugin = [
    'name'   => 'common',
    'params' => [
        'action'       => null,
        'session_name' => cb_get_pagename(),
        'app_id'       => 'phonemessage'
    ]
];

require_once('fw/session_manager.csp');
$sm = CB_SessionManager::getInstance();
$session = $sm->getSession($plugin_session_name);
$session->set($plugin_data_name, $access_plugin);
$t->assign('access_plugin', $access_plugin);
$t->assign('plugin_session_name', $plugin_session_name);
$t->assign('plugin_data_name', $plugin_data_name);

////////////////////////////////////////////////////////////////

// Smartyにページタイトルを割り当てる
$page_title = grn_get_page_display_name('phonemessage/index');
$t->assign('page_title', $page_title);

// Smartyにサイトポジションを割り当てる
$page_info = ['index' => null];
$site_position = $controller_util->makeSitePosition('phonemessage/',
    $page_info);
$t->assign('site_position', $site_position);

// Smartyを実行する
$t->display(cb_get_pagename() . '.tpl');


