<?php

require_once('portal/error_code.csp');
if ( ! isset($portlet)) {
    cb_throw_error(E_GRN_PRTL_PORTLET_INVALID_ACCESS);
}

global $G_INPUT;

require_once('grn/smarty.csp');
$t = new GRN_Smarty;

////////////////////////////////////////////////////////////////

// 電話メモを取得する
require_once('phonemessage/application.csp');
$app_locator = GRN_ApplicationLocator::instance();
/** @var GRN_PhoneMessage_Application $app */
$app =& $app_locator->getInstance(GRN_PHONEMESSAGE_APPLICATION_ID);
if ( ! is_object($app) || ! is_a($app, 'GRN_PhoneMessage_Application')) {
    cb_throw_error(E_GRN_APPLICATION_NOT_AVAILABLE);
}

// ログインユーザーを取得する
global $G_container_base;
$uum =& $G_container_base->getInstance('uum');
$login =& $uum->getLoginUser();
if ( ! is_object($login) || ! is_a($login, 'CB_User')) {
    cb_throw_error(E_GRN_USER_NOT_FOUND);
}
$login_id = $login->getOID();

// セッションからパラメータを取得する
// ss はフォルダ選択時のポストから戻った場合のフラグ
if (array_key_exists('ss', $G_INPUT)) {
    require_once('fw/session_manager.csp');
    $session_manager = CB_SessionManager::getInstance();
    $session
        =& $session_manager->getSession('phonemessage/portlet/set_view');

    $portlet = $session->get('portlet');
}

$gid = @ $portlet['settings']['gid'];

// 優先する組織を取得する
$primary_group = $uum->getUserPrimaryGroup($login_id);

// 組織IDを取得する
if ('m' == $gid{0}) {
    // Myグループから取得する
    $group = &$uum->getMyGroup(substr($gid, 1));
    if ( ! is_object($group) || ! is_a($group, 'GRN_MyGroup')) {
        $gid = null;
    }
} elseif (0 < strlen($gid)) {
    if (0 < $gid) {
        // 所属する組織から取得する
        $group = &$uum->getGroup($gid);
        if ( ! is_object($group) || ! is_a($group, 'CB_Group')) {
            $gid = null;
        }
    } else {
        // 全体を取得する
        $gid = -1;
    }
}

// 優先する組織を選択項目にするか
if ('set-personal' != $display) {
    $with_primary_group = true;
} elseif ($primary_group === false) {
    $with_primary_group = false;
} else {
    $with_primary_group = true;
}

$t->assign('with_primary_group', $with_primary_group);

$portlet['settings']['gid'] = $gid;

$page_name = 'phonemessage/portlet/set_view';
include('../../grn/org_select.csp');

// フォルダ選択時のポストからリダイレクトされる場合以外はセッションに保存
if ( ! array_key_exists('ss', $G_INPUT)) {
    require_once('fw/session_manager.csp');
    $session_manager = CB_SessionManager::getInstance();
    $session
        =& $session_manager->getSession('phonemessage/portlet/set_view');

    $session->set('portlet', $portlet);
}

$rest_params = [];
$rest_params['pid'] = @ $portlet['pid'];
$rest_params['plid'] = @ $portlet['plid'];
$rest_params['ppid'] = @ $portlet['ppid'];

////////////////////////////////////////////////////////////////

$font_options = [
    [
        'value' => 'small',
        'label' => cb_msg('grn.phonemessage', 'font_size_small')
    ],
    [
        'value' => 'normal',
        'label' => cb_msg('grn.phonemessage', 'font_size_normal')
    ],
    [
        'value' => 'large',
        'label' => cb_msg('grn.phonemessage', 'font_size_large')
    ],
];
$font_size = @$portlet['settings']['font_size'];
switch ($font_size) {
    case 'small':
        $font_options[0]['selected'] = true;
        break;
    case 'normal':
        $font_options[1]['selected'] = true;
        break;
    case 'large':
        $font_options[2]['selected'] = true;
        break;
    default:
        $font_options[1]['selected'] = true;
        break;
}
$t->assign('font_options', $font_options);

$t->assign('portlet', $portlet);
$t->assign('display', $display);

// Ignore Licence Warnning
$t->skipWarning();

$t->display('phonemessage/portlet/set_view.tpl');


