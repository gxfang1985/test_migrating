<?php

if (0 == strcasecmp(@ $_SERVER['REQUEST_METHOD'], 'POST')) {
    global $G_INPUT;

    require_once('_command_send_initialize.csp');

    //Instantiate Smarty Object
    require_once("grn/smarty.csp");
    $t = new GRN_Smarty;

    //Get Session Key
    require_once('report/controller_util.csp');
    require_once('grn/controller.csp');
    $tmp_key = grn_get_temporary_key();

    //Validation Check
    require_once('SmartyValidate.class.php');
    SmartyValidate::connect($t);
    $target_name = 'report/send_form';
    $session_target = $target_name . $tmp_key;
    SmartyValidate::register_form($session_target);

    //Skip form validation if no required item exists
    $skip_validation_flag = false;
    if (array_key_exists('SmartyValidate', $_SESSION)
        && array_key_exists($session_target, $_SESSION['SmartyValidate'])
        && array_key_exists('validators',
            $_SESSION['SmartyValidate'][$session_target])
        && ! count($_SESSION['SmartyValidate'][$session_target]['validators'])
    ) {
        $skip_validation_flag = true;
    }

    //Get Parameter
    $category_id = @ $G_INPUT['cid'];    //Category ID
    $form_id = @ $G_INPUT['fid'];    //Form ID
    $command = @ $G_INPUT['cmd'];    //Command
    $event_id = @ $G_INPUT['eid'];    //Event ID
    $str_date = @ $G_INPUT['date'];   //Date
    $members = @ $G_INPUT['member_sUID'];
    $notification = @ $G_INPUT['notification_sUID'];
    $partner_values = @ $G_INPUT['partner_sUID'];
    $private = @ $G_INPUT['private'];
    $operator_set = array_key_exists('operator-set', $G_INPUT)
                    && $G_INPUT['operator-set'] ? 1 : 0;
    $operators = [];
    if ($operator_set && is_array(@ $G_INPUT['sUID_o'])) {
        $operators = @ $G_INPUT['sUID_o'];
    }

    $date = new CB_Date();
    if ( ! $date->parse($str_date)) {
        $date = false;
    }

    if ( ! is_array($members)) {
        $members = [];
    }
    if ( ! is_array($notification)) {
        $notification = [];
    }

    //Explode Member IDs
    foreach ($members as $key => $value) {
        $uid_group = explode(':', $value);
        $members[$key] = $uid_group[0];
    }

    //Explode Notification IDs
    foreach ($notification as $key => $value) {
        $uid_group = explode(':', $value);
        $notification[$key] = $uid_group[0];
    }
    foreach ($notification as $nkey => $nid) {
        if ($nid == $G_report_login_user->getOID()) {
            unset($notification[$nkey]);
        }
        foreach ($members as $mkey => $mid) {
            if ($nid == $mid) {
                unset($notification[$nkey]);
            }
        }
    }

    //Explode Operator IDs
    foreach ($operators as $key => $value) {
        $uid_group = explode(':', $value);
        $operators[$key] = $uid_group[0];
    }

    //頻度更新
    require_once('grn/uum_util.csp');
    $uum_util = GRN_UumUtil::getInstance();
    if (count($members) > 0) {
        $uum_util->selectUsers($G_report_login_user, $members);
    }
    if (count($notification) > 0) {
        $uum_util->selectUsers($G_report_login_user, $notification);
    }

    //Get Session
    require_once('fw/session_manager.csp');
    $session_manager = CB_SessionManager::getInstance();
    $session = $session_manager->getSession($session_target);

    //Update Form and Item List
    $send_form_data_list = [];
    require_once('report/item_resources.csp');
    $form =& $session->get('form');
    $item_list =& $session->get('item_list');

    // Check Category Access Right
    if (GRN_REPORT_CATEGORY_NONPARTY_ID != $category_id) {
        require_once('report/controller_util.csp');
        $category_util = GRN_Report_Category_Controller_Utility::getInstance();
        $category_util->checkAccess($category_id, true, CB_DATABASE_NO_LOCK);
    }

    foreach (array_keys($item_list) as $item_id) {
        $item_util
            = grn_report_get_item_util($item_list[$item_id]['data_type']);
        if ($item_util) {
            //Parse Item Data
            $parsed_input_data = $item_util->parseItemData($G_INPUT,
                'item', $item_list[$item_id]);
            $send_form_data_list[$item_id] = $parsed_input_data;

            if ($item_list[$item_id]['type'] == 1) {
                $itemdata_util
                    = GRN_Report_ItemData_Controller_Utility::getInstance();
                $form['subject']
                    = $itemdata_util->parse_title($parsed_input_data);
            }
        }
    }

    //Set Session
    $report_properties =& $session->get('properties');
    $session->set('form', $form);
    $session->set('item_list', $item_list);
    $session->set('send_form_data_list', $send_form_data_list);
    $session->set('properties', $report_properties);
    $session->set('members', $members);
    $session->set('notification', $notification);
    $session->set('partner_values', $partner_values);
    $session->set('operators', $operators);
    $session->set('operator_set', $operator_set);
    $session->set('private', $private);

    //Check Command Parameter
    if ($command == 'save') {
        require_once('command_send_draft.csp');
    }

    if ($form['enable_member'] && ( ! $members || count($members) == 0)) {
        require_once('report/error_code.csp');
        cb_throw_error(E_GRN_RPRT_REPORT_NOT_MEMBER);
    }

    //Validate After POST
    if ($skip_validation_flag
        || SmartyValidate::is_valid($G_INPUT, $session_target)
    ) {

        //Redirect Next Page
        if (is_numeric($event_id) && $event_id > 0) {
            cb_redirect('report/send_confirm', [
                'cid'     => $category_id,
                'fid'     => $form_id,
                'eid'     => $event_id,
                'date'    => $str_date,
                'tmp_key' => $tmp_key
            ]);
        } else {
            cb_redirect('report/send_confirm', [
                'cid'     => $category_id,
                'fid'     => $form_id,
                'tmp_key' => $tmp_key
            ]);
        }
    } else {
        //Include Sharing Codes With Command_*
        include('_send_form.csp');

        //GTM-529 tv
        $t->assign('path_mode', 'report/ajax/address_index');
        $t->assign('path_mode_get_address', 'report/ajax/get_addresses');

        //Assign Template Name
        $t->setPageInfo($target_name);

        //Display Previous Page
        $t->display($target_name . '.tpl');
    }
}


