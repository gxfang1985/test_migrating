<?php

if (0 == strcasecmp(@ $_SERVER['REQUEST_METHOD'], 'POST')) {
    global $G_INPUT;

    //Instantiate Smarty Object
    require_once("grn/smarty.csp");
    $t = new GRN_Smarty;

    //Create Parameter Translation Map
    $translation_map = [
        'cid' => '_cid',
        'fid' => '_fid',
    ];

    //Do Parameter Translation
    $properties = [];
    foreach ($translation_map as $view_name => $model_name) {
        $properties[$model_name] = @ $G_INPUT[$view_name];
    }

    //Delete All Report
    require_once("report/report_logic.csp");
    $report_logic = GRN_Report_Report_Logic::getInstance();
    $columns = ['_id'];
    $reports = $report_logic->getList($properties['_fid'], $columns);
    require_once('report/controller_util.csp');
    $controller_util = new GRN_Report_ControllerUtil();
    require_once('report/notification.csp');
    $notification_logic = GRN_Report_Notification_Listener::getInstance();
    foreach ($reports as $report) {
        // 通知を削除
        $notification_logic->removeAll($report['_id']);
    }

    $report_logic->deleteMulti(array_keys($reports), $properties['_fid']);

    //監査する
    require_once('report/inspection.csp');
    $inspection = GRN_Report_Report_Inspection::getInstance();
    if ($inspection->isEnabled()) {
        $message_type = 'report_delete_all';

        $message_args['fid'] = $properties['_fid'];

        //Record Inspection
        $inspection->record($message_type, $message_args);
    }

    //Redirect Next Page
    cb_redirect('report/system/report_list',
        ['cid' => $properties['_cid'], 'fid' => $properties['_fid']]);
}


