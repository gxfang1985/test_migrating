<?php

global $G_INPUT;

require_once("grn/smarty.csp");
$t = new GRN_Smarty;

//Set Application Name
global $G_report_app_name;
$t->assign('app_name', $G_report_app_name);

//--node information
require_once('_access_util.csp');

//--access information

//Create Parameter Translation for Access
$translation_map_access = [
    '_id'            => '_id',                  //OID
    'tid'            => 'target',               //Target ID
    'type'           => 'type',                 //Target Type
    'data'           => 'authority_browse', //Authority List
    'security_model' => 'security_model',       //Security Model
];

//Get Access List
require_once('report/controller_util.csp');
$access_list_for_view = [];
$target_type_list = [
    GRN_REPORT_ACCESS_TARGET_TYPE_DYNAMIC_ROLE,
    GRN_REPORT_ACCESS_TARGET_TYPE_STATIC_ROLE,
    GRN_REPORT_ACCESS_TARGET_TYPE_GROUP,
    GRN_REPORT_ACCESS_TARGET_TYPE_USER,
];
$category_access_util
    = GRN_Report_Category_Access_Controller_Utility::getInstance();
foreach ($target_type_list as $target_type) {
    $temporary = $category_access_util->getListView($node_id,
        $target_type, $translation_map_access, true);
    $access_list_for_view = array_merge($access_list_for_view, $temporary);
}

//Get Security Model
require_once('report/access_logic.csp');
$category_access_logic = GRN_Report_Category_Access_Logic::getInstance();
$security_model = $category_access_logic->getSecurityModel($node_id);

//Create Access Information
$access_information_for_view['security_model'] = $security_model;
$access_information_for_view['list'] = $access_list_for_view;
$access_information_for_view['count'] = count($access_list_for_view);
$access =& $access_information_for_view;

// GTM-529 tuning
$users_id = [];
foreach ($access_list_for_view as $access_item) {
    if ('user' == $access_item['type']) {
        $users_id[] = $access_item['tid'];
    }
}

global $G_container_base;
$uum = $G_container_base->getInstance('uum');
$login =& $uum->getLoginUser();

require_once('grn/controller.csp');
$users_info = GRN_ControllerUtil::getUserInfoToShowUserName($users_id, $login);
$t->assign('users_info', $users_info);
// GTM-529 tuning

//--N-navigation params
$ours_params = $G_INPUT;
unset($ours_params['reset']);
unset($ours_params['poid']);
$t->assign('ours_params', $ours_params);

$t->assign('access', $access);                               //Access
$t->assign('is_grant', $access['security_model'] == 'grant');  //Grant Flag
$t->assign('is_revoke', $access['security_model'] == 'revoke'); //Revoke Flag

//--authority types
$authority_types = ['browse' => cb_msg('grn.report.lang', 'access_browse')];
$t->assign('authority_types', $authority_types);
$t->assign('authority_count', count($authority_types));

//--session information (temporary authorities)
require_once('fw/session_manager.csp');
$session_manager = CB_SessionManager::getInstance();
$session = $session_manager->getSession('report.system.access_list');
$authorities = $session->get('authorities');
if (@ $G_INPUT['reset'] || ! is_array($authorities)) {
    $authorities = ['browse' => 1];
    $session->set('authorities', $authorities);
}
$t->assign('authorities', $authorities);

// Page Title
$page_title = grn_get_current_page_display_name();
$t->assign('page_title', $page_title);

// Site Position 
$t->assign('site_position', [
        [
            'page' => 'report/system/access_index',
            'name' => grn_get_page_display_name('report/system/access_index'),
            'nid'  => $node_id
        ],
        ['page' => '', 'name' => $page_title],
    ]
);

//Display Smarty Template
$doc_name = cb_get_pagename();
$t->display("{$doc_name}.tpl");


