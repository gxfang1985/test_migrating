<?php

if (strcasecmp(@ $_SERVER['REQUEST_METHOD'], 'POST') == 0) {
    global $G_INPUT;

    // Get Parameters
    $charset = @ $G_INPUT['charset'];
    $item_name = @ $G_INPUT['item_name'];

    // Get Default Charactor Set
    if ( ! $charset) {
        global $G_config_common;
        $charset = $G_config_common->get('I18N', 'default_external_encoding');
    }

    // Create Tmporary File
    $tempdir = cb_tmpdir();
    $temp_filename = tempnam($tempdir, 'rprt_');

    // Get CSV Writer
    require_once('fw/csv.csp');
    $csv = new CB_CSVWriter($charset, $temp_filename);

    // Execute to Write
    require_once('report/access_logic.csp');
    $access_logic = GRN_Report_Category_Access_Logic::getInstance();

    // Write Item Name
    if ($item_name) {
        $access_logic->export_item_name($csv);
    }

    // Write Category Information
    $root_category_id = GRN_REPORT_CATEGORY_ROOT_ID;
    $access_logic->export($csv, $root_category_id);

    // Close CSV Writer
    $csv->close();

    require_once('report/inspection.csp');
    $inspection = GRN_Report_Category_Accesses_Inspection::getInstance();
    // 監査する
    if ($inspection->isEnabled()) {
        $message_type = 'category_accesses_export';
        //Record Inspection
        $inspection->record($message_type, []);
    }

    // DownLoad CSV File
    cb_prepare_download('report_access.csv', 'application/csv', false);
    $fp = fopen($temp_filename, 'rb');
    $fsize = filesize($temp_filename);
    if ($fsize > 0) {
        echo fread($fp, $fsize);
    }
    fclose($fp);

    // Remove Temporary File
    unlink($temp_filename);
}

