<?php

//Instantiate an Smarty object
require_once("grn/smarty.csp");
$t = new GRN_Smarty;

//Set Application Name
global $G_report_app_name;
$t->assign('app_name', $G_report_app_name);

global $G_container_base;
$uum = $G_container_base->getInstance('uum');

//Get Parameters
require_once('report/resources.csp');
$category_id = @ $G_INPUT['cid'];         //Category ID
$form_id = @ $G_INPUT['fid'];         //Form ID
$condition = @ $G_INPUT['condition'];   //Condition
$sort = @ $G_INPUT['sort'];        //Sort
$category_id = $category_id ? $category_id : GRN_REPORT_CATEGORY_ROOT_ID;
$condition = array_key_exists('condition', $G_INPUT) ? $condition : '';

//Get Session
require_once('fw/session_manager.csp');
$session_manager = CB_SessionManager::getInstance();
$session = $session_manager->getSession(cb_get_pagename());

if (@ $G_INPUT['sf']) {
    if ($G_INPUT['sf'] == 1) {
        //Load Sort and Condition from Session
        $sort = $session->get('sort');
        $condition = $session->get('condition');
    } else {
        //Load Condition Only from Session
        $condition = $session->get('condition');
        $session->set('sort', $sort);
        $G_INPUT['sf'] = 1;
    }
} else {
    //Save Sort to Session
    $session->set('sort', $sort);
    $session->set('condition', $condition);
}

//Get Category and Form and Report Controller Utility
require_once('report/controller_util.csp');
$category_util = GRN_Report_Category_Controller_Utility::getInstance();
$form_util = GRN_Report_Form_Controller_Utility::getInstance();
$report_util = GRN_Report_Report_Controller_Utility::getInstance();

//Create Parameter Translation Map for Category
$translation_map_category = [
    //Category Information
    'cid'         => '_id',             //Category ID
    'name'        => 'name',            //Category Name
    'foreign_key' => 'foreign_key',     //Category Foreign key
    'memo'        => 'memo',            //Category Memo
    'parent'      => 'parent',          //Category Parent
    'list_index'  => 'list_index',      //Category List Index
    'count'       => 'count',           //Children Category Count
];

//Create Parameter Translation for Form
$translation_map_form = [
    'fid'     => '_id',          //Form ID
    'type'    => 'type',         //Form Type
    'name'    => 'name',         //Form Name
    'memo'    => 'memo',         //Form Memo
    'cid'     => 'category',     //Category ID
    'active'  => 'active',       //Form Active
    'deleted' => 'deleted',      //Form Deleted
];

//Create Parameter Translation for Report
$translation_map_report = [
    'rid'          => '_id',              //Report ID
    'name'         => 'name',             //Report Name
    'form_name'    => 'form_name',        //Report Form Name
    'creator'      => 'creator',          //Report Creator
    'creator_name' => 'creator_name',     //Report Creator Name
    'ctime'        => 'ctime',            //Report Create Time
    'mtime'        => 'mtime',            //Report Modify Time
    'draft'        => 'draft',
    'private'      => 'private'
];

//Get Current Category for View
$category_for_view = $category_util->getView($category_id,
    $translation_map_category, GRN_REPORT_ACCESS_TYPE_SYSTEM);

//Get Child Category List for View
$category_for_view['children'] = $category_util->getChildListView($category_id,
    $translation_map_category, GRN_REPORT_ACCESS_TYPE_SYSTEM);

//Get Tree Category List for View
if ($category_id != GRN_REPORT_CATEGORY_ROOT_ID) {
    $category_for_view['ancestors']
        = $category_util->getTreeListView($category_id,
        $translation_map_category, GRN_REPORT_ACCESS_TYPE_SYSTEM, true, false);
}

//Get Form List for View
$form_list_for_view = [];
$option = [
    'condition' => [
        '0' => [
            'column'   => 'col_type',
            'value'    => '0',
            'operator' => '='
        ]
    ]
];
$option['exists'] = true;
$form_list_for_view = $form_util->getListView($translation_map_form,
    $category_id, $option);
if ( ! $form_id || ! array_key_exists($form_id, $form_list_for_view)) {
    //Form doesn't exist in current category
    $form_list_for_view_keys = array_keys($form_list_for_view);
    $form_id = current($form_list_for_view_keys);
}

//Get Login User Config
global $G_portal_login_user;
require_once('grn/ui.csp');
$manager = GRN_UIConfigManager::getInstance();
$config = $manager->getUserConfig($G_report_login_user);

//Get Report List for View
$report_list_for_view = [];
$n_navigation_for_view = [];

if (is_null($sort)) {
    $sort = 'mtd';
}

if ($form_id) {
    $option = [];

    //Create Type Condition Option

    //Create Sort Option
    $option['sort'] = [];
    switch ($sort) {
        case 'mtu':
            $option['sort'][] = ['column' => 'col_mtime', 'order' => 'ASC'];
            break;
        case 'mtd':
            $option['sort'][] = ['column' => 'col_mtime', 'order' => 'DESC'];
            break;
        case 'unu':
            $option['sort'][] = [
                'column' => 'col_creator_name',
                'order'  => 'ASC'
            ];
            break;
        case 'und':
            $option['sort'][] = [
                'column' => 'col_creator_name',
                'order'  => 'DESC'
            ];
            break;
        case 'ctu':
            $option['sort'][] = ['column' => 'col_ctime', 'order' => 'ASC'];
            break;
        case 'ctd':
            $option['sort'][] = ['column' => 'col_ctime', 'order' => 'DESC'];
            break;
        default:
            unset($option['sort']);
            break;
    }

    $citem = [];
    $citem['column'] = 'col_draft';
    $citem['operator'] = '=';
    $citem['value'] = '0';
    $option['condition'] = [$citem];
    //Get Report Total Count
    require_once('report/report_logic_base.csp');
    $report_logic_base = GRN_Report_Report_Logic_Base::getInstance();
    $report_count = $report_logic_base->getCount($form_id, $option);

    //N-Navigation
    require_once('report/utility.csp');
    $params = [
        'cid' => $category_id,
        'fid' => $form_id,
        'sf'  => '1'
    ];
    $n_navigation_for_view = grn_make_n_navigation($report_count, $params,
        $config->getListMax());

    //Create List Option
    $option['list'] = [];
    $option['list']['offset'] = $n_navigation_for_view['offset'];
    $option['list']['limit'] = $n_navigation_for_view['limit'];

    //Get Report List for View
    $report_list_for_view = $report_util->getListView($translation_map_report,
        $form_id, $option);
} else {
    //N-Navigation
    require_once('report/utility.csp');
    $params = [
        'cid' => $category_id,
        'fid' => $form_id,
        'sf'  => '1'
    ];
    $n_navigation_for_view = grn_make_n_navigation(0, $params,
        $config->getListMax());
}

$creator_ids = [];
foreach ($report_list_for_view as $report_view) {
    if (isset($report_view['creator'])) {
        $creator_ids[] = $report_view['creator'];
    }
}
$creators_info = GRN_ControllerUtil::getUserInfoToShowUserName($creator_ids,
    $G_report_login_user);
$t->assign('creators_info', $creators_info);

//Assign Category ID
$t->assign('category_id', $category_id);
//Assign Form ID
$t->assign('form_id', $form_id);

//Assign Category
$t->assign('category', $category_for_view);
//Assign Form List
$t->assign('form_list', $form_list_for_view);
//Assign Report List
$t->assign('report_list', $report_list_for_view);

//Assign View Set
$t->assign('navi', $n_navigation_for_view);
//Assign Sort
$t->assign('sort', $sort);

//UI Parameters
$t->assign('name_width', $config->getNameWidth());//GRN_REPORT_NAME_WIDTH
$t->assign('subject_width', GRN_REPORT_SUBJECT_WIDTH);
$t->assign('show_user_num', GRN_REPORT_SHOW_MAX_USER_NUM);

//Page Title
$page_title = grn_get_current_page_display_name();
$t->assign('page_title', $page_title);

// site position
$t->assign('site_position', [
        ['page' => '', 'name' => $page_title]
    ]
);

//Display Smarty Template
$doc_name = cb_get_pagename();
$t->display("{$doc_name}.tpl");


