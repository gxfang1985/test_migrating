<?php

use grn\grn\MemberLogic;

$report_id = array_key_exists('rid', $G_INPUT) ? $G_INPUT['rid'] : null;
$sf = array_key_exists('sf', $G_INPUT) ? $G_INPUT['sf'] : null;

//Get Session Key
require_once('report/controller_util.csp');
require_once('grn/controller.csp');
$tmp_key = grn_get_temporary_key();
$t->assign('tmp_key', $tmp_key);

//Get Session
require_once('fw/session_manager.csp');
$session_manager = CB_SessionManager::getInstance();
$session_modify_draft =& $session_manager->getSession('report/modify_draft'
                                                      . $tmp_key);
$member_logic = MemberLogic::getInstance();

$is_mobile = false;
$is_include_deleted_users = false;

//Check Session Hold Flag
if ($sf != 1) {
//-------------- Clear Session Section --------------//

    //Clear Send Form Sesson (for Design)
    $session_modify_draft->unset_by('report');
    $session_modify_draft->unset_by('item_list');
    $session_modify_draft->unset_by('properties');
    $session_modify_draft->unset_by('members');
    $session_modify_draft->unset_by('notification');
    $session_modify_draft->unset_by('upload_ticket');
    $session_modify_draft->unset_by('max_filesize');

//-------------- Get Report / Item Data / Item Data File Section --------------//

    //Get Report and Item Data and Item Data File Controller Utility
    require_once('report/controller_util.csp');
    $category_util = GRN_Report_Category_Controller_Utility::getInstance();

    //Get Report and Check Owner
    $user_id = $G_report_login_user->getOID();
    $report_util = GRN_Report_Report_Controller_Utility::getInstance();
    $report = $report_util->getSimpleView($report_id);
    // Check Creator
    require_once('report/operator_logic.csp');
    if ( ! $report_util->isModifiable($user_id, $report['creator'], $report_id,
        true)
    ) {
        require_once('report/error_code.csp');
        cb_throw_error(E_GRN_RPRT_REPORT_DENY_MODIFY);
    }
    //Check Draft
    if ( ! $report['draft']) {
        require_once('report/error_code.csp');
        cb_throw_error(E_GRN_RPRT_DRAFT_NOT_FOUND);
    }

    $form_util = GRN_Report_Form_Controller_Utility::getInstance();
    $form_for_view = $form_util->getSimpleView($report['form']);
    if ( ! $form_for_view['active'] || $form_for_view['deleted']) {
        require_once('report/error_code.csp');
        cb_throw_error(E_GRN_RPRT_FORM_NOT_FOUND);
    }

    //Get Item List for view
    //If form is modified, the modification is reflected
    $item_data_util = GRN_Report_ItemData_Controller_Utility::getInstance();
    $translation_map_item_data = [
        'idid'      => '_id', //Item Data ID
        'item'      => 'item', //Item ID
        'data_type' => 'data_type', //Item Data Type
        'number'    => 'number', //Item Number
        'text'      => 'text', //Item Text
        'html'      => 'html', //Item HTML

        'display_name'       => 'display_name', //Item Display Name
        'type'               => 'type', //Item Type
        'option_string'      => 'option_string', //Item Option String
        'option_string_type' => 'option_string_type', //Item Option String Type
        'description'        => 'description', //Item Description
        'description_type'   => 'description_type', //Item Description Type
        'description_editor' => 'description_editor', //Item Description Editor
        'settings'           => 'settings', //Item Settings
        'required'           => 'required', //Item Reuired Flag
        'list_index'         => 'list_index', //Item List Index
    ];
    $item_data_list
        = $item_data_util->getListView($translation_map_item_data,
        $report_id);

    $item_data_file_util
        = GRN_Report_ItemDataFile_Controller_Utility::getInstance();
    $translation_map_item_data_file = [
        'ifid'      => '_id', //Item Data File ID
        'item_data' => 'item_data', //Item Data ID
        'file'      => 'file', //GRN_File ID
    ];
    $item_data_file_list = [];
    foreach (array_keys($item_data_list) as $item_data_id) {
        if ($item_data_list[$item_data_id]['data_type'] === 'grn.report.file') {
            $item_data_file_list[$item_data_id]
                = $item_data_file_util->getListView($translation_map_item_data_file,
                $item_data_id);
        } else {
            $item_data_file_list[$item_data_id] = [];
        }
    }

    //Get GRN_File Table
    require_once('report/file.csp');
    $file_manager = new GRN_Report_FileManager_Core();
    $file_table = &$file_manager->getFileTable();

    //Create Parameter Translation Map
    $translation_map_item = [
        'iid'                => '_id', //Item ID
        'display_name'       => 'display_name', //Item Display Name
        'type'               => 'type', //Item Type
        'option_string'      => 'option_string', //Item Option String
        'option_string_type' => 'option_string_type', //Item Option String Type
        'description'        => 'description', //Item Description
        'description_type'   => 'description_type', //Item Description Type
        'description_editor' => 'description_editor', //Item Description Editor
        'data_type'          => 'data_type', //Item data_type
        'form'               => 'form', //Item Form
        'settings'           => 'settings', //Item Settings
        'required'           => 'required', //Item Reuired Flag
        'list_index'         => 'list_index', //Item List Index
        'display_type'       => 'display_type', //Display_type
    ];

    $item_util = GRN_Report_Item_Controller_Utility::getInstance();
    $item_list_for_view = $item_util->getListView($translation_map_item,
        $report['form']);

    //Marge Item Data and Item Data File to Item
    foreach (array_keys($item_data_list) as $item_data_id) {
        $item_data = &$item_data_list[$item_data_id];
        if (array_key_exists($item_data['item'], $item_list_for_view)) {
            $item = &$item_list_for_view[$item_data['item']];

            //This item will be modified, not added
            $item['modify'] = true;

            //Add Item Data ID to Item
            $item['item_data'] = $item_data_id;

            //Copy item id
            $item['item'] = $item_data['item'];

            if ($item_data['data_type'] == $item['data_type']) {
                //If data type is not modified, copy data from draft.
                $item['number'] = $item_data['number'];
                $item['text'] = $item_data['text'];
                $item['html'] = $item_data['html'];

                if (count($item_data_file_list[$item_data_id]) !== 0) {
                    $i = 0;
                    foreach (
                        array_keys($item_data_file_list[$item_data_id]) as
                        $item_data_file_id
                    ) {
                        $item_key = sprintf('item_%s_file_%s', $item['iid'],
                            $i);

                        //Get GRN_File Object
                        $file_object
                            = &$file_table->getRow($item_data_file_list[$item_data_id][$item_data_file_id]['file']);
                        if ($file_object) {
                            //Add $_FILES Information
                            $_FILES[$item_key]
                                = &$file_object->getCurrentBody();
                        }
                        $i++;
                    }
                }
            }
        }
    }

    //GRN2-5459
    //Copy Files to  Session File
    require_once('report/controller_util.csp');
    $all_attached_file_list
        =& grn_report_get_attached_file_info('report/command_modify_draft');
    foreach (array_keys($all_attached_file_list) as $key) {
        $keys = explode('_', $key);
        $item_list_for_view[$keys[1]]['files'] = $all_attached_file_list[$key];
    }
    //GRN2-5459

    //Get Members
    $member_util = GRN_Report_Member_Controller_Utility::getInstance();
    $members_for_view = $member_util->getView($report_id);

    //Get Notification
    $notification_util
        = GRN_Report_Notification_Controller_Utility::getInstance();
    $notification_for_view = $notification_util->getView($report_id);

    //Get Partners
    require_once('report/partner_manager.csp');
    $partner_manager = GRN_Report_Partner_Manager::getInstance();
    $partner_rows =& $partner_manager->getList($report_id);
    require_once('report/partner.csp');
    $partners = GRN_ReportPartnerData::createByRows($partner_rows);

    // Get Operators
    $operators
        =& GRN_Report_Operator_Controller_Utility::getOperatorList($report_id);
    $operator_set = count($operators) ? 1 : 0;

    //スケジュールとの関連を調べる
    require_once('report/report_schedule_logic.csp');
    $report_schedule_logic = GRN_Report_Report_Schedule_Logic::getInstance();
    $event_info
        = $report_schedule_logic->getRelatedEventId($report_id);
    if (is_numeric($event_info['event_id']) && $event_info['event_id'] > 0) {
        $t->assign('event_id', $event_info['event_id']);

        $date = new CB_Date();
        if ( ! $date->parse($event_info['date'])) {
            $date = false;
        }

        //もしevent_idが存在するならば、アクセス可能かチェックする
        require_once('schedule/application.csp');
        $app = GRN_Schedule_Application::getInstance();
        $event = &$app->getEvent($G_report_login_user, $event_info['event_id'],
            $date, CB_DATABASE_NO_LOCK, false, GRN_SCHEDULE_GET_MEMBER_ID);
        if ($event) {
            $t->assign('event', $event);
        }
        $t->assign('event_date', $event_info['date']);
    }

//-------------- Properties Section --------------//
    $properties_for_view = [];
    //Save Send Form Session (for Design)
    $session_modify_draft->set('report', $report);
    $session_modify_draft->set('item_list', $item_list_for_view);
    $session_modify_draft->set('form', $form_for_view);

    //generate upload ticket
    require_once('grn/upload.csp');
    $upload_ticket = GRN_UploadTicket::create($G_report_login_user->getOID());
    $session_modify_draft->set('upload_ticket', $upload_ticket);

    require_once('grn/file.csp');
    $config = GRN_FileManagerConfig::getInstance();
    $max_filesize = $config->getMaxFileSize();
    $session_modify_draft->set('max_filesize', $max_filesize);

} else {
    //Load Send Form Sesson (for Design)
    $report = $session_modify_draft->get('report');
    $form_for_view = $session_modify_draft->get('form');
    $item_list_for_view = $session_modify_draft->get('item_list');
    $properties_for_view = $session_modify_draft->get('properties');
    $members = $session_modify_draft->get('members');
    $notification = $session_modify_draft->get('notification');
    $partner_values = $session_modify_draft->get('partner_values');
    $operators = $session_modify_draft->get('operators');
    $operator_set = $session_modify_draft->get('operator_set');
    $upload_ticket = $session_modify_draft->get('upload_ticket');
    $max_filesize = $session_modify_draft->get('max_filesize');

    //Get Members for View
    $members_for_view = $member_logic->getDisplayUsersByUserIds($members,
        GRN_REPORT_APPLICATION_ID, $is_mobile, $is_include_deleted_users);

    //Get Notification for View
    $notification_for_view
        = $member_logic->getDisplayUsersByUserIds($notification,
        GRN_REPORT_APPLICATION_ID, $is_mobile, $is_include_deleted_users);

    require_once('report/partner.csp');
    $partners = GRN_ReportPartnerData::createByValues($partner_values);

    $t->assign('upload_ticket', @$G_INPUT['upload_ticket']);

    //remove unchecked files
    require_once('grn/upload.csp');
    GRN_UploadFile::removeUploadedFilesByFileIds(@$G_INPUT['upload_ticket'],
        @$G_INPUT['upload_fileids']);
}

$operators_for_view = $member_logic->getDisplayUsersByUserIds($operators,
    GRN_REPORT_APPLICATION_ID, $is_mobile, $is_include_deleted_users);
$candidate_operators = $members_for_view + $notification_for_view;

//Check Nonparty Category Access Right
$category_id = $form_for_view['category'];
if (0 == strlen($category_id)) {
    $category_id = GRN_REPORT_CATEGORY_NONPARTY_ID;
}
if (GRN_REPORT_CATEGORY_NONPARTY_ID != $category_id) {
    require_once('report/controller_util.csp');
    $category_util = GRN_Report_Category_Controller_Utility::getInstance();
    $category_util->checkAccess($category_id, true, CB_DATABASE_NO_LOCK);
}

$form_name = '';
if (isset($form_for_view['name'])) {
    $form_name = $form_for_view['name'];
} else {
    $form_name = $report['form_name'];
}

$t->assign('plugin', [
    'name'   => 'common',
    'params' => [
        'action'       => null,
        'session_name' => cb_get_pagename() . $tmp_key,
        'app_id'       => 'report'
    ]
]);

//Assign Display Information
$t->assign('form', $form_for_view);
$t->assign('report', $report);
$t->assign('report_id', $report_id);
$t->assign('category_id', $category_id);
$t->assign('form_id', $report['form']);
$t->assign('item_list', $item_list_for_view);
$t->assign('properties', $properties_for_view);
$t->assign('members', $members_for_view);
$t->assign('notification', $notification_for_view);
$t->assign('partners', $partners);
$t->assign('candidate_operators', $candidate_operators);
$t->assign('operators', $operators_for_view);
$t->assign('operator_open', $operator_set);
$t->assign('private', $report['private']);
$t->assign('report_form_name', $form_name);
$t->assign('upload_ticket', $upload_ticket);
$t->assign('max_filesize', $max_filesize);

//-- set page title and site position

//page title
$page_title = grn_get_current_page_display_name();
$t->assign('page_title', $page_title);


