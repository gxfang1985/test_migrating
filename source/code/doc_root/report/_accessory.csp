<?php

$report_id = isset($G_INPUT['rid']) ? $G_INPUT['rid'] : null;

if (is_null($report_id)) {
    require_once('report/error_code.csp');
    cb_throw_error(E_GRN_RPRT_REPORT_NOT_FOUND);
}

require_once('report/report.csp');
$report = GRN_ReportReport::selectById($report_id);

if ( ! $report) {
    require_once('report/error_code.csp');
    cb_throw_error(E_GRN_RPRT_REPORT_NOT_FOUND);
}
$t->assign('report', $report);

// page title
$page_title = grn_get_current_page_display_name();
$t->assign('page_title', $page_title);

//Get Login User
global $G_container_base;
$uum = $G_container_base->getInstance('uum');
$login_user = $uum->getLoginUser();
if ( ! $login_user) {
    require_once('grn/error_code.csp');
    cb_throw_error(E_GRN_USER_NOT_FOUND);
}

//Get UI Config
require_once('grn/ui.csp');
$config_manager = GRN_UIConfigManager::getInstance();
$ui_config = $config_manager->getUserConfig($login_user);
$t->assign('config', [
    'name_width'     => $ui_config->getNameWidth(),
    'truncate_width' => $ui_config->getTruncateWidth()
]);

require_once('report/application.csp');
$report_app = new GRN_Report_Application();
$profile = $report_app->getUserProfile($login_user);
$default_time_sort = null;
if ( ! $profile->getAttribute('accessory_time_sort', $default_time_sort)) {
    $default_time_sort = 'ctime';
}

$reverse = array_key_exists('reverse', $G_INPUT) ? $G_INPUT['reverse'] : '1';
if (is_string($reverse) && strlen($reverse) === 0) {
    $reverse = '1';
}

$sort = array_key_exists('sort', $G_INPUT) ? $G_INPUT['sort']
    : $default_time_sort;
if ($sort != 'ctime' && $sort != 'mtime' && $sort != 'fnd' && $sort != 'ftd') {
    $sort = $default_time_sort;
}

$default_sort_params = [
    'accessory_sort_key'  => 'ctime',
    'accessory_reverse'   => $reverse,
    'accessory_time_sort' => 'ctime'
];
$sort_params = [
    'fnd'  => ['disable' => true],
    'ftd'  => ['disable' => true],
    'time' => ['disable' => true]
];

//Get Sort Parameters
foreach (array_keys($default_sort_params) as $key) {
    if ( ! $profile->getAttribute($key, $value)) {
        $value = $default_sort_params[$key];
    }

    $sort_params[$key] = $value;
}

switch ($sort) {
    case 'fnd':
        $sort_params['fnd']['disable'] = false;
        $sort_params['fnd']['reverse'] = $reverse == '0' ? '1' : '0';
        break;
    case 'ftd':
        $sort_params['ftd']['disable'] = false;
        $sort_params['ftd']['reverse'] = $reverse == '0' ? '1' : '0';
        break;
    case 'mtime':
    default:
        $sort_params['time']['disable'] = false;
        $sort_params['time']['reverse'] = $reverse == '0' ? '1' : '0';
        if ($sort != $sort_params['accessory_time_sort']) {
            // 時間のソートの変更
            grn_report_updateAttribute($profile, 'accessory_time_sort', $sort);
        }
        $sort_params['accessory_time_sort'] = $sort;
        break;
}
$time_sort = $sort_params['accessory_time_sort'] == 'ctime' ? 'mtime' : 'ctime';

$t->assign('button_params', [
    'cid'     => $report->getCategory(),
    'fid'     => $report->getForm(),
    'rid'     => $report->getId(),
    'sort'    => $time_sort,
    'reverse' => $sort_params['time']['disable'] ? '' : $reverse
]);
$t->assign('switch_params', [
    'cid'     => $report->getCategory(),
    'fid'     => $report->getForm(),
    'rid'     => $report->getId(),
    'sort'    => $sort_params['accessory_time_sort'],
    'reverse' => $sort_params['time']['disable'] ? ''
        : $sort_params['time']['reverse']
]);
$t->assign('sort_params', $sort_params);

require_once('report/file.csp');
$fm = GRN_Report_FileManager::getInstance();
$files =& $fm->getAllReportAttachedFiles($report_id, $reverse, $sort);

$uids = [];
$files_for_view = [];
while ( ! is_null(($data = $files->iterate()))) {
    $title = $data['f']->getTitle();
    if (is_null($title) || strlen($title) < 1) {
        $title = $data['b']->get('name');
    }
    $item =& $data['r']->get('item_data');
    $follow =& $data['r']->get('follow');
    $creator =& $data['f']->get('creator');

    $files_for_view[$data['f']->getOID()] = [
        'title'        => $title,
        'filename'     => $data['b']->get('name'),
        'abstract'     => $follow ? $follow->get('data')
            : $item->get('display_name'),
        'follow_id'    => $follow ? $follow->get('follow_id') : null,
        'ctime'        => $data['f']->get($sort_params['accessory_time_sort']),
        'creator_uid'  => $creator ? $creator->getOID() : 0,
        'creator_name' => $creator ? $creator->get('display_name')
            : $data['f']->get('creator_name'),
        'frid'         => $data['r']->getOID(),
        'mime'         => $data['b']->getMIMEType()
    ];

    $uids[] = $files_for_view[$data['f']->getOID()]['creator_uid'];
}

$t->assign('all_attach_files', $files_for_view);

$users_info = GRN_ControllerUtil::getUserInfoToShowUserName($uids, $login_user);
$t->assign('users_info', $users_info);

$page_path = [];
if (isset($system_page)) {
    $page_path = [
        "system/report_list" => [
            'cid' => $report->getCategory(),
            'fid' => $report->getForm(),
            'sf'  => 1
        ],
        "system/report_view" => [
            'cid' => $report->getCategory(),
            'fid' => $report->getForm(),
            'rid' => $report_id
        ],
        "system/accessory"   => null,
    ];
} elseif (isset($operation_page)) {
    //Get Category ID
    $category_id = $report->getCategory();
    if (is_null($category_id)) {
        $category_id = GRN_REPORT_CATEGORY_NONPARTY_ID;
    }

    //Check Nonparty Category
    if (GRN_REPORT_CATEGORY_NONPARTY_ID == $category_id) {
        require_once('report/error_code.csp');
        cb_throw_error(E_GRN_RPRT_MANAGE_DENY_NONPARTY_CATEGORY);
    }

    //Check Category Manage and Access Right
    $report->checkAccessibleCategory($login_user);
    $report->checkManageableCategory($login_user);

    $page_path = [
        "index"                 => ['sf' => 1],
        "operation/report_list" => [
            'cid' => $category_id,
            'fid' => $report->getForm(),
            'sf'  => 1
        ],
        "operation/report_view" => [
            'cid' => $category_id,
            'fid' => $report->getForm(),
            'rid' => $report_id
        ],
        "operation/accessory"   => null,
    ];
} else {
    // View Access Right
    require_once('report/controller_util.csp');
    if ( ! $report->isViewable($login_user)) {
        require_once('report/error_code.csp');
        cb_throw_error(E_GRN_RPRT_REPORT_DENY_ACCESS);
    }

    //Get Previous View Page
    $page_view = 'view';
    if ($report->getDraft()) {
        $page_view = 'view_draft';
    }

    $page_path = [
        "index"     => ['sf' => 1],
        $page_view  => ['rid' => $report_id],
        "accessory" => null,
    ];
}

//Assign Site Position
require_once('grn/controller.csp');
$utility = new GRN_ControllerUtil();
$site_position = $utility->makeSitePosition('report/', $page_path);
$t->assign('site_position', $site_position);

function grn_report_updateAttribute(& $profile, $name, $value)
{
    $default_value = null;
    if ( ! $profile->getAttribute($name, $default_value)) {
        $profile->createAttribute($name, $value);
    } else {
        $profile->updateAttribute($name, $value);
    }
}


