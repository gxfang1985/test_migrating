<?php

global $G_INPUT;

$operator_set = array_key_exists('operator-set', $G_INPUT)
                && $G_INPUT['operator-set'] ? 1 : 0;
$operators = [];
if ($operator_set && array_key_exists('sUID_o', $G_INPUT)) {
    $operators = $G_INPUT['sUID_o'];
}

require_once('report/notification.csp');

if ( ! $user) {
    require_once('grn/error_code.csp');
    cb_throw_error(E_GRN_USER_NOT_FOUND);
}

//Delete Non-viewable User's Subscribe
require_once('report/controller_util.csp');
$report_util = GRN_Report_Report_Controller_Utility::getInstance();
$report = $report_util->getSimpleView($report_id);

//報告書の通知先を取得
$rlist = $report_util->getNotificationList($report_id);
$notification_old = [];
foreach ($rlist as $value) {
    $notification_old[] = $value;
}

//Get Report Members
require_once('report/member_manager.csp');
$member_manager = GRN_Report_Member_Manager::getInstance();
$members =& $member_manager->getList($report_id);

if (is_null($notification)) {
    $notification = [];
}

foreach ($notification as $key => $value) {
    $uid_group = explode(':', $value);
    $notification[$key] = $uid_group[0];
}
foreach ($notification as $nkey => $nid) {
    if (isset($report['creator']) && $nid == $report['creator']) {
        unset($notification[$nkey]);
    }
    foreach ($members as $mkey => $mid) {
        if ($nid == $mid) {
            unset($notification[$nkey]);
        }
    }
}

require_once('report/notification_manager.csp');
$notification_manager = new GRN_Report_Notification_Manager();
$old_notification =& $notification_manager->getList($report_id);

//新しく追加された通知先に対して通知を送信する
$new_notification = array_diff($notification, $old_notification);
$timestamp = new CB_TimeStampEx();
$notification_logic = GRN_Report_Notification_Listener::getInstance();
$notification_logic->sendList(GRN_REPORT_NOTIFY_ENTRY, $new_notification,
    $G_report_login_user, $report_id, $timestamp);


//Update Notification
$notification_util = GRN_Report_Notification_Controller_Utility::getInstance();
$ret = $notification_util->updateNotification($report_id,
    $notification, $operators);
if ( ! $ret) {
    require_once('report/error_code.csp');
    cb_throw_error(E_GRN_RPRT_REPORT_NOT_FOUND,
        ['app_name' => $G_report_app_name],
        ['app_name' => $G_report_app_name],
        ['app_name' => $G_report_app_name]);
}

//Update Members (for updating operators)
$member_util = GRN_Report_Member_Controller_Utility::getInstance();
$member_util->updateMembers($report_id, $members, $operators);

//Create Viewable List
$viewable_list = $report_util->getNotificationList($report_id, true);

//Get Subscribe List
require_once('report/subscribe_manager.csp');
$subscribe_manager = GRN_Report_Subscribe_Manager::getInstance();
$subscribe_list = $subscribe_manager->getList($report_id);

//Delete Subscribe        
require_once('report/subscribe_logic.csp');
$subscribe_logic = GRN_Report_Subscribe_Logic::getInstance();
foreach ($subscribe_list as $subscribe) {
    if ( ! in_array($subscribe['col_user'], $viewable_list)) {
        if ($report['private']) {
            $subscribe_logic->delete($report_id, $subscribe['col_user']);
        } else {
            $subscribe_logic->delete($report_id, $subscribe['col_user'],
                GRN_REPORT_UNSUBSCRIBED);
        }
    }
}

