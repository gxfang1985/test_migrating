<?php

//--current organization id
$poid = @ $G_INPUT['poid'];
if (isset($t) && ! is_null($t)) {
    $t->assign('poid', $poid);
}

//--category
$node_id = @ $G_INPUT['nid'];

//Get Category Controller Utility
require_once('report/controller_util.csp');
$category_util = GRN_Report_Category_Controller_Utility::getInstance();

//Check Category Manage and Access Right
$category_util->checkManage($node_id, true, CB_DATABASE_NO_LOCK);
$category_util->checkAccess($node_id, true, CB_DATABASE_NO_LOCK);

//Check Category ID
require_once('report/resources.csp');
$node_id = $node_id ? $node_id : GRN_REPORT_CATEGORY_ROOT_ID;

//Create Parameter Translation for Category
$translation_map_category = [
    'nid'         => '_id',          //Category ID
    'name'        => 'name',         //Cattegory Name
    'foreign_key' => 'foreign_key',  //Cattegory Foregin Key
    'memo'        => 'memo',         //Category Memo
];

//Get Category for View
$category_for_view = $category_util->getView($node_id,
    $translation_map_category, GRN_REPORT_ACCESS_TYPE_MANAGE);

//Get Child Category List for View
$child_category_list_for_view = $category_util->getChildListView($node_id,
    $translation_map_category, GRN_REPORT_ACCESS_TYPE_MANAGE);

//Get Tree Category List for View
$tree_category_list_for_view = $category_util->getTreeListView($node_id,
    $translation_map_category, GRN_REPORT_ACCESS_TYPE_MANAGE, false, false);

//Create Category Information
$category_information_for_view = $category_for_view;
$category_information_for_view['children'] = $child_category_list_for_view;
$category_information_for_view['ancestors'] = $tree_category_list_for_view;

//Assign Category
$node =& $category_information_for_view;

//Assign Smarty Variable
if (isset($t) && ! is_null($t)) {
    $t->assign('node_id', $node_id);
    $t->assign('node', $node);
}

