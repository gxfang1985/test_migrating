<?php

if (strcasecmp(cb_at($_SERVER, 'REQUEST_METHOD'), 'POST') == 0) {
    global $G_INPUT;

    if (strlen($G_INPUT['export_selected_list']) == 0
        && strlen($G_INPUT['export_item_selected_list']) == 0
    ) {
        require_once('report/error_code.csp');
        cb_throw_error(E_GRN_RPRT_MISSING_ITEMS_FOR_EXPORTING);
    }

    // Create Parameter Translation Map from $G_INPUT
    $translation_info_properties_map = [
        'cid'     => 'cid',
        // Category ID       :Use to get form information
        'fid'     => 'fid',
        // Form ID           :form._id, petition.col_form
        'charset' => 'charset',
        'skip'    => 'skip',
    ];

    $export_options = [];
    if (array_key_exists('export_selected_list', $G_INPUT)
        and strlen($G_INPUT['export_selected_list']) > 0
    ) {
        $export_options = explode(",", cb_at($G_INPUT, 'export_selected_list'));
    }

    $export_item_options = [];
    if (array_key_exists('export_item_selected_list', $G_INPUT)
        and strlen($G_INPUT['export_item_selected_list']) > 0
    ) {
        $export_item_options = explode(",",
            cb_at($G_INPUT, 'export_item_selected_list'));
    }

    $first_item = cb_at($G_INPUT, 'export_item_first');

    $array_export = [
        'subject'        => null,
        'creator'        => 'creator',
        'ctime'          => 'ctime',
        'enable_member'  => 'enable_member',
        'enable_partner' => 'enable_partner',
        'items_data'     => [],
        'enable_follow'  => 'enable_follow',
    ];

    foreach (array_keys($array_export) as $export) {
        if ($export != 'items_data' && $export != 'subject') {
            if ( ! in_array($export, $export_options)) {
                unset($array_export[$export]);
            }
        }
    }

    if (count($export_item_options) > 0) {
        if (in_array($first_item, $export_item_options)) {
            $array_export['subject'] = $first_item;
            $key_arr = array_keys($export_item_options,
                $first_item);
            unset($export_item_options[$key_arr[0]]);
        }

        require_once('report/controller_util.csp');
        $item_util = GRN_Report_Item_Controller_Utility::getInstance();
        $item_list_for_view = $item_util->getSimpleListView(cb_at($G_INPUT,
            'fid'));

        $available_item = [];
        foreach ($item_list_for_view as $item) {
            $available_item[] = $item['iid'];
        }
        foreach ($export_item_options as $key => $export_item) {
            if ( ! in_array($export_item, $available_item)) {
                unset($export_item_options[$key]);
            }
        }

        $array_export['items_data'] = $export_item_options;
    } else {
        unset($array_export['items_data']);
    }

    // Get MUST Parameter,required at all times
    $info_properties = [];
    foreach (array_keys($translation_info_properties_map) as $condition_name) {
        $info_properties[$condition_name] = cb_at($G_INPUT, $condition_name);
    }

    $option = [];
    $condition_list = [];
    $list_report_ids = [];
    $search_ready = true;
    $option = [
        'condition' => [],
    ];

    $tmp_key = cb_at($G_INPUT, 'tmp_key');
    if (strlen($tmp_key) > 0) {
        require_once('fw/session_manager.csp');
        $session_manager = CB_SessionManager::getInstance();
        $session = $session_manager->getSession('export_csv'
                                                . $tmp_key);
        $search_conditions = $session->get('conditions');
        require_once('report/search_logic.csp');
        $criteria = createCriteria($search_conditions);
        $list_report_ids = search($criteria);
        if ($list_report_ids) {
            if (count($list_report_ids) > 0) {
                $condition_list[] = [
                    'column'   => 'p._id',
                    'value'    => $list_report_ids,
                    'operator' => 'IN'
                ];
            }
        } else {
            $search_ready = false;
        }
    }

    $condition_list[] = [
        'column'   => 'p.col_draft',
        'value'    => "1",
        'operator' => '<>'
    ];
    $option['condition'] = $condition_list;

    //Get Parameters
    require_once('report/resources.csp');
    $category_id = cb_at($G_INPUT, 'cid');         //Category ID
    $category_id = $category_id ? $category_id : GRN_REPORT_CATEGORY_ROOT_ID;

    //Check Category Manage and Access Right
    require_once('report/controller_util.csp');
    $category_util = GRN_Report_Category_Controller_Utility::getInstance();
    $is_manage = $category_util->checkManage($category_id, false,
        CB_DATABASE_NO_LOCK);
    $category_util->checkAccess($category_id, true, CB_DATABASE_NO_LOCK);

    if ( ! $G_INPUT['charset']) {
        global $G_config_common;
        $info_properties['charset'] = $G_config_common->get('I18N',
            'default_external_encoding');
    }

    // Create Tmporary File
    $tempdir = cb_tmpdir();
    $temp_file_name = tempnam($tempdir, 'report_');

    // Get CSV Writer
    require_once('fw/csv.csp');
    $csv_writer = new CB_CSVWriter($info_properties['charset'],
        $temp_file_name);

    if (count($array_export) > 0) {
        // Write Petitions Data
        $report_controller_util
            = GRN_Report_Report_Controller_Utility::getInstance();
        $report_controller_util->exportCustomReport($csv_writer,
            $info_properties['skip'], $info_properties['cid'],
            $info_properties['fid'], $array_export, $list_report_ids, $option,
            $search_ready, $is_manage);
    }

    // Close CSV Writer
    $csv_writer->close();

    // File Download
    cb_prepare_download('report.csv', 'application/csv', false);
    $fp = fopen($temp_file_name, 'rb');
    $file_size = filesize($temp_file_name);
    if (0 < $file_size) {
        echo fread($fp, $file_size);
    }
    fclose($fp);

    // Remove Temporary File
    unlink($temp_file_name);

}

/**
 * クライテリアを元に検索を行う。
 *
 * @param $criteria GRN_Report_Search_Criteria
 *
 * @return array
 */
function search($criteria)
{
    $reports = GRN_Report_Search_Logic::search($criteria);
    $list_report_ids = [];
    foreach ($reports as $report) {
        $list_report_ids[] = $report['_id'];
    }

    return $list_report_ids;
}


/**
 * クライテリアの作成を行う。
 *
 * @param $input
 *
 */
function createCriteria($input)
{
    global $login_user;
    $criteria = new GRN_Report_Search_Criteria($login_user);
    $criteria->target = GRN_REPORT_SEARCH_TARGET_OPERATION;
    $criteria->isManage = true;
    $criteria->and_or = $input['and_or'];
    $criteria->filter_id = cb_at($input, 'filter_id');
    $criteria->form_id = cb_at($input, 'fid');
    //フォームの絞込み
    $formtype = cb_at($input, 'select_form') ? cb_at($input, 'select_form_type')
        : GRN_REPORT_FILTER_FORM_TYPE_ALL;

    require_once('report/controller_util.csp');
    $filter_util = GRN_Report_Filter_Controller_Utility::getInstance();

    for ($i = 0; $i < count($input['type']); $i++) {
        if ($input['type_item'][$i] == 'item') {
            $type = GRN_REPORT_FILTER_TYPE_ITEMDATA;
            $formtype = GRN_REPORT_FILTER_FORM_TYPE_SELECT;
        } else {
            $type = $input['type'][$i];
        }
        $condition = $input['condition'][$i];
        $item_id = explode("_", @$input['item_id'][$i]);
        $item_id = $item_id[0];
        $item_type = @$input['item_type'][$i];
        $item_index = @$input['item_index'][$i] ? $input['item_index'][$i] : 0;

        $value = $filter_util->getConditionValue($input, $i, $type, $item_type,
            $formtype, $item_index);

        if ($formtype == GRN_REPORT_FILTER_FORM_TYPE_SELECT
            && is_numeric($item_id)
        ) {
            $type = GRN_REPORT_FILTER_TYPE_ITEMDATA_DETAIL;
        }

        //条件の追加
        $criteria->addCondition($type, $value, $condition, $item_id);
    }

    //ソートルールを追加
    $criteria->orders = getSortRule(cb_at($input, 'sort'));

    return $criteria;
}

//クライテリアに格納するソート条件を取得
function getSortRule($sort)
{
    $order = null;
    switch ($sort) {
        case 'mtd':
            $order = ['report.col_mtime', 'DESC'];
            break;
        case 'mtu':
            $order = ['report.col_mtime', 'ASC'];
            break;
        case 'rnd':
            $order = ['report.col_name', 'DESC'];
            break;
        case 'rnu':
            $order = ['report.col_name', 'ASC'];
            break;
        case 'cnd':
            $order = ['report.col_creator_name', 'DESC'];
            break;
        case 'cnu':
            $order = ['report.col_creator_name', 'ASC'];
            break;
        default:
            $order = ['report.col_mtime', 'DESC'];
            break;
    }

    return [$order];
}
