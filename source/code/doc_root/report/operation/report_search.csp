<?php
//Instantiate an Smarty object
require_once("grn/smarty.csp");
require_once('report/controller_util.csp');
require_once('report/search_logic.csp');
require_once('report/utility.csp');
require_once('grn/ui.csp');

$t = new GRN_Smarty;
$util = GRN_Report_Filter_Controller_Utility::getInstance();
global $G_INPUT;
global $G_report_login_user;
$form_id = @$G_INPUT['fid'];
$category_id = @$G_INPUT['cid'];

// ログインユーザーが運用管理権限を持つか確認
require_once('report/controller_util.csp');
$category_util = GRN_Report_Category_Controller_Utility::getInstance();
if ( ! $category_util->evaluateManage()) {
    require_once('report/error_code.csp');
    cb_throw_error(E_GRN_RPRT_MANAGE_DENY);
}

// 未分類カテゴリか確認
if (GRN_REPORT_CATEGORY_NONPARTY_ID == $category_id) {
    require_once('report/error_code.csp');
    cb_throw_error(E_GRN_RPRT_MANAGE_DENY_NONPARTY_CATEGORY);
}

// 未分類カテゴリ以外は運用管理権限とアクセス権を確認
$category_util->checkManage($category_id, true, CB_DATABASE_NO_LOCK);
$category_util->checkAccess($category_id, true, CB_DATABASE_NO_LOCK);

$item_map = [
    'id'           => '_id',                  //Item ID
    'display_name' => 'display_name',         //Item Display Name
    'type'         => 'type',                 //Item Type
    'data_type'    => 'data_type',            //Item Data Type
    'form'         => 'form',                 //Item Form
    'display_type' => 'display_type',         //Display_type
    'settings'     => 'settings',             //Settings
];

$item_util = GRN_Report_Item_Controller_Utility::getInstance();
$item_list_for_view = $item_util->getSimpleListView($form_id);

foreach ($item_list_for_view as $key => $item) {
    if ($item['data_type'] == 'grn.report.blank') {
        unset($item_list_for_view[$key]);
    }
}

$and_or = null;
$tmp_key = cb_at($G_INPUT, 'tmp_key');
if ($tmp_key) {
    require_once('fw/session_manager.csp');
    $session_manager = CB_SessionManager::getInstance();
    $session = $session_manager->getSession('export_csv' . $tmp_key);
    $conditions = $session->get('conditions');
    $and_or = $conditions['and_or'];

    $inputs = [];
    for ($i = 0; $i < count($conditions['condition']); $i++) {
        $inputs[$i]['type'] = $conditions['type'][$i];
        $inputs[$i]['condition'] = $conditions['condition'][$i];
        $inputs[$i]['cOption']
            = $util->getSelectableCondition($conditions['type'][$i]);
        $inputs[$i]['id'] = $i;

        if ($conditions['type'][$i] == GRN_REPORT_FILTER_TYPE_CREATE_DATE) {
            $date = new CB_Date();
            $date->year = $conditions['date_value_' . $i . '_year'];
            $date->month = $conditions['date_value_' . $i . '_month'];
            $date->day = $conditions['date_value_' . $i . '_day'];
            $inputs[$i]['date'] = $date;
        }

        if ($conditions['type_item'][$i] == 'item') {
            $inputs[$i]['type'] = GRN_REPORT_FILTER_TYPE_ITEMDATA;

            $inputs[$i]['item_type'] = $conditions['item_type'][$i];
            $item_id = explode("_", $conditions['item_id'][$i]);
            $inputs[$i]['item_id'] = $item_id[0];
            $inputs[$i]['type_item'] = $conditions['type_item'][$i];
            $inputs[$i]['item_name']
                = $item_list_for_view[$inputs[$i]['item_id']]['display_name'];
            $inputs[$i]['cOption']
                = $util->getSelectableConditionByItemDataType($conditions['item_type'][$i]);

            if (strcmp($conditions['item_type'][$i],
                    GRN_REPORT_CONDITION_ITEM_DATE) == 0
            ) {
                $date = new CB_Date();
                $date->year = $conditions['date_value_' . $i . '_year'];
                $date->month = $conditions['date_value_' . $i
                                           . '_month'];
                $date->day = $conditions['date_value_' . $i . '_day'];
                $inputs[$i]['date'] = $date;
            }

            if (strcmp($conditions['item_type'][$i],
                    GRN_REPORT_CONDITION_ITEM_TIME) == 0
            ) {
                $time = new CB_Time();
                $time->hour = $conditions['time_value_' . $i . '_hour'];
                $time->minute = $conditions['time_value_' . $i
                                            . '_minute'];
                $inputs[$i]['time'] = $time;
                $inputs[$i]['interval']
                    = $item_list_for_view[$inputs[$i]['item_id']]['settings']['unit'];
            }
        }

        $inputs[$i]['value'] = $conditions['value'][$i];
    }

    $t->assign('inputs', $inputs);
    $t->assign('autoSearch', true);
    $t->assign('tmp_key', $tmp_key);
} else {
    //テキスト検索から飛んできた場合
    if (strlen(@$G_INPUT['text']) > 0) {
        $text = $G_INPUT['text'];
        $criteria
            = new GRN_Report_Search_Criteria($G_report_login_user);
        $criteria->target = GRN_REPORT_SEARCH_TARGET_OPERATION;
        $criteria->and_or = GRN_REPORT_FILTER_OR;

        $form_util = new GRN_Report_Form_Controller_Utility();

        $form_map = ['name' => 'name'];

        $criteria->addCondition(GRN_REPORT_FILTER_TYPE_ANY, $text,
            GRN_REPORT_FILTER_CONDITION_INCLUDE);

        $inputs = [];

        $c = $criteria->conditions[0];
        $inputs[0]['type'] = $c['type'];
        $inputs[0]['condition'] = $c['condition'];
        $inputs[0]['cOption'] = $util->getSelectableCondition($c['type']);
        $inputs[0]['id'] = 0;

        $inputs[0]['value'] = $c['value'];

        $t->assign('inputs', $inputs);
        $t->assign('autoSearch', true);
    } //初回表示
    else {
        $manager = GRN_UIConfigManager::getInstance();
        $config =& $manager->getUserConfig($G_report_login_user);
        $n_navigation_for_view = grn_make_n_navigation(0, null,
            $config->getListMax());
        //Assign View Set
        $t->assign('navi', $n_navigation_for_view);
    }
}

//Create Parameter Translation for Form
$translation_map_form = [
    'fid'     => '_id',          //Form ID
    'type'    => 'type',         //Form Type
    'name'    => 'name',         //Form Name
    'memo'    => 'memo',         //Form Memo
    'cid'     => 'category',     //Category ID
    'active'  => 'active',       //Form Active
    'deleted' => 'deleted',
];


//Get Form for view
$form_util = GRN_Report_Form_Controller_Utility::getInstance();
$option = [
    'condition' => [
        '0' => [
            'column'   => 'col_type',
            'value'    => '0',
            'operator' => '='
        ]
    ]
];
$form_for_view = $form_util->getView($form_id, $translation_map_form,
    $category_id, $option);
$t->assign('form', $form_for_view);
$t->assign('form_id', $form_id);
$t->assign('category_id', $category_id);

//AND/OR Info
if (is_null($and_or)) {
    $and_or_info = $util->getFilterTypeList(@$criteria->and_or);
} else {
    $and_or_info = $util->getFilterTypeList($and_or);
}
$t->assign('and_or_info', $and_or_info);

//Type Info
$without_form_name = true;
$type_info = $util->getConditionAnyTypeList($without_form_name);
$type_info[3]['item_list'] = $item_list_for_view;

$t->assign('type_info', $type_info);

//Condition Info
$condition_info = $util->getAnyTypeCondition();
$t->assign('condition_info', $condition_info);

$t->assign('diableSelectCategory', true);

//Setting for category tree
// $tree_selected_oid = $category_id;
// $force_tree_initialize = TRUE;
// include('../_category_tree.csp');

//Page Title
$page_title = grn_get_current_page_display_name();
$t->assign('page_title', $page_title);

// site position
$t->assign('site_position', [
        [
            'page' => 'report/index',
            'name' => grn_get_page_display_name('report/index'),
            'sf'   => 1
        ],
        [
            'page' => 'report/operation/report_list',
            'name' => grn_get_page_display_name('report/operation/report_list'),
            'cid'  => $category_id,
            'fid'  => $form_id
        ],
        ['page' => '', 'name' => $page_title]
    ]
);

//Display Smarty Template
$doc_name = cb_get_pagename();
$t->display("{$doc_name}.tpl");

