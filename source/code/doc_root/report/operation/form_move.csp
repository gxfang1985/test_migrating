<?php

global $G_INPUT;

//Instantiate an Smarty object
require_once("grn/smarty.csp");
$t = new GRN_Smarty;

//Get Parameters
$category_id = @  $G_INPUT['cid'];
$form_id = @  $G_INPUT['fid'];

//Get Category and Form Controller Utility
require_once('report/controller_util.csp');
$category_util = GRN_Report_Category_Controller_Utility::getInstance();
$form_util = GRN_Report_Form_Controller_Utility::getInstance();

//Create Parameter Translation Map
$translation_map_category = [
    //Category Information
    'cid'  => '_id',             //Category ID
    'name' => 'name',            //Category Name
    'pcid' => 'parent',          //Category Parent
];

//Create Parameter Translation Map
$translation_map_form = [
    //Category Information
    'fid'      => '_id',             //Form ID
    'category' => 'category',        //Form Category
    'name'     => 'name',            //Form Name
    'type'     => 'type',            //Form Type
];

//Get Form for view
$form_for_view = $form_util->getView($form_id, $translation_map_form);

//Check Category Manage and Access Right
$category_id = $form_for_view['category'];
require_once('report/controller_util.csp');
$category_util = GRN_Report_Category_Controller_Utility::getInstance();
$category_util->checkManage($category_id, true, CB_DATABASE_NO_LOCK);
$category_util->checkAccess($category_id, true, CB_DATABASE_NO_LOCK);

// 未分類カテゴリか確認
if (GRN_REPORT_CATEGORY_NONPARTY_ID == $category_id) {
    require_once('report/error_code.csp');
    cb_throw_error(E_GRN_RPRT_MANAGE_DENY_NONPARTY_CATEGORY);
}

//Get Category for view
$category_for_view = $category_util->getView($category_id,
    $translation_map_category, GRN_REPORT_ACCESS_TYPE_MANAGE);

//Root Category Flag
$is_root = false;
$is_nonparty = false;
if ($category_id == GRN_REPORT_CATEGORY_ROOT_ID || is_null($category_id)) {
    $is_root = true;
} elseif ($category_id == GRN_REPORT_CATEGORY_NONPARTY_ID) {
    $is_nonparty = true;
}

//Get Parent Category
$parent_category_for_view = null;
if ( ! $is_root && ! $is_nonparty) {
    $parent_category_for_view
        = $category_util->getView($category_for_view['pcid'],
        $translation_map_category, GRN_REPORT_ACCESS_TYPE_MANAGE);
}

$selected_category_id = @ $G_INPUT['s_cid'];
if ( ! array_key_exists('ss', $G_INPUT)) {
    //Parent Category
    $selected_category_id = $category_id;
}

// 未分類カテゴリか確認
if (GRN_REPORT_CATEGORY_NONPARTY_ID == $selected_category_id) {
    require_once('report/error_code.csp');
    cb_throw_error(E_GRN_RPRT_MANAGE_DENY_NONPARTY_CATEGORY);
}

global $G_container_base;
$uum =& $G_container_base->getInstance('uum');
$login =& $uum->getLoginUser();

// 移動元、移動先の（未分類以外の）カテゴリの運用管理権限を確認
require_once('report/manage_logic.csp');
$is_disabled_move = false;
$manage_logic = GRN_Report_Category_Manage_Logic::getInstance();
$cids = [$category_id, $selected_category_id];
$evaluated_category_list = $manage_logic->evaluateCategoryList($cids,
    $login->getOID());
if (isset($evaluated_category_list[$selected_category_id])) {
    $is_disabled_move = ! $evaluated_category_list[$selected_category_id];
}
$t->assign("is_disabled_move", $is_disabled_move);

// 移動元、移動先の（未分類以外の）カテゴリのアクセス権を確認
require_once('report/access_logic.csp');
$access_logic = GRN_Report_Category_Access_Logic::getInstance();
$evaluated_category_list = $access_logic->evaluateCategoryList($cids,
    $login->getOID());
foreach ($evaluated_category_list as $evaluated_category) {
    if ( ! $evaluated_category) {
        cb_throw_error(E_GRN_RPRT_ACCESS_DENY);
    }
}

//Create Category Tree for View 
$tree_category_name_list = [];
$category_tree_list_for_view = $category_util->getTreeListView($category_id,
    $translation_map_category, GRN_REPORT_ACCESS_TYPE_MANAGE, false, true);
foreach (array_keys($category_tree_list_for_view) as $category_tree_id) {
    $tree_category_name_list[]
        = $category_tree_list_for_view[$category_tree_id]['name'];
}
$category_for_view['path'] = implode(' > ', $tree_category_name_list);

//Create Target Category Information
$target_category_information_for_view = [];
$target_category_information_for_view = $category_for_view;

//Crteate Params
$params = ['fid' => $form_id];

//Check Search Flag
if (array_key_exists('text', $G_INPUT)) {
    //Select Category

    //Create Search Information
    $search_info['text'] = $G_INPUT['text'];
    $search_info['limit'] = -1;
    $search_info['offset'] = 0;

    //Get Search Category List
    $search_category_list_for_view = $category_util->search($search_info,
        $translation_map_category, GRN_REPORT_ACCESS_TYPE_MANAGE);
    if (array_key_exists($category_id, $search_category_list_for_view)) {
        unset($search_category_list_for_view[$category_id]);
    }

    if (is_array($search_category_list_for_view)
        && 0 < count($search_category_list_for_view)
    ) {
        // 移動先の親カテゴリの運用管理権限を確認
        $cids = array_keys($search_category_list_for_view);
        $cids = $manage_logic->evaluateCategoryList($cids, $login->getOID());

        //Check Current Category
        if (array_key_exists($category_id, $search_category_list_for_view)) {
            unset($search_category_list_for_view[$category_id]);
        }

        //Create Search Information for View
        $search_information_for_view = [];
        foreach (
            array_keys($search_category_list_for_view) as $search_category_id
        ) {
            if ( ! $cids[$search_category_id]) {
                unset($search_category_list_for_view[$search_category_id]);
                continue;
            }

            //Create Category Path
            $tree_category_name_list = [];
            $tree_category_list_for_view
                = $category_util->getTreeListView($search_category_id,
                $translation_map_category, GRN_REPORT_ACCESS_TYPE_MANAGE, true,
                true);
            foreach (
                array_keys($tree_category_list_for_view) as $tree_category_id
            ) {
                $tree_category_name_list[]
                    = $tree_category_list_for_view[$tree_category_id]['name'];
            }
            $search_category_list_for_view[$search_category_id]['path']
                = implode(' > ', $tree_category_name_list);
        }
    }

    $search_information_for_view['result'] = $search_category_list_for_view;
    $search_information_for_view['count']
        = count($search_category_list_for_view);
    $search_information_for_view['text'] = $G_INPUT['text'];

    //Assign Catehgory ID
    $t->assign('category_id', $category_id);
    //Assign Form ID
    $t->assign('form_id', $form_id);

    //Assign Selected Category ID
    $t->assign('set_category_id', $selected_category_id);
    //Assign Target Category
    $t->assign('current', $target_category_information_for_view);
    //Assign Search
    $t->assign('search', $search_information_for_view);
    //Assign Form
    $t->assign('form', $form_for_view);

    //Assign Params
    $t->assign('params', $params);
} else {
    //Not Search

    //Get Selected Category for View
    $selected_category_for_view = $category_util->getView($selected_category_id,
        $translation_map_category, GRN_REPORT_ACCESS_TYPE_MANAGE);

    //Get Selected Category Tree List for View
    if ($selected_category_id == GRN_REPORT_CATEGORY_ROOT_ID) {
        $selected_category_tree_list_for_view
            = $category_util->getTreeListView($selected_category_id,
            $translation_map_category, GRN_REPORT_ACCESS_TYPE_MANAGE, false,
            false);
    } else {
        $selected_category_tree_list_for_view
            = $category_util->getTreeListView($selected_category_id,
            $translation_map_category, GRN_REPORT_ACCESS_TYPE_MANAGE, true,
            false);
    }

    // 移動先の親カテゴリの運用管理権限を確認
    $cids = array_keys($selected_category_tree_list_for_view);
    $evaluated_category_list = $manage_logic->evaluateCategoryList($cids,
        $login->getOID());
    foreach ($evaluated_category_list as $cid => $evaluated_category) {
        $selected_category_tree_list_for_view[$cid]['disabled']
            = ! $evaluated_category;
    }

    //Get Selected Category Child List for View
    // 移動先のカテゴリにアクセス権、運用管理権限があるなら、そのすべての子カテゴリにもある
    $selected_category_child_list_for_view
        = $category_util->getChildListView($selected_category_id,
        $translation_map_category, GRN_REPORT_ACCESS_TYPE_MANAGE);

    //Create Selected Category Information
    $selected_category_information_for_view = [];
    $selected_category_information_for_view
        = $selected_category_for_view;
    $selected_category_information_for_view['ancestors']
        = $selected_category_tree_list_for_view;
    $selected_category_information_for_view['children']
        = $selected_category_child_list_for_view;

    //Assign Display Infomation

    //Assign Category ID
    $t->assign('category_id', $category_id);
    //Assign Form ID
    $t->assign('form_id', $form_id);

    //Assign Selected Category ID
    $t->assign('set_category_id', $selected_category_id);
    //Assign Target Category
    $t->assign('current', $target_category_information_for_view);
    //Assign Selected Category
    $t->assign('category', $selected_category_information_for_view);
    //Assign Form
    $t->assign('form', $form_for_view);

    //Assign Params
    $t->assign('params', $params);
}

//-- Set Page Title and Site Position

//Ppage Title
$page_title = grn_get_current_page_display_name();
$t->assign('page_title', $page_title);

//Site Position
$t->assign('site_position', [
        [
            'page' => 'report/index',
            'name' => grn_get_page_display_name('report/index'),
            'sf'   => 1
        ],
        [
            'page' => 'report/operation/form_list',
            'name' => grn_get_page_display_name('report/operation/form_list'),
            'cid'  => $category_id,
            'sf'   => 1
        ],
        [
            'page' => 'report/operation/form_view',
            'name' => grn_get_page_display_name('report/operation/form_view'),
            'cid'  => $category_id,
            'fid'  => $form_id
        ],
        ['page' => '', 'name' => $page_title]
    ]
);

//Display Smarty Template
$doc_name = cb_get_pagename();
$t->display("{$doc_name}.tpl");
