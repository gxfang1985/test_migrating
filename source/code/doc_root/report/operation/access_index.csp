<?php

global $G_INPUT;

require_once("grn/smarty.csp");
$t = new GRN_Smarty;

//Set Application Name
global $G_report_app_name;
$t->assign('app_name', $G_report_app_name);

//Get Parameters
$node_id = @ $G_INPUT['nid'];   //Category ID

//Get Report and Category Controller Utility
require_once('report/controller_util.csp');
$category_util = GRN_Report_Category_Controller_Utility::getInstance();

//Check Category ID
require_once('report/resources.csp');
$node_id = $node_id ? $node_id : GRN_REPORT_CATEGORY_ROOT_ID;

//Create Parameter Translation for Category
$translation_map = [
    'nid'         => '_id',          //Category ID
    'name'        => 'name',         //Cattegory Name
    'foreign_key' => 'foreign_key',  //Cattegory Foregin Key
    'memo'        => 'memo',         //Category Memo
    'child_count' => 'count',        //Children Category Count
];

//Get Category for View
$category_for_view = $category_util->getView($node_id, $translation_map,
    GRN_REPORT_ACCESS_TYPE_MANAGE);

//Get Child Category List for View
$child_category_list_for_view = $category_util->getChildListView($node_id,
    $translation_map, GRN_REPORT_ACCESS_TYPE_MANAGE);

//Get Tree Category List for View
if ($node_id == GRN_REPORT_CATEGORY_ROOT_ID) {
    $tree_category_list_for_view = $category_util->getTreeListView($node_id,
        $translation_map, GRN_REPORT_ACCESS_TYPE_MANAGE, false, false);
} else {
    $tree_category_list_for_view = $category_util->getTreeListView($node_id,
        $translation_map, GRN_REPORT_ACCESS_TYPE_MANAGE, true, false);
}

//Create Category Information
$category_information_for_view = $category_for_view;
$category_information_for_view['children'] = $child_category_list_for_view;
$category_information_for_view['ancestors'] = $tree_category_list_for_view;

//Assign Category
$node =& $category_information_for_view;

//--access information
if ($node_id) {
    require_once('grn/access_resources.csp');

    $access = [];

    //Create Parameter Translation for Access
    $translation_map_access = [
        'tid'            => 'target',           //Target ID
        'type'           => 'type',             //Target Type
        'data'           => 'authority_browse', //Authority List
        'security_model' => 'security_model',   //Security Model
    ];

    //Get Access List
    require_once('report/controller_util.csp');
    $category_access_util
        = GRN_Report_Category_Access_Controller_Utility::getInstance();
    $access_list_for_view = $category_access_util->getListView($node_id, 'user',
        $translation_map_access, true);
    $access_list_for_view = array_merge($access_list_for_view,
        $category_access_util->getListView($node_id, 'group',
            $translation_map_access, true));
    $access_list_for_view = array_merge($access_list_for_view,
        $category_access_util->getListView($node_id, 'static_role',
            $translation_map_access, true));
    $access_list_for_view = array_merge($access_list_for_view,
        $category_access_util->getListView($node_id, 'dynamic_role',
            $translation_map_access, true));

    //Get Security Model
    require_once('report/access_logic.csp');
    $category_access_logic = GRN_Report_Category_Access_Logic::getInstance();
    $security_model = $category_access_logic->getSecurityModel($node_id);

    //Create Access Information
    $access_for_view = current($access_list_for_view);
    $access_information_for_view['security_model'] = $security_model;
    $access_information_for_view['list'] = $access_list_for_view;
    $access_information_for_view['count']
        = count($access_list_for_view);
    $access
        =& $access_information_for_view;
}

//Assign Smarty Variable
$t->assign('node_id', $node_id);  //Category ID
$t->assign('node', $node);     //Category Tree
$t->assign('access', @ $access); //Category Access Right
$t->assign('is_manage',
    $category_util->checkManage($node_id, false, CB_DATABASE_NO_LOCK));
$t->assign('is_root', ($node_id
                       == GRN_REPORT_CATEGORY_ROOT_ID));                   //Root Category Flag

//-- set page title and site position

//page title
$page_title = grn_get_current_page_display_name();
$t->assign('page_title', $page_title);

// site position
$t->assign('site_position', [
        [
            'page' => 'report/index',
            'name' => grn_get_page_display_name('report/index'),
            'sf'   => 1
        ],
        ['page' => '', 'name' => $page_title]
    ]
);

//Display Smarty Template
$doc_name = cb_get_pagename();
$t->display("{$doc_name}.tpl");


