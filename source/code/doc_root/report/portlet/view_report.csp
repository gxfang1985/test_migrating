<?php

require_once('portal/error_code.csp');
if ( ! isset($portlet)) {
    cb_throw_error(E_GRN_PRTL_PORTLET_INVALID_ACCESS);
}

// ユーザー取得
global $G_container_base;
$uum =& $G_container_base->getInstance('uum');
$user =& $uum->getLoginUser();
if ( ! $user) {
    require_once('grn/error_code.csp');
    cb_throw_error(E_GRN_USER_NOT_FOUND);
}

require_once('grn/ui.csp');
$manager = GRN_UIConfigManager::getInstance();
assert('is_object( $manager ) && is_a( $manager, \'GRN_UIConfigManager\' )');
$config =& $manager->getUserConfig($user);

//Get Smarty Instance
require_once("grn/smarty.csp");
$t = new GRN_Smarty;

$portlet_settings = array_key_exists('settings', $portlet)
    ? $portlet['settings'] : [];

$rows = array_key_exists('rows', $portlet_settings) ? $portlet_settings['rows']
    : '';
if (is_null($rows) || (strlen($rows) == 0)) {
    $rows = 5;
}
$font_size = array_key_exists('font_size', $portlet_settings)
    ? $portlet_settings['font_size'] : '';
if (is_null($font_size) || (strlen($font_size) == 0)) {
    $font_size = 'normal';
}

$creator = array_key_exists('creator', $portlet_settings)
    ? $portlet_settings['creator'] : '';
if (is_null($creator) || (strlen($creator) == 0)) {
    $creator = 1;
}
$mtime = array_key_exists('mtime', $portlet_settings)
    ? $portlet_settings['mtime'] : '';
if (is_null($mtime) || (strlen($mtime) == 0)) {
    $mtime = 1;
}

$settings_for_view = [
    'font_size' => $font_size,
    'creator'   => $creator,
    'mtime'     => $mtime,
    'rows'      => $rows
];

$display_type = array_key_exists('type', $portlet_settings)
    ? $portlet_settings['type'] : '';
$limit = array_key_exists('rows', $portlet_settings)
    ? $portlet_settings['rows'] : 5;

if (is_null($display_type) || (strlen($display_type) == 0)) {
    // デフォルトのフォルダタイプID（受信一覧）をセット
    $display_type = GRN_REPORT_SEARCH_TARGET_RECEIVED;
}

//Create Parameter Translation for Petition
$translation_map = [
    'id'                   => '_id',
    //Report ID
    'name'                 => 'name',
    //Report Name
    'form'                 => 'form',
    //Report Form ID
    'form_name'            => 'form_name',
    //Report Form Name
    'creator'              => 'creator',
    //Report Creator
    'creator_name'         => 'creator_name',
    //Report Creator Name
    'creator_foreign_key'  => 'creator_foreign_key',
    //Report Creator Foreign Key
    'modifier'             => 'modifier',
    //Report Modifier
    'modifier_name'        => 'modifier_name',
    //Report Modifier Name
    'modifier_foreign_key' => 'modifier_foreign_key',
    //Report Modifier Foreign Key
    'ctime'                => 'ctime',
    //Report Create Time
    'mtime'                => 'mtime',
    //Report Modify Time
    'private'              => 'private',
    //Report Private
];

//Create List Option
$option['list'] = [];
$option['list']['limit'] = $limit;

require_once('report/controller_util.csp');
$report_util = new GRN_Report_Report_Controller_Utility();

//Get Report List
switch ($display_type) {
    /*
    case GRN_REPORT_SEARCH_TARGET_RECEIVED:
        //受信一覧
        $report_list_for_view = $report_util->getReceiveList($user, $translation_map, $option);
        $typename = cb_msg( GRN_REPORT_MODULE_ID, 'search.target.receive' );
        break;
    */
    case GRN_REPORT_SEARCH_TARGET_SEND:
        //送信一覧
        $report_list_for_view = $report_util->getSendList($user,
            $translation_map, $option);
        $typename = cb_msg(GRN_REPORT_MODULE_ID,
            'search.target.send');
        $view_page = "report/view";
        break;
    case GRN_REPORT_SEARCH_TARGET_DRAFT:
        //下書き
        $report_list_for_view = $report_util->getDraftList($user,
            $translation_map, $option);
        $typename = cb_msg(GRN_REPORT_MODULE_ID,
            'search.target.draft');
        $view_page = "report/view_draft";
        break;
    case GRN_REPORT_SEARCH_TARGET_ALL:
        //全ての報告書
        $report_list_for_view = $report_util->getAllList($user,
            $translation_map, $option);
        $typename = cb_msg(GRN_REPORT_MODULE_ID,
            'search.target.all');
        $view_page = "report/view";
        break;
    default:
        if (is_numeric($display_type)) {
            //絞込
            $report_list_for_view = [];

            $filter_id = $display_type;

            require_once('report/filter_logic.csp');
            $filter_logic = GRN_Report_Filter_Logic::getInstance();
            $filter = $filter_logic->get($filter_id);

            $category_util
                = GRN_Report_Category_Controller_Utility::getInstance();
            if ( ! empty($filter['col_category'])) {
                $accessible
                    = $category_util->checkAccess($filter['col_category'],
                    false, CB_DATABASE_DEFAULT_LOCK, false, $user->getOID());
            } else {
                // Belong to Uncategorized, allow for all
                $accessible = true;
            }

            if ($filter && $filter['col_active'] && $accessible) {
                $report_list_for_view = $report_util->getListByFilterId($user,
                    $filter_id, $translation_map, $option);

                $t->assign('filter', $filter);
            }

            $t->assign('filter_id', $filter_id);

            $typename = cb_msg(GRN_REPORT_MODULE_ID,
                'search.target.filter');
            $display_type = GRN_REPORT_SEARCH_TARGET_FILTER;
        } else {
            //受信一覧
            $report_list_for_view = $report_util->getReceiveList($user,
                $translation_map, $option);
            $typename = cb_msg(GRN_REPORT_MODULE_ID,
                'search.target.receive');
            $display_type = GRN_REPORT_SEARCH_TARGET_RECEIVED;
        }
        $view_page = "report/view";
        break;
}

$creator_ids = [];
foreach ($report_list_for_view as $report) {
    if (isset($report['creator'])) {
        $creator_ids[] = $report['creator'];
    }
}
$users = $uum->getUsersInfo($creator_ids, ['col_valid']);
foreach (array_keys($report_list_for_view) as $report_id) {
    if (isset($report_list_for_view[$report_id]['creator'])) {
        $cid = $report_list_for_view[$report_id]['creator'];
        $report_list_for_view[$report_id]['user_valid']
            = $users[$cid]['col_valid'];
    }
}

//Assign include_php Parameter
$t->assign('settings', $settings_for_view);
$t->assign('report_list', $report_list_for_view);
$t->assign('display_type', $display_type);
$t->assign('display_type_name', $typename);
$t->assign('view_page', $view_page);
$t->assign('portlet', $portlet);
$t->assign('name_width', $config->getNameWidth());//GRN_REPORT_NAME_WIDTH
$t->assign('subject_width_fix',
    GRN_REPORT_SUBJECT_WIDTH);//GRN_REPORT_SUBJECT_WIDTH );
$t->assign('subject_width',
    $config->getSubjectWidth());//GRN_REPORT_SUBJECT_WIDTH );
$t->assign('show_user_num', GRN_REPORT_SHOW_MAX_USER_NUM);

$star_unique_ids = [];
foreach ($report_list_for_view as $rid => $report) {
    $star_unique_ids[] = $rid;
}
require_once('star/logic.csp');
$star_logic = GRN_Star_StarLogic::getInstance();
$use_star = $star_logic->isActive();
$t->assign('use_star', $use_star);
$t->assign('star_infos',
    $star_logic->getStatusByIDs($user, 'grn.report', $star_unique_ids));
//Set Page Title
if ($portlet['title'] === '') {
    require_once('grn/application.csp');
    $app_locator = GRN_ApplicationLocator::instance();
    $app_name = $app_locator->getName('report');
    $page_title = cb_plain_msg(GRN_REPORT_MODULE_ID, 'portlet_view_report',
        ['app_name' => $app_name]);
} else {
    $page_title = $portlet['title'];
}
$t->assign('name_format', $name_format);
$t->assign('page_title', $page_title);
$t->assign('display_name_mode', $portlet['display_name_mode']);

//Ignore Licence Warnning
$t->skipWarning();

//Display Smarty Template
$t->display("report/portlet/view_report.tpl");


