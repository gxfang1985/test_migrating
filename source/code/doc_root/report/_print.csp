<?php

global $G_INPUT;

//Not Display Copyright
$G_state_set->set('copyright_should_be_written', false);
$G_state_set->set('html_should_be_closed', false);

//Skip Warning
$t->skipWarning();

$page_title = grn_get_current_page_display_name();
$t->assign('report_title', $page_title);
$page_name = cb_get_pagename();

require_once('report/controller_util.csp');
$controller_util = new GRN_Report_ControllerUtil($page_name);

$report_id = null;
if (array_key_exists('rid', $G_INPUT)) {
    $report_id = $G_INPUT['rid'];
}
$t->assign('rid', $report_id);

global $G_container_base;
$uum =& $G_container_base->getInstance('uum');
$login =& $uum->getLoginUser();
$user_id = $login->getOID();

//Get Report and Item Data Controller Utility
require_once('report/controller_util.csp');
$report_util = GRN_Report_Report_Controller_Utility::getInstance();
$item_data_util = GRN_Report_ItemData_Controller_Utility::getInstance();

//Create Parameter Translation Map
$translation_map_report = [
    'rid'                  => '_id',
    //Report ID
    'name'                 => 'name',
    //Report Name
    'form'                 => 'form',
    //Report Form ID
    'form_name'            => 'form_name',
    //Report Form Name
    'category'             => 'category',
    //Category ID
    'creator'              => 'creator',
    //Report Creator
    'creator_name'         => 'creator_name',
    //Report Creator Name
    'creator_foreign_key'  => 'creator_foreign_key',
    //Report Creator Foreign Key
    'modifier'             => 'modifier',
    //Report Modifier
    'modifier_name'        => 'modifier_name',
    //Report Modifier Name
    'modifier_foreign_key' => 'modifier_foreign_key',
    //Report Modifier Foreign Key
    'ctime'                => 'ctime',
    //Report Create Time
    'mtime'                => 'mtime',
    //Report Modify Time
    'private'              => 'private',
    //Report Private
    'enable_follow'        => 'enable_follow',
    //Report Enable Follow
    'enable_member'        => 'enable_member',
    //Report Enable Member
    'enable_partner'       => 'enable_partner',
    //Report Enable Partner
    'draft'                => 'draft',
    //Draft
];

//Create Parameter Translation Map
$translation_map_item_data = [
    //Item Data Information
    'iid'                => 'itemdata_id',
    //Item Data ID
    'display_name'       => 'itemdata_display_name',
    //Item Data Display Name
    'type'               => 'itemdata_type',
    //Item Data Type
    'option_string'      => 'itemdata_option_string',
    //Item Data Option String
    'option_string_type' => 'itemdata_option_string_type',
    //Item Data Option String Type
    'data_type'          => 'itemdata_data_type',
    //Item Data data_type
    'settings'           => 'itemdata_settings',
    //Item Data Settings
    'required'           => 'itemdata_required',
    //Item Data Reuired Flag
    'list_index'         => 'itemdata_list_index',
    //Item Data List Index
    'number'             => 'itemdata_number',
    //Item Data Number Value
    'text'               => 'itemdata_text',
    //Item Data text Value
    //Item Data File Information
    'fid'                => 'filerelation_id',
    //Item Data File ID
    'file'               => 'filerelation_file',
    //Item Data File ID
    'files'              => 'itemdata_files',
    //Item Data File ID List
];

//Get Report for view
$report = $report_util->getView($report_id, $translation_map_report);

if (array_key_exists('creator', $report)) {
    $user =& $uum->getUser($report['creator']);
    if ($user) {
        $report['creator_valid'] = $user->get('valid');
    }
} else {
    $report['creator_valid'] = false;
}
if (array_key_exists('modifier', $report)) {
    $modifier =& $uum->getUser($report['modifier']);
    if ($modifier) {
        $report['modifier_valid'] = $modifier->get('valid');
    }
}

//Get Report Members
require_once('report/member_manager.csp');
$member_manager = GRN_Report_Member_Manager::getInstance();
$members =& $member_manager->getList($report_id);
$members_info = GRN_ControllerUtil::getUserInfoToShowUserName($members,
    $login);

//Reorder $members_info
$members_info = array_replace(array_flip($members), $members_info);

foreach ($members as $member_id) {
    if ( ! array_key_exists($member_id, $members_info)) {
        $deleted_members_info = $uum->getUserInfo($member_id,
            ['col_display_name'], 0, 1, null, true);
        $members_info[$member_id]['name']
            = $deleted_members_info['col_display_name'];
    }
}
//Get Report Partners
require_once('report/partner_manager.csp');
$partner_manager = GRN_Report_Partner_Manager::getInstance();
$partner_rows =& $partner_manager->getList($report_id);
require_once('report/partner.csp');
$partners = GRN_ReportPartnerData::createByRows($partner_rows);
$t->assign('partners', $partners);

//スケジュールとの関連を持っているか調べる
require_once('report/report_schedule_logic.csp');
$report_schedule_logic = GRN_Report_Report_Schedule_Logic::getInstance();
$event_info = $report_schedule_logic->getRelatedEventId($report_id);
if (is_numeric($event_info['event_id']) && $event_info['event_id'] > 0) {
    $t->assign('event_id', $event_info['event_id']);
    require_once('schedule/application.csp');
    $app = GRN_Schedule_Application::getInstance();

    $date = new CB_Date();
    if ( ! $date->parse($event_info['date'])) {
        $date = false;
    }
    $event
        = &$report_schedule_logic->getEventDataByEventId($G_report_login_user,
        $event_info['event_id'], $date, GRN_SCHEDULE_GET_MEMBER_ID,
        $report['draft']);
    if ($event) {
        $t->assign('event', $event);
    }
    $t->assign('event_date', $event_info['date']);
}

//Assign
$t->assign('report', $report);
$t->assign('members', $members);
$t->assign('members_info', $members_info);
$t->assign('page_title', $page_title);

//Get Form for View (if Active and Not Deleted.)
$category_id = null;
if ( ! is_null($report['form'])) {
    $form_util = GRN_Report_Form_Controller_Utility::getInstance();

    //Create Parameter Translation Map
    $translation_map_form = [
        'fid'           => '_id',      //Form ID
        'active'        => 'active',   //Form Active
        'deleted'       => 'deleted',  //Form Deleted
        'enable_follow' => 'enable_follow', //Enable Follow
        'category'      => 'category', //Category ID
    ];

    //Get Form
    $option = [
        'condition' => [
            '0' => [
                'column'   => 'col_type',
                'value'    => '0',
                'operator' => '='
            ]
        ]
    ];

    $form = $form_util->getView($report['form'], $translation_map_form, null,
        $option);
    if ($form) {
        if ($form['active'] == 1 && $form['deleted'] != 1) {
            $category_id = $form['category'];

            //Assign Form
            $t->assign('fid', $form['fid']);
            $t->assign('form', $form);
        } elseif (array_key_exists('category', $report)) {
            $category_id = $report['category'];
        }
    }
}

if (0 == strlen($category_id)) {
    $category_id = GRN_REPORT_CATEGORY_NONPARTY_ID;
}

$t->assign('cid', $category_id);

//Get Item Data List for view
$item_data_list = $item_data_util->getListViewEx($translation_map_item_data,
    $report_id);
foreach (array_keys($item_data_list) as $item_data_id) {
    $item_data_list[$item_data_id]['view_mode_print'] = 'view';
}

//Assign Item Data List
$t->assign('item_data_list', $item_data_list);

//Assign Site Position
$page_infos = [
    'index' => [],
    'view'  => null
];
$site_position = $controller_util->makeSitePosition('report/', $page_infos);
$t->assign('site_position', $site_position);
