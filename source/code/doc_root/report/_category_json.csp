<?php

require_once('report/category_tree.csp');
$class_name = 'GRN_Report_CategoryTree';

if (strcasecmp(@ $_SERVER['REQUEST_METHOD'], 'POST') != 0) {
    cb_safe_exit();
} // for javascript hijacking

require_once("grn/smarty.csp");
$t = new GRN_Smarty;

global $G_state_set;
$G_state_set->set('copyright_should_be_written', false);
$G_state_set->set('html_should_be_closed', false);
$t->skipWarning();

require_once('grn/org_tree.csp');

$oid = @$G_INPUT['oid'];
$action = @$G_INPUT['action'];
$children = [];
$page_name = @$G_INPUT['page'];

$is_valid_oid = is_numeric($oid);
$org_json_template = 'report/category_json.tpl';

$util = GRN_OrgTreeUtil::getInstance();
$tree = $util->getTree($page_name, @$class_name, @$params);
if ($is_valid_oid && ! $tree->containNode($oid)) {
    require_once('report/category_logic.csp');
    $category_logic = GRN_Report_Category_Logic::getInstance();

    $cid = $oid;
    $parent_categories = [];
    while ($parent_category = $category_logic->getParent($cid)) {
        $cid = $parent_category['_id'];
        if ($cid != 1) {
            array_push($parent_categories, $cid);
        }
    }
    while ($cid = array_pop($parent_categories)) {
        $tree->buildChild($cid, true);
    }
}

$children = [];
if ($tree && $is_valid_oid) {
    switch ($action) {
        case 'getchild':
            $children = $tree->buildChild($oid);
            $tree->expand($oid);
            $t->assign('oid', $oid);
            if ($children === false) {
                $children = [];
            }
            break;
        case 'expand':
            $tree->expand($oid);
            $t->assign('oid', $oid);
            break;
        case 'collapse':
            $tree->collapse($oid);
            $t->assign('oid', $oid);
            break;
    }
    $util->setTree($page_name, $tree);
}
$t->assign('selected_node', $tree->getSelectedNode());
$t->assign('org', $tree->getRoot());

header("X-Cybozu-Json: 1 ");
$t->display($org_json_template);
