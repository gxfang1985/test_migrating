<?php

use grn\grn\access\service\AppAccess;

global $G_INPUT;

require_once('grn/smarty.csp');
$t = new GRN_Smarty;

$page_title = grn_get_current_page_display_name();
$t->assign('report_title', $page_title);
$page_name = cb_get_pagename();

require_once('report/controller_util.csp');
$controller_util = new GRN_Report_ControllerUtil($page_name);

$report_id = null;
if (array_key_exists('rid', $G_INPUT)) {
    $report_id = $G_INPUT['rid'];
}
$t->assign('report_id', $report_id);

global $G_container_base;
$uum =& $G_container_base->getInstance('uum');
$login =& $uum->getLoginUser();
$user_id = $login->getOID();

$report_util = GRN_Report_Report_Controller_Utility::getInstance();
$report = $report_util->getReportView($report_id, true);

//Check Report is Private
$view = false;
$is_private = false;
if (array_key_exists('private', $report) && $report['private']) {
    $is_private = true;
}

// Check Login User is Report Creator
if ($G_report_login_user->getOID() != $report['creator']) {
    require_once('report/error_code.csp');
    cb_throw_error(E_GRN_RPRT_REPORT_DENY_ACCESS);
}
$t->assign('is_creator', true);


//Get Report Members
require_once('report/member_manager.csp');
$member_manager = GRN_Report_Member_Manager::getInstance();
$members =& $member_manager->getList($report_id);

//Get Report Notification
require_once('report/notification_manager.csp');
$notification_manager = GRN_Report_Notification_Manager::getInstance();
$notificationUsers =& $notification_manager->getList($report_id);

//Get Report Partners
require_once('report/partner_manager.csp');
$partner_manager = GRN_Report_Partner_Manager::getInstance();
$partner_rows =& $partner_manager->getList($report_id);
require_once('report/partner.csp');
$partners = GRN_ReportPartnerData::createByRows($partner_rows);

require_once('report/address_util.csp');
$t->assign('address_available',
    $address_available = GRN_ReportAddressUtil::isAddressAvailable());
$t->assign('address_available_for_external',
    AppAccess::isAppAvailableExternalAccess('address'));

//Assign Report
$t->assign('report', $report);
$t->assign('members', $members);
$t->assign('partners', $partners);
$t->assign('notificationUsers', $notificationUsers);

//Get Form for View (if Active and Not Deleted.)
$category_id = null;
if ( ! is_null($report['form'])) {
    //Get Form
    $form_util = GRN_Report_Form_Controller_Utility::getInstance();
    $form = $form_util->getSimpleView($report['form']);

    if ($form) {
        if ($form['active'] == 1 && $form['deleted'] != 1) {
            $category_id = $form['category'];

            //Assign Form ID
            $t->assign('fid', $form['fid']);
            $t->assign('form', $form);
        } elseif (array_key_exists('category', $report)) {
            $category_id = $report['category'];
        }
    }
}

if (isset($form['name']) && isset($report['name'])) {
    $t->assign('page_title', $form['name'] . '（' . $report['name'] . '）');
    $t->assign('report_title', $form['name'] . '（' . $report['name'] . '）');
} elseif (isset($report['form_name']) && (isset($report['name']))) {
    $t->assign('page_title',
        $report['form_name'] . '（' . $report['name'] . '）');
    $t->assign('report_title',
        $report['form_name'] . '（' . $report['name'] . '）');
} else {
    $t->assign('page_title', $page_title);
    $t->assign('report_title', $report['name']);
}

if (0 == strlen($category_id)) {
    $category_id = GRN_REPORT_CATEGORY_NONPARTY_ID;
}

$t->assign('cid', $category_id);

// Category Access Right
$is_accessible_category = false;
$category_util = GRN_Report_Category_Controller_Utility::getInstance();
if ($category_id == GRN_REPORT_CATEGORY_NONPARTY_ID
    || $category_util->checkCategoryAccess($category_id, false)
) {
    $is_accessible_category = true;
}

$t->assign('accessible_category', $is_accessible_category);

$item_data_util = GRN_Report_ItemData_Controller_Utility::getInstance();
$item_data_list = $item_data_util->getSimpleListView($report_id);
$t->assign('item_data_list', $item_data_list);

//関連するイベントを取得する
require_once('report/report_schedule_logic.csp');
$report_schedule_logic = GRN_Report_Report_Schedule_Logic::getInstance();
$event_info = $report_schedule_logic->getRelatedEventId($report_id);
if (is_numeric($event_info['event_id'])) {
    $t->assign('event_id', $event_info['event_id']);
    $report_schedule_util
        = GRN_Report_Report_Schedule_Controller_Utility::getInstance();
    $event =& $report_schedule_util->getEvent($G_report_login_user, $event_info,
        GRN_SCHEDULE_GET_MEMBER_ID, GRN_REPORT_DRAFT);
    if ($event) {
        $t->assign('event', $event);
        $t->assign('event_date', $event_info['date']);
    } else {
        //アクセスできない場合は削除されたorアクセス権が無いと表示する
        //関連を削除する
        $report_schedule_logic->removeRelation($report_id,
            $event_info['event_id']);
    }
}

//draft delete info
$delete_info = [
    'title'      => grn_get_page_display_name('report/delete_draft'),
    'page'       => 'report/delete_draft.tpl',
    'no_confirm' => false,
    'data'       => [
        'rid'    => $report_id,
        'report' => $report
    ],
    'handler'    => 'lnk_delete',
];
$t->assign('delete_info', $delete_info);

// star
require_once('star/logic.csp');
$star_logic = GRN_Star_StarLogic::getInstance();
$use_star = $star_logic->isActive();
$t->assign('use_star', $use_star);
if ($use_star) {
    $t->assign('star_infos',
        $star_logic->getStatusByIDs($login, GRN_REPORT_MODULE_ID,
            [$report_id]));
}
// end star

//Confirm Notification
require_once('report/report_logic.csp');
$logic = GRN_Report_Report_Logic::getInstance();
$logic->read($user_id, $report_id);

//Assign Site Position
$page_infos = [
    'index'      => ['sf' => 1],
    'view_draft' => null
];
$site_position = $controller_util->makeSitePosition('report/', $page_infos);
$t->assign('site_position', $site_position);

$t->display("{$page_name}.tpl");


