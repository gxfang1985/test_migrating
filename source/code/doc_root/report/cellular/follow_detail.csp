<?php

//Parameter
$report_id = @ $G_INPUT['rid'];
$follow_id = @ $G_INPUT['follow_id'];
$type = @ $G_INPUT['type'];

//Smarty
require_once('cellular/smarty.csp');
$smarty = new GRN_Cellular_Smarty;

//Page Information
$smarty->assign('pagetitle', grn_get_current_page_display_name());
$smarty->assign('pagepath', $G_pagepath);
$smarty->assign('pagename', cb_get_pagename());

if ( ! strlen($follow_id)) {
    require_once('report/error_code.csp');
    cb_throw_error(E_GRN_RPRT_FOLLOW_NOT_FOUND);
}

$user_id = $G_login_user->getOID();

//Get Report
require_once('report/controller_util.csp');
$report_util = GRN_Report_Report_Controller_Utility::getInstance();
$report = $report_util->getSimpleView($report_id);
$smarty->assign('report', $report);

//Create Parameter Translation Map for Follow
$translation_map_follow = [
    'id'                  => '_id',
    'creator'             => 'creator',
    'creator_foreign_key' => 'creator_foreign_key',
    'creator_name'        => 'creator_name',
    'ctime'               => 'ctime',
    'data'                => 'data',
    'follow_id'           => 'follow_id',
    'html'                => 'html',
    'report'              => 'report',
];

//Get Follow
require_once('report/controller_util.csp');
$follow_util = GRN_Report_Follow_Controller_Utility::getInstance();
$follow = $follow_util->getView($follow_id, $translation_map_follow);
if ( ! $follow) {
    require_once('report/error_code.csp');
    cb_throw_error(E_GRN_RPRT_FOLLOW_NOT_FOUND);
}

//Create Parameter Translation Map for Follow File
$translation_map_follow_file = [
    'id'     => '_id',            //Follow File ID
    'follow' => 'follow',         //Follow ID
    'file'   => 'file',           //File ID
];

//Get Follow File
require_once('report/controller_util.csp');
$follow_file_util = GRN_Report_FollowFile_Controller_Utility::getInstance();
$follow['attach_files']
    = $follow_file_util->getListView($translation_map_follow_file,
    $follow['id']);

//Set Follow Deletable
if (isset($follow['creator']) && $user_id === $follow['creator']) {
    $follow['deletable'] = true;
}

$smarty->assign('follow', $follow);

//Get Previous and Next Follow ID
$translation_map = [
    'id'        => '_id',
    'follow_id' => 'follow_id'
];
$option = ['sort' => ['column' => 'follow_id', 'order' => 'asc']];
require_once('report/controller_util.csp');
$follow_util = GRN_Report_Follow_Controller_Utility::getInstance();
$follow_list = $follow_util->getListView($translation_map, $report_id, $option);
$prev = null;
$next = null;
while ($key = key($follow_list)) {
    if ($key == $follow_id) {
        if (next($follow_list)) {
            $next = key($follow_list);
        }
        break;
    }
    $prev = $key;
    next($follow_list);
}

$smarty->assign('prev', $prev);
$smarty->assign('next', $next);

//Confirm Notification, Update Read Status
require_once('report/report_logic.csp');
$logic = GRN_Report_Report_Logic::getInstance();
$logic->read($user_id, $report_id);

$smarty->assign('follow_id', $follow_id);
$smarty->assign('rid', $report_id);
$smarty->assign('type', $type);

$smarty->display(cb_get_pagename() . '.tpl');
