<?php

if (0 == strcasecmp(@ $_SERVER['REQUEST_METHOD'], 'POST')) {
    //Smarty
    require_once('cellular/smarty.csp');
    $smarty = new GRN_Cellular_Smarty;

    //Page Information
    $smarty->assign('pagetitle', grn_get_current_page_display_name());
    $smarty->assign('pagepath', $G_pagepath);
    $smarty->assign('pagename', cb_get_pagename());

    //Parameter
    $follow_id = @ $G_INPUT['follow_id'];
    $report_id = @ $G_INPUT['rid'];
    $type = @ $G_INPUT['type'];
    if ( ! $report_id) {
        require_once('report/error_code.csp');
        cb_throw_error(E_GRN_RPRT_REPORT_NOT_FOUND);
    }
    if ( ! $follow_id) {
        require_once('report/error_code.csp');
        cb_throw_error(E_GRN_RPRT_FOLLOW_NOT_FOUND);
    }

    //Get Report
    require_once('report/controller_util.csp');
    $report_util = GRN_Report_Report_Controller_Utility::getInstance();
    $report = $report_util->getSimpleView($report_id);
    if ( ! $report) {
        require_once('report/error_code.csp');
        cb_throw_error(E_GRN_RPRT_REPORT_NOT_FOUND);
    }

    //Create Parameter Translation Map for Follow
    $translation_map_follow = [
        'id'                  => '_id',
        'creator'             => 'creator',
        'creator_foreign_key' => 'creator_foreign_key',
        'creator_name'        => 'creator_name',
        'ctime'               => 'ctime',
        'data'                => 'data',
        'follow_id'           => 'follow_id',
        'html'                => 'html',
        'report'              => 'report',
    ];

    //Get Follow
    require_once('report/controller_util.csp');
    $follow_util = GRN_Report_Follow_Controller_Utility::getInstance();
    $follow = $follow_util->getView($follow_id, $translation_map_follow);
    if ( ! $follow) {
        require_once('report/error_code.csp');
        cb_throw_error(E_GRN_RPRT_FOLLOW_NOT_FOUND);
    }

    $user_id = $G_login_user->getOID();
    $creator_id = isset($follow['creator']) ? $follow['creator'] : null;
    //Check Delete Right
    if (is_null($creator_id) || $creator_id != $user_id) {
        require_once('report/error_code.csp');
        cb_throw_error(E_GRN_RPRT_FOLLOW_NOT_REMOVABLE);
    }

    //Delete Follow
    require_once('report/follow_logic.csp');
    $follow_logic = GRN_Report_Follow_Logic::getInstance();
    $follow_logic->delete($follow_id, $report_id);

    //Inspection
    require_once('report/inspection.csp');
    $inspection = GRN_Report_Report_Inspection::getInstance();
    if ($inspection->isEnabled()) {
        $message_type = 'follow_delete';
        $message_args['rid'] = $report_id;
        $message_args['follow_id'] = $follow_id;

        //Record Inspection
        $inspection->record($message_type, $message_args);
    }

    grn_report_cellular_redirect('report/cellular/look',
        ['rid' => $report_id, 'type' => $type]);
}

