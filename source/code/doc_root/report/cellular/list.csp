<?php
//Instantiate an Smarty object
require_once("grn/smarty.csp");
$t = new GRN_Smarty;

// ページ情報
$t->assign('pagetitle', grn_get_current_page_display_name());
$t->assign('pagepath', $G_pagepath);
$t->assign('pagename', cb_get_pagename());

// cellular application
if (isset($G_cellular) && $G_cellular) {
    $t->assign('valid_cellular', true);

    $user_config =& $G_cellular->getUserConfig($G_login_user);
    $limit = $user_config->getListMax();
    $width = $user_config->getSubjectWidth();
} else {
    $t->assign('valid_cellular', false);

    $limit = 10;
    $width = 14;

    // このページだけコピーライトを表示する
    global $G_state_set;
    $G_state_set->set('copyright_should_be_written', true);
}

$t->assign('width', $width);

// params
$select = null;
if (array_key_exists('select', $G_INPUT) && strlen($G_INPUT['select'])) {
    $select = $G_INPUT['select'];
}
if ( ! $select) {
    $select = GRN_REPORT_LIST;
}
$type = null;
if (array_key_exists('type', $G_INPUT) && strlen($G_INPUT['type'])) {
    $type = $G_INPUT['type'];
}

//Assign Filter List
require_once('report/controller_util.csp');
$filter_util = GRN_Report_Filter_Controller_Utility::getInstance();
$translation_map = [
    'id'                  => '_id',
    //Filter ID
    'name'                => 'name',
    //Filter Name
    'creator'             => 'creator',
    //Filter Creator
    //    'creator_name'          =>  'creator_name',         //Filter Creator Name
    'creator_foreign_key' => 'creator_foreign_key',
    //Filter Creator Foreign Key
];
$filters = $filter_util->getFilterList($G_report_login_user,
    $translation_map, true);
$t->assign('all_filters', $filters['all']);

//Assign List
$list[GRN_REPORT_LIST]['title'] = cb_msg('grn.report.cellular', GRN_REPORT);
if ($filters[GRN_REPORT_RECENT]) {
    $list[GRN_REPORT_RECENT]['title'] = cb_msg('grn.report.cellular',
        GRN_REPORT_RECENT);
    $list[GRN_REPORT_RECENT]['message'] = cb_msg('grn.report.cellular',
        'recent_filter');
}
if ($filters[GRN_REPORT_DISPLAY]) {
    $list[GRN_REPORT_DISPLAY]['title'] = cb_msg('grn.report.cellular',
        GRN_REPORT_DISPLAY);
    $list[GRN_REPORT_DISPLAY]['message'] = cb_msg('grn.report.cellular',
        'display_filter');
}
/* GRN2-1936
if( $filters[GRN_REPORT_PERSONAL] )
{
    $list[GRN_REPORT_PERSONAL]['title'] = cb_msg('grn.report.cellular', GRN_REPORT_PERSONAL);
    $list[GRN_REPORT_PERSONAL]['message'] = cb_msg('grn.report.cellular', 'personal_filter');
}
 */
$t->assign('list', $list);

//Assign Menu List
switch ($select) {
    case GRN_REPORT_RECENT:
        $menu_list = $filters[GRN_REPORT_RECENT];
        break;
    case GRN_REPORT_DISPLAY:
        $menu_list = $filters[GRN_REPORT_DISPLAY];
        break;
    case GRN_REPORT_PERSONAL:
    case GRN_REPORT_ALL:
        break;
    default:
        $select = GRN_REPORT_LIST;
        $menu_list = [
            [
                'id'   => GRN_REPORT_SEARCH_TARGET_RECEIVED,
                'name' => cb_msg('grn.report.cellular', 'receive_list')
            ],
            [
                'id'   => GRN_REPORT_SEARCH_TARGET_SEND,
                'name' => cb_msg('grn.report.cellular', 'send_list')
            ],
            //array('id'=>GRN_REPORT_SEARCH_TARGET_DRAFT,    'name'=>cb_msg('grn.report.cellular', 'draft_list')),
            [
                'id'   => GRN_REPORT_SEARCH_TARGET_ALL,
                'name' => cb_msg('grn.report.cellular', 'all_list')
            ],
        ];
        break;
}

//Create Parameter Translation Map
$translation_map = [
    'id'                   => '_id',
    //Report ID
    'name'                 => 'name',
    //Report Name
    'form'                 => 'form',
    //Report Form ID
    'form_name'            => 'form_name',
    //Report Form Name
    'creator'              => 'creator',
    //Report Creator
    'creator_name'         => 'creator_name',
    //Report Creator Name
    'creator_foreign_key'  => 'creator_foreign_key',
    //Report Creator Foreign Key
    'modifier'             => 'modifier',
    //Report Modifier
    'modifier_name'        => 'modifier_name',
    //Report Modifier Name
    'modifier_foreign_key' => 'modifier_foreign_key',
    //Report Modifier Foreign Key
    'ctime'                => 'ctime',
    //Report Create Time
    'mtime'                => 'mtime',
    //Report Modify Time
    'private'              => 'private',
    //Report Private
    'draft'                => 'draft',
    //Draft
];

//Get Utility
require_once('grn/controller.csp');
$grn_controller_util = new GRN_ControllerUtil();
require_once('report/controller_util.csp');
$report_util = new GRN_Report_Report_Controller_Utility();

//Create List Option
$offset = $grn_controller_util->getNaviStartPosition();
$option = [];
$option['list'] = [];
$option['list']['offset'] = $offset;
$option['list']['limit'] = $limit;

$t->assign('select', $select);

$id = null;

//All Filters
if ($select == GRN_REPORT_ALL || $select == GRN_REPORT_PERSONAL) {
    if (array_key_exists('type', $G_INPUT) && strlen($G_INPUT['type'])) {
        $id = $G_INPUT['type'];
    }

    if ($id) {
        //Get Report List
        $report_list_for_view = [];
        $report_list_for_view
            = $report_util->getListByFilterId($G_report_login_user,
            $id, $translation_map, $option);

        //絞込みを使ったら、最近使った絞込みに入れる
        require_once('report/filter_logic.csp');
        $filter_logic = GRN_Report_Filter_Logic::getInstance();
        $filter_logic->useFilter($G_report_login_user->getOID(), $id);

        $filter = $filter_logic->get($id);

        //Get Total Count
        $count = getTotalCount($id);

        $t->assign('filter', $filter);
        $t->assign('report_list', $report_list_for_view);
        $t->assign('type', $id);
    } else {
        //Get Total Count
        $count = count($filters[$select]);

        $filter_list_for_view = [];

        for ($i = 0; $i < $offset; $i++) {
            array_shift($filters[$select]);
        }
        for ($i = 0; $i < $limit; $i++) {
            $filter_list_for_view[] = array_shift($filters[$select]);
        }

        $t->assign('filter_list', $filter_list_for_view);
    }

    $t->assign('filter_paging', true);
} else {
    foreach ($menu_list as $menu) {
        if ($type == $menu['id']) {
            $id = $menu['id'];
        }
    }
    if (is_null($id)) {
        $first_menu = reset($menu_list);
        $id = $first_menu['id'];
    }

    $t->assign('menu_list', $menu_list);


    //Get Report List
    $report_list_for_view = [];
    switch ($id) {
        case GRN_REPORT_SEARCH_TARGET_RECEIVED:
            $report_list_for_view
                = $report_util->getReceiveList($G_report_login_user,
                $translation_map, $option);
            break;
        case GRN_REPORT_SEARCH_TARGET_SEND:
            $report_list_for_view
                = $report_util->getSendList($G_report_login_user,
                $translation_map, $option);
            break;
        /*
        case GRN_REPORT_SEARCH_TARGET_DRAFT:
            $report_list_for_view = $report_util->getDraftList($G_report_login_user, $translation_map, $option);
            break;
        */
        case GRN_REPORT_SEARCH_TARGET_ALL:
            $report_list_for_view
                = $report_util->getAllList($G_report_login_user,
                $translation_map, $option);
            break;
        default:
            if (is_numeric($id)) {
                $report_list_for_view
                    = $report_util->getListByFilterId($G_report_login_user, $id,
                    $translation_map, $option);

                //絞込みを使ったら、最近使った絞込みに入れる
                require_once('report/filter_logic.csp');
                $filter_logic = GRN_Report_Filter_Logic::getInstance();
                $filter_logic->useFilter($G_report_login_user->getOID(), $id);

                $filter = $filter_logic->get($id);

                $t->assign('filter', $filter);
            }
            break;
    }
    $t->assign('report_list', $report_list_for_view);
    $t->assign('type', $id);

    //Get Total Count
    $count = getTotalCount($id);
}

//Create Navi Information
$params = [];
$params['type'] = $id;
$params['select'] = $select;
$navigation_info = $grn_controller_util->makeNaviInformation(
    $offset,
    $limit,
    $count,
    $params
);
$t->assign('navi', $navigation_info['navi']);

//Display Smarty Template
$t->display(cb_get_pagename() . '.tpl');

function getTotalCount($type)
{
    global $G_INPUT;
    global $G_container_base;
    $uum =& $G_container_base->getInstance('uum');
    $login_user =& $uum->getLoginUser();
    $report_util = new GRN_Report_Report_Controller_Utility();
    $total_count = 0;
    if ($type == GRN_REPORT_SEARCH_TARGET_SEND) {
        $total_count = $report_util->getSendCount($login_user);
    } /*
    else if($type == GRN_REPORT_SEARCH_TARGET_DRAFT)
        $total_count = $report_util->getDraftCount($login_user);
    */
    elseif ($type == GRN_REPORT_SEARCH_TARGET_ALL) {
        $total_count = $report_util->getAllCount($login_user);
    } elseif (is_numeric($type) && $type > 0) {
        $fid = $type;
        if (is_numeric($fid)) {
            $total_count = $report_util->getCountByFilterId($login_user, $fid);
        } else {
            $total_count = 0;
        }
    } else {
        $total_count = $report_util->getReceiveCount($login_user);
    }

    return $total_count;
}

