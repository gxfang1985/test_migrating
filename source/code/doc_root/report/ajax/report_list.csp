<?php
require_once("grn/smarty.csp");
$t = new GRN_Smarty;
global $G_state_set;
$G_state_set->set('html_should_be_closed', false);
$G_state_set->set('copyright_should_be_written', false);

//Save Session
require_once('fw/session_manager.csp');
$session_manager = CB_SessionManager::getInstance();
$session = $session_manager->getSession('report/index');
$session->set('type', @$G_INPUT['type']);
$session->set('fid', @$G_INPUT['fid']);
$session->set('sp', @$G_INPUT['sp']);

//Get Login User
global $G_container_base;
$uum = $G_container_base->getInstance('uum');
$user = $uum->getLoginUser();
$user_id = $user->getOID();

//Create Parameter Translation Map
$translation_map = [
    'id'                   => '_id',
    //Report ID
    'name'                 => 'name',
    //Report Name
    'form'                 => 'form',
    //Report Form ID
    'form_name'            => 'form_name',
    //Report Form Name
    'creator'              => 'creator',
    //Report Creator
    'creator_foreign_key'  => 'creator_foreign_key',
    //Report Creator Foreign Key
    'creator_name'         => 'creator_name',
    //Report Creator Name
    'modifier'             => 'modifier',
    //Report Modifier
    'modifier_foreign_key' => 'modifier_foreign_key',
    //Report Modifier Foreign Key
    'modifier_name'        => 'modifier_name',
    //Report Modifier Name
    'ctime'                => 'ctime',
    //Report Create Time
    'mtime'                => 'mtime',
    //Report Modify Time
    'private'              => 'private',
    //Report Private
    'draft'                => 'draft',
    //Draft
];

$pagingSize = @ $G_INPUT['pagingSize'];
if ( ! is_numeric($pagingSize) || $pagingSize < 0) {
    $pagingSize = 20;
}

require_once('report/utility.csp');
$offset = grn_report_get_offset();

//Create List Option
$option = [];
$option['list'] = [];
$option['list']['offset'] = $offset;
$option['list']['limit'] = $pagingSize + 1;

//Sort Option
$sort = @$G_INPUT['sort'];
switch ($sort) {
    case 'mtd':
        $option['list']['order'] = ['report.col_mtime', 'DESC'];
        break;
    case 'mtu':
        $option['list']['order'] = ['report.col_mtime', 'ASC'];
        break;
    case 'rnd':
        $option['list']['order'] = ['report.col_name', 'DESC'];
        break;
    case 'rnu':
        $option['list']['order'] = ['report.col_name', 'ASC'];
        break;
    case 'cnd':
        $option['list']['order'] = ['report.col_creator_name', 'DESC'];
        break;
    case 'cnu':
        $option['list']['order'] = ['report.col_creator_name', 'ASC'];
        break;
    default:
        $sort = 'mtd';
        $option['list']['order'] = ['report.col_mtime', 'DESC'];
        break;
}
$t->assign('sort', $sort);

require_once('report/controller_util.csp');
$report_util = new GRN_Report_Report_Controller_Utility();
$item_util = new GRN_Report_Item_Controller_Utility();
$form_util = new GRN_Report_Form_Controller_Utility();
$filter_util = GRN_Report_Filter_Controller_Utility::getInstance();

$item_map = [
    'display_name' => 'display_name',
    'form'         => 'form',
    'type'         => 'type',
    'data_type'    => 'data_type',
];
$form_map = ['name' => 'name', 'category' => 'category'];

$type = @$G_INPUT['type'];
$typename = "";
$report_list_for_view = null;
//送信一覧
if ($type == GRN_REPORT_SEARCH_TARGET_SEND) {
    $report_list_for_view = $report_util->getSendList($user, $translation_map,
        $option);
    $typename = cb_msg('grn.report', 'search.target.send');
} //下書き
elseif ($type == GRN_REPORT_SEARCH_TARGET_DRAFT) {
    $report_list_for_view = $report_util->getDraftList($user, $translation_map,
        $option);
    $typename = cb_msg('grn.report', 'search.target.draft');
} //全ての報告書
elseif ($type == GRN_REPORT_SEARCH_TARGET_ALL) {
    $option['subscribe'] = true;
    $translation_map['subscribe'] = 'subscribe';
    $report_list_for_view = $report_util->getAllList($user,
        $translation_map, $option);
    $typename = cb_msg('grn.report', 'search.target.all');
} //絞込み
elseif ($type == GRN_REPORT_SEARCH_TARGET_FILTER) {
    $fid = @$G_INPUT['fid'];
    $option['subscribe'] = true;
    $translation_map['subscribe'] = 'subscribe';
    if (is_numeric($fid)) {
        //絞込みを使ったら、最近使った絞込みに入れる
        require_once('report/filter_logic.csp');
        $filter_logic = GRN_Report_Filter_Logic::getInstance();
        $filter_logic->useFilter($user->getOID(), $fid);

        $filter = $filter_logic->get($fid);
        /* GRN2-1936 pending
        if(!$filter || ( $filter['col_personal_user'] != $user_id && !is_null($filter['col_personal_user']) ))
         */
        if ( ! $filter) {
            cb_throw_error(E_GRN_RPRT_FILTER_NOT_FOUND);
        }

        $report_list_for_view = $report_util->getListByFilterId($user, $fid,
            $translation_map, $option);
        $conditions = $filter["conditions"];
        foreach (array_keys($conditions) as $cid) {
            $filter_util->setConditionView($conditions[$cid]);
        }

        //Get relational form
        if ($filter['col_formtype'] == GRN_REPORT_FILTER_FORM_TYPE_SELECT) {
            $r_form_id = $filter['form_relation']['col_form'];
            $relation_form = $form_util->getView($r_form_id, $form_map);

            if (is_null($relation_form['category'])) {
                $category_name = cb_msg('grn.report', 'nonparty');
                $form_name = $relation_form['name'] . " "
                             . $category_name;
                $filter['form_name'] = $form_name;
                $t->assign('form_name', $form_name);
            } else {
                //カテゴリも取得
                $category_util = new GRN_Report_Category_Controller_Utility();
                $category_map = ['name' => 'name'];
                $category
                    = $category_util->getView($relation_form['category'],
                    $category_map, GRN_REPORT_ACCESS_TYPE_SYSTEM);
                $category_name = $category['name'];
                $form_name = $relation_form['name'] . " ("
                             . $category_name . ")";
                $filter['form_name'] = $form_name;
                $t->assign('form_name', $form_name);
            }
        }

        $t->assign('fid', $fid);
        $t->assign('filter', $filter);
        $t->assign('conditions', $conditions);
    } else {
        $report_list_for_view = [];
    }
    $typename = cb_msg('grn.report', 'search.target.filter');
} else//それ以外は受信とみなす
{
    $option['last_timestamp'] = true;
    $option['subscribe'] = true;
    $translation_map['last_timestamp'] = 'last_timestamp';
    $translation_map['subscribe'] = 'subscribe';
    $report_list_for_view = $report_util->getReceiveList($user,
        $translation_map, $option);
    $t->assign('check_unread', true);

    //既読か未読かを判断するため、最後に操作が行われた時間を取得する。
    $last_operated_times
        = $report_util->getLastOperatedTimeList(array_keys($report_list_for_view));
    foreach ($last_operated_times as $rid => $otime) {
        $report_list_for_view[$rid]['otime'] = $otime;
    }

    $typename = cb_msg('grn.report', 'search.target.receive');
}

$isExistsNextPage = count($report_list_for_view) > $pagingSize;
if ($isExistsNextPage) {
    array_pop($report_list_for_view);
}

$star_unique_ids = array_keys($report_list_for_view);

require_once('star/logic.csp');
$star_logic = GRN_Star_StarLogic::getInstance();
$use_star = $star_logic->isActive();
$t->assign('use_star', $use_star);
$t->assign('star_infos',
    $star_logic->getStatusByIDs($user, 'grn.report', $star_unique_ids));
$t->assign('reportList', $report_list_for_view);

$creators = [];
foreach ($report_list_for_view as $report) {
    if (isset($report['creator'])) {
        $creators[$report['creator']] = $report['creator'];
    }
}
$creators_info = GRN_ControllerUtil::getUserInfoToShowUserName($creators,
    $user);
$t->assign('users_info', $creators_info);

require_once('grn/ui.csp');
$config_manager = GRN_UIConfigManager::getInstance();
$ui_config = $config_manager->getUserConfig($user);
$t->assign('subject_width', $ui_config->getSubjectWidth());
$t->assign('name_width', $ui_config->getNameWidth());

require_once('report/controller_util.csp');
$utility = new GRN_Report_ControllerUtil();
$n_navigation_for_view = $utility->makeSimpleNaviInformation($offset,
    (int)$pagingSize, count($report_list_for_view), $isExistsNextPage,
    ['type' => $type]);

if ($type == "filter") {
    $t->assign('callback_func', 'filterPagingCallBack');
    $t->assign('sort_func', 'onFilterSort');
} else {
    $t->assign('callback_func', 'pagingCallBack');
    $t->assign('sort_func', 'onSort');
}

$t->assign('navi', $n_navigation_for_view);
$t->assign('typename', $typename);

//Display Smarty Template
$doc_name = cb_get_pagename();
$t->display("{$doc_name}.tpl");
