<?php

global $G_INPUT;

require_once('grn/smarty.csp');
$t = new GRN_Smarty;

global $G_state_set;
$G_state_set->set('html_should_be_closed', false);
$G_state_set->set('copyright_should_be_written', false);

// パラメータを取得する
require_once('address/application.csp');
if ( ! array_key_exists('bid', $G_INPUT)) {
    cb_throw_error(E_GRN_ADDRESS_INVALID_BOOK_ID);
}
$bid = $G_INPUT['bid'];
$cidx = null;
if (array_key_exists('cidx', $G_INPUT)) {
    $cidx = $G_INPUT['cidx'];
}
$search = null;
if (array_key_exists('st', $G_INPUT)) {
    $search = true;
}
$st = null;
if (array_key_exists('st', $G_INPUT) && ! is_null($G_INPUT['st'])) {
    $st = $G_INPUT['st'];
}

// アドレス帳を取得する
$app_locator = GRN_ApplicationLocator::instance();
/** @var GRN_Address_Application $app */
$app =& $app_locator->getInstance(GRN_ADDRESS_APPLICATION_ID);
if ( ! is_object($app) || ! is_a($app, 'GRN_Address_Application')) {
    cb_throw_error(E_GRN_APPLICATION_NOT_AVAILABLE);
}
$app_locator = GRN_ApplicationLocator::instance();
$dbconn =& $app_locator->getConnection('address');

// ログインユーザーを取得する
global $G_container_base;
$uum =& $G_container_base->getInstance('uum');
$login =& $uum->getLoginUser();

// ダイナミックロールを取得する
$dynamic_roles = $uum->listGrantedRoles();

// 使用権限を取得する
require_once('address/access.csp');
$access_manager = GRN_Address_AccessManager::getInstance();
if ( ! ($row =& $access_manager->getAbstractData(GRN_ADDRESS_AVAILABLE))) {
    assert('FALSE');
}

// 共有アドレスブックを取得する
$book_manager =& $app->getBookManager();
$book = $book_manager->getSharedAddressBook($bid);
if ( ! $book) {
    cb_throw_error(E_GRN_ADDRESS_INVALID_BOOK_ID);
}

// 共有アドレスブックの閲覧権限を評価する
$authorities = ['browse'];
$row = $book->getRow();
$access = $access_manager->evaluateAccess($row, $login, $dynamic_roles,
    $authorities);
$security_model = $access_manager->getSecurityModel($row);
if ( ! $access_manager->isAllowedAccess($access, $authorities,
    $security_model)
) {
    cb_throw_error(E_GRN_ADDRESS_ACCESS_DENY_BROWSE);
}

// 組み込み項目情報一覧を取得する
require_once('address/view_util.csp');
$view_util = GRN_Address_ViewUtil::getInstance();
$builtin_items = $view_util->listBuiltinItems($book);

// Incremental Find on Reading name
require_once('address/charmap_util.csp');
$char_map = GRN_Address_CharMap_Util::getInstance();
$selected_hira_char = null;
$condition = null;
if ($builtin_items['personal_sort_key']['use']) {
    $selected_chars = $char_map->getCharsByIndex($cidx);
    if ( ! is_null($selected_chars)) {
        $selected_hira_char = $selected_chars[0];

        $condition = $char_map->getConditionByChars($selected_chars);
    }
}

// 最後に開いたブックを記録する
require_once('address/config.csp');
$config_manager = GRN_Address_ConfigManager::getInstance();
$personal_config = $config_manager->getPersonalConfig($login);
$personal_config->setLastOpenedBook($book);

// n件ナビゲーション情報を取得する
require_once('grn/controller.csp');
$controller_util = new GRN_ControllerUtil();
$offset = $controller_util->getNaviStartPosition();
$controller_util->setNaviStartPosition($offset);
require_once('grn/ui.csp');
$ui_config_manager = GRN_UIConfigManager::getInstance();
$ui_config =& $ui_config_manager->getUserConfig($login);
$limit = $ui_config->getListMax();

// アドレス一覧を取得する
$conditions = [];
if ($st != null) {
    require_once('fw/string_util.csp');
    $texts = cb_parse_search_text($st);
    if (0 < count($texts)) {
        foreach ($texts as $text) {
            $text = $dbconn->escapeLike($text);
            $sub_conditions = [];
            if ($builtin_items['subject']['use']) {
                $sub_conditions[] = '( col_subject LIKE \'%' . $text . '%\' )';
            }
            if ($builtin_items['personal_name']['use']) {
                $sub_conditions[] = '( col_given_name LIKE \'%' . $text
                                    . '%\' )';
                $sub_conditions[] = '( col_family_name LIKE \'%' . $text
                                    . '%\' )';
            }
            if ($builtin_items['personal_sort_key']['use']) {
                $sub_conditions[] = '( col_given_sort_key LIKE \'%' . $text
                                    . '%\' )';
                $sub_conditions[] = '( col_family_sort_key LIKE \'%' . $text
                                    . '%\' )';
            }
            if ($builtin_items['company_name']['use']) {
                $sub_conditions[] = '( col_company_name LIKE \'%' . $text
                                    . '%\' )';
            }
            if ($builtin_items['company_sort_key']['use']) {
                $sub_conditions[] = '( col_company_sort_key LIKE \'%' . $text
                                    . '%\' )';
            }
            if ($builtin_items['email_address']['use']) {
                $sub_conditions[] = '( col_email_address LIKE \'%' . $text
                                    . '%\' )';
            }
            $conditions[] = '( ' . implode(' OR ', $sub_conditions) . ' )';
        }
    }
    $condition = implode(' AND ', $conditions);
}

$datas_for_view = $book->listDatasByPronunciationFast($offset, $limit,
    $condition);

$data_count = $book->countDatas($condition);
$view_set = $controller_util->makeNaviInformation($offset, $limit,
    $data_count, ['cidx' => $cidx]);

$t->assign('search', $search);
$t->assign('search_text', $st);
$t->assign('cards', $datas_for_view);
$t->assign('view_set', $view_set);
$t->assign('personal_sort_key_use', $builtin_items['personal_sort_key']['use']);
$t->assign('selected_char', $selected_hira_char);

$t->display(cb_get_pagename() . '.tpl');
