<?php

require_once("grn/smarty.csp");
$t = new GRN_Smarty;
global $G_state_set;
$G_state_set->set('html_should_be_closed', false);
$G_state_set->set('copyright_should_be_written', false);

require_once('report/controller_util.csp');
$form_util = GRN_Report_Form_Controller_Utility::getInstance();
$category_util = GRN_Report_Category_Controller_Utility::getInstance();
$cid = @$G_INPUT['cid'];
$type = @$G_INPUT['type'];

require_once('report/category_tree.csp');
$class_name = 'GRN_Report_CategoryTree';
$page_name = 'report/send';
$util = GRN_OrgTreeUtil::getInstance();
$tree =& $util->getTree($page_name, $class_name, @$params);
$tree->setSelectedNode($cid);
$util->setTree($page_name, $tree);

require_once('report/resources.csp');
if ($cid == 'top') {
    //Check Root Category Access
    if ($category_util->checkAccess(GRN_REPORT_CATEGORY_ROOT_ID, false)
        || $type == 'system'
    ) {
        //Set Root Category
        $cid = GRN_REPORT_CATEGORY_ROOT_ID;
    } else {
        //Set Non Party Category
        $cid = GRN_REPORT_CATEGORY_NONPARTY_ID;
    }
}

if ( ! $cid) {
    //Check Root Category Access
    if ($category_util->checkAccess(GRN_REPORT_CATEGORY_ROOT_ID, false)) {
        //Set Root Category
        $cid = GRN_REPORT_CATEGORY_ROOT_ID;
    } else {
        //Set Non Party Category
        $cid = GRN_REPORT_CATEGORY_NONPARTY_ID;
    }
}

$translation_map_form = [
    'fid'    => '_id',          //Form ID
    'type'   => 'type',         //Form Type
    'name'   => 'name',         //Form Name
    'memo'   => 'memo',         //Form Memo
    'cid'    => 'category',     //Category ID
    'active' => 'active',       //Form Active
];

//Create Parameter Translation for Form
if ($cid == GRN_REPORT_CATEGORY_ROOT_ID) {
    $form_list_for_view = $form_util->getRecentListView($translation_map_form,
        $G_report_login_user->getOID());
} else {

    //Get Form List for View
    $option = [
        'condition' => [
            '0' => [
                'column'   => 'col_active',
                'value'    => '1',
                'operator' => '='
            ],
            '1' => [
                'column'   => 'col_deleted',
                'value'    => '0',
                'operator' => '='
            ],
        ]
    ];

    $form_list_for_view = $form_util->getListView($translation_map_form, $cid,
        $option);
}

//Create Parameter Translation Map for Category
$translation_map_category = [
    //Category Information
    'cid'         => '_id',             //Category ID
    'name'        => 'name',            //Category Name
    'foreign_key' => 'foreign_key',     //Category Foreign key
    'memo'        => 'memo',            //Category Memo
    'parent'      => 'parent',          //Category Parent
    'list_index'  => 'list_index',      //Category List Index
];

if ($type == 'system') {
    $user_type = GRN_REPORT_ACCESS_TYPE_SYSTEM;
} elseif ($type == 'operation') {
    $user_type = GRN_REPORT_ACCESS_TYPE_MANAGE;
} else {
    $user_type = GRN_REPORT_ACCESS_TYPE_PERSONAL;
}

$category_for_view = $category_util->getView($cid, $translation_map_category,
    $user_type);

$t->assign('from', @$G_INPUT['from']);
$t->assign('eid', @$G_INPUT['eid']);
$t->assign('date', @$G_INPUT['date']);
$t->assign('category', $category_for_view);
$t->assign('category_id', $cid);
$t->assign('form_list', $form_list_for_view);
$t->assign('from', @$G_INPUT['from']);
//Display Smarty Template
$t->display(cb_get_pagename() . ".tpl");
