<?php

use grn\grn\JSONResponse;

global $G_state_set;
$G_state_set->set('html_should_be_closed', false);
$G_state_set->set('copyright_should_be_written', false);

//Get Form and Item Controller Utility
require_once('report/controller_util.csp');
$item_util = GRN_Report_Item_Controller_Utility::getInstance();

$form_id = $G_INPUT['fid'];
//Create Parameter Translation Map
$translation_map_item = [
    'id'           => '_id',                  //Item ID
    'display_name' => 'display_name',         //Item Display Name
    'type'         => 'type',                 //Item Type
    'data_type'    => 'data_type',            //Item Data Type
    'form'         => 'form',                 //Item Form
    'display_type' => 'display_type',         //Display_type
    'settings'     => 'settings',             //Settings
];
$item_list_for_view = $item_util->getListView($translation_map_item,
    $form_id);

/**
 * @param array $item_list
 *
 * @return array
 */
$fun_create_json_data = function ($item_list) {
    $list = [];
    foreach ($item_list as $item) {
        $data = [
            'datatype' => (string)$item['data_type'],
            'name'     => htmlspecialchars($item['display_name'], ENT_QUOTES),
        ];

        if ($item['data_type'] == 'grn.report.time') {
            $settings = cb_at($item, 'settings', []);
            $data['interval'] = (string)cb_at($settings, 'unit', '');
        }

        $list[$item['id']] = $data;
    }

    return $list;
};

$json = JSONResponse::create();
$json->response($fun_create_json_data($item_list_for_view));
