<?php
$logic = GRN_Report_Filter_Logic::getInstance();
$filter_inspection = GRN_Report_Filter_Inspection::getInstance();
$condition_inspection = GRN_Report_FilterCondition_Inspection::getInstance();

$name = @$G_INPUT['name'];
$fid = @$G_INPUT['fid'];
$and_or = @$G_INPUT['and_or'];
$formtype = @$G_INPUT['select_form'] ? @$G_INPUT['select_form_type']
    : GRN_REPORT_FILTER_FORM_TYPE_ALL;

$filter = $logic->get($fid);
if ( ! $filter) {
    cb_throw_error(E_GRN_RPRT_FILTER_NOT_FOUND);
}

if (cb_is_operation_page()) {
    $category_id = $filter['col_category'];

    // 未分類カテゴリか確認
    if (GRN_REPORT_CATEGORY_NONPARTY_ID == $category_id) {
        require_once('report/error_code.csp');
        cb_throw_error(E_GRN_RPRT_MANAGE_DENY_NONPARTY_CATEGORY);
    }

    // 未分類カテゴリ以外は運用管理権限とアクセス権を確認
    $category_util->checkManage($category_id, true, CB_DATABASE_NO_LOCK);
    $category_util->checkAccess($category_id, true, CB_DATABASE_NO_LOCK);
}

if (is_null($filter['col_category'])) {
    $cid = GRN_REPORT_CATEGORY_NONPARTY_ID;
} else {
    $cid = $filter['col_category'];
}

$logic->modifyFilter($fid, $cid, $name, $name, $and_or, null, $formtype);
$userIds = [];
if (array_key_exists('sUID', $G_INPUT)) {
    $userIds = $G_INPUT['sUID'];
}
$logic->registerDisplayUsers($fid, $userIds);

//監査する
$filter_inspection = GRN_Report_Filter_Inspection::getInstance();
if ($filter_inspection->isEnabled()) {
    $inspection_and_or = $filter_inspection->setAndOr($and_or);

    $message_type = 'filter_modify';
    $message_args['fid'] = $fid;
    $message_args['name'] = $name;
    $message_args['and_or'] = $inspection_and_or;

    //Record Inspection
    $filter_inspection->record($message_type, $message_args);
}

//まっさらにしてから再登録
$logic->removeFilterFormCondition($fid);
$logic->removeFilterFormRelation($fid);

if ($formtype == GRN_REPORT_FILTER_FORM_TYPE_NAME) {
    $logic->createFormCondition($fid, @$G_INPUT['select_form_name_input']);
} elseif ($formtype == GRN_REPORT_FILTER_FORM_TYPE_SELECT) {
    $logic->addFilterFormRelation($fid, @$G_INPUT['selected_form_id']);
}

$conditions = $filter["conditions"];

$ids = array_keys($conditions);
$tmp_ids = @$G_INPUT['condition_id'];
$exist_ids = [];
foreach ($tmp_ids as $id) {
    if (is_numeric($id)) {
        $exist_ids[] = $id;
    }
}

$delete_ids = array_diff($ids, $exist_ids);

foreach ($delete_ids as $id) {
    $logic->removeCondition($id);

    //削除の監査
    if ($condition_inspection->isEnabled()) {
        $message_type = 'filtercondition_delete';
        $message_args = [];
        $message_args['fid'] = $fid;
        $message_args['cid'] = $id;
        $condition_inspection->record($message_type, $message_args);
    }
}

require_once('report/controller_util.csp');
$filter_util = GRN_Report_Filter_Controller_Utility::getInstance();

//既存の条件の編集
for ($i = 0; $i < count($exist_ids); $i++) {
    $type = @$G_INPUT['type'][$i];
    $condition = @$G_INPUT['condition'][$i];
    $is_date = false;
    $item_type = @$G_INPUT['item_type'][$i];
    $item_id = @$G_INPUT['item_id'][$i];
    $dt_index = @$G_INPUT['item_index'][$i] ? $G_INPUT['item_index'][$i] : 0;
    $value = $filter_util->getConditionValue($G_INPUT, $i, $type,
        $item_type, $formtype, $dt_index);

    if ($type == GRN_REPORT_FILTER_TYPE_CREATE_DATE
        || ($formtype == GRN_REPORT_FILTER_FORM_TYPE_SELECT
            && strcmp($item_type, GRN_REPORT_CONDITION_ITEM_DATE) == 0)
    ) {
        $is_date = true;
    }

    //特定のフォームを選択し、かつ項目選択で項目を選択した場合のみ条件のタイプが ITEM_DETAIL になる。
    if ($formtype == GRN_REPORT_FILTER_FORM_TYPE_SELECT
        && $type == GRN_REPORT_FILTER_TYPE_ITEMDATA
        && $item_id > 0
    ) {
        $type = GRN_REPORT_FILTER_TYPE_ITEMDATA_DETAIL;
    }

    $logic->modifyCondition($exist_ids[$i], $condition, $type, $value, $item_id,
        $item_type);

    //編集の監査
    if ($condition_inspection->isEnabled()) {
        $message_type = 'filtercondition_modify';
        $message_args = [];
        $message_args['fid'] = $fid;
        $message_args['cid'] = $exist_ids[$i];
        $message_args['type'] = $condition_inspection->setFilterType($type);;
        $message_args['number'] = $value;
        $message_args['text'] = null;
        $message_args['condition']
            = $condition_inspection->setCondition($condition,
            $is_date);;
        $condition_inspection->record($message_type, $message_args);
    }
}

//新規に追加された条件
for ($i = count($exist_ids); $i < count($G_INPUT['value']); $i++) {
    $type = @$G_INPUT['type'][$i];
    $condition = @$G_INPUT['condition'][$i];
    $is_date = false;
    $item_type = @$G_INPUT['item_type'][$i];
    $item_id = @$G_INPUT['item_id'][$i];
    $dt_index = @$G_INPUT['item_index'][$i] ? $G_INPUT['item_index'][$i] : 0;
    $value = $filter_util->getConditionValue($G_INPUT, $i, $type,
        $item_type, $formtype, $dt_index);

    if ($type == GRN_REPORT_FILTER_TYPE_CREATE_DATE
        || ($formtype == GRN_REPORT_FILTER_FORM_TYPE_SELECT
            && strcmp($item_type, GRN_REPORT_CONDITION_ITEM_DATE) == 0)
    ) {
        $is_date = true;
    }

    //特定のフォームを選択し、かつ項目選択で項目を選択した場合のみ条件のタイプが ITEM_DETAIL になる。
    if ($formtype == GRN_REPORT_FILTER_FORM_TYPE_SELECT
        && $type == GRN_REPORT_FILTER_TYPE_ITEMDATA
        && $item_id > 0
    ) {
        $type = GRN_REPORT_FILTER_TYPE_ITEMDATA_DETAIL;
    }

    $condition_id = $logic->createCondition($fid, $condition, $type, $value,
        $item_id, $item_type);

    if ($condition_inspection->isEnabled()) {
        $message_type = 'filtercondition_add';
        $message_args['fid'] = $fid;
        $message_args['cid'] = $condition_id;
        $message_args['type'] = $condition_inspection->setFilterType($type);;
        $message_args['number'] = $value;
        $message_args['text'] = null;
        $message_args['condition']
            = $condition_inspection->setCondition($condition,
            $is_date);;

        //Record Inspection
        $condition_inspection->record($message_type, $message_args);
    }
}

