<?php

if (0 == strcasecmp(@ $_SERVER['REQUEST_METHOD'], 'POST')) {
    global $G_INPUT;

    require_once('_command_send_initialize.csp');

    //Instantiate Smarty Object
    require_once("grn/smarty.csp");
    $t = new GRN_Smarty;

    //Get Session Key
    require_once('report/controller_util.csp');
    require_once('grn/controller.csp');
    $tmp_key = grn_get_temporary_key();

    //Validation Check
    require_once('SmartyValidate.class.php');
    SmartyValidate::connect($t);
    $page_name = 'report/modify_draft';
    $session_target = $page_name . $tmp_key;
    SmartyValidate::register_form($session_target);

    //Skip form validation if no required item exists
    $skip_validation_flag = false;
    if (array_key_exists('SmartyValidate', $_SESSION)
        && array_key_exists($session_target, $_SESSION['SmartyValidate'])
        && array_key_exists('validators',
            $_SESSION['SmartyValidate'][$session_target])
        && ! count($_SESSION['SmartyValidate'][$session_target]['validators'])
    ) {
        $skip_validation_flag = true;
    }

    //Get Parameter
    $report_id = isset($G_INPUT['rid']) ? $G_INPUT['rid'] : null;
    $command = isset($G_INPUT['cmd']) ? $G_INPUT['cmd'] : null;
    $members = isset($G_INPUT['member_sUID']) ? $G_INPUT['member_sUID']
        : [];
    $notification = isset($G_INPUT['notification_sUID'])
        ? $G_INPUT['notification_sUID'] : [];
    $partner_values = isset($G_INPUT['partner_sUID']) ? $G_INPUT['partner_sUID']
        : [];
    $private = isset($G_INPUT['private']) ? $G_INPUT['private'] : null;

    $operator_set = isset($G_INPUT['operator-set']) && $G_INPUT['operator-set']
        ? 1 : 0;
    $operators = $operator_set && isset($G_INPUT['sUID_o'])
        ? $G_INPUT['sUID_o'] : [];

    if ( ! is_array($members)) {
        $members = [];
    }
    if ( ! is_array($notification)) {
        $notification = [];
    }
    if ( ! is_array($partner_values)) {
        $partner_values = [];
    }

    //頻度更新
    require_once('grn/uum_util.csp');
    $uum_util = GRN_UumUtil::getInstance();
    if (count($members) > 0) {
        $uum_util->selectUsers($G_report_login_user, $members);
    }
    if (count($notification) > 0) {
        $uum_util->selectUsers($G_report_login_user, $notification);
    }

    //Explode Member IDs
    foreach ($members as $key => $value) {
        $uid_group = explode(':', $value);
        $members[$key] = $uid_group[0];
    }
    //Explode Notification IDs
    foreach ($notification as $key => $value) {
        $uid_group = explode(':', $value);
        $notification[$key] = $uid_group[0];
    }
    //Explode Operator IDs
    foreach ($operators as $key => $value) {
        $uid_group = explode(':', $value);
        $operators[$key] = $uid_group[0];
    }

    //Get Report
    require_once('report/controller_util.csp');
    $report_util = GRN_Report_Report_Controller_Utility::getInstance();
    $report = $report_util->getSimpleView($report_id);

    foreach ($notification as $nkey => $nid) {
        if ($nid == $report['creator']) {
            unset($notification[$nkey]);
        }
        foreach ($members as $mkey => $mid) {
            if ($nid == $mid) {
                unset($notification[$nkey]);
            }
        }
    }

    //Get Session
    require_once('fw/session_manager.csp');
    $session_manager = CB_SessionManager::getInstance();
    $session =& $session_manager->getSession($session_target);

    //Update Form and Item List
    $send_form_data_list = [];
    require_once('report/item_resources.csp');
    $form =& $session->get('form');
    $report =& $session->get('report');
    $item_list =& $session->get('item_list');

    // Check Category Access Right
    $category_id = $report['category'];
    if (strlen($category_id) == 0) {
        $category_id = GRN_REPORT_CATEGORY_NONPARTY_ID;
    }
    if (GRN_REPORT_CATEGORY_NONPARTY_ID != $category_id) {
        require_once('report/controller_util.csp');
        $category_util = GRN_Report_Category_Controller_Utility::getInstance();
        $category_util->checkAccess($category_id, true, CB_DATABASE_NO_LOCK);
    }

    foreach (array_keys($item_list) as $item_id) {
        $item_util
            =& grn_report_get_item_util($item_list[$item_id]['data_type']);
        if ($item_util) {
            //Parse Item Data
            $parsed_input_data = $item_util->parseItemData($G_INPUT,
                'item', $item_list[$item_id]);
            $send_form_data_list[$item_id] = $parsed_input_data;

            if ($item_list[$item_id]['type'] == 1) {
                $itemdata_util
                    = GRN_Report_ItemData_Controller_Utility::getInstance();
                $form['subject']
                    = $itemdata_util->parse_title($parsed_input_data);
            }
        }
    }

    //Set Session
    $report_properties =& $session->get('properties');
    $report_properties[GRN_REPORT_COLUMN_NAME] = $form['subject'];
    $session->set('form', $form);
    $session->set('item_list', $item_list);
    $session->set('send_form_data_list', $send_form_data_list);
    $session->set('properties', $report_properties);
    $session->set('members', $members);
    $session->set('notification', $notification);
    $session->set('partner_values', $partner_values);
    $session->set('private', $private);
    $session->set('operators', $operators);
    $session->set('operator_set', $operator_set);

    //Check Command Parameter
    if ($command == 'save') {
        require_once('_command_modify_draft.csp');

        //Redirect Next Page
        cb_redirect('report/view_draft', ['rid' => @$G_INPUT['rid']]);
    }

    if (isset($form['enable_member']) && $form['enable_member']
        && ( ! $members
             || count($members) == 0)
    ) {
        require_once('report/error_code.csp');
        cb_throw_error(E_GRN_RPRT_REPORT_NOT_MEMBER);
    }

    //Validate After POST
    if ($skip_validation_flag
        || SmartyValidate::is_valid($G_INPUT, $session_target)
    ) {
        //Create Parameter Translation Map
        $translation_map = [
            'rid' => '_rid',
            'cmd' => 'cmd',
        ];

        //Do Parameter Translation
        $properties = [];
        foreach ($translation_map as $view_name => $model_name) {
            $properties[$model_name] = @ $G_INPUT[$view_name];
        }

        //Redirect Next Page
        cb_redirect('report/draft_confirm',
            ['rid' => $report_id, 'tmp_key' => $tmp_key]);
    } else {
        //Include Sharing Codes With Command_*
        include('_modify_draft.csp');

        //site position
        $t->assign('site_position', [
                [
                    'page' => 'report/index',
                    'name' => grn_get_page_display_name('report/index'),
                    'sf'   => 1
                ],
                [
                    'page' => 'report/view_draft',
                    'name' => grn_get_page_display_name('report/view_draft'),
                    'rid'  => @$G_INPUT['rid']
                ],
                ['page' => '', 'name' => $page_title]
            ]
        );

        //GTM-529 tv
        $t->assign('path_mode', 'report/ajax/address_index');
        $t->assign('path_mode_get_address', 'report/ajax/get_addresses');

        //Assign Template Name
        $t->setPageInfo($page_name);

        //Display Previous Page
        $t->display($page_name . '.tpl');
    }
}


