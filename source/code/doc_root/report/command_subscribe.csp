<?php

if (strcasecmp(@ $_SERVER['REQUEST_METHOD'], 'POST') == 0) {
    // instantiate an Smarty object
    require_once("grn/smarty.csp");
    $t = new GRN_Smarty;

    global $G_container_base;
    $uum =& $G_container_base->getInstance('uum');
    $user =& $uum->getLoginUser();
    $user_id = $user->getOID();


    if ( ! $user) {
        require_once('grn/error_code.csp');
        cb_throw_error(E_GRN_USER_NOT_FOUND);
    }

    require_once('report/subscribe_logic.csp');
    $subscribe_logic = GRN_Report_Subscribe_Logic::getInstance();

    if (@ $G_INPUT['rid'] == '') {
        require_once('report/error_code.csp');
        cb_throw_error(E_GRN_RPRT_REPORT_NOT_FOUND,
            ['app_name' => $G_report_app_name],
            ['app_name' => $G_report_app_name],
            ['app_name' => $G_report_app_name]);
    }
    $report_id = $G_INPUT['rid'];

    if (array_key_exists('subs', $G_INPUT) && $G_INPUT['subs'] == 1) {
        $subscribe = '1';
    } else {
        $subscribe = '0';
    }

    //Get Report
    require_once('report/controller_util.csp');
    $report_util = GRN_Report_Report_Controller_Utility::getInstance();
    $report = $report_util->getSimpleView($report_id);

    //Check Subscribable
    $creator_id = isset($report['creator']) ? $report['creator'] : null;
    if ($user_id == $creator_id
        || ! $report_util->isViewable($user_id, $report_id)
    ) {
        $ret = false;
    } else {
        $notification_list = $report_util->getNotificationList($report_id,
            true);
        if ($subscribe || in_array($user_id, $notification_list)) {
            $ret = $subscribe_logic->add($report_id, $user_id, $subscribe);
        } else {
            //Unsubscribe Record should be removed
            $ret = $subscribe_logic->delete($report_id, $user_id);
        }

    }

    global $G_config_grn;
    $i18n = CB_I18N::getInstance();

    $charset = mb_preferred_mime_name(cb_get_http_output_encoding());
    // Copyrightを表示しない、Content-Typeの変更など
    cb_prepare_download('', 'application/xml; charset=' . $charset, false);

    $xml_writer = new XMLWriter();

    $xml_writer->openURI("php://output");
    $xml_writer->setIndentString("\t");
    $xml_writer->setIndent(true);
    $xml_writer->startDocument('1.0', $charset);
    $xml_writer->startElement('garoon');
    $xml_writer->writeAttribute('version',
        $G_config_grn->get('System', 'version'));
    $xml_writer->writeAttribute('xml:lang', $i18n->getCurrentLanguage());
    $ts = new CB_TimeStampEx();
    $ts->setTimezone('UTC');
    $dt = &$ts->getDateTime();
    $xml_writer->writeAttribute('datetime',
        sprintf('%04d-%02d-%02dT%02d:%02d:%02dZ', $dt->year, $dt->month,
            $dt->day, $dt->hour, $dt->minute, $dt->second));

    $xml_writer->startElement('data');

    if ($ret) {
        $xml_writer->startElement('result');
        $xml_writer->text('true');
        $xml_writer->endElement();   // result
        $xml_writer->startElement('subscription');
        $xml_writer->text($subscribe == '1' ? 'on' : 'off');
        $xml_writer->endElement();   // subscription
    } else {
        $xml_writer->startElement('result');
        $xml_writer->text('false');
        $xml_writer->endElement();   // result
    }

    $xml_writer->endElement();   // data
    $xml_writer->endElement();   // garoon
    $xml_writer->endDocument();
    $xml_writer->flush();
}


