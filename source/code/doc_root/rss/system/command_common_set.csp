<?php

//print_r( $G_INPUT ); die;

if (strcasecmp(@ $_SERVER['REQUEST_METHOD'], 'POST') == 0) {
    require_once('rss/resources.csp');
    require_once('rss/system.csp');
    $system = GRN_RSS_SystemLogic::getInstance();

    // set "use shared" attribute
    if (array_key_exists('use_shared', $G_INPUT)) {
        $use_shared = '1';
        $row =& $system->setUseSharedAttribute($G_rss_login,
            $use_shared);
    } else {
        $use_shared = '0';
        $row = $system->setUseSharedAttribute($G_rss_login, $use_shared);
    }
    $row->updateNow();

    // set "use personal" attribute
    if (array_key_exists('use_personal', $G_INPUT)) {
        $use_personal = '1';
        $row = $system->setUsePersonalAttribute($G_rss_login,
            $use_personal);
    } else {
        $use_personal = '0';
        $row =& $system->setUsePersonalAttribute($G_rss_login,
            $use_personal);
    }
    $row->updateNow();

    // set "cache interval" attribute
    if (array_key_exists('cache_interval', $G_INPUT)) {
        $cache_interval = intval($G_INPUT['cache_interval']);
        $row = $system->setCacheIntervalAttribute($G_rss_login,
            $cache_interval);
        $row->updateNow();

        // update scheduling date
        require_once('rss/logic.csp');
        $logic = new GRN_RSS_ReaderLogic();
        $logic->setSchedulingDate();
    }

    // set "cache preservation" attribute
    if (array_key_exists('cache_preservation', $G_INPUT)) {
        $cache_preservation = intval($G_INPUT['cache_preservation']);
        $row
            = $system->setCachePreservationAttribute($G_rss_login,
            $cache_preservation);
        $row->updateNow();
    }

    // set "timeout" attribute
    if (array_key_exists('timeout', $G_INPUT)) {
        $timeout = intval($G_INPUT['timeout']);
        $row = $system->setTimeoutAttribute($G_rss_login, $timeout);
        $row->updateNow();
    }
    //log format
    //[config] system_rss (timeout:1,cache_preservation:7,cache_interval:120,use_personal:1,use_shared:0, uid:1)
    require_once('rss/inspection.csp');
    $inspection = GRN_Rss_Inspection::getInstance();
    if ($inspection->isEnabled()) {
        $inspection->writeInspectionLogNotice('config', 'system_rss',
            [
                'timeout'            => $timeout,
                'cache_preservation' => $cache_preservation,
                'cache_interval'     => $cache_interval,
                'use_personal'       => $use_personal,
                'use_shared'         => $use_shared,
                'uid'                => $G_rss_login->getOID()
            ]);
    }

}

cb_redirect('system/application_list', ['app_id' => 'rss']);


