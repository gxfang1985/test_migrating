<?php

if (strcasecmp(@ $_SERVER['REQUEST_METHOD'], 'POST') == 0) {
    require_once('fw/string_util.csp');
    $G_INPUT['link'] = cb_trim(@ $G_INPUT['link']);

    // instantiate an Smarty object
    require_once('grn/smarty.csp');
    $t = new GRN_Smarty;

    // Validation check
    $target_name = '';
    if (array_key_exists('fn', $G_INPUT)) {
        $target_name = $G_INPUT['fn'];
    }
    require_once('SmartyValidate.class.php');
    SmartyValidate::connect($t);
    SmartyValidate::register_form($target_name);

    // validate after a POST
    if (SmartyValidate::is_valid($G_INPUT, $target_name)) {

        if ($G_INPUT['link'] === '') {
            require_once('rss/error_code.csp');
            cb_throw_error(E_GRN_RSS_NO_SITE_URL);
        }

        $channel = [
            'title' => cb_trim(@ $G_INPUT['title']),
            'memo'  => cb_trim(@ $G_INPUT['description'])
        ];

        require_once('rss/system.csp');
        $system = GRN_RSS_SystemLogic::getInstance();
        $row =& $system->addSharedChannelInfo($G_rss_login, $G_INPUT['link'],
            $channel);
        if ($row === true) {
            require_once('rss/error_code.csp');
            cb_throw_error(E_GRN_RSS_SITE_DUPLICATION);
        }

        // update scheduling date
        require_once('rss/logic.csp');
        $logic = new GRN_RSS_ReaderLogic();
        $logic->setSchedulingDate();

        // the validation session is finished
        if (SmartyValidate::is_registered_form($target_name)) {
            SmartyValidate::unregister_form($target_name);
        }

        cb_redirect('rss/system/list');

    } else {

        $t->setPageInfo($page_name);
        $t->assign('form_name', $target_name);

        // page title
        $page_title = grn_get_page_display_name($page_name);
        $t->assign('page_title', $page_title);

        $page_list = 'rss/system/list';
        $t->assign('site_position',
            [
                [
                    'page' => $page_list,
                    'name' => grn_get_page_display_name($page_list)
                ],
                [
                    'page' => '',
                    'name' => $page_title
                ]
            ]);

        $channel_info = [
            'title' => @ $G_INPUT['title'],
            'id'    => $G_INPUT['link'],
            'memo'  => @ $G_INPUT['description']
        ];
        include('_items.csp');

        require_once('fw/i18n.csp');
        $form_for_view = [
            'items'   => $items_for_view,
            'buttons' => [
                'submit' => [
                    'display_name' => cb_msg('fw/common', 'add'),
                    'type'         => 'submit',
                ],
                'cancel' => [
                    'type' => 'cancel',
                    'page' => 'rss/system/list',
                ],
            ],
            'hiddens' => [
                'fn' => $target_name,
            ],
        ];

        $t->assign('form', $form_for_view);

        $t->display($page_name . '.tpl');
    }

}


