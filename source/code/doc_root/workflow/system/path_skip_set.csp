<?php

global $G_INPUT;

require_once('grn/smarty.csp');
$t = new GRN_Smarty;

$page_title = grn_get_current_page_display_name();
$t->assign('page_title', $page_title);
$page_name = cb_get_pagename();

$category_id = null;
if (array_key_exists('cid', $G_INPUT)) {
    $category_id = $G_INPUT['cid'];
}
$t->assign('cid', $category_id);
$form_id = null;
if (array_key_exists('fid', $G_INPUT)) {
    $form_id = $G_INPUT['fid'];
}
$t->assign('fid', $form_id);

//Check Form Exist
require_once('workflow/form_logic_base.csp');
$column_list = ['_id'];
$option = [
    'condition' => [
        0 => [
            'column'   => 'col_deleted',
            'value'    => '0',
            'operator' => '='
        ]
    ]
];
$form_logic_base = GRN_Workflow_Form_Logic_Base::getInstance();
$form = $form_logic_base->getDirect($form_id, $column_list, $option);

//Create Item Options
$item_options = [];
require_once('workflow/item_logic.csp');
$logic = GRN_Workflow_Item_Logic::getInstance();
$columns = [];
$item_list = $logic->getList($form_id, $columns, $category_id);

require_once('workflow/controller_util.csp');
$item_util = GRN_Workflow_Item_Controller_Utility::getInstance();
$item_list = $item_util->eliminateNotAvailableBranchItems($form_id, $item_list);

foreach (array_keys($item_list) as $item_id) {
    //Check Foreign Key
    $foreign_key = $item_list[$item_id]['col_foreign_key'];

    switch ($foreign_key) {
        case 'grn.workflow.radio':
        case 'grn.workflow.checkbox':
        case 'grn.workflow.numeric':
        case 'grn.workflow.calc_numeric':
        case 'grn.workflow.menu_string':
            $item_options[$foreign_key][$item_id]
                = $item_list[$item_id]['col_display_name'];
        default:
            break;
    }
}
if ( ! is_array($item_options) || 0 == count($item_options)) {
    //指定された項目が見つかりません。
    require_once('workflow/error_code.csp');
    cb_throw_error(E_GRN_WRKF_ITEM_NOT_FOUND);
}
$t->assign('item_options', $item_options);

//Create Item Type Options
//item_optionsに含まれる項目のみ表示する
$item_type_options = [];
foreach (array_keys($item_options) as $foreign_key) {
    $item_type_options[$foreign_key] = cb_msg('grn.workflow', $foreign_key);
}
$t->assign('item_type_options', $item_type_options);

//Check Form Exists
require_once('workflow/form_logic.csp');
$logic = GRN_Workflow_Form_Logic::getInstance();
$form = $logic->get($form_id);
if ($category_id != $form['col_category']) {
    if ( ! (-1 == $category_id && is_null($form['col_category']))) {
        //指定された申請フォームが見つかりません。
        require_once('workflow/error_code.csp');
        cb_throw_error(E_GRN_WRKF_FORM_NOT_FOUND);
    }
}

//Get Path Skip
require_once('workflow/path_skip.csp');
$logic = GRN_Workflow_PathSkips::getInstance();
$columns = [
    'tab_grn_workflow_pathskip' => [
        '_id'      => '_id',
        'col_form' => 'col_form',
        'col_item' => 'col_item'
    ],
    'tab_grn_workflow_item'     => ['col_foreign_key' => 'col_foreign_key']
];
$path_skip_list = $logic->getByFormIdEx($form_id, $columns);
if ( ! is_array($path_skip_list) || 0 == count($path_skip_list)) {
    $item_options_keys = array_keys($item_options);
    $current_foreign_key = current($item_options_keys);
    $item_options_current_foreign_keys
        = array_keys($item_options[$current_foreign_key]);
    $current_item_id
        = current($item_options_current_foreign_keys);
    $path_skip_list = [
        'col_foreign_key' => $current_foreign_key,
        'col_item'        => $current_item_id
    ];
} else {
    // すでに経路分岐情報は設定されています。
    cb_throw_error();
}
$t->assign('path_skip', $path_skip_list);

//Create Site Position
$pages_info = [
    'form_list'     => [],
    'form_view'     => ['cid' => $category_id, 'fid' => $form_id],
    'path_skip_set' => null
];
$controller_util = new GRN_Workflow_ControllerUtil($page_name);
$site_position = $controller_util->makeSitePosition('workflow/system/',
    $pages_info);
$t->assign('site_position', $site_position);

$t->display("{$page_name}.tpl");


