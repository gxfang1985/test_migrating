<?php

if (strcasecmp(@ $_SERVER['REQUEST_METHOD'], 'POST') == 0) {
    global $G_INPUT;

    // instantiate an Smarty object
    require_once('grn/smarty.csp');
    $t = new GRN_Smarty;

    // Validation check
    require_once('SmartyValidate.class.php');
    SmartyValidate::connect($t);
    $target_name = 'workflow/system/category_import1';
    SmartyValidate::register_form($target_name);

    // validate after a POST
    if (SmartyValidate::is_valid($G_INPUT, $target_name)) {

        require_once('fw/session_manager.csp');

        $session_manager = CB_SessionManager::getInstance();
        $session =& $session_manager->getSession($target_name);
        $file_infos = $session->getFiles('import_files');
        if (is_array($file_infos)) {
            foreach (array_keys($file_infos) as $id) {
                $session->unsetFile('import_files', $id);
            }
        }

        $file = $_FILES['file'];

        if ($file['error']) {
            cb_throw_error(E_GRN_CSV_FILE_NOT_FOUND);
        }
        // セッションにファイルを一時保存
        $file_id = $session->addFile('import_files', $file);

        // the validation session is finished
        SmartyValidate::unregister_form($target_name);

        cb_redirect('workflow/system/category_import2',
            [
                'charset' => $G_INPUT['charset'],
                'skip'    => $G_INPUT['skip'],
                'file_id' => $file_id
            ]);

    } else {

        $t->setPageInfo($target_name);

        // Page Title
        $page_title = grn_get_page_display_name($target_name);
        $t->assign('page_title', $page_title);

        // Site position
        $pages_info = [
            'import_index'     => [],
            'category_import1' => null
        ];
        require_once('workflow/controller_util.csp');
        $controller_util = new GRN_Workflow_ControllerUtil($target_name);
        $site_position
            = $controller_util->makeSitePosition('workflow/system/',
            $pages_info);

        $t->assign('site_position', $site_position);

        // Assign input values
        $assign_input_values = [
            'charset' => cb_at($G_INPUT, 'charset'),
            'skip'    => cb_at($G_INPUT, 'skip')
        ];
        $t->assign($assign_input_values);

        $t->display($target_name . '.tpl');
    }
}
