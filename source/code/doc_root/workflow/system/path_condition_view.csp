<?php

global $G_INPUT;

//Instantiate an Smarty object
require_once("grn/smarty.csp");
$t = new GRN_Smarty;

//Display Smarty Template
$page_name = cb_get_pagename();

//SmartyValidate should be initialized when an input form is there.
require('SmartyValidate.class.php');
SmartyValidate::connect($t);
SmartyValidate::register_form($page_name, true);

$category_id = @ $G_INPUT['cid'];
$form_id = @ $G_INPUT['fid'];
$skip_id = @ $G_INPUT['sid'];
$condition_id = @ $G_INPUT['pcid'];

//Check Form Exist
require_once('workflow/form_logic_base.csp');
$column_list = ['_id'];
$option = [
    'condition' => [
        0 => [
            'column'   => 'col_deleted',
            'value'    => '0',
            'operator' => '='
        ]
    ]
];
$form_logic_base = GRN_Workflow_Form_Logic_Base::getInstance();
$form = $form_logic_base->getDirect($form_id, $column_list, $option);

require_once('workflow/path_condition_logic.csp');
$logic = GRN_Workflow_Path_Condition_Logic::getInstance();
$skip_row = $logic->getPathSkipEx($skip_id);
if ( ! $skip_row) {
    //Path Skip Not Found
    require_once('workflow/error_code.csp');
    cb_throw_error(E_GRN_WRKF_PATH_SKIP_NOT_FOUND);
}

//Assign Display Infomation
//Assign Category ID
$t->assign('category_id', $category_id);
//Assign Form ID
$t->assign('form_id', $form_id);
//Assign Skip ID
$t->assign('skip_id', $skip_id);
//Assign PathSkip ID
$t->assign('condition_id', $condition_id);


// fid, lid(skip)
require_once('workflow/controller_util.csp');
$form_util = GRN_Workflow_Form_Controller_Utility::getInstance();

//Create Parameter Translation Map
$translation_map_form = [
    //Form Information
    'fid'  => '_id',             //Form ID
    'path' => 'path',            //Form Path

];

//Get Form for view
$form_for_view = $form_util->getView($form_id, $translation_map_form,
    $category_id);

//Create Parameter Translation Map
$translation_map_item = [
    'iid'          => '_id',                  //Item ID
    'display_name' => 'display_name',         //Item Display Name
    'type'         => 'type',                 //Item Type
    'description'  => 'description',          //Item Description
    'display_type' => 'display_type',         //Item Display Type
    'foreign_key'  => 'foreign_key',          //Item Foreign Key
];

//Get Item List for view
$item_util = GRN_Workflow_Item_Controller_Utility::getInstance();
$item_list_for_view = $item_util->getListView($translation_map_item, $form_id);

require_once('workflow/path.csp');

$logic = GRN_Workflow_PathSteps::getInstance();
$columns = [
    '_id',
    'col_type',
    'col_acceptance_type',
    'col_role',
    'col_skip',
    'col_applicant'
];

$path_id = $form_for_view['path'];
$rows = $logic->getList($path_id, null, null, $columns);
$t->assign('path_steps', $rows);
$t->assign('path_step_count', count($rows));

$steps_all = [];
$steps_all = $rows;

//Form PathSkip Information : start
$columns = [];
$columns['tab_grn_workflow_pathskip'] = [
    '_id'      => '_id',
    'col_form' => 'col_form',
    'col_item' => 'col_item',
];

require_once('workflow/path_skip.csp');
$logic = GRN_Workflow_PathSkips::getInstance();
$path_skip = $logic->getByFormId($form_id, $columns);

$item_data_list = [];
foreach (array_keys($item_list_for_view) as $item_id) {

    if ($item_id == $path_skip['col_item']) {
        $skip['type'] = $item_list_for_view[$item_id]['display_type'];
        $skip['name'] = $item_list_for_view[$item_id]['display_name'];
        $skip['iid'] = $item_id;
    }

    if ($item_list_for_view[$item_id]['foreign_key']
        == GRN_WORKFLOW_CONDITION_ITEM_RADIO
        || $item_list_for_view[$item_id]['foreign_key']
           == GRN_WORKFLOW_CONDITION_ITEM_CHECK
        || $item_list_for_view[$item_id]['foreign_key']
           == GRN_WORKFLOW_CONDITION_ITEM_NUMERIC
        || $item_list_for_view[$item_id]['foreign_key']
           == GRN_WORKFLOW_CONDITION_ITEM_CALC_NUMERIC
        || $item_list_for_view[$item_id]['foreign_key']
           == GRN_WORKFLOW_CONDITION_ITEM_MENU_STRING
    ) {
        $condition['item'] = 1;
    }
    $item_data_list[$item_id] = $item_list_for_view[$item_id];
}

//Get Path Condition List
$columns = [];
$columns['tab_grn_workflow_pathskip'] = [
    'col_form' => 'col_form',
    'col_item' => 'col_item',
];
$columns['tab_grn_workflow_item'] = [
    '_id'              => '_id',
    'col_display_name' => 'col_display_name',
    'col_settings'     => 'col_settings',
    'col_foreign_key'  => 'col_foreign_key',
];
$columns['tab_grn_workflow_pathcondition'] = [
    '_id'           => '_id',
    'col_name'      => 'col_name',
    'col_number'    => 'col_number',
    'col_operator'  => 'col_operator',
    'col_option'    => 'col_option',
    'col_path_skip' => 'col_path_skip',
];
require_once('workflow/path_condition.csp');
$condition_logic = GRN_Workflow_PathConditions::getInstance();
$condition_list = $condition_logic->getList([$condition_id], $form_id,
    $columns);

//Get Condition Operator and Condition
array_walk($condition_list, function (&$condition, $key) use ($item_util) {
    $condition['operator'] = $item_util->getConditionOperatorView($condition);
    $condition['condition'] = $item_util->getConditionValueView($condition);
});

//Get Condition Step List
$skip_step_id_list = [];
$columns = [
    '_id',
    'col_path_condition',
    'col_path_step'
];
$step_logic = GRN_Workflow_PathConditionSteps::getInstance();
$path_condition_step_list
    = $step_logic->getListByPathConditionId(array_keys($condition_list),
    $columns);
foreach (array_keys($path_condition_step_list) as $key) {
    $skip_step_id_list[$path_condition_step_list[$key]['col_path_condition']][$path_condition_step_list[$key]['col_path_step']]
        = $path_condition_step_list[$key]['col_path_step'];
}

$condition_path_step_list = [];
foreach (array_keys($steps_all) as $path_step_id) {
    foreach (array_keys($condition_list) as $condition_id) {
        if (array_key_exists($condition_id, $skip_step_id_list)) {
            if ( ! array_key_exists($path_step_id,
                $skip_step_id_list[$condition_id])
            ) {
                $condition_path_step_list[$condition_id][$path_step_id]
                    = $steps_all[$path_step_id];
            }
        } else {
            $condition_path_step_list[$condition_id][$path_step_id]
                = $steps_all[$path_step_id];
        }
    }
}

//Assign Condition Path Step List
$t->assign('condition_path_step_list', $condition_path_step_list);

//Assign Path Condition List
$t->assign('condition_list', $condition_list);

//-- set page title and site position

//page title
$page_title = grn_get_current_page_display_name();
$t->assign('page_title', $page_title);

//site position
$t->assign('site_position', [
    [
        'page' => 'workflow/system/form_list',
        'name' => grn_get_page_display_name('workflow/system/form_list'),
        'cid'  => $category_id,
        'sf'   => 1
    ],
    [
        'page' => 'workflow/system/form_view',
        'name' => grn_get_page_display_name('workflow/system/form_view'),
        'cid'  => $category_id,
        'fid'  => $form_id
    ],
    [
        'page' => '',
        'name' => $page_title
    ]
]);

$t->display("{$page_name}.tpl");


