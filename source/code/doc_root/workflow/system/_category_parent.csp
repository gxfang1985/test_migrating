<?php
//Get Category Controller Utility
require_once('workflow/controller_util.csp');
$category_util = GRN_Workflow_Category_Controller_Utility::getInstance();

//Create Parameter Translation Map
$translation_map_parent_category = [
    //Category Information
    'cid'  => '_id',             //Category ID
    'name' => 'name',            //Category Name
    /*
        'foreign_key'   =>  'foreign_key',     //Category Foreign key
        'memo'          =>  'memo',            //Category Memo
        'parent'        =>  'parent',          //Category Parent
        'list_index'    =>  'list_index',      //Category List Index
        'security_model'=>  'security_model',  //Category Security Model
        'creator'       =>  'creator',         //Category Creator
        'creator_name'  =>  'creator_name',    //Category Creator Name
        'modifier'      =>  'modifier',        //Category Modifier
        'modifier_name' =>  'modifier_name',   //Category Modifier Name
        'ctime'         =>  'ctime',           //Category Create Time
        'mtime'         =>  'mtime',           //Category Modify Time
    */
];

//Parent Category
$parent_category_for_view = [];

//Root Category Flag
$is_root = false;
if ($category_id == GRN_WORKFLOW_CATEGORY_ROOT_ID || is_null($category_id)) {
    $is_root = true;
    $parent_category_for_view['cid'] = GRN_WORKFLOW_CATEGORY_ROOT_ID;
    $parent_category_for_view['name'] = cb_msg('grn.workflow', '(root)');
}

//Get Parent Category
if ( ! $is_root) {
    $parent_category_for_view = $category_util->getView($parent_category_id,
        $translation_map_parent_category, GRN_WORKFLOW_ACCESS_TYPE_SYSTEM);
}

//Assign Display Infomation
//Assign Parent Category Code
$t->assign('pcid', $parent_category_for_view['cid']);
//Assign Parent Category Name
$t->assign('pname', $parent_category_for_view['name']);

//Assign Root Category Flag
$t->assign('is_root', $is_root);
