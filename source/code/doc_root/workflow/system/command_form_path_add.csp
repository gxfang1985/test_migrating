<?php

if (0 == strcasecmp(@ $_SERVER['REQUEST_METHOD'], 'POST')) {
    global $G_INPUT;

    $page_name = 'workflow/system/form_path_add';

    require_once('grn/smarty.csp');
    $t = new GRN_Smarty;
    require_once('SmartyValidate.class.php');
    SmartyValidate::connect($t);
    SmartyValidate::register_form($page_name);

    $category_id = null;
    if (array_key_exists('cid', $G_INPUT)) {
        $category_id = $G_INPUT['cid'];
    }
    $form_id = null;
    if (array_key_exists('fid', $G_INPUT)) {
        $form_id = $G_INPUT['fid'];
    }

    if (SmartyValidate::is_valid($G_INPUT, $page_name)) {
// TODO: 運用管理はここでアクセス権をチェック

        require_once('workflow/form_logic.csp');
        $logic = GRN_Workflow_Form_Logic::getInstance();
        $columns = [];
        $option = [];
        $form = $logic->get($form_id, $category_id, $columns, $option, false,
            CB_DATABASE_EXCLUSIVE_LOCK);
        if ( ! is_array($form) || 0 == count($form)) {
            // フォームがない
            cb_throw_error(E_GRN_WRKF_FORM_NOT_FOUND);
        }
        $path_id = $form['col_path'];

        if (0 < strlen($path_id) && 0 < $path_id) {
            require_once('workflow/path.csp');
            $logic = GRN_Workflow_Paths::getInstance();
            $columns = [
                '_id',
                'col_type'
            ];
            $path = $logic->get($path_id, $columns);
            if ( ! is_array($path) || 0 == count($path)) {
                // 経路がない
                cb_throw_error(E_GRN_WRKF_NOT_FOUND_PATH);
            }
            if (GRN_WORKFLOW_PRIVATE_PATH == $path['col_type']) {
                // 専用経路は追加できない
                cb_throw_error(E_GRN_WRKF_DENY_ADD_PRIVATE_PATH);
            }

            require_once('workflow/change_access.csp');
            $logic = GRN_Workflow_ChangeAccess::getInstance();
            $columns
                = ['tab_grn_workflow_accesschangeform' => ['_id' => '_id']];
            $change_accesses = $logic->getListByFormId($form_id, $columns);
            if (is_array($change_accesses) && 0 < count($change_accesses)) {
                $logic->removeList(array_keys($change_accesses));
            }
        }

        global $G_container_base;
        $uum = $G_container_base->getInstance('uum');
        $login = $uum->getLoginUser();
        $G_INPUT['col_creator'] = $login->getOID();
        $G_INPUT['col_creator_name'] = $login->get('display_name');
        $G_INPUT['col_creator_foreign_key'] = $login->get('foreign_key');
        $G_INPUT['col_ctime'] = time();
        $G_INPUT['col_richeditor'] = @ $G_INPUT['editor'] ? 1 : 0;
        $G_INPUT['col_modifier'] = $G_INPUT['col_creator'];
        $G_INPUT['col_modifier_name'] = $G_INPUT['col_creator_name'];
        $G_INPUT['col_modifier_foreign_key']
            = $G_INPUT['col_creator_foreign_key'];
        $G_INPUT['col_mtime'] = $G_INPUT['col_ctime'];
        $G_INPUT['col_type'] = GRN_WORKFLOW_PRIVATE_PATH;

        require_once('workflow/path.csp');
        $logic = GRN_Workflow_Paths::getInstance();
        $columns_info = $logic->getColumnsInfo();

        require_once('workflow/controller_util.csp');
        $controller_util = new GRN_Workflow_ControllerUtil($page_name);
        $properties = $controller_util->validateProperties($G_INPUT,
            $columns_info);
        $columns = ['_id'];
        $row
            = $logic->getByForeignKey($properties['col_foreign_key'],
            $columns);
        if (is_array($row) && 0 < count($row)) {
            // 経路コードが重複
            cb_throw_error(E_GRN_WRKF_DUPLICATION_PATH_FOREIGN_KEY);
        }

        $path_id = $logic->add($properties);

        $logic = GRN_Workflow_Form_Logic::getInstance();
        $logic->setPath($form_id, $path_id);

        require_once('workflow/path_skip.csp');
        $path_skip_logic = GRN_Workflow_PathSkips::getInstance();
        $columns = ['tab_grn_workflow_pathskip' => ['_id' => '_id']];
        $path_skip = $path_skip_logic->getByFormId($form_id, $columns);

        if (is_array($path_skip) && 0 < count($path_skip)) {
            require_once('workflow/path_condition.csp');
            $path_condition_logic = GRN_Workflow_PathConditions::getInstance();
            $path_condition_logic->removeByPathSkipId($path_skip['_id']);
        }

        //監査する
        require_once('workflow/inspection.csp');
        $inspection = GRN_Workflow_Path_Inspection::getInstance();
        if ($inspection->isEnabled()) {
            $message_type = 'path_add';

            //経路スキップの設定
            $inspection_skip = $inspection->setSkip($properties['col_skip']);
            //説明（書式）
            $inspection_richeditor
                = $inspection->setRicheditor($properties['col_richeditor']);
            //アイコン表示
            $inspection_icon = $inspection->setIcon($properties['col_icon']);
            //経路タイプ
            $inspection_type = $inspection->setType($properties['col_type']);

            $message_args['fid'] = $form_id;
            $message_args['pid'] = $path_id;
            $message_args['name'] = $properties['col_name'];
            $message_args['foreign_key'] = $properties['col_foreign_key'];
            $message_args['skip'] = $inspection_skip;
            $message_args['richeditor'] = $inspection_richeditor;
            $message_args['description'] = $properties['col_description'];
            $message_args['icon'] = $inspection_icon;
            $message_args['type'] = $inspection_type;
            //Record Inspection
            $inspection->record($message_type, $message_args);
        }

        SmartyValidate::unregister_form($page_name);
        cb_redirect('workflow/system/form_view',
            ['cid' => $category_id, 'fid' => $form_id]);
    } else {
        $t->setPageInfo($page_name);
        $page_title = grn_get_page_display_name($page_name);
        $t->assign('page_title', $page_title);

        include('_form_path_add.csp');

        $key = 'text';
        if (@ $G_INPUT['editor']) {
            $key = 'html';
        }
        $t->assign($key, $G_INPUT['col_description']);

        // Assign input values
        $assign_input_values = [
            'cid'             => $category_id,
            'fid'             => $form_id,
            'col_name'        => cb_at($G_INPUT, 'col_name'),
            'col_foreign_key' => cb_at($G_INPUT, 'col_foreign_key'),
            'col_icon'        => cb_at($G_INPUT, 'col_icon')
        ];
        $t->assign($assign_input_values);

        $t->display("{$page_name}.tpl");
    }
}


