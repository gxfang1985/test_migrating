<?php

global $G_INPUT;

require_once('grn/smarty.csp');
$t = new GRN_Smarty;

$page_title = grn_get_current_page_display_name();
$t->assign('page_title', $page_title);
$page_name = cb_get_pagename();

$path_id = null;
if (array_key_exists('pid', $G_INPUT)) {
    $path_id = $G_INPUT['pid'];
}
$t->assign('pid', $path_id);

// TODO: 運用管理はここでアクセス権をチェック

require_once('workflow/path.csp');
$logic = GRN_Workflow_Paths::getInstance();
$columns = [
    '_id',
    'col_name',
    'col_foreign_key',
    'col_type',
    'col_skip',
    'col_admin_memo',
    'col_description',
    'col_icon',
    'col_creator',
    'col_creator_name',
    'col_ctime',
    'col_modifier',
    'col_modifier_name',
    'col_mtime',
    'col_richeditor'
];
$path = $logic->get($path_id, $columns);
if ( ! is_array($path) || 0 == count($path)) {
    // 経路がない
    cb_throw_error(E_GRN_WRKF_NOT_FOUND_PATH);
}

$public_path_count = $logic->getCount(GRN_WORKFLOW_PUBLIC_PATH);
$t->assign('public_path_count', $public_path_count);
$timestamp = new CB_Timestamp();
$timestamp->unix_ts = $path['col_ctime'];
$path['col_ctime'] = new CB_TimestampEx($timestamp);
$timestamp->unix_ts = $path['col_mtime'];
$path['col_mtime'] = new CB_TimestampEx($timestamp);
require_once('workflow/form_logic.csp');
$logic = GRN_Workflow_Form_Logic::getInstance();
$form_counts = $logic->getCountListGroupByPath([$path_id]);
if (array_key_exists($path_id, $form_counts)) {
    $path['form_count'] = $form_counts[$path_id];
} else {
    $path['form_count'] = 0;
}
$t->assign('path', $path);
$logic = GRN_Workflow_PathSteps::getInstance();
$columns = [
    '_id',
    'col_type',
    'col_acceptance_type',
    'col_role',
    'col_code',
    'col_skip',
    'col_applicant',
    'col_deny_change_path',
    'col_change_path'
];
$path_steps = $logic->getList($path_id, null, null, $columns);
$t->assign('path_steps', $path_steps);
$t->assign('path_step_count', count($path_steps));

$acceptance_path_steps = [];
$circular_path_steps = [];
foreach ($path_steps as $path_step) {
    if (GRN_WORKFLOW_CIRCULAR == $path_step['col_type']) {
        $circular_path_steps[$path_step['_id']] = $path_step;
    } else {
        $acceptance_path_steps[$path_step['_id']] = $path_step;
    }
}
$t->assign('acceptance_path_steps', $acceptance_path_steps);
$t->assign('acceptance_path_step_count', count($acceptance_path_steps));
$t->assign('circular_path_steps', $circular_path_steps);
$t->assign('circular_path_step_count', count($circular_path_steps));

require_once('workflow/controller_util.csp');
$controller_util = new GRN_Workflow_ControllerUtil(cb_get_pagename());
$members_info = $controller_util->getPathMembersInfo($path_steps);
$t->assign('members', $members_info['members']);
$t->assign('member_total', $members_info['member_total']);

$page_infos = [
    'path_list' => [
        'private' => GRN_WORKFLOW_PRIVATE_PATH == $path['col_type']
    ],
    'path_view' => null
];
require_once('workflow/controller_util.csp');
$controller_util = new GRN_Workflow_ControllerUtil($page_name);
$site_position = $controller_util->makeSitePosition('workflow/system/',
    $page_infos);
$t->assign('site_position', $site_position);

$t->display("{$page_name}.tpl");


