<?php

//Instantiate an Smarty object
require_once("grn/smarty.csp");
$t = new GRN_Smarty;

//Set Application Name
global $G_workflow_app_name;
$t->assign('app_name', $G_workflow_app_name);

//Get Parameters
require_once('workflow/resources.csp');
$category_id = @ $G_INPUT['cid'];         //Category ID
$category_id = $category_id ? $category_id : GRN_WORKFLOW_CATEGORY_ROOT_ID;

//Get Category and Form Controller Utility
require_once('workflow/controller_util.csp');
$form_util = GRN_Workflow_Form_Controller_Utility::getInstance();
$category_util = GRN_Workflow_Category_Controller_Utility::getInstance();

//Create Parameter Translation for Form
$translation_map_form = [
    'fid'       => '_id',          //Form ID
    'type'      => 'type',         //Form Type
    'name'      => 'name',         //Form Name
    'active'    => 'active',       //Form Active
    'icon_type' => 'icon_type',    //Form Icon Type
    'icon_id'   => 'icon_id',      //Form Icon ID
    'icon_url'  => 'icon_url',     //Form Icon URL
];
//Create Condition Option
$option = [];
$option['condition'] = [];
$option['condition'][] = [
    'column'   => 'col_deleted',
    'value'    => '0',
    'operator' => '='
];

//Get Form Count
require_once('workflow/form_logic_base.csp');
$form_logic_base = GRN_Workflow_Form_Logic_Base::getInstance();
$form_count = $form_logic_base->getCount($category_id, $option);

//Get Login User Config
global $G_portal_login_user;
require_once('grn/ui.csp');
$manager = GRN_UIConfigManager::getInstance();
$config = $manager->getUserConfig($G_workflow_login_user);

//N-Navigation
require_once('workflow/utility.csp');
$params = ['cid' => $category_id];
$n_navigation_for_view = grn_make_n_navigation($form_count, $params,
    $config->getListMax());

//Create List Option
$option['list'] = [];
$option['list']['offset'] = $n_navigation_for_view['offset'];
$option['list']['limit'] = $n_navigation_for_view['limit'];

//Get Form List for View
$form_list_for_view = $form_util->getListView($translation_map_form,
    $category_id, $option);

//Create Parameter Translation Map for Category
$translation_map_category = [
    //Category Information
    'cid'         => '_id',             //Category ID
    'name'        => 'name',            //Category Name
    'foreign_key' => 'foreign_key',     //Category Foreign key
    'memo'        => 'memo',            //Category Memo
    'parent'      => 'parent',          //Category Parent
    'list_index'  => 'list_index',      //Category List Index
    'count'       => 'count',           //Children Category Count
];
//Get Current Category for View
$category_for_view = $category_util->getView($category_id,
    $translation_map_category, GRN_WORKFLOW_ACCESS_TYPE_SYSTEM);
//Get Child Category List for View
$category_for_view['children'] = $category_util->getChildListView($category_id,
    $translation_map_category, GRN_WORKFLOW_ACCESS_TYPE_SYSTEM);
//Get Tree Category List for View
if ($category_id != GRN_WORKFLOW_CATEGORY_ROOT_ID) {
    $category_for_view['ancestors']
        = $category_util->getTreeListView($category_id,
        $translation_map_category, GRN_WORKFLOW_ACCESS_TYPE_SYSTEM, true,
        false);
}

//Assign Display Infomation
//Assign Category ID
$t->assign('category_id', $category_id);

//Assign Form List
$t->assign('form_list', $form_list_for_view);
//Assign Category
$t->assign('category', $category_for_view);

//Assign View Set
$t->assign('navi', $n_navigation_for_view);

//UI Parameters
$t->assign('name_width', GRN_WORKFLOW_NAME_WIDTH);
$t->assign('subject_width', GRN_WORKFLOW_SUBJECT_WIDTH);
$t->assign('show_user_num', GRN_WORKFLOW_SHOW_MAX_USER_NUM);

//Page Title
$page_title = grn_get_current_page_display_name();
$t->assign('page_title', $page_title);

// site position
$t->assign('site_position', [
        ['page' => '', 'name' => $page_title]
    ]
);

//Display Smarty Template
$doc_name = cb_get_pagename();
$t->display("{$doc_name}.tpl");


