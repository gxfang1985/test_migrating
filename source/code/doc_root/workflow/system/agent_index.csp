<?php

//-- instantiate Smarty object
require_once('grn/smarty.csp');
$t = new GRN_Smarty;

//-- get parameters from URL parameters
$org_id = @ $G_INPUT['oid'];

//-- prepare uum and uum_util
global $G_container_base;
$uum = $G_container_base->getInstance('uum');
$login = $uum->getLoginUser();

require_once('grn/org_tree.csp');

// ページ名を取得
$page_name = cb_get_pagename();

$util = GRN_OrgTreeUtil::getInstance();

// セッションからツリーオブジェクトを取得
// 引数がツリーのIDとなる。IDが変わると、別のツリーとみなされる（通常はページ名をセット）。
$tree =& $util->getTree($page_name);

if (is_null($org_id)) {
    // パラメータに組織IDが設定されていないので、セッションに保存されている組織IDを取得。
    // （前回選択された組織を再度選択させるため）
    $org_id = $tree->getSelectedNode();
}

$row =& $uum->getGroup($org_id);
if ( ! $row && $org_id >= 0) {
    $G_INPUT['top'] = 1;
}

if (array_key_exists('top', $G_INPUT) || is_null($tree->getRoot())) {
    // 「トップ」をクリックしたか、セッションにデータがないため初期化処理を行う。
    $tree->initialize();

    // ルート選択
    $org_id = null;
}

// 選択済み組織IDをセット
$tree->setSelectedNode($org_id);

// ツリーオブジェクトをセッションに保存
$util->setTree($page_name, $tree);

// ツリーデータを取得
$org = $tree->getRoot();

$search_text = array_key_exists('search_text', $G_INPUT)
    ? cb_trim($G_INPUT['search_text']) : '';
$is_search = strlen($search_text) > 0 ? true : false;

require_once('workflow/config.csp');
$logic = GRN_Workflow_Configs::getInstance();
$logic =& $logic->getSystemConfig();


require_once('grn/org_util.csp');
require_once('grn/org_util_search.csp');

$user_list = [];
$users_id = [];
$is_search = @array_key_exists('search_text', @$G_INPUT);
if ($is_search) {
    //--N-navigation
    $condition = grn_get_user_info_search_condition($org_id, $search_text);
    $search_text = $G_INPUT['search_text'];
    $navi_params = ['oid' => $org_id, 'search_text' => $search_text];
    $user_list =& grn_search_user_info_by_application($org_id, $condition,
        $navigation_info, false, $navi_params, null,
        null);

    $t->assign('search_text', $search_text);
} elseif ($org_id == -1 || $org_id > 0) {
    $navi_params = ['oid' => $org_id];
    $user_list
        = grn_get_group_by_application($org_id, null, $navi_params,
        null, $navigation_info);
}

foreach (array_keys($user_list) as $uid) {
    $users_id[] = $uid;
    $agent_list = $logic->getAgent($uid);
    $agent_list_info = [];
    $agent_list_info[GRN_WORKFLOW_AGENT_TYPE_PETITION] = null;
    $agent_list_info[GRN_WORKFLOW_AGENT_TYPE_APPROVAL] = null;
    if (is_array($agent_list)) {
        foreach ($agent_list as $agent) {
            $agent_info = [];
            $agent_uid = $agent['agent'];
            $agent_type = $agent['agent_type'];
            $user_info = $uum->getUserInfo($agent_uid);
            if ($user_info != false) {
                $agent_info['uid'] = $agent_uid;
                $agent_info['display_name']
                    = GRN_ControllerUtil::getUserNameText($login->getOID(),
                    $agent_uid);
                $agent_list_info[$agent_type][$agent_uid] = $agent_info;
            }
        }
    } else {
        $agent_user_info[GRN_WORKFLOW_AGENT_TYPE_PETITION] = null;
        $agent_user_info[GRN_WORKFLOW_AGENT_TYPE_APPROVAL] = null;
    }
    $user_list[$uid]['agents'] = $agent_list_info;
}
//GTM-529 tuning

require_once("grn/controller.csp");
$users_info = GRN_ControllerUtil::getUserInfoToShowUserName($users_id,
    $uum->getLoginUser());
$t->assign('users_info', $users_info);
//end
//-- set variables for view
$t->assign('org_id', $org_id);
$t->assign('org', $org);
$t->assign('is_root', ! $org_id);
$t->assign('is_nogroups', 0 > $org_id);
$t->assign('is_search', $is_search);
$t->assign('page_name', $page_name);

if ($is_search || $org_id) {
    $t->assign('user_list', $user_list);
    $t->assign('navi_info', $navigation_info);
} else {
    $t->assign('group_count', $uum->getGroupCount());
    $t->assign('user_count', $uum->getUserCount());
}

if ( ! $org_id) {
    $petition_count = $logic->getAgentCount(GRN_WORKFLOW_AGENT_TYPE_PETITION);
    $approval_count = $logic->getAgentCount(GRN_WORKFLOW_AGENT_TYPE_APPROVAL);
    $t->assign('petition_count', $petition_count);
    $t->assign('approval_count', $approval_count);
}


//-- page title
$page_title = grn_get_current_page_display_name();
$t->assign('page_title', $page_title);

//-- site position
$site_position = [
    ['page' => '', 'name' => $page_title],
];
$t->assign('site_position', $site_position);

// exec smarty
$t->display(cb_get_pagename() . '.tpl');


