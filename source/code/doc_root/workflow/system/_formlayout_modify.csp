<?php

global $G_INPUT;

//Get Parameters

//Get Parameters
$category_id = @ $G_INPUT['cid'];       //Category ID
$form_id = @ $G_INPUT['fid'];        //Form ID
$item_id = @ $G_INPUT['iid'];        //Item ID
$selected_foreign_key = @ $G_INPUT['foreign_key']; //Foreign key

//Check Category Exists
require_once('workflow/resources.csp');
if (GRN_WORKFLOW_CATEGORY_NONPARTY_ID != $category_id) {
    require_once('workflow/category_logic_base.csp');
    $category_logic_base = GRN_Workflow_Category_Logic_Base::getInstance();
    $category =& $category_logic_base->get($category_id);
}

//Check Form Exist
require_once('workflow/form_logic_base.csp');
$column_list = ['_id'];
$option = [
    'condition' => [
        0 => [
            'column'   => 'col_deleted',
            'value'    => '0',
            'operator' => '='
        ]
    ]
];
$form_logic_base = GRN_Workflow_Form_Logic_Base::getInstance();
$form = $form_logic_base->getDirect($form_id, $column_list, $option);

//Check Allready Assignd Item
$item_for_view =& $t->get_template_vars('item');
if (is_null($item_for_view)) {
    //Get Form & Item Controller Utility
    require_once('workflow/controller_util.csp');
    $item_util = GRN_Workflow_Item_Controller_Utility::getInstance();

    //Create Parameter Translation for Item
    $translation_map_item = [
        'iid'                => '_id',
        //Item ID
        'display_name'       => 'display_name',
        //Item Display Name
        'code'               => 'code',
        //Item Code
        'type'               => 'type',
        //Item Type
        'option_string'      => 'option_string',
        //Item Option String
        'option_string_type' => 'option_string_type',
        //Item Option String Type
        'description'        => 'description',
        //Item Description
        'description_type'   => 'description_type',
        //Item Description Type
        'description_editor' => 'description_editor',
        //Item Description Editor
        'foreign_key'        => 'foreign_key',
        //Item foreign_key
        'attach_file'        => 'attach_file',
        //Item Attach File
        'attach_file_view'   => 'attach_file_view',
        //Item Attach File View
        'form'               => 'form',
        //Item Form
        'settings'           => 'settings',
        //Item Settings
        'br'                 => 'br',
        //Item <br> Flag
        'separator'          => 'separator',
        //Item Separator
        'required'           => 'required',
        //Item Reuired Flag
        'list_index'         => 'list_index',
        //Item List Index
        'display_type'       => 'display_type',
        //Display_type
        'export_data'        => 'export_data',
        //Export Data
    ];

    //Get Item for View
    $item_for_view = $item_util->getView($item_id, $translation_map_item);
}

//Assign Display Infomation
//Assign Category ID
$t->assign('category_id', $category_id);
//Assign Form ID
$t->assign('form_id', $form_id);
//Assign Item ID
$t->assign('item_id', $item_id);

//Assign Item
$t->assign('item', $item_for_view);
//Assign Selected Foreign_key
$t->assign('selected_foreign_key', $selected_foreign_key);

//-- set page title and site position

//page title
$page_title = grn_get_page_display_name('workflow/system/formlayout_modify');
$t->assign('page_title', $page_title);

//site position
$t->assign('site_position', [
        [
            'page' => 'workflow/system/form_list',
            'name' => grn_get_page_display_name('workflow/system/form_list'),
            'cid'  => $category_id,
            'sf'   => 1
        ],
        [
            'page' => 'workflow/system/form_view',
            'name' => grn_get_page_display_name('workflow/system/form_view'),
            'cid'  => $category_id,
            'fid'  => $form_id
        ],
        [
            'page' => 'workflow/system/formlayout_view',
            'name' => grn_get_page_display_name('workflow/system/formlayout_view'),
            'cid'  => $category_id,
            'fid'  => $form_id,
            'iid'  => $item_id
        ],
        ['page' => '', 'name' => $page_title]
    ]
);


