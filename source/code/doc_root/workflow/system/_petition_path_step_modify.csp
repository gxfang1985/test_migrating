<?php

use grn\grn\MemberLogic;

//Get Parameter
$category_id = @ $G_INPUT['cid'];         //Category ID
$form_id = @ $G_INPUT['fid'];         //Form ID
$petition_id = @ $G_INPUT['pid'];         //Petition ID
$path_step_id = @ $G_INPUT['psid'];        //Path Step ID

/**
 * 制限事項
 * ・申請の進行状況は未処理、進行中、承認でない
 */

//Get Petition Controller Utility
require_once('workflow/controller_util.csp');
$petition_util = GRN_Workflow_Petition_Controller_Utility::getInstance();

//Create Parameter Translation Map
$translation_map_petition = [
    'pid'                 => '_id',
    // Petition ID
    'petition_number'     => 'petition_number',
    // Petition Number
    'name'                => 'name',
    // Petition Name
    'form_name'           => 'form_name',
    // Petition Form Name
    'creator'             => 'creator',
    // Petition Creator
    'creator_name'        => 'creator_name',
    // Petition Creator Name
    'creator_foreign_key' => 'creator_foreign_key',
    // Petition Creator Foreign Key
    'ctime'               => 'ctime',
    // Petition Create Time
    'icon_type'           => 'icon_type',
    // Petition Icon Type
    'icon_id'             => 'icon_id',
    // Petition Icon ID
    'icon_url'            => 'icon_url',
    // Petition Icon URL
    'status'              => 'status',
];

//Get Petition for View
$petition = $petition_util->getView($petition_id, $translation_map_petition);
if ( ! is_array($petition) || 0 == count($petition)) {
    // 申請がない
    cb_throw_error(E_GRN_WRKF_PETITION_NOT_FOUND);
}

switch ($petition['status']) {
// 申請の進行状況は下書き、取り戻し
    case GRN_WORKFLOW_STATUS_TEMPORARY:
    case GRN_WORKFLOW_STATUS_UNPROCESSING_CANCEL:
        cb_throw_error(E_GRN_WRKF_PETITION_DENY_ACCESS);
// 申請の進行状況は未処理、進行中、承認
    case GRN_WORKFLOW_STATUS_UNPROCESSING:
    case GRN_WORKFLOW_STATUS_IN_PROCESS:
    case GRN_WORKFLOW_STATUS_ACCEPTANCE:
    case GRN_WORKFLOW_STATUS_REMAND:
        break;
// その他
    default:
        cb_throw_error(E_GRN_WRKF_DENY_MODIFY_PATH_STEP_DATA);
        break;
}

//Get Path Step List for View
$controller_util = new GRN_Workflow_ControllerUtil(cb_get_pagename());
$path_steps = $controller_util->getPathInfo($petition_id);
$controller_util->ekePathInfo($path_steps, GRN_WORKFLOW_SYSTEM_ADMIN,
    $petition['status']);
if ( ! array_key_exists($path_step_id, $path_steps)) {
    // 経路ステップがない
    cb_throw_error(E_GRN_WRKF_NOT_FOUND_PATH_STEP_DATA);
}
$path_step = $path_steps[$path_step_id];
if ($path_step['not_modify']) {
    // 経路（ステップ）の変更は禁止されている
    cb_throw_error(E_GRN_WRKF_DENY_MODIFY_PATH_STEP_DATA);
}
$users_id = [];
$selected_users = [];
$not_candidated_users = [];
if ($path_step['col_skip'] || 0 == $path_step['user_count']) {
    $selected_users[] = MemberLogic::getInstance()->getOmittedData();
} else {
    $users =& $path_step['users'];
    foreach ($users as $user) {
        $user_id = $user['col_user'];
        $users_id = $user_id;
        $display_name = $user['col_current_display_name'];
        if (0 == strlen($display_name)) {
            $display_name = $user['col_display_name'];
        }

        if (GRN_WORKFLOW_RESULT_UNPROCESSING >= $user['col_result']) {
            if (0 < strlen($user_id)) {
                $selected_users[] = ['id' => $user_id, 'type' => 'user'];
            }
        } else {
            if (0 < strlen($user_id)) {
                $not_candidated_users[$user_id] = $display_name;
            }
        }
    }
    $selected_users = MemberLogic::getInstance()
                                 ->getDisplayMemberList($selected_users);
}

//Assign Display Infomation
//Assign Catehgory ID
$t->assign('category_id', $category_id);
//Assign Catehgory ID
$t->assign('form_id', $form_id);
//Assign Petition ID
$t->assign('petition_id', $petition_id);
//Assign Path Step ID
$t->assign('path_step_id', $path_step_id);

//Assign Petition
$t->assign('petition', $petition);

//Assign Path Step
$t->assign('path_step', $path_step);
//Assign Selected Users
$t->assign('selected_users', $selected_users);
//Assign Not Candidated Users
$t->assign('not_candidated_users', $not_candidated_users);

$t->assign('plugin', [
    'name'   => 'common',
    'params' => [
        'action'       => null,
        'session_name' => cb_get_pagename(),
        'app_id'       => 'workflow'
    ]
]);

//-- set page title and site position

//page title
$page_title = grn_get_current_page_display_name();
$t->assign('page_title', $page_title);
//GTM-529 tuning
global $G_container_base;
$uum =& $G_container_base->getInstance('uum');

$users_info = GRN_ControllerUtil::getUserInfoToShowUserName($users_id,
    $uum->getLoginUser());
$t->assign('users_info', $users_info);
//end
//site position
$t->assign('site_position', [
        [
            'page' => 'workflow/system/petition_list',
            'name' => grn_get_page_display_name('workflow/system/petition_list'),
            'cid'  => $category_id,
            'fid'  => $form_id,
            'sf'   => 1
        ],
        [
            'page' => 'workflow/system/petition_view',
            'name' => grn_get_page_display_name('workflow/system/petition_view'),
            'cid'  => $category_id,
            'fid'  => $form_id,
            'pid'  => $petition_id,
            'sf'   => 1
        ],
        [
            'page' => 'workflow/system/petition_path_step_view',
            'name' => grn_get_page_display_name('workflow/system/petition_path_step_view'),
            'cid'  => $category_id,
            'fid'  => $form_id,
            'pid'  => $petition_id,
            'psid' => $path_step_id
        ],
        ['page' => '', 'name' => $page_title]
    ]
);

