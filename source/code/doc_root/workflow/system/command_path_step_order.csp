<?php

if (0 == strcasecmp(@ $_SERVER['REQUEST_METHOD'], 'POST')) {
    global $G_INPUT;

    $path_id = null;
    if (array_key_exists('pid', $G_INPUT)) {
        $path_id = $G_INPUT['pid'];
    }
    $psids = [];
    if (array_key_exists('psids', $G_INPUT)) {
        $psids = $G_INPUT['psids'];
    }

// TODO: 運用管理はここでアクセス権をチェック

    require_once('workflow/path.csp');
    $logic = GRN_Workflow_Paths::getInstance();
    $columns = [
        '_id',
        'col_type'
    ];
    $path = $logic->get($path_id, $columns);
    if ( ! is_array($path) || 0 == count($path)) {
        // 経路がない
        cb_throw_error(E_GRN_WRKF_NOT_FOUND_PATH);
    }
    if (GRN_WORKFLOW_PUBLIC_PATH != $path['col_type']) {
        // 共有経路でない経路は変更できない
        cb_throw_error(E_GRN_WRKF_DENY_MODIFY_NOT_PUBLIC_PATH);
    }

    global $G_container_base;
    $uum =& $G_container_base->getInstance('uum');
    $login =& $uum->getLoginUser();

    $properties = [
        'col_modifier'             => $login->getOID(),
        'col_modifier_name'        => $login->get('display_name'),
        'col_modifier_foreign_key' => $login->get('foreign_key'),
        'col_mtime'                => time()
    ];
    $logic->modify($path_id, $properties);

    $logic = GRN_Workflow_PathSteps::getInstance();
    $properties = [];
    foreach ($psids as $list_index => $path_step_id) {
        $properties['col_list_index'] = $list_index;
        $logic->modify($path_step_id, $properties);
    }

    //監査する
    require_once('workflow/inspection.csp');
    $inspection = GRN_Workflow_Path_Step_Inspection::getInstance();
    if ($inspection->isEnabled()) {
        $message_type = 'path_step_order';

        $message_args['pid'] = $path_id;
        $message_args['psids'] = $psids;

        //Record Inspection
        $inspection->record($message_type, $message_args);
    }

    cb_redirect('workflow/system/path_view', ['pid' => $path_id]);
}


