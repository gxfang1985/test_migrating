<?php

global $G_INPUT;

require_once('grn/smarty.csp');
$t = new GRN_Smarty;

$page_title = grn_get_current_page_display_name();
$t->assign('page_title', $page_title);
$page_name = cb_get_pagename();

$private = false;
if (array_key_exists('private', $G_INPUT)) {
    $private = $G_INPUT['private'];
}

$t->assign('private', $private);

$columns = [
    '_id',
    'col_name',
    'col_foreign_key',
    'col_type',
    'col_admin_memo'
];
require_once('workflow/path.csp');
$logic = GRN_Workflow_Paths::getInstance();
$type = GRN_WORKFLOW_PUBLIC_PATH | GRN_WORKFLOW_SEPARATOR;
if ($private) {
    $type = GRN_WORKFLOW_PRIVATE_PATH;
}
$paths = $logic->getList(null, $columns, $type);
$t->assign('paths', $paths);

$path_count = $logic->getCount($type);
$t->assign('path_count', $path_count);

require_once('workflow/form_logic.csp');
$logic = GRN_Workflow_Form_Logic::getInstance();
$form_counts = $logic->getCountListGroupByPath(array_keys($paths));
$t->assign('form_counts', $form_counts);

global $G_container_base;
$uum =& $G_container_base->getInstance('uum');
$login =& $uum->getLoginUser();
require_once('grn/ui.csp');
$config_manager = GRN_UIConfigManager::getInstance();
$config =& $config_manager->getUserConfig($login);
$t->assign('truncate_width', $config->getTruncateWidth());

require_once('workflow/controller_util.csp');
$controller_util = new GRN_Workflow_ControllerUtil($page_name);
$pages_info = ['path_list' => null];
$site_position = $controller_util->makeSitePosition('workflow/system/',
    $pages_info);
$t->assign('site_position', $site_position);

$t->display("{$page_name}.tpl");


