<?php

use grn\grn\JSONResponse;

if (0 == strcasecmp(@ $_SERVER['REQUEST_METHOD'], 'POST')) {
    global $G_INPUT;
    $json = JSONResponse::create();

    //Instantiate Smarty Object
    require_once("grn/smarty.csp");
    $t = new GRN_Smarty;

    //Get Session Key
    require_once('workflow/controller_util.csp');
    require_once('grn/controller.csp');
    $tmp_key = grn_get_temporary_key();

    //Validation Check
    require_once('SmartyValidate.class.php');
    SmartyValidate::connect($t);
    $target_name = 'workflow/send_form';
    $session_target = $target_name . $tmp_key;
    SmartyValidate::register_form($session_target);

    //Skip form validation if no required item exists
    $skip_validation_flag = false;
    if (array_key_exists('SmartyValidate', $_SESSION)
        && array_key_exists($session_target, $_SESSION['SmartyValidate'])
        && array_key_exists('validators',
            $_SESSION['SmartyValidate'][$session_target])
        && ! count($_SESSION['SmartyValidate'][$session_target]['validators'])
    ) {
        $skip_validation_flag = true;
    }

    //Get Parameter
    $category_id = @ $G_INPUT['cid'];    //Category ID
    $form_id = @ $G_INPUT['fid'];    //Form ID
    $command = @ $G_INPUT['cmd'];    //Command
    $simple = @ $G_INPUT['simple'];
    $sf = @ $G_INPUT['sf'];

    // 未分類でないカテゴリのアクセス権をチェック
    if (GRN_WORKFLOW_CATEGORY_NONPARTY_ID != $category_id) {
        $category_util
            = GRN_Workflow_Category_Controller_Utility::getInstance();
        $category_util->checkAccess($category_id, true, CB_DATABASE_NO_LOCK);
    }

    switch ($command) {
        case 'cancel':
            grn_workflow_cleanup_session($t, '', $tmp_key);
            //Redirect Back Page
            if (defined('AJAX_REQUEST')) {
                $json->response([
                    'link' => cb_get_full_url('workflow/send',
                        ['cid' => $category_id, 'simple' => $simple])
                ]);
                cb_safe_exit();
            }
            cb_redirect('workflow/send',
                ['cid' => $category_id, 'simple' => $simple]);
            break;
        default:
            break;
    }

    //Get Session
    require_once('fw/session_manager.csp');
    $session_manager = CB_SessionManager::getInstance();
    $session = $session_manager->getSession($session_target);

    //Update Form and Item List
    $send_form_data_list = [];
    require_once('workflow/item_resources.csp');
    $form =& $session->get('form');
    if ( ! is_array($form) || 0 == count($form)) {
        // フォームがない
        require_once('workflow/error_code.csp');
        cb_throw_error(E_GRN_WRKF_DENY_REQUEST_DATA);
    }
    $item_list =& $session->get('item_list');
    foreach (array_keys($item_list) as $item_id) {
        $item_util
            = grn_workflow_get_item_util($item_list[$item_id]['foreign_key']);
        if ($item_util) {
            //Parse Item Data
            $parsed_input_data = $item_util->parseItemData($G_INPUT,
                'item', $item_list[$item_id]);
            $send_form_data_list[$item_id] = $parsed_input_data;

            if ($item_list[$item_id]['type'] == 1) {
                if (0 == strlen($parsed_input_data)) {
                    $parsed_input_data = cb_msg(GRN_WORKFLOW_MODULE_ID,
                        'untitled');
                }
                $form['subject'] = $parsed_input_data;
            }
        }
    }

    //Update properties

    //Priority
    $petition_properties =& $session->get('properties');
    $priority = $G_INPUT['priority'];
    $petition_properties['priority'] = $priority;

    $session->set('form', $form);
    $session->set('item_list', $item_list);
    $session->set('send_form_data_list', $send_form_data_list);
    $session->set('properties', $petition_properties);


    //Check Command Parameter
    if ($command == 'save') {
        require_once('command_send_draft.csp');
    }

    //Validate After POST
    if ($skip_validation_flag
        || SmartyValidate::is_valid($G_INPUT, $session_target)
    ) {
        //Create Parameter Translation Map
        $translation_map = [
            'cid'    => '_cid',
            'fid'    => '_fid',
            'cmd'    => 'cmd',
            'simple' => 'simple',
        ];

        //Do Parameter Translation
        $properties = [];
        foreach ($translation_map as $view_name => $model_name) {
            $properties[$model_name] = @ $G_INPUT[$view_name];
        }

        require_once('workflow/controller_util.csp');
        $grn_controller = new GRN_Workflow_ControllerUtil();
        $pop_up_check = $grn_controller->checkScheduleRegister($form_id,
            $session_target);
        $response = [
            'link' => cb_get_full_url('workflow/send_path', [
                'cid'     => $properties['_cid'],
                'fid'     => $properties['_fid'],
                'simple'  => $properties['simple'],
                'sf'      => $sf,
                'tmp_key' => $tmp_key
            ])
        ];
        if ($pop_up_check) {
            $response['success_do'] = "pop_up";
        }

        //Redirect Next Page
        if (defined('AJAX_REQUEST')) {
            $json->response($response);
            cb_safe_exit();
        }
        cb_redirect('workflow/send_path', [
            'cid'     => $properties['_cid'],
            'fid'     => $properties['_fid'],
            'simple'  => $properties['simple'],
            'sf'      => $sf,
            'tmp_key' => $tmp_key
        ]);
    } else {
        if (defined('AJAX_REQUEST')) {
            header(CB_ERROR_HEADER . 'error_validation');
            $json->response([
                'validation'    => false,
                'error_message' => $t->fetch('grn/show_validation_errors.tpl')
            ]);
            cb_safe_exit();
        }
    }
}


