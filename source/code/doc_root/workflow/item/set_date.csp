<?php

global $G_INPUT;

//Get Smarty Instance
require_once("grn/smarty.csp");
//$t = $smarty;

//SmartyValidate should be initialized when an input form is there.
require_once('SmartyValidate.class.php');
SmartyValidate::connect($t);
SmartyValidate::register_form('workflow/item/set_date', true);

//Get Item
$item_for_view = $t->get_template_vars('item');
if (is_null($item_for_view)) {
    $item_for_view = [];
    $item_for_view['fid'] = $form_id;
    $item_for_view['foreign_key'] = $selected_foreign_key;
    $item_for_view['display_name'] = '';
    $item_for_view['code'] = '';
    $item_for_view['option_string'] = '';
    $item_for_view['option_string_type'] = 0;
    $item_for_view['description'] = '';
    $item_for_view['description_type'] = 0;
    $item_for_view['description_editor'] = 0;
    $item_for_view['br'] = 1;
    $item_for_view['reverse_br'] = 0;
    $item_for_view['separator'] = '';
    $item_for_view['required'] = 0;
    $item_for_view['export_data'] = 1;

    $item_for_view['settings'] = [];
    $item_for_view['settings']['date_type'] = 0;
    $item_for_view['settings']['initial_type'] = 0;
    $item_for_view['settings']['initial_year'] = '';
    $item_for_view['settings']['initial_month'] = '';
    $item_for_view['settings']['initial_day'] = '';
    $item_for_view['settings']['initial_hour'] = '';
    $item_for_view['settings']['initial_minute'] = '';
}

//Create Reverse br
$item_for_view['reverse_br'] = ($item_for_view['br'] == 1) ? 0 : 1;

//Get Item Utility List
require_once('workflow/item_resources.csp');
$item_util_list =& grn_workflow_get_item_util_list();

//Create Item Options
$item_options = [];
foreach (array_keys($item_util_list) as $foreign_key) {
    $item_options[$foreign_key] = [
        'value' => $foreign_key,
        'label' => cb_plain_msg(GRN_WORKFLOW_MODULE_ID, $foreign_key),
    ];
    if ($foreign_key == $selected_foreign_key) {
        $item_options[$foreign_key]['selected'] = true;
    }
}

//Create RichEditor Information
$richeditor_for_view = [];
$richeditor_for_view['rows'] = 5;
$richeditor_for_view['cols'] = 40;

// Check HTML or Text Description
if ($item_for_view['description_editor'] == 1) {
    $item_for_view['description_text'] = null;
    $item_for_view['description_html'] = $item_for_view['description'];
} else {
    $item_for_view['description_text'] = $item_for_view['description'];
    $item_for_view['description_html'] = null;
}

//Check and Initialize Settings
if ($item_for_view['foreign_key'] !== $selected_foreign_key) {
    $item_for_view['settings']['date_type'] = 0;
    $item_for_view['settings']['initial_type'] = 0;
    $item_for_view['settings']['initial_year'] = '';
    $item_for_view['settings']['initial_month'] = '';
    $item_for_view['settings']['initial_day'] = '';
    $item_for_view['settings']['initial_hour'] = '';
    $item_for_view['settings']['initial_minute'] = '';
}

//Create Option String Type Options
$option_string_type_options = [];
$option_string_type_options[0]
    = [
    'value' => '0',
    'label' => cb_msg(GRN_WORKFLOW_MODULE_ID, 'option_string_type_0_sample')
];
$option_string_type_options[1]
    = [
    'value' => '1',
    'label' => cb_msg(GRN_WORKFLOW_MODULE_ID, 'option_string_type_1_sample')
];
$option_string_type_options[2]
    = [
    'value' => '2',
    'label' => cb_msg(GRN_WORKFLOW_MODULE_ID, 'option_string_type_2_sample')
];
$option_string_type_options[$item_for_view['option_string_type']]['selected']
    = true;

if ( ! isset($item_for_view['settings']['date_type'])
     || is_null($item_for_view['settings']['date_type'])
     || $item_for_view['settings']['date_type'] == ''
) {
    $item_for_view['settings']['date_type'] = 0;
}

$tsex = new CB_TimeStampEx();
$initial_date = $tsex->getDate();
$initial_time = new CB_Time;
if ($item_for_view['settings']['initial_year']) {
    $item_for_view['text']['year'] = $item_for_view['settings']['initial_year'];
    $initial_date->year = $item_for_view['settings']['initial_year'];
}
if ($item_for_view['settings']['initial_month']) {
    $item_for_view['text']['month']
        = $item_for_view['settings']['initial_month'];
    $initial_date->month = $item_for_view['settings']['initial_month'];
}
if ($item_for_view['settings']['initial_day']) {
    $item_for_view['text']['day'] = $item_for_view['settings']['initial_day'];
    $initial_date->day = $item_for_view['settings']['initial_day'];
}
if ($item_for_view['settings']['date_type'] == 1) {
    if ($item_for_view['settings']['initial_hour'] != '') {
        $item_for_view['text']['hour']
            = $item_for_view['settings']['initial_hour'];
        $initial_time->hour = $item_for_view['settings']['initial_hour'];
    } else {
        $item_for_view['text']['hour']
            = $item_for_view['settings']['initial_hour'];
        $initial_time->hour = null;
    }
    if ($item_for_view['settings']['initial_minute'] != '') {
        $item_for_view['text']['minute']
            = $item_for_view['settings']['initial_minute'];
        $initial_time->minute = $item_for_view['settings']['initial_minute'];
    } else {
        $item_for_view['text']['minute']
            = $item_for_view['settings']['initial_minute'];
        $initial_time->minute = null;
    }
}

// Assign View Infomation
// Assign Item ID
$t->assign('item_id', $item_id);

//Assign Display
$t->assign('display', $display);

// Assign Item
$t->assign('item', $item_for_view);
// Assign Settings
$t->assign('settings', $item_for_view['settings']);
// Assign Item Options
$t->assign('item_options', $item_options);
// Assign RichEditor
$t->assign('richeditor', $richeditor_for_view);
// Assign Option String Type Options
$t->assign('option_string_type_options', $option_string_type_options);
//Assign Selected Foreign_key
$t->assign('selected_foreign_key', $selected_foreign_key);

// Assign Initial Date
$t->assign('initial_date', $initial_date);
if ($item_for_view['settings']['date_type'] == 1) {
    $t->assign('initial_time', $initial_time);
}

//-- set page title and site position

// Ignore Licence Warnning
$t->skipWarning();

// Display Smarty Template
$doc_name = cb_get_pagename();
$t->display("workflow/item/set_date.tpl");


