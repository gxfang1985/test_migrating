<?php

//Get Smarty Instance
require_once("grn/smarty.csp");
$t = $smarty;

//Get Item
$item_for_view = $t->get_template_vars('item');

//Get Item Controller Utility
require_once('workflow/controller_util.csp');
$item_util = GRN_Workflow_Item_Controller_Utility::getInstance();

//Create Parameter Translation Map
$translation_map_item_list = [
    'iid'          => '_id',           //Item ID
    'type'         => 'type',          //Item Type
    'display_name' => 'display_name',  //Item Display Name
];

//Get Item List for view
$item_list_for_view = $item_util->getListView($translation_map_item_list,
    $form_id);

//Check Calc Type
if ($item_for_view['settings']['calc_type'] == 0) {
    //Calc Type As Operator
    $calc_operator =& $item_for_view['settings']['calc_operator'];

    //Convert Operator
    switch ($calc_operator['operator']) {
        case 0:
            $calc_operator['operator'] = cb_msg(GRN_WORKFLOW_MODULE_ID, 'plus');
            break;
        case 1:
            $calc_operator['operator'] = cb_msg(GRN_WORKFLOW_MODULE_ID,
                'minus');
            break;
        case 2:
            $calc_operator['operator'] = cb_msg(GRN_WORKFLOW_MODULE_ID,
                'multiplication');
            break;
        case 3:
            $calc_operator['operator'] = cb_msg(GRN_WORKFLOW_MODULE_ID,
                'division');
            break;
        default:
            $calc_operator['operator'] = cb_msg(GRN_WORKFLOW_MODULE_ID, 'plus');
            break;
    }

    //Convert Operand Value
    if ($calc_operator['operand1_type'] != 0) {
        $calc_operator['operand1_value']
            = @ $item_list_for_view[$calc_operator['operand1_type']]['display_name'];
    }
    if ($calc_operator['operand2_type'] != 0) {
        $calc_operator['operand2_value']
            = @ $item_list_for_view[$calc_operator['operand2_type']]['display_name'];
    }
} else {
    //Calc Type As Total
    $calc_total =& $item_for_view['settings']['calc_total'];

    //Convert Values
    foreach (array_keys($calc_total['values']) as $key) {
        $calc_total['values'][$key]
            = @ $item_list_for_view[$calc_total['values'][$key]]['display_name'];
    }
}

//Convert Minus Type
$minus_type = $item_for_view['settings']['minus_type'];
$item_for_view['settings']['minus_type'] = cb_msg(GRN_WORKFLOW_MODULE_ID,
    'minus_type_' . $minus_type . '_sample');

//Create Menu Params
switch ($display) {
    case 'detail':
        $folder_id = $t->get_template_vars('folder_id');
        $petition_id = $t->get_template_vars('petition_id');
        $menu_params = [
            'fid' => $folder_id,
            'pid' => $petition_id,
            'iid' => $item_for_view['iid']
        ];
        break;
    case 'detail-system':
        $category_id = $t->get_template_vars('category_id');
        $form_id = $t->get_template_vars('form_id');
        $menu_params = [
            'cid' => $category_id,
            'fid' => $form_id,
            'iid' => $item_for_view['iid']
        ];
        break;
    case 'detail-operation':
        $category_id = $t->get_template_vars('category_id');
        $form_id = $t->get_template_vars('form_id');
        $menu_params = [
            'cid' => $category_id,
            'fid' => $form_id,
            'iid' => $item_for_view['iid']
        ];
        break;
    default:
        break;
}

//Assign Display Infomation
//Assign Menu Params
$t->assign('menu_params', $menu_params);

//Assign Display
$t->assign('display', $display);

//Assign Item Information
$t->assign('item', $item_for_view);

//-- set page title and site position

// Ignore Licence Warnning
$t->skipWarning();

// Display Smarty Template
$doc_name = cb_get_pagename();
$t->display("workflow/item/detail_calc_numeric.tpl");


