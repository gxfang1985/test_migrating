<?php

/**
 * Description for Settings Parameters for Date
 *
 * initial_type           ->      Initial Date Type(0:Now/1:Initlal Value)
 * initial_year           ->      Initial Year
 * initial_month          ->      Initial Month
 * initial_day            ->      Initial Day
 **/

global $G_INPUT;

// instantiate an Smarty object
require_once("grn/smarty.csp");
//$t = $smarty;

//Get Item from Template Variable
$item_for_view = $t->get_template_vars('item');
$show_blank = true;

if ( ! isset($item_for_view['settings']['date_type'])
     || is_null($item_for_view['settings']['date_type'])
     || $item_for_view['settings']['date_type'] == ''
) {
    $item_for_view['settings']['date_type'] = 0;
}

//Check Table Name
if ($item_for_view['table'] == GRN_WORKFLOW_TABLE_ITEM
    || $item_for_view['table'] == GRN_WORKFLOW_TABLE_ITEMDATA
) {
    if ( ! array_key_exists('text', $item_for_view)) {
        $item_for_view['text'] = [];

        //Get Initial Value From Sttings
        if ($item_for_view['settings']['initial_type'] == 0) {
            $tsex = new CB_TimeStampEx();
            $date = $tsex->getDate();
            $item_for_view['text']['year'] = $date->year;
            $item_for_view['text']['month'] = $date->month;
            $item_for_view['text']['day'] = $date->day;
            if ($item_for_view['settings']['date_type'] == 1) {
                $time =& $tsex->getTime();
                $item_for_view['text']['hour']
                    = $item_for_view['text']['hour'] = $time->hour;
                $item_for_view['text']['minute']
                    = $item_for_view['text']['minute'] = $time->minute;
            }
        } elseif ($item_for_view['settings']['initial_type'] == 1) {
            $item_for_view['text']['year']
                = $item_for_view['settings']['initial_year'];
            $item_for_view['text']['month']
                = $item_for_view['settings']['initial_month'];
            $item_for_view['text']['day']
                = $item_for_view['settings']['initial_day'];
            if ($item_for_view['settings']['date_type'] == 1) {
                $item_for_view['text']['hour']
                    = $item_for_view['settings']['initial_hour'];
                $item_for_view['text']['minute']
                    = $item_for_view['settings']['initial_minute'];
            }
        } else {
            $item_for_view['text'] = [];
        }
    } else {
        //Unserialize Text
        $item_for_view['text'] = cb_unserialize($item_for_view['text'],
            ["allowed_classes" => false]);
    }
} else {
    //Unserialize Text
    $item_for_view['text'] = cb_unserialize($item_for_view['text'],
        ["allowed_classes" => false]);
}

//Get Initial Value From Sttings
$tsex = new CB_TimeStampEx();
$initial_date = $tsex->getDate();
$initial_time = new CB_Time;
if (array_key_exists('text', $item_for_view)) {
    $initial_date->year = $item_for_view['text']['year'];
    $initial_date->month = $item_for_view['text']['month'];
    $initial_date->day = $item_for_view['text']['day'];
    if ($item_for_view['settings']['date_type'] == 1) {
        $initial_time->hour = ($item_for_view['text']['hour'] === '') ? null
            : $item_for_view['text']['hour'];
        $initial_time->minute = ($item_for_view['text']['minute'] === '') ? null
            : $item_for_view['text']['minute'];
    }
}

if (array_key_exists('text', $item_for_view)) {
    if ($item_for_view['text']['year'] != ''
        && $item_for_view['text']['month'] != ''
        && $item_for_view['text']['day'] != ''
    ) {
        $datetime = new CB_DateTime();
        $datetime->year = $item_for_view['text']['year'];
        $datetime->month = $item_for_view['text']['month'];
        $datetime->day = $item_for_view['text']['day'];
        $datetime->hour = 0;
        $datetime->minute = 0;
        $datetime->second = 0;
        if ($item_for_view['settings']['date_type'] == 1) {
            $datetime->hour = ($item_for_view['text']['hour'] === '') ? 0
                : $item_for_view['text']['hour'];
            $datetime->minute = ($item_for_view['text']['minute'] === '') ? 0
                : $item_for_view['text']['minute'];
        }
        $I18N = CB_I18N::getInstance();
        $timezone = $I18N->getCurrentTimezone();
        if ( ! cb_date_validate_datetime($datetime)) {
            cb_throw_error(E_COMMON_INVALID_DATETIME);
        }
        $timestamp = cb_datetime_to_timestamp($datetime,
            $timezone);
        $datets = new CB_TimeStamp();
        $datets->unix_ts = $timestamp;
        $item_for_view['datets'] = $datets;
    }
}

if ($item_for_view['settings']['date_type'] == 1) {
    if (strlen($item_for_view['text']['hour']) == 1) {
        $item_for_view['text']['hour'] = '0' . $item_for_view['text']['hour'];
    }
    if (strlen($item_for_view['text']['minute']) == 1) {
        $item_for_view['text']['minute'] = '0'
                                           . $item_for_view['text']['minute'];
    }
}

//Assign Display Infomation
// Assign Item ID
$t->assign('item_id', $item_for_view['iid']);

// Display
$t->assign('display', $display);

// Assign Item
$t->assign('item', $item_for_view);
// Assign Settings
$t->assign('settings', $item_for_view['settings']);

// Assign Initial Date Time
$t->assign('initial_date', $initial_date);
if ($item_for_view['settings']['date_type'] == 1) {
    $t->assign('initial_time', $initial_time);
}

// Assign Show Blank
$t->assign('show_blank', $show_blank);

// Assign Current Language
require_once('fw/i18n.csp');
$i18n = CB_I18N::getInstance();
$current_language = strtolower($i18n->getCurrentLanguage());
$t->assign('current_language', $current_language);

//-- set page title and site position

// Ignore Licence Warnning
$t->skipWarning();

// Display Smarty Template
$doc_name = cb_get_pagename();
$t->display("workflow/item/view_date.tpl");


