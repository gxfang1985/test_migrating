<?php

if (strcasecmp(@ $_SERVER['REQUEST_METHOD'], 'POST') == 0) {
    //-- prepare uum and uum_util
    global $G_container_base;
    $uum =& $G_container_base->getInstance('uum');
    $login_user =& $uum->getLoginUser();
    if ( ! is_object($login_user) || ! is_a($login_user, 'CB_User')) {
        cb_throw_error(E_GRN_USER_NOT_FOUND);
    }
    $uid = $login_user->getOID();

    $inspection_agent_petition = [];
    $inspection_agent_approval = [];

    require_once('workflow/config.csp');
    $logic = GRN_Workflow_Configs::getInstance();
    $logic =& $logic->getSystemConfig();
    // 個人の代理人設定の許可
    $personal_agent_setting = $logic->getPersonalAgentSetting();
    // 代理申請の許可
    $substitute_application = $logic->getSubstituteApplication();
    // 代理承認の許可
    $substitute_approval = $logic->getSubstituteApproval();
    if ($personal_agent_setting) {
        $send_agent_list = [];
        foreach (array_keys($G_INPUT) as $key) {
            if (strpos($key, 'all_agent_type_') === 0) {
                $keys = explode('_', $key);
                if ( ! $substitute_application
                     && $keys[3] == GRN_WORKFLOW_AGENT_TYPE_PETITION
                ) {
                    continue;
                }
                if ( ! $substitute_approval
                     && $keys[3] == GRN_WORKFLOW_AGENT_TYPE_APPROVAL
                ) {
                    continue;
                }
                $values = explode(':', $G_INPUT[$key][0]);
                if (is_array($values)) {
                    if ($values[0] !== '' && $values[0] !== '0') {
                        $send_agent_list[$keys[3]] = $values;
                    } else {
                        $send_agent_list[$keys[3]] = null;
                    }
                }
            }
        }

        foreach ($send_agent_list as $type => $agents) {
            if (count($agents) > 0) {
                foreach ($agents as $agent_id) {
                    $user =& $uum->getUser($agent_id);
                    if ($user == false) {
                        require_once('workflow/error_code.csp');
                        cb_throw_error(E_GRN_WRKF_AGENT_NOT_FOUND);
                    }
                }
            }
            $logic->setAgent($uid, $agents, $type);
            if ($type == GRN_WORKFLOW_AGENT_TYPE_PETITION) {
                $inspection_agent_petition = $agents;
            } else {
                $inspection_agent_approval = $agents;
            }
        }
    }

    require_once('workflow/inspection.csp');
    $inspection = GRN_Workflow_Agent_Inspection::getInstance();
    // 監査する
    if ($inspection->isEnabled()) {
        $message_type = 'agent_modify';

        $message_args['uid'] = $uid;

        if (count($inspection_agent_petition) <= 0) {
            $message_args['agent_petition'] = '';
        } else {
            $message_args['agent_petition'] = $inspection_agent_petition;
        }
        if (count($inspection_agent_approval) <= 0) {
            $message_args['agent_approval'] = '';
        } else {
            $message_args['agent_approval'] = $inspection_agent_approval;
        }

        //Record Inspection
        $inspection->record($message_type, $message_args);
    }


    cb_redirect('workflow/personal/agent_index');
}


