<?php

require_once('workflow/error_code.csp');

//-- instantiate Smarty object
require_once('grn/smarty.csp');
$t = new GRN_Smarty;

//-- prepare uum and uum_util
global $G_container_base;
$uum =& $G_container_base->getInstance('uum');
$login_user =& $uum->getLoginUser();
if ( ! is_object($login_user) || ! is_a($login_user, 'CB_User')) {
    cb_throw_error(E_GRN_USER_NOT_FOUND);
}
$login_id = $login_user->getOID();

require_once('workflow/config.csp');
$logic = GRN_Workflow_Configs::getInstance();
$logic =& $logic->getSystemConfig();

// 個人の代理人設定の許可
$personal_agent_setting = $logic->getPersonalAgentSetting();
if ( ! $personal_agent_setting) {
    cb_throw_error(E_GRN_WRKF_AGENT_PERSONAL_SETTING_NOTUSE);
}
// 代理申請の許可
$substitute_application = $logic->getSubstituteApplication();
// 代理承認の許可
$substitute_approval = $logic->getSubstituteApproval();
if ( ! $substitute_application && ! $substitute_approval) {
    cb_throw_error(E_GRN_WRKF_AGENT_PERSONAL_SETTING_NOTUSE);
}

$agent_list = $logic->getAgent($login_id);

require_once('grn/uum.csp');
global $G_container_base;
$uum =& $G_container_base->getInstance('uum');

$agent_type_list = [];
$agent_type_list[GRN_WORKFLOW_AGENT_TYPE_PETITION] = [];
$agent_type_list[GRN_WORKFLOW_AGENT_TYPE_APPROVAL] = [];
$agent_type_list[GRN_WORKFLOW_AGENT_TYPE_PETITION]['col_agent_type']
    = GRN_WORKFLOW_AGENT_TYPE_PETITION;
$agent_type_list[GRN_WORKFLOW_AGENT_TYPE_APPROVAL]['col_agent_type']
    = GRN_WORKFLOW_AGENT_TYPE_APPROVAL;

$agent_type_list[GRN_WORKFLOW_AGENT_TYPE_PETITION]['users'] = [];
$agent_type_list[GRN_WORKFLOW_AGENT_TYPE_APPROVAL]['users'] = [];
if (is_array($agent_list)) {
    foreach ($agent_list as $agent) {
        if ($agent != null) {
            if (array_key_exists('agent_type', $agent)) {
                $user_info = $uum->getUserInfo($agent['agent']);
                if ($user_info != false) {
                    $type = $agent['agent_type'];
                    $agent_user_info = [];
                    $agent_user_info['_id'] = $agent['agent'];
                    $agent_user_info['col_display_name']
                        = GRN_ControllerUtil::getUserNameText($login_id,
                        $agent['agent']);
                    $agent_type_list[$type]['users'][] = $agent_user_info;
                }
            }
        }
    }
}

if ( ! $substitute_application) {
    unset($agent_type_list[GRN_WORKFLOW_AGENT_TYPE_PETITION]);
}
if ( ! $substitute_approval) {
    unset($agent_type_list[GRN_WORKFLOW_AGENT_TYPE_APPROVAL]);
}

$user = $uum->getUserInfo($login_id);

$t->assign('user', $user);
$t->assign('agent_type_list', $agent_type_list);
$t->assign('agent_type_count', count($agent_type_list));
$t->assign('plugin', [
    'name'   => 'common',
    'params' => [
        'action'       => null,
        'session_name' => cb_get_pagename(),
        'app_id'       => 'workflow'
    ]
]);//GTM-529
//-- page title
$page_title = grn_get_current_page_display_name();
$t->assign('page_title', $page_title);

//-- site position
$site_position = [
    [
        'page' => 'workflow/personal/agent_index',
        'name' => grn_get_page_display_name('workflow/personal/agent_index'),
        'oid'  => 1
    ],
    ['page' => '', 'name' => $page_title],
];
$t->assign('site_position', $site_position);

// exec smarty
$t->display(cb_get_pagename() . '.tpl');


