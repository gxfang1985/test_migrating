<?php

use grn\grn\access\service\AppAccess;

global $G_INPUT;

require_once('grn/smarty.csp');
$t = new GRN_Smarty;

$page_title = grn_get_current_page_display_name();
$t->assign('page_title', $page_title);
$page_name = cb_get_pagename();

//Get Session Key
require_once('workflow/controller_util.csp');
require_once('grn/controller.csp');
$tmp_key = grn_get_temporary_key();
$t->assign('tmp_key', $tmp_key);

require('SmartyValidate.class.php');
SmartyValidate::connect($t);
SmartyValidate::register_form($page_name . $tmp_key, true);

$folder_id = null;
if (array_key_exists('fid', $G_INPUT)) {
    $folder_id = $G_INPUT['fid'];
}
$t->assign('fid', $folder_id);
$petition_id = null;
if (array_key_exists('pid', $G_INPUT)) {
    $petition_id = $G_INPUT['pid'];
}
$t->assign('pid', $petition_id);
$simple = false;
if (array_key_exists('simple', $G_INPUT)) {
    $simple = $G_INPUT['simple'];
}
$t->assign('simple', $simple);
$command = null;
if (array_key_exists('cmd', $G_INPUT)) {
    $command = $G_INPUT['cmd'];
}
$offset = 0;
if (array_key_exists('offset', $G_INPUT)) {
    $offset = $G_INPUT['offset'];
}

$sort = null;
if (array_key_exists('sort', $G_INPUT)) {
    $sort = $G_INPUT['sort'];
}

$session_flag = false;
if (array_key_exists('cpsf', $G_INPUT)) {
    $session_flag = $G_INPUT['cpsf'];
}
$t->assign('cpsf', $session_flag);

include('_handle.csp');

require_once('workflow/auto_schedule_register_logic.csp');
$auto_register_logic = GRN_Workflow_Auto_Schedule_Register_Logic::getInstance();
$autoRegisterObj = $auto_register_logic->getByPetitionId($petition_id);
$login_id = cb_get_login_user()->getOID();

$applicant_array = [$petition['agent_user'], $petition['user']];
$applicant_and_agent = array_filter($applicant_array);

if ($autoRegisterObj && in_array($login_id, $applicant_and_agent)
    && ($petition['status'] == GRN_WORKFLOW_STATUS_ACCEPTANCE
        || $petition['status'] == GRN_WORKFLOW_STATUS_FINISHED)
) {
    $schedule_id = $autoRegisterObj->getScheduleId();
    if ($schedule_id) {
        $t->assign('auto_register_status', 'success');
        $t->assign('schedule_id', $schedule_id);
    } else {
        $t->assign('auto_register_status', 'failed');
    }
} else {
    $t->assign('auto_register_status', 'no');
}

$t->assign('schedule_available_for_external',
    AppAccess::isAppAvailableExternalAccess('schedule'));

//generate upload ticket
include('grn/_upload_prepend.csp');

$t->display("{$page_name}.tpl");



