<?php

global $G_INPUT;

//Login User
global $G_container_base;
$uum =& $G_container_base->getInstance('uum');
$user =& $uum->getLoginUser();
if ( ! $user) {
    require_once('grn/error_code.csp');
    cb_throw_error(E_GRN_USER_NOT_FOUND);
}

$category_id = @ $G_INPUT['cid'];
$mandator_id = @ $G_INPUT['mid'];

/*
require_once('workflow/controller_util.csp');
$util = GRN_Workflow_Petition_Controller_Utility::getInstance();
$is_proxy_petition = $util->isAvailableSendProxy($user->getOID());
if (!$is_proxy_petition)
{
    require_once( 'workflow/error_code.csp' );
    cb_throw_error( E_GRN_WRKF_CANNOT_PROXY_PETITION );
}
unset($util);
*/
require_once('grn/controller.csp');
require_once('workflow/config.csp');
$config = GRN_Workflow_Configs::getInstance();
$config =& $config->getSystemConfig();
$users = $config->getUsersFromAgent($user->getOID());
$users = array_key_exists(GRN_WORKFLOW_AGENT_TYPE_PETITION, $users)
    ? $users[GRN_WORKFLOW_AGENT_TYPE_PETITION] : [];
$mandator_users = [];
if ( ! is_null($users)) {
    // tuning GRB-15157
    $users_id = [];
    foreach ($users as $agent) {
        $users_id[] = $agent['user'];
    }
    $users_info = GRN_ControllerUtil::getUserInfoToShowUserName($users_id,
        $user, 'workflow');

    require_once('grn/application.csp');
    $locator = GRN_ApplicationLocator::instance();
    foreach ($users as $agent) {
        $uid = $agent['user'];
        if (array_key_exists($uid, $users_info)
            && array_key_exists("col_valid", $users_info[$uid])
            && is_null($users_info[$uid]["col_valid"])
            && array_key_exists("col_using_app", $users_info[$uid])
            && $users_info[$uid]["col_using_app"]
        )//GTM-529
        {
            $mandator_users[$uid] = [
                'value' => $uid,
                'label' => GRN_ControllerUtil::getUserNameText($uid, $uid,
                    $users_info),
            ];
            if ($uid == $mandator_id) {
                $mandator_users[$uid]['selected'] = true;
            }
        }
    }
}

if ($mandator_id && ! array_key_exists($mandator_id, $mandator_users)) {
    require_once('workflow/error_code.csp');
    cb_throw_error(E_GRN_WRKF_CANNOT_PROXY_PETITION);
}

//Instantiate an Smarty object
require_once("grn/smarty.csp");
$t = new GRN_Smarty;

//Set Application Name
global $G_workflow_app_name;
$t->assign('app_name', $G_workflow_app_name);

//Assign Display Infomation
$t->assign('category_id', $category_id);
$t->assign('mandator_users', $mandator_users);

//Page Title
$page_title = grn_get_current_page_display_name();
$t->assign('page_title', $page_title);

// site position
$t->assign('site_position', [
        [
            'page' => 'workflow/index',
            'name' => grn_get_page_display_name('workflow/index')
        ],
        ['page' => '', 'name' => $page_title]
    ]
);

//Display Smarty Template
$doc_name = cb_get_pagename();
$t->display("{$doc_name}.tpl");


