<?php
global $G_INPUT;

//Instantiate an Smarty object
require_once("grn/smarty.csp");
$t = new GRN_Smarty;

//SmartyValidate should be initialized when an input form is there.
require('SmartyValidate.class.php');
SmartyValidate::connect($t);
SmartyValidate::register_form('workflow/operation/category_view', true);

//Get Folder ID from Session
require_once('fw/session_manager.csp');
$session_manager = CB_SessionManager::getInstance();
$session_form_list
    =& $session_manager->getSession('workflow/operation/form_list');
$folder_id = $session_form_list->get('folder_id');

//Get Parameters
$category_id = @  $G_INPUT['cid'];

// ログインユーザーが運用管理権限を持つか確認
require_once('workflow/controller_util.csp');
$category_util = GRN_Workflow_Category_Controller_Utility::getInstance();
if ( ! $category_util->evaluateManage()) {
    require_once('workflow/error_code.csp');
    cb_throw_error(E_GRN_WRKF_MANAGE_DENY);
}

// 未分類カテゴリか確認
if (GRN_WORKFLOW_CATEGORY_NONPARTY_ID == $category_id) {
    require_once('workflow/error_code.csp');
    cb_throw_error(E_GRN_WRKF_MANAGE_DENY_NONPARTY_CATEGORY);
}

// 未分類カテゴリ以外は運用管理権限とアクセス権を確認
$is_manage = $category_util->checkManage($category_id, false,
    CB_DATABASE_NO_LOCK);
$category_util->checkAccess($category_id, true, CB_DATABASE_NO_LOCK);

//Create Parameter Translation Map
$translation_map = [
    //Category Information
    'cid'            => '_id',             //Category ID
    'name'           => 'name',            //Category Name
    'foreign_key'    => 'foreign_key',     //Category Foreign key
    'memo'           => 'memo',            //Category Memo
    'parent'         => 'parent',          //Category Parent
    'list_index'     => 'list_index',      //Category List Index
    'security_model' => 'security_model',  //Category Security Model
    'creator'        => 'creator',         //Category Creator
    'creator_name'   => 'creator_name',    //Category Creator Name
    'modifier'       => 'modifier',        //Category Modifier
    'modifier_name'  => 'modifier_name',   //Category Modifier Name
    'ctime'          => 'ctime',           //Category Create Time
    'mtime'          => 'mtime',           //Category Modify Time
];

//Root Category Flag
$is_root = false;
if ($category_id == GRN_WORKFLOW_CATEGORY_ROOT_ID || is_null($category_id)) {
    $is_root = true;
}
$is_nonparty = false;
if ($category_id == GRN_WORKFLOW_CATEGORY_NONPARTY_ID
    || is_null($category_id)
) {
    $is_nonparty = true;
}

//Get Category for view
$category_for_view = $category_util->getView($category_id, $translation_map,
    GRN_WORKFLOW_ACCESS_TYPE_MANAGE);
//Get Parent Category
$is_move = true;
$parent_category_for_view = null;
if ( ! $is_root && ! $is_nonparty) {
    $parent_category_for_view
        = $category_util->getView($category_for_view['parent'],
        $translation_map, GRN_WORKFLOW_ACCESS_TYPE_MANAGE);
    $parent_category = [];
    $parent_category['_id'] = $parent_category_for_view['cid'];
    if ( ! $category_util->checkCategoryManage($parent_category, false)) {
        $is_move = false;
    }
}
//Get Child Category List
$child_categories_for_view = $category_util->getListView($category_id,
    $translation_map, GRN_WORKFLOW_ACCESS_TYPE_MANAGE);
//Get Child Category Count
$num_children = count($child_categories_for_view);

//Create Condition Option
$option = [];
$option['condition'] = [];
$option['condition'][] = [
    'column'   => 'col_deleted',
    'value'    => '0',
    'operator' => '='
];

//Get Form Count
require_once('workflow/form_logic_base.csp');
$form_logic_base = GRN_Workflow_Form_Logic_Base::getInstance();
$num_form = $form_logic_base->getCount($category_id, $option);

//Assign Display Infomation
$t->assign('is_manage', $is_manage);

//Assign Catehgory ID
$t->assign('category_id', $category_id);

//Assign Category
$t->assign('category', $category_for_view);
//Assign Parent Category
$t->assign('parent_category', $parent_category_for_view);
//Assign Child Category List
$t->assign('child_categories', $child_categories_for_view);
//Assign Child Category Count
$t->assign('num_children', $num_children);
//Assign Form Count
$t->assign('num_form', $num_form);

//Assign Root Category Flag
$t->assign('is_root', $is_root);
//Assign Nonparty Category Flag
$t->assign('is_nonparty', $is_nonparty);
//Assign Move Flag
$t->assign('is_move', $is_move);

//-- Set Page Title and Site Position

//Ppage Title
$page_title = grn_get_current_page_display_name();
if (isset($category_for_view['name'])) {
    $t->assign('page_title', $category_for_view['name']);
} else {
    $t->assign('page_title', $page_title);
}
//Site Position
$t->assign('site_position', [
        [
            'page' => 'workflow/index',
            'name' => grn_get_page_display_name('workflow/index'),
            'fid'  => $folder_id,
            'sf'   => 1
        ],
        [
            'page' => 'workflow/operation/form_list',
            'name' => grn_get_page_display_name('workflow/operation/form_list'),
            'cid'  => $category_id,
            'sf'   => 1
        ],
        ['page' => '', 'name' => $page_title]
    ]
);

//Display Smarty Template
$doc_name = cb_get_pagename();
$t->display("{$doc_name}.tpl");

