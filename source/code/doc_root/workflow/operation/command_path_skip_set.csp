<?php

if (0 == strcasecmp(@ $_SERVER['REQUEST_METHOD'], 'POST')) {
    global $G_INPUT;

    require_once('grn/smarty.csp');
    $t = new GRN_Smarty;

    $page_name = 'workflow/operation/path_skip_set';
    $page_title = grn_get_page_display_name($page_name);

    $category_id = null;
    if (array_key_exists('cid', $G_INPUT)) {
        $category_id = $G_INPUT['cid'];
    }
    $form_id = null;
    if (array_key_exists('fid', $G_INPUT)) {
        $form_id = $G_INPUT['fid'];
    }
    $item_id = null;
    if (array_key_exists('col_item', $G_INPUT)) {
        $item_id = $G_INPUT['col_item'];
    }

    // ログインユーザーが運用管理権限を持つか確認
    require_once('workflow/controller_util.csp');
    $category_util = GRN_Workflow_Category_Controller_Utility::getInstance();
    if ( ! $category_util->evaluateManage()) {
        require_once('workflow/error_code.csp');
        cb_throw_error(E_GRN_WRKF_MANAGE_DENY);
    }

    // 未分類カテゴリか確認
    if (GRN_WORKFLOW_CATEGORY_NONPARTY_ID == $category_id) {
        require_once('workflow/error_code.csp');
        cb_throw_error(E_GRN_WRKF_MANAGE_DENY_NONPARTY_CATEGORY);
    }

    // 未分類カテゴリ以外は運用管理権限とアクセス権を確認
    $category_util->checkManage($category_id, true, CB_DATABASE_NO_LOCK);
    $category_util->checkAccess($category_id, true, CB_DATABASE_NO_LOCK);

    //Check Category
    require_once('workflow/path_skip_logic.csp');
    $skip_logic = GRN_Workflow_Path_Skip_Logic::getInstance();
    $skip_logic->chkCategoryByFormId($category_id, $form_id);

    //Check Item Exists
    require_once('workflow/item_logic_base.csp');
    $item_logic_base = GRN_Workflow_Item_Logic_Base::getInstance();
    $item_logic_base->getDirect($item_id);

    $item_list = $item_logic_base->getList($form_id);
    $item_util = GRN_Workflow_Item_Controller_Utility::getInstance();
    $branch_item_list = $item_util->eliminateNotAvailableBranchItems($form_id,
        $item_list);
    if ( ! array_key_exists($item_id, $branch_item_list)) {
        require_once('workflow/error_code.csp');
        cb_throw_error(E_GRN_WRKF_INVALID_ROUTE_BRANCH_SETTINGS);
    }

    //Get Path Skips
    require_once('workflow/path_skip.csp');
    $logic = GRN_Workflow_PathSkips::getInstance();
    $columns = [
        'tab_grn_workflow_pathskip' => [
            '_id'      => '_id',
            'col_form' => 'col_form',
            'col_item' => 'col_item'
        ],
        'tab_grn_workflow_item'     => ['col_foreign_key' => 'col_foreign_key']
    ];

    $path_skip_list = $logic->getByFormIdEx($form_id, $columns, 0, -1);

    //Check Path Skip Exists
    if ( ! is_array($path_skip_list) || 0 == count($path_skip_list)) {
        //Add New Path Skip
        $properties = [
            'col_form' => $form_id,
            'col_item' => $item_id
        ];
        $path_skip_id = $logic->add($properties);

        //監査する
        require_once('workflow/inspection.csp');
        $inspection = GRN_Workflow_Path_Skip_Inspection::getInstance();
        if ($inspection->isEnabled()) {
            $message_type = 'path_skip_set';

            $message_args['fid'] = $form_id;
            $message_args['sid'] = $path_skip_id;
            $message_args['iid'] = $properties['col_item'];

            //Record Inspection
            $inspection->record($message_type, $message_args);
        }
    } else {
        // すでに経路分岐情報は設定されています。
        cb_throw_error();
    }

    //Redirect Next Page
    cb_redirect('workflow/operation/form_view',
        ['cid' => $category_id, 'fid' => $form_id]);
}


