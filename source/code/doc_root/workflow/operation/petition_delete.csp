<?php

global $G_INPUT;

//Instantiate an Smarty object
require_once("grn/smarty.csp");
$t = new GRN_Smarty;

//Get Folder ID from Session
require_once('fw/session_manager.csp');
$session_manager = CB_SessionManager::getInstance();
$session_petition_list
    =& $session_manager->getSession('workflow/operation/petition_list');
$folder_id = $session_petition_list->get('folder_id');

//Get Parameter
$category_id = @ $G_INPUT['cid'];  //Category ID
$form_id = @ $G_INPUT['fid'];  //Form ID
$petition_id = @ $G_INPUT['pid'];  //Petition ID

// ログインユーザーが運用管理権限を持つか確認
require_once('workflow/controller_util.csp');
$category_util = GRN_Workflow_Category_Controller_Utility::getInstance();
if ( ! $category_util->evaluateManage()) {
    require_once('workflow/error_code.csp');
    cb_throw_error(E_GRN_WRKF_MANAGE_DENY);
}

// 未分類カテゴリか確認
if (GRN_WORKFLOW_CATEGORY_NONPARTY_ID == $category_id) {
    require_once('workflow/error_code.csp');
    cb_throw_error(E_GRN_WRKF_MANAGE_DENY_NONPARTY_CATEGORY);
}

// 未分類カテゴリ以外は運用管理権限とアクセス権を確認
$category_util->checkManage($category_id, true, CB_DATABASE_NO_LOCK);
$category_util->checkAccess($category_id, true, CB_DATABASE_NO_LOCK);

//Get Petition Controller Utility
$petition_util = GRN_Workflow_Petition_Controller_Utility::getInstance();
$form_util = GRN_Workflow_Form_Controller_Utility::getInstance();

//Create Parameter Translation Map
$translation_map_petition = [
    'pid'       => '_id',          //Petition ID
    'name'      => 'name',         //Petition Name
    'status'    => 'status',       //Petition Status
    'icon_type' => 'icon_type',    //Petition Icon Type
    'icon_id'   => 'icon_id',      //Petition Icon ID
    'icon_url'  => 'icon_url',     //Petition Icon URL
    'form'      => 'form',         //Petition Form
];

//Create Parameter Translation Map
$translation_map_form = [
    'fid'      => '_id',                  //Form ID
    'category' => 'category',             //Category ID
];

//Get Petition for View
$petition_for_view = $petition_util->getView($petition_id,
    $translation_map_petition, $form_id);

//Check Category ID
$option = [
    'condition' => [
        '0' => [
            'column'   => 'col_type',
            'value'    => '0',
            'operator' => '='
        ]
    ]
];
$form = $form_util->getView($petition_for_view['form'], $translation_map_form,
    $category_id, $option);
/*
switch($petition_for_view['status'])
{
case GRN_WORKFLOW_STATUS_TEMPORARY:
case GRN_WORKFLOW_STATUS_UNPROCESSING_CANCEL:
    cb_throw_error(E_GRN_WRKF_PETITION_DENY_ACCESS);
    break;
default:
    break;
}
*/
//Assign Display Infomation
//Assign Category ID
$t->assign('category_id', $category_id);
//Assign Form ID
$t->assign('form_id', $form_id);
//Assign Petition ID
$t->assign('petition_id', $petition_id);

//Assign Petition
$t->assign('petition', $petition_for_view);

//-- set page title and site position

//page title
$page_title = grn_get_current_page_display_name();
$t->assign('page_title', $page_title);

//site position
$t->assign('site_position', [
        [
            'page' => 'workflow/index',
            'name' => grn_get_page_display_name('workflow/index'),
            'fid'  => $folder_id,
            'sf'   => 1
        ],
        [
            'page' => 'workflow/operation/petition_list',
            'name' => grn_get_page_display_name('workflow/operation/petition_list'),
            'cid'  => $category_id,
            'fid'  => $form_id,
            'sf'   => 1
        ],
        [
            'page' => 'workflow/operation/petition_view',
            'name' => grn_get_page_display_name('workflow/operation/petition_view'),
            'cid'  => $category_id,
            'fid'  => $form_id,
            'pid'  => $petition_id,
            'sf'   => 1
        ],
        ['page' => '', 'name' => $page_title]
    ]
);

//Display Smarty Template
$doc_name = cb_get_pagename();
$t->display("{$doc_name}.tpl");


