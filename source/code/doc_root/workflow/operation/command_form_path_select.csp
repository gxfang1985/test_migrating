<?php

if (0 == strcasecmp(@ $_SERVER['REQUEST_METHOD'], 'POST')) {
    global $G_INPUT;

    $page_name = 'workflow/operation/form_path_select';

    require_once('grn/smarty.csp');
    $t = new GRN_Smarty;

    $category_id = null;
    if (array_key_exists('cid', $G_INPUT)) {
        $category_id = $G_INPUT['cid'];
    }
    $form_id = null;
    if (array_key_exists('fid', $G_INPUT)) {
        $form_id = $G_INPUT['fid'];
    }
    $path_id = null;
    if (array_key_exists('pid', $G_INPUT)) {
        $path_id = $G_INPUT['pid'];
    }

    // ログインユーザーが運用管理権限を持つか確認
    require_once('workflow/controller_util.csp');
    $category_util = GRN_Workflow_Category_Controller_Utility::getInstance();
    if ( ! $category_util->evaluateManage()) {
        require_once('workflow/error_code.csp');
        cb_throw_error(E_GRN_WRKF_MANAGE_DENY);
    }

    // 未分類カテゴリか確認
    if (GRN_WORKFLOW_CATEGORY_NONPARTY_ID == $category_id) {
        require_once('workflow/error_code.csp');
        cb_throw_error(E_GRN_WRKF_MANAGE_DENY_NONPARTY_CATEGORY);
    }

    // 未分類カテゴリ以外は運用管理権限とアクセス権を確認
    $category_util->checkManage($category_id, true, CB_DATABASE_NO_LOCK);
    $category_util->checkAccess($category_id, true, CB_DATABASE_NO_LOCK);

    require_once('workflow/form_logic.csp');
    $logic = GRN_Workflow_Form_Logic::getInstance();
    $columns = [];
    $form = $logic->get($form_id, $category_id, $columns, [],
        CB_DATABASE_EXCLUSIVE_LOCK);
    if ( ! is_array($form) || 0 == count($form)) {
        // フォームがない
        cb_throw_error(E_GRN_WRKF_FORM_NOT_FOUND);
    }

    require_once('workflow/path.csp');
    $logic = GRN_Workflow_Paths::getInstance();
    $columns = ['_id'];
    $path = $logic->get($path_id, $columns);
    if ( ! is_array($path) || 0 == count($path)) {
        // 経路がない
        cb_throw_error(E_GRN_WRKF_NOT_FOUND_PATH);
    }

    if (0 < strlen($form['col_path'])) {
        require_once('workflow/path.csp');
        $logic = GRN_Workflow_Paths::getInstance();
        $columns = [
            '_id',
            'col_name',
            'col_type'
        ];
        $path = $logic->get($form['col_path'], $columns);
        if ( ! is_array($path) || 0 == count($path)) {
            // 経路がない
            cb_throw_error(E_GRN_WRKF_NOT_FOUND_PATH);
        }

        if (GRN_WORKFLOW_PRIVATE_PATH == $path['col_type']) {
            $logic->remove($path['_id']);
        } else {
            require_once('workflow/change_access.csp');
            $logic = GRN_Workflow_ChangeAccess::getInstance();
            $columns
                = ['tab_grn_workflow_accesschangeform' => ['_id' => '_id']];
            $change_accesses = $logic->getListByFormId($form_id, $columns);
            if (is_array($change_accesses) && 0 < count($change_accesses)) {
                $logic->removeList(array_keys($change_accesses));
            }

            require_once('workflow/path_skip.csp');
            $path_skip_logic = GRN_Workflow_PathSkips::getInstance();
            $path_skip_logic->removeByFormID($form_id);
        }
    }

    $logic = GRN_Workflow_Form_Logic::getInstance();
    $logic->setPath($form_id, $path_id);

    //監査する
    require_once('workflow/inspection.csp');
    $inspection = GRN_Workflow_Path_Inspection::getInstance();
    if ($inspection->isEnabled()) {
        $message_type = 'path_select';
        $message_args['fid'] = $form_id;
        $message_args['pid'] = $path_id;

        //Record Inspection
        $inspection->record($message_type, $message_args);
    }

    cb_redirect('workflow/operation/form_view',
        ['cid' => $category_id, 'fid' => $form_id]);
}


