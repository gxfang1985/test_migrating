<?php

if (0 == strcasecmp(@ $_SERVER['REQUEST_METHOD'], 'POST')) {
    global $G_INPUT;

    //Create Parameter Translation Map
    $translation_map = [
        'fid'    => '_id',
        'cid'    => '_cid',
        'active' => 'active',
    ];

    //Do Parameter Translation
    $properties = [];
    foreach ($translation_map as $view_name => $model_name) {
        $properties[$model_name] = @ $G_INPUT[$view_name];
    }

    //Check Category Exists
    require_once('workflow/resources.csp');
    if (GRN_WORKFLOW_CATEGORY_NONPARTY_ID != $properties['_cid']) {
        require_once('workflow/category_logic_base.csp');
        $category_logic_base = GRN_Workflow_Category_Logic_Base::getInstance();
        $category =& $category_logic_base->get($properties['_cid']);
    }

    //Get Form Controller Utility
    require_once('workflow/controller_util.csp');
    $form_util = GRN_Workflow_Form_Controller_Utility::getInstance();

    //Create Parameter Translation Map
    $translation_map_form = [
        'fid'  => '_id',      //Form ID
        'path' => 'path',
    ];

    //Get Form for View
    $form_for_view = $form_util->getView($properties['_id'],
        $translation_map_form, $properties['_cid']);

    // ログインユーザーが運用管理権限を持つか確認
    require_once('workflow/controller_util.csp');
    $category_util = GRN_Workflow_Category_Controller_Utility::getInstance();
    if ( ! $category_util->evaluateManage()) {
        require_once('workflow/error_code.csp');
        cb_throw_error(E_GRN_WRKF_MANAGE_DENY);
    }

    // 未分類カテゴリか確認
    if (GRN_WORKFLOW_CATEGORY_NONPARTY_ID == $properties['_cid']) {
        require_once('workflow/error_code.csp');
        cb_throw_error(E_GRN_WRKF_MANAGE_DENY_NONPARTY_CATEGORY);
    }

    // 未分類カテゴリ以外は運用管理権限とアクセス権を確認
    $category_util->checkManage($properties['_cid'], true, CB_DATABASE_NO_LOCK);
    $category_util->checkAccess($properties['_cid'], true, CB_DATABASE_NO_LOCK);

    //Activate or Deactivate Form
    require_once('workflow/form_logic.csp');
    $form_logic = GRN_Workflow_Form_Logic::getInstance();

    $message_type = null;
    if ($properties['active'] == 0) {
        require_once('workflow/path.csp');
        $path_step_logic = GRN_Workflow_PathSteps::getInstance();
        if (0 == strlen($form_for_view['path'])) {
            cb_throw_error(E_GRN_WRKF_FORM_DENY_ACTIVATE);
        }
        if (0 == $path_step_logic->getCount($form_for_view['path'])) {
            cb_throw_error(E_GRN_WRKF_FORM_DENY_ACTIVATE);
        }

        $form_logic->activate($properties['_id']);
        $active = GRN_WORKFLOW_FORM_ACTIVE;
    } else {
        $form_logic->deactivate($properties['_id']);
        $active = GRN_WORKFLOW_FORM_DEACTIVE;
    }

    //監査する
    require_once('workflow/inspection.csp');
    $inspection = GRN_Workflow_Form_Inspection::getInstance();
    if ($inspection->isEnabled()) {
        $message_type = 'form_activate';
        $message_args['fid'] = $properties['_id'];
        $message_args['active'] = $active;

        //Record Inspection
        $inspection->record($message_type, $message_args);
    }

    //Redirect Next Page
    cb_redirect('workflow/operation/form_view',
        ['cid' => $properties['_cid'], 'fid' => $properties['_id']]);
}


