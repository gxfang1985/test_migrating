<?php
global $G_state_set;

// cache control and error page is defined in fw/prepend.csp


class JSON
{
    public static function getInput()
    {
        return json_decode(file_get_contents('php://input'), false);
    }
}

class APIException extends Exception
{
    protected $errorCode;

    public function __construct($message, $errorCode)
    {
        parent::__construct($message);
        $this->errorCode = $errorCode;
    }

    public function getErrorCode()
    {
        return $this->errorCode;
    }
}

function safeMember($arr, $name, $default = '')
{
    return isset($arr[$name]) ? $arr[$name] : $default;
}

if ($_SERVER['REQUEST_METHOD'] != 'POST') {
    throw new APIException('Only POST method is allowed.', 104);
}

if ( ! isset($noAuthenticationAPI) || ! $noAuthenticationAPI) {
    global $G_container_base;
    $__uum = $G_container_base->getInstance('uum');
    $__loginUser = $__uum->getLoginUser();
    if ( ! $__loginUser) {
        throw new APIException('Not authenticated', 105);
    }
}

/** @see cb_csrf_validate_token_v1 */
require_once("fw/csrf.csp");
require("fw/csrf_list.csp");
// $G_rest_white_list is defined in fw/csrf_list.csp
if ( ! in_array(cb_get_pagename(), $G_rest_api_white_list)) {
    $json = JSON::getInput();
    $CSRFToken = isset($json->requestToken) ? $json->requestToken : "";
    cb_csrf_validate_token_v1($CSRFToken);
}

// GTM-529
$page_path = strtolower(cb_get_pagename());
$page_parts = explode('/', $page_path);
$app_id = $page_parts[1];

if ( ! in_array($app_id, ["auth", "base", "mail"])) {
    require_once('grn/application.csp');
    $locator = GRN_ApplicationLocator::instance();
    \grn\grn\access\service\AppAccess::checkInternalAccess($app_id);

}
