<?php

//-- instantiate Smarty object
require_once("grn/smarty.csp");
$t = new GRN_Smarty;

// search
$text = '';
if (array_key_exists('text', $G_INPUT)) {
    $text = $G_INPUT['text'];
    $t->assign('text', $text);
}

require_once('fw/string_util.csp');
$is_search = (strlen(cb_trim($text)) > 0);
$t->assign('is_search', $is_search);

//--current organization id
$poid = @ $G_INPUT['poid'];
if ($poid === 'role' && $is_search) {
    $poid = null;
    unset($G_INPUT['poid']);
}
$t->assign('poid', $poid);

require_once('grn/system_logic.csp');
$system = GRN_System::getInstance();
$users =& $system->getSubSystemUsers();
unset($users[GRN_UUM_ADMINISTRATION_USER]);

$groups =& $system->getSubSystemGroups();
$roles =& $system->getSubSystemRoles();
unset($roles[GRN_UUM_ADMINISTRATION_ROLE]);

// set the array of users for the view
require_once('grn/access_resources.csp');
$list_for_view = [];
foreach (array_keys($roles) as $key) {
    if (is_numeric($key)) {
        $sid = $roles[$key]['sid'];
        $list_for_view["role:${sid}"] = [
            'tid'  => $key,
            'type' => GRN_ACCESS_TARGET_TYPE_STATIC_ROLE
        ];
    } else {
        $list_for_view["dynamicrole:${key}"] = [
            'tid'  => $key,
            'type' => GRN_ACCESS_TARGET_TYPE_DYNAMIC_ROLE
        ];
    }
}
foreach (array_keys($groups) as $key) {
    $sid = $groups[$key]['sid'];
    $list_for_view["group:${sid}"] = [
        'tid'  => $key,
        'type' => GRN_ACCESS_TARGET_TYPE_GROUP
    ];

}
foreach (array_keys($users) as $key) {
    $sid = $users[$key]['sid'];
    $list_for_view["user:${sid}"] = [
        'tid'  => $key,
        'type' => GRN_ACCESS_TARGET_TYPE_USER
    ];
}

$access['list'] = $list_for_view;
$access['count'] = count($access);

$t->assign('access', $access);

//--N-navigation params
$ours_params = $G_INPUT;
unset($ours_params['reset']);

// rhs organization information
require_once('grn/org_util.csp');
require_once('grn/org_util_search.csp');

if ($is_search) {
    $org_row = null;
    $org = [];
    if (0 < $poid) {
        $org_row =& grn_get_org_row($poid);
        $org =& grn_get_org_info($org_row, true);
        $org['ancestors'] =& grn_get_org_ancestors($org_row);
        $org['children'] =& grn_get_org_children($poid);
    } elseif (-1 == $poid) {
        $org_row =& grn_get_org_row('0');
        $org =& grn_get_org_info($org_row, true);
        $org['ancestors'] = $org_row;
        $org['children'] = null;
    } else {
        $org_row =& grn_get_org_row('0');
        $org =& grn_get_org_info($org_row, true);
        $org['ancestors'] = $org_row;
        $org['children'] =& grn_get_org_children('0');
        $poid = null;
    }

    $condition = grn_get_user_info_search_condition($poid, $text, true);
    $count = grn_get_user_info_search_count($poid, $condition);
    $org['navi_info'] = grn_get_user_navigation_info($count, $G_INPUT, 10);
    $org['user_list'] =& grn_search_user_info($poid, $condition,
        $org['navi_info']);
    unset($ours_params['text']);

    $t->assign('org', $org);
} else {
    $org =& grn_get_user_or_role_list($poid, $ours_params, 10);
    if ( ! array_key_exists('user_list', $org)) {
        $org['navi_info'] = grn_get_user_navigation_info(0, $G_INPUT, 10);
    }
    $t->assign('org', $org);
}

unset($ours_params['poid']);
unset($ours_params['sp']);
$t->assign('ours_params', $ours_params);

require_once('grn/controller.csp');
$controller_util = new GRN_ControllerUtil();

// use $page_title for both page title and site position
$page_title = grn_get_current_page_display_name();

// set page title
$t->assign('page_title', $page_title);

// set site position
$t->assign(
    'site_position',
    [
        ['page' => "", 'name' => $page_title],
    ]
);
$t->assign('add_page', 'common_admin_add');
//-- show page
$t->display(cb_get_pagename() . '.tpl');


