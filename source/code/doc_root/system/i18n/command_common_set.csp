<?php
if (0 == strcasecmp(@ $_SERVER['REQUEST_METHOD'], 'POST')) {
    require_once("fw/i18n/system_config.csp");
    global $G_INPUT;

    // get sandbox current status
    require_once('system/sandbox/misc.csp');
    $isSandboxActiveStatusInitial
        = \grn\system\sandbox\isSandboxActiveStatusInitial();

    if ( ! cb_is_forest() && $isSandboxActiveStatusInitial) {
        $display_languages = $G_INPUT["display-language-selected"] ?? [];
        if (empty($display_languages)) // It means 'all languages are available'.
        {
            $display_languages
                = CB_LanguageManager::getAllowedLanguagesByConfigurationFile();
        }

        CB_I18N_SystemConfig::setDisplayLanguages($display_languages);
    } else {
        $display_languages = CB_LanguageManager::getAvailableLanguages();
    }

    $display_timezones = isset($G_INPUT['timezone-selected'])
        ? $G_INPUT['timezone-selected'] : [];
    CB_I18N_SystemConfig::setDisplayTimezones($display_timezones);

    $print_language = @$G_INPUT["print-language"];
    if (is_null($print_language)) {
        $print_language = CB_I18N_SystemConfig::getPrintLanguage();
    }
    CB_I18N_SystemConfig::setPrintLanguage($print_language);

    $print_long_date_format = @$G_INPUT["print-long-date-format"];
    if (is_null($print_long_date_format)) {
        CB_I18N_SystemConfig::setPrintLongDateFormat(CB_I18N_SystemConfig::getPrintLongDateFormat());
    } else {
        CB_I18N_SystemConfig::setPrintLongDateFormat(CB_DateTimeFormatManager::getDateFormat($print_language,
            $print_long_date_format));
    }

    $print_short_date_format = @$G_INPUT["print-short-date-format"];
    if (is_null($print_short_date_format)) {
        CB_I18N_SystemConfig::setPrintShortDateFormat($print_short_date_format
            = CB_I18N_SystemConfig::getPrintShortDateFormat());
    } else {
        CB_I18N_SystemConfig::setPrintShortDateFormat(CB_DateTimeFormatManager::getDateFormat($print_language,
            $print_short_date_format));
    }


    $print_time_format = @$G_INPUT["print-time-format"];
    if (is_null($print_time_format)) {
        CB_I18N_SystemConfig::setPrintTimeFormat(
            $print_time_format = CB_I18N_SystemConfig::getPrintTimeFormat());
    } else {
        CB_I18N_SystemConfig::setPrintTimeFormat(CB_DateTimeFormatManager::getTimeFormat($print_language,
            $print_time_format));
    }


    if ( ! defined('ON_FOREST')) {
        $locale_change = @$G_INPUT["locale-change"];
        if (is_null($locale_change)) {
            $locale_change = CB_I18N_SystemConfig::$LOCALE_UNCHANGEABLE;
        }
        CB_I18N_SystemConfig::setUserChangeableLocale($locale_change);

        $base_change = @$G_INPUT["base-change"];
        if (is_null($base_change)) {
            $base_change = CB_I18N_SystemConfig::$BASE_UNCHANGEABLE;
        }
        CB_I18N_SystemConfig::setUserChangeableBase($base_change);

        $enable_nickname = @$G_INPUT["enable-nickname"];
        $old_enable_nickname = CB_I18N_SystemConfig::isNickname();
        if (is_null($enable_nickname)) {
            $enable_nickname = CB_I18N_SystemConfig::$NICKNAME_OFF;
        }
        CB_I18N_SystemConfig::setNickname($enable_nickname);
    }

    // GRN35-220
    // Get parameters
    $locale = isset($G_INPUT['default_locale']) ? $G_INPUT['default_locale']
        : '';
    $timezone = isset($G_INPUT['timezone']) ? $G_INPUT['timezone'] : '';

    // Check parameters
    require_once('fw/i18n.csp');
    require_once("fw/i18n/locale.csp");
    $i18n = CB_I18N::getInstance();

    // Read the list of available locales from the application configuration.
    $locale_codes = $display_languages;
    assert('count( $locale_codes ) >= 1');
    // Get the native name of each locale and assemble an array of locale names
    $locales = [];
    foreach ($locale_codes as $locale_code) {
        $locales[$locale_code] = $i18n->getResource('message', 'fw.common',
            'locale_name', true, $locale_code);
    }

    // Create region options
    $timezone_list = CB_I18N::getAvailableTimezones();

    // Save config
    if (array_key_exists($locale, $locales)) {
        CB_LocaleManager::setDefaultLanguage($locale);
    } else {
        CB_LocaleManager::setDefaultLanguage(array_keys($locales)[0]);
    }

    if (in_array($timezone, $timezone_list)) {
        CB_I18N::setDefaultTimezone($timezone);
    }
    // GRN35-220

}
cb_redirect('system/common_list', ['id' => 'i18n']);
