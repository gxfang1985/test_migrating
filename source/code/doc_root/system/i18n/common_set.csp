<?php
require_once('grn/smarty.csp');
$t = new GRN_Smarty;
require('SmartyValidate.class.php');
SmartyValidate::connect($t);
SmartyValidate::register_form(cb_get_pagename(), true);

require_once("fw/i18n.csp");
require_once("fw/i18n/locale.csp");

$t->assign("language_candidates",
    CB_LanguageManager::getAllowedLanguagesByConfigurationFile());

require_once("fw/i18n/system_config.csp");
$t->assign("display_languages", CB_I18N_SystemConfig::getDisplayLanguages());
$t->assign("timezone_candidates", CB_I18N::getAvailableTimezones());
$t->assign("display_timezones", CB_I18N_SystemConfig::getDisplayTimezones());
$t->assign('timezone_regions', CB_I18N::getTimezoneRegions());

// GRN35-220
$i18n = CB_I18N::getInstance();

// Read the list of available locales from the application configuration.
$locale_codes = CB_LanguageManager::getAvailableLanguages();

// Get the native name of each locale and assemble an array of locale names
$locales = [];
foreach ($locale_codes as $locale_code) {
    $locales[$locale_code] = $i18n->getResource('message', 'fw.common',
        'locale_name', true, $locale_code);
}

$default_locale_options = [];
$default_locale = CB_LocaleManager::getDefaultLanguage();

foreach ($locales as $locale => $label) {
    if (strcmp($default_locale, $locale) == 0) {
        $default_locale_options[] = [
            'label'    => $label,
            'value'    => $locale,
            'selected' => true
        ];
    } else {
        $default_locale_options[] = ['label' => $label, 'value' => $locale];
    }
}

// Create timezone options
$timezone_options = [];
$timezone_list = CB_I18N::getAvailableTimezones();
$timezone_default = $i18n->getDefaultTimezone();

foreach ($timezone_list as $timezone) {
    $option = [
        'label' => cb_msg('fw.timezone', $timezone),
        'value' => $timezone
    ];
    if ($timezone == $timezone_default) {
        $option['selected'] = true;
    }
    $timezone_options[] = $option;
}

// Create region options
$region_options = [];
$region_list = CB_I18N::getTimezoneRegions();
$timezone_default = explode("/", $timezone_default);
$region_default = $timezone_default[0];
foreach ($region_list as $region) {
    if (strcmp($region_default, $region) == 0) {
        $region_options[] = [
            'label'    => cb_msg('fw.timezone', $region),
            'value'    => $region,
            'selected' => true
        ];
    } else {
        $region_options[] = [
            'label' => cb_msg('fw.timezone', $region),
            'value' => $region
        ];
    }
}

$t->assign('default_locale_options', $default_locale_options);
$t->assign('region_options', $region_options);
$t->assign('timezone_options', $timezone_options);
// GRN35-220

$long_date_format = [];
$short_date_format = [];
$time_format = [];
$availableLanguage = CB_LanguageManager::getAvailableLanguages();
foreach ($availableLanguage as $language_code) {
    $long_date_format[$language_code]
        = CB_DateTimeFormatManager::getDateFormats($language_code);
    $short_date_format[$language_code]
        = CB_DateTimeFormatManager::getDateFormats($language_code);
    $time_format[$language_code]
        = CB_DateTimeFormatManager::getTimeFormats($language_code);
}
$t->assign("language_code_list", $availableLanguage);
$t->assign("long_date_format_list", $long_date_format);
$t->assign("short_date_format_list", $short_date_format);
$t->assign("time_format_list", $time_format);

$t->assign("print_language", CB_I18N_SystemConfig::getPrintLanguage());
$t->assign("print_long_date_format",
    CB_I18N_SystemConfig::getPrintLongDateFormat());
$t->assign("print_short_date_format",
    CB_I18N_SystemConfig::getPrintShortDateFormat());
$t->assign("print_time_format", CB_I18N_SystemConfig::getPrintTimeFormat());

$t->assign("locale_change", CB_I18N_SystemConfig::isUserChangeableLocale());
$t->assign("base_change", CB_I18N_SystemConfig::isUserChangeableBase());

$t->assign("enable_nickname", CB_I18N_SystemConfig::isNickname());

// get sandbox current status
require_once('system/sandbox/misc.csp');
$is_sandbox_status_not_initial
    = \grn\system\sandbox\isSandboxActiveStatusNotInitial();
$t->assign('is_sandbox_status_not_initial', $is_sandbox_status_not_initial);

$t->assign('page_title',
    grn_get_page_display_name('/system/i18n/locale/common_set'));

$t->assign(
    'site_position', [
        0 =>
            [
                'page' => '',
                'name' => grn_get_page_display_name('/system/i18n/locale/common_set'),
            ],
    ]
);

$t->display(cb_get_pagename() . '.tpl');

