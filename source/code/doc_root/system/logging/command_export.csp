<?php

require_once('grn/logger.csp');
$logic = GRN_LoggingLogic::getInstance();

$all = @$G_INPUT['all'];
$category = @$G_INPUT['category'];
$logic->checkCategoryInput($category);
$priority = @$G_INPUT['priority'];

if ( ! $all) {
    $start = new CB_DateTime;
    $start->year = @$G_INPUT['start_year'];
    $start->month = @$G_INPUT['start_month'];
    $start->day = @$G_INPUT['start_day'];
    $start->hour = 0;
    $start->minute = 0;
    $start->second = 0;

    $end = new CB_DateTime;
    $end->year = @$G_INPUT['end_year'];
    $end->month = @$G_INPUT['end_month'];
    $end->day = @$G_INPUT['end_day'];
    $end->hour = 23;
    $end->minute = 59;
    $end->second = 59;

    require_once('fw/date.csp');
    $s = new CB_DateEx($start);

    if ($s->compare($end) > 0) {
        cb_throw_error(E_GRN_INVALID_START_END_DATE);
    }
}

$charset = 'SJIS';
if (array_key_exists('charset', $G_INPUT)) {
    $charset = $G_INPUT['charset'];
}
$put_title = @$G_INPUT['title'];

cb_prepare_download('log.csv', 'application/csv', false);

require_once('fw/csv.csp');
$csv = new CB_CSVWriter($charset);

if ($put_title) {
    require_once('fw/i18n.csp');
    $line = [];
    $line[] = $logic->getMessage('col_date');
    $line[] = $logic->getMessage('col_time');
    $line[] = $logic->getMessage('col_category');
    $line[] = $logic->getMessage('col_priority');
    $line[] = $logic->getMessage('col_msg');
    $line[] = $logic->getMessage('col_user');
    $line[] = $logic->getMessage('col_account');
    $line[] = $logic->getMessage('col_remote_host');
    $line[] = $logic->getMessage('col_remote_addr');
    $line[] = $logic->getMessage('col_action');
    $line[] = $logic->getMessage('col_object');

    $csv->writeLine($line);
}

$query = CB_LoggerQuery::getInstance();
$query->setForceIndex('idx_cat_ts');

$condition = null;
$not_equal = false;
require_once("fw/LoggerQueryCondition.csp");
$loggerQueryCondition = new \grn\fw\LoggerQueryCondition();
$condition = $loggerQueryCondition->getPriorityCondition($priority,
    $query);
if ( ! is_null($category) && strlen($category) > 1) {
    $log_category = $logic->getLogCategory($category);
    $log_category = $query->escape($log_category);
    $condition .= "col_category = '${log_category}'";
} else {
    $condition .= "col_category <> 'fw.schedule'";
    $not_equal = true;
}

if ( ! $all) {
    $date_condition = $logic->createDateCondition($start, $end);
    if ( ! is_null($date_condition)) {
        $condition = '(' . $condition . ') AND (' . $date_condition . ')';
        if ($not_equal) {
            $query->setForceIndex('idx_ts');
        }
    } else {
        $condition = '(' . $date_condition . ')';
    }
}
$query->setCondition($condition);
$query->select();

$ts = new CB_TimeStamp();
while ($row = $query->fetch_assoc()) {
    $line = [];
    $ts->unix_ts = $row['col_timestamp'];
    $datetime = $logic->timestamp_to_datetime($ts);
    $dt = new CB_DateTimeEx($datetime);
    $d = $dt->getDate();
    $line[] = $d->format();
    $t = $dt->getTime();
    $line[] = $t->format();

    $line[] = $logic->getCategoryName($row['col_category']);
    $line[] = $logic->getThresholdName($row['col_priority']);
    $line[] = $row['col_msg'];
    $line[] = $row['col_user'];
    $line[] = $row['col_account'];
    $line[] = $row['col_remote_host'];
    $line[] = $row['col_remote_addr'];
    $line[] = $row['col_action'];
    $line[] = $row['col_object'];
    $csv->writeLine($line);
}

$csv->close();


