<?php

require_once('fw/i18n.csp');
require_once('grn/logger.csp');
require_once('grn/smarty.csp');
$t = new GRN_Smarty();
$logic = GRN_LoggingLogic::getInstance();
$session = $logic->getSession();

$sf = @$G_INPUT['sf'];
$category = @$G_INPUT['category'];
$logic->checkCategoryInput($category);
$priority = @$G_INPUT['priority'];

// システム
$selected = [
    'category' => $category,
    'priority' => $priority
];
$sibling = [
    'category' => 'common',
    'title'    => $logic->getCategoryName('grn.common')
];
$siblings[] = $sibling;

// アプリケーション
require_once('grn/application.csp');
$locator = GRN_ApplicationLocator::instance();
$app_ids = $locator->getApplicationIds();
foreach ($app_ids as $app_id) {
    $app = $locator->getInstance($app_id);
    if ($app) {
        $name = $app->getDefaultName();
        $sibling = ['category' => $app_id, 'title' => $name];
        $siblings[] = $sibling;
    }
}

global $G_container_base;
$uum = $G_container_base->getInstance('uum');
$login = $uum->getLoginUser();

require_once('grn/ui.csp');
$ucm = GRN_UIConfigManager::getInstance();
$uc = $ucm->getUserConfig($login);
$limit = $uc->getListMax();

// N件ナビゲーション
require_once('grn/controller.csp');
$utility = new GRN_ControllerUtil();
$offset = $utility->getNaviStartPosition();
$utility->setNaviStartPosition($offset);
$sort = $utility->getSortParameter();

$offset = 0;
$sort = 'dd';
if ($sf) {
    $offset = $utility->getNaviStartPosition();
    $utility->setNaviStartPosition($offset);
    $sort = $utility->getSortParameter();
    if ( ! $sort) {
        $sort = 'dd';
    }
    $utility->setSortParameter($sort);
}

$query = CB_LoggerQuery::getInstance();

$condition = null;
$is_default_count = true;
require_once("fw/LoggerQueryCondition.csp");
$loggerQueryCondition = new \grn\fw\LoggerQueryCondition();
$condition = $loggerQueryCondition->getPriorityCondition($priority,
    $query);
/* when priority has valid value, function default_count is off. */
$is_default_count = ! $loggerQueryCondition->prioryHasValue($priority);

if ( ! is_null($category) && strlen($category) > 0) {
    $log_category = $logic->getLogCategory($category);
    $log_category = $query->escape($log_category);
    $condition .= "col_category = '${log_category}'";
    $is_default_count = false;
} else {
    $condition .= "col_category <> 'fw.schedule'";
    $query->setForceIndex('idx_ts');
}

$order_condition = $logic->createSortCondition($sort);
$limit_condition = "${offset}, ${limit}";

$query->setCondition($condition);
$query->setOrderCondition($order_condition);
$query->setLimitCondition($limit_condition);

$query->calcFoundRows(false);
$query->select();

$logs = [];
$ts = new CB_TimeStamp();
while ($row = $query->fetch_assoc()) {

    $ts->unix_ts = $row['col_timestamp'];
    $dt = $logic->timestamp_to_datetime($ts);
    $logs[$row['_id']] = [
        'category' => $logic->getCategoryName($row['col_category']),
        'priority' => $row['col_priority'],
        'msg'      => $row['col_msg'],
        'date'     => $dt->format()
    ];
}

if ($is_default_count == true) {
    $total_count = $query->getDefaultCount('col_category');
} else {
    $total_count = $query->getCount('col_category', $condition);
}

$navi_for_view = $utility->makeNaviInformation($offset, $limit, $total_count,
    [
        'priority' => $priority,
        'category' => $category,
        'sf'       => 1
    ]);

$priorities = $logic->getPriorityConditList($priority);
$t->assign('priorities', $priorities);
$list['logs'] = $logs;
$target['siblings'] = $siblings;
$t->assign('selected', $selected);
$t->assign('target', $target);
$t->assign('list', $list);
$t->assign('navi_for_view', $navi_for_view);
$t->assign('sort', $sort);

$page_title = grn_get_current_page_display_name();
$t->assign('page_title', $page_title);
$t->assign('site_position', [
    [
        'page' => '',
        'name' => $page_title
    ]
]);

$t->display(cb_get_pagename() . '.tpl');


