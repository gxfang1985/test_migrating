<?php

if (strcasecmp(@ $_SERVER['REQUEST_METHOD'], 'POST') == 0) {
    require_once('grn/logger.csp');

    $category = @$G_INPUT['category'];
    $priority = @$G_INPUT['priority'];

    $logic = GRN_LoggingLogic::getInstance();
    $logic->checkCategoryInput($category);
    $log_category = $logic->getLogCategory($category);

    global $G_container_base;
    $config = $G_container_base->getInstance('logger_config');
    $config->removeCategory($log_category);

    $priorities = [
        CB_LOGGER_ERROR   => null,
        CB_LOGGER_WARNING => null,
        CB_LOGGER_NOTICE  => null,
        CB_LOGGER_INFO    => null,
    ];
    foreach ($priorities as $key => $value) {
        $log_on = @$G_INPUT["log_on_{$key}"];
        $output = @$G_INPUT["output_{$key}"];

        $targets = [];
        if ($log_on) {
            // データベースロギング
            if ($output == 1 || $output == 3) {
                $targets[] = CB_LOGGER_DB;
            }
            // シスログロギング
            if ($output == 2 || $output == 3) {
                $targets[] = CB_LOGGER_SYSLOG;
            }
        }
        $priorities[$key] = $targets;
    }
    $config->setCritical($log_category, []);
    $config->setError($log_category, $priorities[CB_LOGGER_ERROR]);
    $config->setWarning($log_category, $priorities[CB_LOGGER_WARNING]);
    $config->setNotice($log_category, $priorities[CB_LOGGER_NOTICE]);
    $config->setInfo($log_category, $priorities[CB_LOGGER_INFO]);
    $config->save();

    cb_redirect('system/logging/admin', [
        'category' => $category,
        'priority' => $priority
    ]);
}


