<?php

if (strcasecmp(@ $_SERVER['REQUEST_METHOD'], 'POST') == 0) {
    global $G_INPUT;

    require_once('grn/logger.csp');
    $config = GRN_Logging_SystemConfig::getInstance();

    //Retention period
    $retention_period = intval($G_INPUT['retention_period']);
    if ($retention_period > 0 && $retention_period < 11) {
        $config->setRetentionPediod($retention_period);
    }

    //Export format
    $export_format = @$G_INPUT['export_format'];
    $export_formats = [
        'xlsx'       => 'XLSX',
        'csv(utf-8)' => 'CSV (UTF-8)',
        'csv(s-jis)' => 'CSV (S-JIS)'
    ];
    if (array_key_exists($export_format, $export_formats)) {
        $config->setExportFormat($export_format);
    }

    //Get current timezone
    require_once('grn/uum.csp');
    $uum =& $G_container_base->getInstance('uum');
    $login_user = $uum->getLoginUser();
    $I18N = CB_I18N::getInstance();
    $timezone_user = $I18N->getUserTimezone($login_user);
    $timezone = cb_msg('fw.timezone', $timezone_user);
    $timezone_sign = substr($timezone, 4, 1);
    if ($timezone_sign == '+') {
        $timezone_sign = true;
    } else {
        $timezone_sign = false;
    }

    $timezone_hour = substr($timezone, 5, 2);
    $timezone_hour = intval($timezone_hour);

    $timezone_minute = substr($timezone, 8, 2);
    $timezone_minute = intval($timezone_minute);

    $update = true;
    //Export minute
    $export_minute = intval($G_INPUT['export_minute']);
    if ($export_minute < 0 || $export_minute > 59) {
        $update = false;
    }

    //Export hour
    $export_hour = intval($G_INPUT['export_hour']);
    if ($export_hour < 0 && $export_hour > 23) {
        $update = false;
    }

    //Export day
    $export_day = intval($G_INPUT['export_day']);
    if ($export_day < 0 && $export_day > 6) {
        $update = false;
    }

    //Convert timezone
    if ($timezone_sign) {
        $export_minute -= $timezone_minute;
        if ($export_minute < 0) {
            $export_minute += 60;
            $export_hour--;
        }

        $export_hour -= $timezone_hour;
        if ($export_hour < 0) {
            $export_hour += 24;
            $export_day--;
        }

        if ($export_day < 0) {
            $export_day += 7;
        }
    } else {
        $export_minute += $timezone_minute;
        if ($export_minute >= 60) {
            $export_minute -= 60;
            $export_hour++;
        }

        $export_hour += $timezone_hour;
        if ($export_hour >= 24) {
            $export_hour -= 24;
            $export_day++;
        }

        if ($export_day > 6) {
            $export_day -= 7;
        }
    }

    if ($update) {
        $config->setExportMinute($export_minute);
        $config->setExportHour($export_hour);
        $config->setExportDay($export_day);

        require_once('fw/schedule.csp');
        $ss = CB_SchedulingService::getInstance();
        $name = 'archive_log';
        $filename = $name . '.csp';
        $command = $export_minute . ' ' . $export_hour . ' * * ' . $export_day;
        $ss->registerRepeatEvent($name, $filename, $command);
    }

    cb_redirect('system/common_list', ['id' => 'logging']);
}
