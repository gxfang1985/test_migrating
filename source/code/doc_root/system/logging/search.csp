<?php

require_once('grn/logger.csp');
require_once('grn/smarty.csp');
$t = new GRN_Smarty();
$logic = GRN_LoggingLogic::getInstance();
$session = $logic->getSession();

global $G_container_base;
$uum = $G_container_base->getInstance('uum');
$login = $uum->getLoginUser();

require_once('grn/ui.csp');
$ucm = GRN_UIConfigManager::getInstance();
$uc = $ucm->getUserConfig($login);
$limit = $uc->getListMax();

require_once('grn/controller.csp');
$utility = new GRN_ControllerUtil(cb_get_pagename());
$offset = $utility->getNaviStartPosition();
$utility->setNaviStartPosition($offset);

$start = new CB_DateTime;
$end = new CB_DateTime;

$d = getdate();
$start->year = $d['year'];
$start->month = $d['mon'];
$start->day = $d['mday'];
$start->hour = 0;
$start->minute = 0;
$start->second = 0;

$end->year = $d['year'];
$end->month = $d['mon'];
$end->day = $d['mday'];
$end->hour = 23;
$end->minute = 59;
$end->second = 59;

$sf = @$G_INPUT['sf'];
if ($sf) {
    $sort = $utility->getSortParameter();
    if ( ! $sort) {
        $sort = 'dd';
    }

    $all = $session->get('all');
    if ( ! $all) {
        $start_time = cb_unserialize($session->get('start'),
            ["allowed_classes" => ["CB_DateTime"]]);
        if (is_a($start_time, 'CB_DateTime')) {
            $start = $start_time;
        }
        $end_time = cb_unserialize($session->get('end'),
            ["allowed_classes" => ["CB_DateTime"]]);
        if (is_a($end_time, 'CB_DateTime')) {
            $end = $end_time;
        }
    }
    $priority = $session->get('priority');
    $category = $session->get('category');
    $keyword = $session->get('search_text');
    $search_keys = $session->get('search_keys');
} else {
    $sort = 'dd';
    $all = (bool)@$G_INPUT['all'];
    $priority = @$G_INPUT['priority'];
    $category = @$G_INPUT['category'];
    $optional = @$G_INPUT['optional_search'];
    $keyword = @$G_INPUT['search_text'];

    if ($optional && ! $all) {
        $start->year = (int)@$G_INPUT['start_year'];
        $start->month = (int)@$G_INPUT['start_month'];
        $start->day = (int)@$G_INPUT['start_day'];
        $start->hour = 0;
        $start->minute = 0;
        $start->second = 0;

        $end->year = (int)@$G_INPUT['end_year'];
        $end->month = (int)@$G_INPUT['end_month'];
        $end->day = (int)@$G_INPUT['end_day'];
        $end->hour = 23;
        $end->minute = 59;
        $end->second = 59;
    }

    $search_keys = [];
    if ( ! $optional) {
        $search_keys['col_msg'] = 'col_msg';
        $search_keys['col_user'] = 'col_user';
        $search_keys['col_account'] = 'col_account';
        $search_keys['col_remote_addr'] = 'col_remote_addr';
        $search_keys['col_remote_host'] = 'col_remote_host';
        $all = true;
    } else {
        $words = [];
        $check_columns = ['col_msg', 'col_user', 'col_account', 'col_remote_addr', 'col_remote_host'];
        if (array_key_exists('search_keys', $G_INPUT)) {
            $words = $G_INPUT['search_keys'];
            foreach ($words as $value) {
                if (in_array($value, $check_columns)) {
                    $search_keys[$value] = $value;
                }
            }
        }
    }
}

if (array_key_exists('all', $G_INPUT) && $G_INPUT['all'] == '0') {
    if (cb_date_compare($start, $end) > 0) {
        cb_throw_error(E_GRN_INVALID_START_END_DATE);
    }
}

$utility->setSortParameter($sort);

$query = CB_LoggerQuery::getInstance();

$condition = null;
require_once("fw/LoggerQueryCondition.csp");
$loggerQueryCondition = new \grn\fw\LoggerQueryCondition();
$condition = $loggerQueryCondition->getPriorityCondition($priority,
    $query);

$logic->checkCategoryInput($category);
if ($category !== '') {
    $log_category = $logic->getLogCategory($category);
    $log_category = $query->escape($log_category);
    $condition .= "col_category = '${log_category}'";
} else {
    $condition .= "col_category <> 'fw.schedule'";
    $query->setForceIndex('idx_ts');
}
$categories = $logic->getLogCategoryList($category);

$search_condition = $logic->createSearchCondition($keyword, $search_keys);
if ($search_condition !== false) {
    if ( ! is_null($condition)) {
        $condition = '(' . $condition . ') AND (' . $search_condition . ')';
    } else {
        $condition = '(' . $search_condition . ')';
    }
} else {
    $condition = false;
}
$order_condition = $logic->createSortCondition($sort);
$logs = [];
$total_count = 0;
if ($condition !== false) {
    if ( ! $all) {
        $date_condition = $logic->createDateCondition($start, $end);
        $condition = $condition . 'AND' . $date_condition;
    }
    $query->setCondition($condition);
    $query->setOrderCondition($order_condition);
    $query->setLimitCondition(" ${offset}, ${limit} ");

    $query->calcFoundRows(false);
    $result = $query->select();

    $ts = new CB_TimeStamp();
    while ($row = $query->fetch_assoc()) {
        $ts->unix_ts = $row['col_timestamp'];
        $dt = $logic->timestamp_to_datetime($ts);
        $sep = explode('.', $row['col_category']);
        $logs[$row['_id']] = [
            'category'     => $sep[count($sep) - 1],
            'category_msg' => $logic->getCategoryName($row['col_category']),
            'priority'     => $row['col_priority'],
            'msg'          => $row['col_msg'],
            'date'         => $dt->format()
        ];
    }

    $total_count = $query->getCount('col_category', $condition);
}

$navi_param = ['sf' => 1];
$navi_for_view = $utility->makeNaviInformation($offset, $limit, $total_count,
    $navi_param);

$session->set('all', $all);
$session->set('start', serialize($start));
$session->set('end', serialize($end));
$session->set('priority', $priority);
$session->set('category', $category);
$session->set('search_text', $keyword);
$session->set('search_keys', $search_keys);

require_once('fw/date.csp');
$startex = new CB_DateTimeEx($start);
$endex = new CB_DateTimeEx($end);

$priorities = $logic->getPriorityConditList($priority);
$t->assign('priorities', $priorities);

$selected = [
    'category' => $category,
    'priority' => $priority
];
$t->assign('all', $all);
$t->assign('selected', $selected);
$t->assign('categories', $categories);
$t->assign('start_date', $startex->getDate());
$t->assign('end_date', $endex->getDate());
$t->assign('start_time', $startex->getTime());
$t->assign('end_time', $endex->getTime());
$t->assign('search_text', $keyword);
$t->assign('search_keys', $search_keys);
$t->assign('logs', $logs);
$t->assign('navi_for_view', $navi_for_view);
$t->assign('sort', $sort);

$admin_page = 'system/logging/admin';
$page_title = grn_get_current_page_display_name();
$t->assign('page_title', $page_title);

// site position
$t->assign(
    'site_position', [
        [
            'page'     => $admin_page,
            'name'     => grn_get_page_display_name($admin_page),
            'priority' => $priority,
            'category' => $category,
            'sf'       => 1
        ],
        ['page' => "", 'name' => $page_title]
    ]
);
$t->display(cb_get_pagename() . '.tpl');


