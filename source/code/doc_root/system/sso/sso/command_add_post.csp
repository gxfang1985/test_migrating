<?php

// Check HTTP-POST Method
if (strcasecmp(@ $_SERVER['REQUEST_METHOD'], 'POST') == 0) {
    // instantiate an Smarty object
    require_once("grn/smarty.csp");
    $t = new GRN_Smarty;

    // Validation check
    require_once('SmartyValidate.class.php');
    SmartyValidate::connect($t);
    $target_name = 'system/sso/sso/add_post';
    SmartyValidate::register_form($target_name);

    // validate after a POST
    if (SmartyValidate::is_valid($G_INPUT, $target_name)) {
        // Create Parameter Translation Map
        $translation_map = [
            'smid'               => '_smid',
            //SSO Method ID
            'said'               => '_said',
            //SSO Application ID
            'display_name'       => 'display_name',
            //SSO Method Display Name
            'driver_type'        => 'driver_type',
            //SSO Driver Type
            'available_personal' => 'available_personal',
            //Available Personal Setting
            'available_window'   => 'available_window',
            //Available Window
            'target_url'         => 'target_url',
            //Target URL
            'system_params'      => 'system_params',
            //System POST Parameters(array(NAME=>VALUE))
            'personal_params'    => 'personal_params',
            //Personal POST Parameters(array(NAME=>VALUE))
        ];

        // Do Parameter Translation
        $properties = [];
        foreach ($translation_map as $view_name => $model_name) {
            switch ($model_name) {
                case 'system_params':
                    $properties[$model_name] = [];
                    $system_names = @ $G_INPUT['system_names'];
                    $system_values = @ $G_INPUT['system_values'];
                    for ($i = 0; $i < 5; $i++) {
                        if (array_key_exists($i, $system_names)) {
                            $name = cb_trim($system_names[$i]);
                            $value = cb_trim($system_values[$i]);
                            if (strlen($name) != 0) {
                                $properties[$model_name][$name] = @$value;
                            }
                        }
                    }
                    break;
                case 'personal_params':
                    $properties[$model_name] = [];
                    $personal_names = @ $G_INPUT['personal_names'];
                    $personal_values = @ $G_INPUT['personal_values'];
                    for ($i = 0; $i < 2; $i++) {
                        if (array_key_exists($i, $personal_names)) {
                            $name = cb_trim($personal_names[$i]);
                            $value = cb_trim($personal_values[$i]);
                            if (strlen($name) != 0) {
                                $properties[$model_name][$name] = @$value;
                            }
                        }
                    }
                    break;
                default:
                    $properties[$model_name] = @ $G_INPUT[$view_name];
                    break;
            }
        }

        //Create Infomation SSO Driver Settings
        $driver_settings = [
            'target_url'      => @$properties['target_url'],
            //Target URL
            'system_params'   => @$properties['system_params'],
            //System POST Parameters(array(NAME=>VALUE))
            'personal_params' => @$properties['personal_params'],
            //Personal POST Parameters(array(NAME=>VALUE))
        ];

        //Add SSO Method
        require_once("grn/sso.csp");
        $sso_service = GRN_SSO_Service::getInstance();
        $sso_service->addSSOMethod($properties['_said'],
            $properties['display_name'], $properties['driver_type'],
            $properties['available_personal'], $properties['available_window'],
            $driver_settings);

        // the validation session is finished
        SmartyValidate::unregister_form($target_name);

        //Switch Redirect Page
        cb_redirect('system/sso/sso_method_list', ['sf' => 1]);
    } else {
        //Assign Template Name
        $t->setPageInfo('../_sso_method_add2');

        // Assign input values
        $assign_input_values = [
            'driver_type'        => cb_at($G_INPUT, 'driver_type'),
            'display_name'       => cb_at($G_INPUT, 'display_name'),
            'available_personal' => cb_at($G_INPUT, 'available_personal'),
            'available_window'   => cb_at($G_INPUT, 'available_window'),
            'target_url'         => cb_at($G_INPUT, 'target_url')
        ];
        $t->assign($assign_input_values);

        //include sharing codes with command_*
        include('../_sso_method_add2.csp');

        //Display Previous Page
        $t->display('system/sso/sso_method_add2.tpl');
    }
}


