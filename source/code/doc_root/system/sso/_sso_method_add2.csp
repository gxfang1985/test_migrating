<?php

//Get Driver Type and Application ID from Session
require_once('grn/sso.csp');
$session_manager = CB_SessionManager::getInstance();
$session =& $session_manager->getSession(GRN_SSO_MODULE_ID);
$sso_driver_type =& $session->get('sso_driver_type');
$sso_application_id =& $session->get('sso_application_id');
//Get SSO Driver
$sso_service = GRN_SSO_Service::getInstance();
$sso_driver =& $sso_service->getSSODriver($sso_driver_type);

//Get Application Locator for Application Name
require_once('grn/application.csp');
$app_locator = GRN_ApplicationLocator::instance();

//Create Parameter Translation Map
$translation_map_for_identifier = [
    'id'     => 'id',       //Application ID
    'title'  => 'title',    //Application Name
    'option' => [
        'label' => 'name',  //Identifier Name
        'value' => 'value', //Identifier Value
    ],
];

$sso_method_for_view = [
    'smid'            => '0',
    'said'            => $sso_application_id,
    'display_name'    => '',
    'driver_type'     => $sso_driver->getType(),
    'driver_settings' => [],
    'ctime'           => '',
    'creator_name'    => '',
    'mtime'           => '',
    'modify_name'     => '',
];
//Do Parameter Translation for SSO Method


//Get Application Identifier List
require_once("grn/sso.csp");
$sso_service = GRN_SSO_Service::getInstance();
$app_identifier_list
    = $sso_service->getSSOIdentifierList($sso_method_for_view['said']);

//Get All Identifier List
$all_identifier_list = [];
foreach (array_keys($app_identifier_list) as $app_id) {
    $all_identifier_list = $all_identifier_list + $app_identifier_list[$app_id];
}

//Convert Personal Parameters for View
$personal_names = @$G_INPUT['personal_names'];
$personal_values = @$G_INPUT['personal_values'];
if (is_array($personal_names)) {
    $personal_param_names = [];
    $personal_param_values = [];
    for ($i = 0; $i < 2; $i++) {
        if (array_key_exists($i, $personal_names)) {
            //Check Application Identifier
            $name = cb_trim($personal_names[$i]);
            $value = cb_trim($personal_values[$i]);
            if (in_array($value, $all_identifier_list)) {
                $application = 0;
                $value_items = explode('.', $value);
                if (count($value_items >= 3)) {
                    if ($value_items[1] == 'common') {
                        $application = $value_items[2];
                    } else {
                        $application = $value_items[1];
                    }
                }
                $personal_param_names[$i] = $name;
                $personal_param_values[$i] = [
                    'application' => $application,
                    'option_id'   => $value,
                    'value'       => $value,
                ];
            } else {
                $personal_param_names[$i] = $name;
                $personal_param_values[$i] = [
                    'application' => "",
                    'option_id'   => "",
                    'value'       => $value,
                ];
            }
        }
    }
    $sso_method_for_view['driver_settings']['personal_param_names']
        = $personal_param_names;
    $sso_method_for_view['driver_settings']['personal_param_values']
        = $personal_param_values;
}

//Convert System Parameters for View
$system_names = @$G_INPUT['system_names'];
$system_values = @$G_INPUT['system_values'];
if (is_array($system_names)) {
    $system_param_names = [];
    $system_param_values = [];
    for ($j = 0; $j < 5; $j++) {
        if (array_key_exists($j, $system_names)) {
            //Check Application Identifier
            $name = cb_trim($system_names[$j]);
            $value = cb_trim($system_values[$j]);
            if (in_array($value, $all_identifier_list)) {
                $application = 0;
                $value_items = explode('.', $value);
                if (count($value_items >= 3)) {
                    if ($value_items[1] == 'common') {
                        $application = $value_items[2];
                    } else {
                        $application = $value_items[1];
                    }
                }
                $system_param_names[$j] = $name;
                $system_param_values[$j] = [
                    'application' => $application,
                    'option_id'   => $value,
                    'value'       => $value,
                ];
            } else {
                $system_param_names[$j] = $name;
                $system_param_values[$j] = [
                    'application' => "",
                    'option_id'   => "",
                    'value'       => $value,
                ];
            }
        }
    }
    $sso_method_for_view['driver_settings']['system_param_names']
        = $system_param_names;
    $sso_method_for_view['driver_settings']['system_param_values']
        = $system_param_values;
}

//Do Parameter Translation
$app_identifier_list_for_view = [];
foreach (array_keys($app_identifier_list) as $app_id) {
    $app_identifier_for_view = [
        "id"    => $app_id,
        "title" => ($app_id === 'uum' || $app_id === 'login')
            ? cb_msg('grn.common', $app_id) : $app_locator->getName($app_id),
    ];
    foreach (
        $app_identifier_list[$app_id] as $identifier_name => $identifier_value
    ) {
        $app_identifier_for_view["option"][] = [
            'title' => $identifier_name,
            'id'    => $identifier_value
        ];
    }

    $app_identifier_list_for_view[$app_id] = $app_identifier_for_view;
}
//Assign SSO Method Display Infomation
$t->assign('sso_method', $sso_method_for_view);
$t->assign('identifier', $app_identifier_list_for_view);

//-- set page title and site position

// set page title
$page_title = grn_get_page_display_name('system/sso/sso_method_add2');
$t->assign('page_title', $page_title);

// site position
$t->assign(
    'site_position', [
        [
            'page' => "system/sso/sso_method_list",
            'name' => grn_get_page_display_name('system/sso/sso_method_list'),
            'sf'   => 1
        ],
        ['page' => "", 'name' => $page_title]
    ]
);


