<?php

if (strcasecmp(@ $_SERVER['REQUEST_METHOD'], 'POST') == 0) {
    global $G_INPUT;

    // 文字コード
    $charset = isset($G_INPUT['charset']) ? $G_INPUT['charset'] : null;
    if ( ! $charset) {
        global $G_config_common;
        $charset = $G_config_common->get('I18N', 'default_external_encoding');
    }

    // 項目名の書き出し
    $isExportHeader = (isset($G_INPUT['item_name']) && $G_INPUT['item_name'])
        ? true : false;

    //出力対象言語
    $i18n = CB_I18N::getInstance();
    $exportLanguageCodeArray = [];
    if (isset($G_INPUT['all']) && $G_INPUT['all']) {
        $exportLanguageCodeArray = $i18n->getAvailableLanguages();
    } else {
        $availableLanguageArray = $i18n->getAvailableLanguages();
        foreach ($availableLanguageArray as $languageCode) {
            if (array_key_exists($languageCode, $G_INPUT)) {
                $exportLanguageCodeArray[] = $languageCode;
            }
        }

        if (count($exportLanguageCodeArray) <= 0) {
            require_once('grn/error_code.csp');
            cb_throw_error(E_GRN_INVALID_NOT_SELECTED_LANGUAGE);
        }
    }

    $tempdir = cb_tmpdir();
    $tempFilename = tempnam($tempdir, 'base_');

    require_once('fw/csv.csp');
    $csv = new CB_CSVWriter($charset, $tempFilename);

    if ($isExportHeader) {
        $header = [];
        $header[] = cb_msg('grn.system.calendar.export', 'base_code');
        $header[] = cb_msg('grn.system.calendar.export', 'language_code');
        $header[] = cb_msg('grn.system.calendar.export', 'base_name');
        $csv->writeLine($header);
    }

    require_once('fw/i18n/base.csp');
    foreach ($exportLanguageCodeArray as $language_code) {
        $base_locals
            = CB_BaseManager::getBaseNamesByLanguageCode($language_code);
        foreach ($base_locals as $base_local) {
            $base = CB_Base::select($base_local->getId());
            $line = [];
            $line[] = $base->getCode();
            $line[] = $base_local->getLanguageCode();
            $line[] = $base_local->getName();
            $csv->writeLine($line);
        }
    }

    $csv->close();

    // 一時ファイルに書き出した内容をファイルとして出力
    cb_prepare_download('base_name.csv', 'application/csv', false);
    $fp = fopen($tempFilename, 'rb');
    if (($size = filesize($tempFilename)) > 0) {
        echo fread($fp, $size);
    }
    fclose($fp);

    // 一時ファイルの削除
    unlink($tempFilename);
}
