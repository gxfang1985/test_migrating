<?php

if (strcasecmp(@ $_SERVER['REQUEST_METHOD'], 'POST') == 0) {
    require_once("grn/smarty.csp");
    require_once("SmartyValidate.class.php");
    require_once("fw/i18n.csp");
    require_once("fw/i18n/base.csp");

    $target_name = "system/calendar/base/base_add";
    $t = new GRN_Smarty();
    SmartyValidate::connect($t);
    SmartyValidate::register_form($target_name);

    $base_names = getMultiLanguageText("base-name", $G_INPUT);
    $base_code = isset($G_INPUT['base-code']) ? $G_INPUT["base-code"] : null;
    $calendar_id = isset($G_INPUT['calendar']) ? $G_INPUT['calendar']
        : GRN_CALENDAR_SYSTEM_DEFAULT;

    $work_hours_list = CB_BaseManager::parseWorkHoursList($G_INPUT);

    if (SmartyValidate::is_valid($G_INPUT, $target_name)) {
        global $G_container_base;
        $dbconn = $G_container_base->getInstance("dbconn");
        if (count($work_hours_list) > 10) {
            cb_throw_error(E_GRN_SYSTEM_OVER_THE_LIMIT);
        }

        require_once('grn/calendar.csp');
        $calendar_manager = GRN_CalendarManager::getInstance();
        $calendar = $calendar_manager->getSystemCalendar($calendar_id);
        if ( ! $calendar) {
            require_once('grn/error_code.csp');
            cb_throw_error(E_GRN_CALENDAR_CALENDAR_NOT_FOUND);
        }

        $new_base = new CB_Base([
            'col_name'              => $base_names[CB_I18N_DEFUALT_LANGUAGE_CODE],
            'col_code'              => $base_code,
            'col_workday_sunday'    => (isset($G_INPUT['sunday'])
                                        && $G_INPUT['sunday']) ? 1 : 0,
            'col_workday_monday'    => (isset($G_INPUT['monday'])
                                        && $G_INPUT['monday']) ? 1 : 0,
            'col_workday_tuesday'   => (isset($G_INPUT['tuesday'])
                                        && $G_INPUT['tuesday']) ? 1 : 0,
            'col_workday_wednesday' => (isset($G_INPUT['wednesday'])
                                        && $G_INPUT['wednesday']) ? 1 : 0,
            'col_workday_thursday'  => (isset($G_INPUT['thursday'])
                                        && $G_INPUT['thursday']) ? 1 : 0,
            'col_workday_friday'    => (isset($G_INPUT['friday'])
                                        && $G_INPUT['friday']) ? 1 : 0,
            'col_workday_saturday'  => (isset($G_INPUT['saturday'])
                                        && $G_INPUT['saturday']) ? 1 : 0,
            'col_apply_calendar'    => (isset($G_INPUT['apply_calendar'])
                                        && $G_INPUT['apply_calendar']) ? 1 : 0,
            'col_calendar'          => $calendar_id,
        ]);
        $new_base->insert($dbconn);

        foreach ($base_names as $base_key => $base_name) {
            if ($base_key == CB_I18N_DEFUALT_LANGUAGE_CODE) {
                continue;
            }
            if (is_null($base_name) || strlen(cb_trim($base_name)) <= 0) {
                continue;
            }
            $new_base_local = new CB_BaseLocal([
                "_id"          => $new_base->getId(),
                "col_language" => $base_key,
                "col_name"     => cb_trim($base_name)
            ]);
            $new_base_local->insert($dbconn);
        }

        foreach ($work_hours_list as $work_hours) {
            $new_base_work_hours = new CB_BaseWorkHours([
                'col_base'  => $new_base->getId(),
                'col_start' => $work_hours['start']->format(),
                'col_end'   => $work_hours['end']->format(),
            ]);
            $new_base_work_hours->insert($dbconn);
        }

        SmartyValidate::unregister_form($target_name);
        cb_redirect("system/calendar/base/index");
    } else {
        require_once("_base_add.csp");
        $base = [
            'names'             => $base_names,
            'code'              => $base_code,
            'workday_sunday'    => (isset($G_INPUT['sunday'])
                                    && $G_INPUT['sunday']) ? 1 : 0,
            'workday_monday'    => (isset($G_INPUT['monday'])
                                    && $G_INPUT['monday']) ? 1 : 0,
            'workday_tuesday'   => (isset($G_INPUT['tuesday'])
                                    && $G_INPUT['tuesday']) ? 1 : 0,
            'workday_wednesday' => (isset($G_INPUT['wednesday'])
                                    && $G_INPUT['wednesday']) ? 1 : 0,
            'workday_thursday'  => (isset($G_INPUT['thursday'])
                                    && $G_INPUT['thursday']) ? 1 : 0,
            'workday_friday'    => (isset($G_INPUT['friday'])
                                    && $G_INPUT['friday']) ? 1 : 0,
            'workday_saturday'  => (isset($G_INPUT['saturday'])
                                    && $G_INPUT['saturday']) ? 1 : 0,
            'apply_calendar'    => (isset($G_INPUT['apply_calendar'])
                                    && $G_INPUT['apply_calendar']) ? 1 : 0,
            'work_hours_list'   => $work_hours_list,
            'calendar'          => ['id' => $calendar_id],
        ];
        $t->assign('base', $base);

        $t->display("system/calendar/base/base_add.tpl");
    }
}
