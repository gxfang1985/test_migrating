<?php

$set = [];
$timeout_list = [10, 20, 30, 40, 50, 60, 70, 80, 90, 100, 120];
$pop_before_smtp_wait_list = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];

require_once('fw/i18n.csp');
$nothing = cb_msg('grn.common', 'setting_nothing');
$smtp_auth_list = [
    'NONE'       => ['label' => $nothing, 'value' => 'NONE'],
    'PLAIN'      => ['label' => 'PLAIN', 'value' => 'PLAIN'],
    'LOGIN'      => ['label' => 'LOGIN', 'value' => 'LOGIN'],
    'CRAM-MD5'   => ['label' => 'CRAM-MD5', 'value' => 'CRAM-MD5'],
    'DIGEST-MD5' => ['label' => 'DIGEST-MD5', 'value' => 'DIGEST-MD5']
];

$set['smtp_timeout_list'] = $timeout_list;
$set['pop_before_smtp_wait_list'] = $pop_before_smtp_wait_list;
$set['pop3_timeout_list'] = $timeout_list;

require_once('grn/system_mail.csp');
$smm = GRN_SystemMailConfigManager::getInstance();
$builtin_available = $smm->isAvailableBuiltinMailServer();
$t->assign('builtin_available', $builtin_available);

$region = "COM";
if (defined('ON_FOREST')) {
    require_once('fw/slash_util.csp');
    $region = CB_SlashUtil::getRegion();
}
$t->assign('domain_country', $region);

if ($region == "CN") {
    $set['built_in_system_mail_address']
        = $smm::BUILT_IN_SYSTEM_MAIL_ADDRESS_CN;
} else {
    $set['built_in_system_mail_address'] = $smm::BUILT_IN_SYSTEM_MAIL_ADDRESS;
}

if ($init === true) {
    //////////////////
    //    初期値
    //////////////////
    $set['available'] = true;
    $set['use_builtin'] = false;
    $set['smtp_port'] = 25;
    $selected_smtp_auth = 'NONE';
    $set['smtp_timeout'] = 10;
    $set['is_pop_before_smtp'] = false;
    $set['pop_before_smtp_wait'] = 0;
    $set['pop3_port'] = 110;
    $set['pop3_timeout'] = 10;
    $set['pop3_auth'] = 'USER';
    $smm->getProperty('available', $set['available']);
    if ($builtin_available) {
        $smm->getProperty('use_builtin', $set['use_builtin']);
    }
    $smm->getProperty('smtp_server', $set['smtp_server']);
    $smm->getProperty('smtp_port', $set['smtp_port']);
    $smm->getProperty('smtp_ssl', $set['smtp_ssl']);
    $smm->getProperty('smtp_tls', $set['smtp_tls']);
    $smm->getProperty('smtp_timeout', $set['smtp_timeout']);
    $smm->getProperty('mailaddress', $set['mailaddress']);

    // smtp_auth
    $smm->getProperty('smtp_auth', $selected_smtp_auth);
    $smtp_auth_list[$selected_smtp_auth]['selected'] = true;
    $set['selected_smtp_auth'] = $selected_smtp_auth;
    $set['smtp_auth'] = $smtp_auth_list;

    $smm->getProperty('smtp_user', $set['smtp_user']);

    // pop_before_smtp
    $smm->getProperty('is_pop_before_smtp', $set['is_pop_before_smtp']);
    $smm->getProperty('pop_before_smtp_wait', $set['pop_before_smtp_wait']);
    $smm->getProperty('pop3_server', $set['pop3_server']);
    $smm->getProperty('pop3_port', $set['pop3_port']);
    $smm->getProperty('pop3_ssl', $set['']);
    $smm->getProperty('pop3_auth', $set['pop3_auth']);
    $smm->getProperty('pop3_user', $set['pop3_user']);
    $smm->getProperty('pop3_timeout', $set['pop3_timeout']);
    $set['pop3_timeout_list'] = $timeout_list;
} else {
    if (is_array($G_INPUT)) {
        $set = array_merge($set, $G_INPUT);
    }
    $set['smtp_timeout'] = isset($set['smtp_timeout'])
        ? (int)$set['smtp_timeout'] : 10;
    $set['pop3_timeout'] = isset($set['pop3_timeout'])
        ? (int)$set['pop3_timeout'] : 10;

    $selected_smtp_auth = @$G_INPUT['smtp_auth'];
    $set['selected_smtp_auth'] = $selected_smtp_auth;
    $smtp_auth_list[$selected_smtp_auth]['selected'] = true;
    $set['smtp_auth'] = $smtp_auth_list;

    // GRN2-3172
    if (array_key_exists('smtps', $set) && $set['smtps'] == "1") {
        $set['smtp_ssl'] = 1;
    } else {
        $set['smtp_ssl'] = 0;
    }

    if (array_key_exists('pop3s', $set) && $set['pop3s'] == '1') {
        $set['pop3_ssl'] = 1;
    } else {
        $set['pop3_ssl'] = 0;
    }
    // GRN2-3172
}

//type of encrypted connection
$use_SSL = false;
$use_TLS = false;
if (cb_at($G_INPUT, 'encrypted_connection')) {
    switch ($G_INPUT['encrypted_connection']) {
        case 'SSL':
            $use_SSL = true;
            $use_TLS = false;
            break;
        case 'TLS':
            $use_TLS = true;
            $use_SSL = false;
            break;
        default:
            $use_TLS = false;
            $use_SSL = false;
    }
} else {
    if (array_key_exists('smtp_ssl', $set) && $set['smtp_ssl']) {
        $use_SSL = true;
    }
    if (array_key_exists('smtp_tls', $set) && $set['smtp_tls']) {
        $use_TLS = true;
    }
}

$t->assign(
    'encrypted_connection', [
        ['value' => 'NONE', 'label' => cb_msg('grn.system.external', 'none')],
        [
            'value'    => 'SSL',
            'label'    => cb_msg('grn.system.external', 'use_ssl'),
            'selected' => $use_SSL
        ],
        [
            'value'    => 'TLS',
            'label'    => cb_msg('grn.system.external', 'use_tls'),
            'selected' => $use_TLS
        ],
    ]
);


$t->assign('set', $set);

$page_title = grn_get_current_page_display_name();
$t->assign('page_title', $page_title);
$t->assign('site_position', [['page' => '', 'name' => $page_title]]);


