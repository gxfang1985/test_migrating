<?php

global $G_container_base;
/** @var GRN_Uum $uum */
$uum =& $G_container_base->getInstance('uum');

$types = $uum->listItemTypes();
$current_type = cb_at($G_INPUT, 'type');
if ( ! in_array($current_type, $types, true)) {
    $current_type = 'string';
}

$static_extensions = $uum->staticExtensionProperties([$current_type]);
$disabled_type = $static_extensions[0];

$types_for_view = [];
foreach ($types as $key => $type) {
    $types_for_view[$type] = [
        'value'    => $type,
        'label'    => $uum->getRealItemTypeName($type),
        'selected' => (strcmp($current_type, $type) === 0)
    ];
}

$sso_id = 0;
if (array_key_exists('sso', $G_INPUT)) {
    $sso_id = $G_INPUT['sso'];
}

require_once('grn/sso.csp');
$sso_service = GRN_SSO_Service::getInstance();
$issso = $uum->isSSOType($current_type);
$ssos = $sso_service->getSSOMethodList('uum');
$sso_for_view = [];
$sso_for_view['0'] = [
    'value'    => 0,
    'label'    => cb_msg('grn.common', 'default_sso'),
    'selected' => (0 == $sso_id)
];
if (is_array($ssos) && 0 < count($ssos)) {
    $sso_for_view['-1'] = [
        'value' => -1,
        'label' => '--'
    ];
    foreach (array_keys($ssos) as $sid) {
        $sso =& $ssos[$sid];
        $label = $sso->get('display_name');
        $sso_for_view[$sid] = [
            'value'    => $sid,
            'label'    => $label,
            'selected' => ($sid == $sso_id)
        ];
    }
}

unset($types);
$t->assign('types', $types_for_view);
$t->assign('id', $uum->getAutoItemId());
$t->assign('issso', $issso);
$t->assign('sso_options', $sso_for_view);
$t->assign('current_type', $current_type);

$keys = [
    'display_name',
    'id',
    'use',
    'necessary',
    'not_modify',
    'show',
    'display',
    'cellular',
    'search'
];


foreach ($keys as $key) {
    if (array_key_exists($key, $G_INPUT)) {
        if ( ! array_key_exists("{$key}_disabled", $disabled_type)
             || $disabled_type["{$key}_disabled"] == false
        ) {
            $t->assign($key, $G_INPUT[$key]);
        }
    }
    if (array_key_exists("{$key}_disabled", $disabled_type)) {
        $t->assign("{$key}_disabled", $disabled_type["{$key}_disabled"]);
    }
}

// ケータイのライセンスがないときは、「ケータイで表示」項目を表示しない
$cellular_license = _isApplicationLicensed('cellular');
$t->assign('cellular_license', $cellular_license);

//-- set page title and site position
$page_list = 'system/user/user_column_list';

// use $page_title for both page title and site position
$page_title = grn_get_current_page_display_name();

// set page title
$t->assign('page_title', $page_title);

// set site position
$t->assign(
    'site_position',
    [
        ['page' => $page_list, 'name' => grn_get_page_display_name($page_list)],
        ['page' => "", 'name' => $page_title],
    ]
);


