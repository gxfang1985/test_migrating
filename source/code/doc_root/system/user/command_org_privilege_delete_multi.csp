<?php

$logic = &_grn_get_privilege_logic();

if (0 == strcasecmp(@ $_SERVER['REQUEST_METHOD'], 'POST')) {
    global $G_INPUT;

    $eid = array_key_exists('eid', $G_INPUT) ? $G_INPUT['eid'] : null;
    if ( ! is_array($eid)) {
        cb_redirect('system/user/org_privilege_list', $G_INPUT);
    }

    $org_id = array_key_exists('oid', $G_INPUT) ? $G_INPUT['oid'] : null;

    global $G_container_base;
    /** @var GRN_Uum $uum */
    $uum =& $G_container_base->getInstance('uum');

    $group = &$uum->getGroup($org_id);
    if ( ! $group) {
        cb_throw_error(E_GRN_GROUP_NOT_FOUND);
    }
    $logged_in_user = $uum->getLoginUser();
    if ( ! $logic->isTransferable($logged_in_user, $group)) {
        cb_throw_error(E_GRN_NO_SYSTEM_PRIVILEGE);
    }

    require_once('grn/uum_util.csp');
    $uum_util = GRN_UumUtil::getInstance();
    $dynamic_roles = $uum_util->listDynamicRoles();

    // 監査ログ
    require_once('grn/logger.csp');
    $lm = CB_LoggerManager::getInstance();
    $l =& $lm->getLogger('grn.common');

    $object_id = $group->getOID();
    $object_name = $group->get('name');

    foreach ($eid as $item) {
        $ids = explode(':', $item);
        if (count($ids) < 2) {
            continue;
        }

        $id = $ids[1];
        $target_type = '';
        switch ($ids[0]) {
            case 'user':
                if (($target = &$uum->getUser($id))) {
                    $logic->deletePrivilege($group, $target, 'user');
                    $target_type = 'uid';
                }
                break;

            case 'group':
                if (($target = &$uum->getGroup($id))) {
                    $logic->deletePrivilege($group, $target, 'group');
                    $target_type = 'priv_gid';
                }
                break;

            case 'static_role':
                if (($target = &$uum->getStaticRole($id))) {
                    $logic->deletePrivilege($group, $target, 'static_role');
                    $target_type = 'rid';
                }
                break;

            case 'dynamic_role':
                if (array_key_exists($id, $dynamic_roles)) {
                    $logic->deletePrivilege($group, $id, 'dynamic_role');
                    $target_type = 'dynamic_role';
                }
                break;
        }
        // 監査ログ
        if ($target_type != '') {
            $params = [
                'gid'        => $object_id,
                $target_type => $id,
                'name'       => $object_name
            ];
            $l->noticeEx('delete', 'privilege', $params);
        }
    }

    $params = $G_INPUT;
    unset($params['eid']);

    cb_redirect('system/user/org_privilege_list', $params);
}
