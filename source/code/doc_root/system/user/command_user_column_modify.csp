<?php
if (strcasecmp(@ $_SERVER['REQUEST_METHOD'], 'POST') == 0) {
    // instantiate an Smarty object
    require_once("grn/smarty.csp");
    $t = new GRN_Smarty;

    // Validation check
    require_once('SmartyValidate.class.php');
    SmartyValidate::connect($t);

    // force to register
    $target_name = 'system/user/user_column_modify';
    SmartyValidate::register_form($target_name);

    // validate after a POST
    if (SmartyValidate::is_valid($G_INPUT, $target_name)) {

        global $G_container_base;
        /** @var GRN_Uum $uum */
        $uum =& $G_container_base->getInstance('uum');

        $column_id = @ $G_INPUT['clid'];

        $use = @ $G_INPUT['use'];
        if ( ! $use) {
            $param['use'] = 0;
        } else {
            $param['use'] = 1;
        }

        $necessary = @ $G_INPUT['necessary'];
        if ( ! $necessary) {
            $param['necessary'] = 0;
        } else {
            $param['necessary'] = 1;
        }

        $not_modify = @ $G_INPUT['not_modify'];
        if ( ! $not_modify) {
            $param['not_modify'] = 0;
        } else {
            $param['not_modify'] = 1;
        }

        $show = @ $G_INPUT['show'];
        if ( ! $show) {
            $param['show'] = 0;
        } else {
            $param['show'] = 1;
        }

        $display = @ $G_INPUT['display'];
        if ( ! $display) {
            $param['display'] = 0;
        } else {
            $param['display'] = 1;
        }

        $cellular = @ $G_INPUT['cellular'];
        if ( ! $cellular) {
            $param['cellular'] = 0;
        } else {
            $param['cellular'] = 1;
        }

        $search = @ $G_INPUT['search'];
        if ( ! $search) {
            $param['search'] = 0;
        } else {
            $param['search'] = 1;
        }

        $param['sso'] = (int)$G_INPUT['sso'];
        if ($param['sso'] < 0) {
            $param['sso'] = 0;
        }

        if (is_numeric($column_id)) {

            $column =& $uum->getItem($column_id);
            if ( ! $column) {
                cb_throw_error(E_GRN_USER_COLUMN_NOT_FOUND);
            }

            $temp = ['cid' => $column_id];

            $temp['display_name'] = $G_INPUT['display_name'];
            $temp['type'] = $column->get('type');
            $temp['id'] = $G_INPUT['id'];
            $param = array_merge($temp, $param);

            $log_prop = $param;
            unset($param['type']);
            $uum->setItemProperties($column_id, $param);


            $uum->execInspection('user_item', 'modify', $log_prop);
        } else {
            if (count($param) > 0) {
                $uum->setDefaultItemProperty($column_id, $param);
                $temp = ['key' => $column_id];
                $temp['display_name']
                    = $uum->getRealDefaultItemName($column_id);
                $param = array_merge($temp, $param);
                $uum->execInspection('user_item_default', 'modify', $param);
            }

        }


        // the validation session is finished
        SmartyValidate::unregister_form($target_name);

        cb_redirect('system/user/user_column_view', ['clid' => $column_id]);
    } else {
        //-- if error, show the source form
        $t->setPageInfo($target_name);

        // include sharing codes with command_*
        include('_user_column_modify.csp');

        $t->display($target_name . '.tpl');
    }

}
