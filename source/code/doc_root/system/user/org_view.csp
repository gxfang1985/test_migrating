<?php

// Smarty をインスタンス化
require_once('grn/smarty.csp');
require_once('grn/error_code.csp');
$t = new GRN_Smarty;

// gorup id
$org_id = @ $G_INPUT['oid'];

$logic = _grn_get_privilege_logic();
$is_admin = $logic->isAdmin();

require_once('grn/org_util.csp');

//--group informaiton
$org_row = grn_get_org_row($org_id);
$org =& grn_get_org_info($org_row, false, true);

//--child group
$org['children'] =& grn_get_org_children($org_id);

$privileged_root = false;
if ($org_id) {
    /** @var GRN_Uum $uum */
    $uum = $G_container_base->getInstance('uum');

    //--user count
    $org['user_count'] = $uum->getGroupUserCount($org_id);

    //--parent group
    $org['parent'] =& grn_get_org_parent($org_row, true);

    //--creation information
    $create = $uum->getGroupCreationInfo($org_id);
    $creator = $create->get('creator');
    $modifier = $create->get('modifier');
    $org['creator_uid'] = is_null($creator) ? null : $creator->getOID();
    $org['modifier_uid'] = is_null($modifier) ? null : $modifier->getOID();
    $org['creator_name'] = $create->get('creator_name');
    $org['modifier_name'] = $create->get('modifier_name');
    $org['ctime'] = $create->get('ctime');
    $org['mtime'] = $create->get('mtime');


    if ( ! $is_admin) {
        $user =& $uum->getLoginUser();
        $root_groups =& $logic->getRootGroupsWithAuthority($user);
        if (array_key_exists($org_row->getOID(), $root_groups)) {
            $privileged_root = true;
        }
    }

    if ($privileged_root) {
        $siblings = $root_groups;
    } else {
        // forward/backward navigation
        $parent = $org_row->getParent();

        if ($parent) {
            $siblings = $uum->getChildGroups($parent->getOID());
        } else {
            $siblings = $uum->getRootGroups();
        }
    }

    $keys = array_keys($siblings);
    $index = array_search($org_id, $keys);
    $navi_params = [];
    $prev_index = $index - 1;
    if (0 <= $prev_index) {
        $sibling =& $siblings[$keys[$prev_index]];
        $navi_params['previous'] = [];
        $navi_params['previous']['page'] = cb_get_pagename();
        $navi_params['previous']['page_params'] = [];
        $navi_params['previous']['page_params']['oid'] = $sibling->getOID();
    }

    $next_index = $index + 1;
    if ((count($siblings) - 1) >= $next_index) {
        $sibling =& $siblings[$keys[$next_index]];
        $navi_params['next'] = [];
        $navi_params['next']['page'] = cb_get_pagename();
        $navi_params['next']['page_params'] = [];
        $navi_params['next']['page_params']['oid'] = $sibling->getOID();
    }

    // Smartyに前後ナビのパラメータを割り当てる
    $t->assign('navi_params', $navi_params);
}

// get sandbox current status
require_once('system/sandbox/misc.csp');
$is_sandbox_status_not_initial
    = \grn\system\sandbox\isSandboxActiveStatusNotInitial();
$t->assign('is_sandbox_status_not_initial', $is_sandbox_status_not_initial);

$t->assign('org_id', $org_id);
$t->assign('org', $org);
$t->assign('is_root', ! $org_id);
$t->assign('privileged_root', $privileged_root);

//-- page title
$page_title = grn_get_current_page_display_name();
$t->assign('page_title', $page_title);

require_once('grn/controller.csp');

// Smartyにサイトポジションを割り当てる
$page_infos = [
    'org_list' => ['oid' => $org_id, 'sf' => 1],
    'org_view' => null,
];
$util = new GRN_ControllerUtil();
$site_position = $util->makeSitePosition('system/user/', $page_infos);
$t->assign('site_position', $site_position);

$t->assign('dir_name', 'system/user');

$t->display(cb_get_pagename() . ".tpl");

