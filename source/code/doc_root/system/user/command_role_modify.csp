<?php

if (strcasecmp(@ $_SERVER['REQUEST_METHOD'], 'POST') == 0) {
    // instantiate an Smarty object
    require_once("grn/smarty.csp");
    $t = new GRN_Smarty;

    // Validation check
    require_once('SmartyValidate.class.php');
    SmartyValidate::connect($t);
    $target_name = 'system/user/role_modify';
    SmartyValidate::register_form($target_name);

    // validate after a POST
    if (SmartyValidate::is_valid($G_INPUT, $target_name)) {

        $role_id = @ $G_INPUT['role_id'];

        $parameter_conversion_map = [
            'title' => 'foreign_key',
            'memo'  => 'description'
        ];
        $properties = [];
        foreach ($parameter_conversion_map as $view_name => $model_name) {
            $properties[$model_name] = @ $G_INPUT[$view_name];
        }
        $uum =& $G_container_base->getInstance('uum');
        $uum->setStaticRoleProperties($role_id, $properties);

        $uum->execInspection('role', 'modify', [
            'rid'         => $role_id,
            'foreign_key' => $properties['foreign_key'],
            'memo'        => $properties['description']
        ]);
        // the validation session is finished
        SmartyValidate::unregister_form($target_name);

        cb_redirect('system/user/role_view', ['role_id' => $role_id]);
    } else {

        $t->setPageInfo($target_name);

        // include sharing code
        include('_role_modify.csp');

        $role_for_view = &$t->get_template_vars('role');
        $role_for_view['title'] = $G_INPUT['title'] ?? null;
        $role_for_view['memo'] = $G_INPUT['memo'] ?? null;

        $t->display($target_name . '.tpl');
    }

}
