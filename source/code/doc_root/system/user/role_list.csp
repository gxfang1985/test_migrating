<?php

require_once('grn/smarty.csp');
$t = new GRN_Smarty;

//--------------------------------------------------------------

$selected_role_id = @ $G_INPUT['role_id'];  // 選択されたロールID

/** @var GRN_Uum $uum */
$uum = $G_container_base->getInstance('uum');

$not_selected = false;
$number_of_all = 0;
if (is_null($selected_role_id) || 0 == strlen($selected_role_id)) {
    $not_selected = true;
} else {
    $number_of_all = $uum->getRoleUserCount($selected_role_id);
    if ($number_of_all === false) {
        cb_throw_error(E_GRN_ROLE_NOT_FOUND);
    }
}

// スタティックロール一覧を取得する
$roles_on_logic = $uum->listStaticRoles();

// ロールを取得する
$roles_for_view = [];
foreach ($roles_on_logic as $id => $the_role) {
    if ($selected_role_id == $id) {
        $is_selected = 1;
    } else {
        $is_selected = 0;
    }

    $roles_for_view[$id] = [
        'role_id' => $id,
        'title'   => $the_role->get('foreign_key'),
        'memo'    => $the_role->get('description'),
        'focus'   => $is_selected
    ];
}

$ignore_count = 0;
if (array_key_exists(GRN_UUM_ADMINISTRATION_ROLE, $roles_for_view)) {
    $ignore_count = 1;
}

$num_of_role = count($roles_for_view);
$order_disabled = false;
if ($num_of_role < 2) {
    $order_disabled = true;
}
// ロールの一括削除できる？
$not_exists = ! (0 < count($roles_for_view) - $ignore_count);

global $G_container_base;
$uum = $G_container_base->getInstance('uum');
$login = $uum->getLoginUser();

require_once('grn/ui.csp');
$ucm = GRN_UIConfigManager::getInstance();
$uc = $ucm->getUserConfig($login);
$limit = $uc->getListMax();

// n件ナビゲーション情報を取得する
require_once('grn/controller.csp');
$utility = new GRN_ControllerUtil();

$offset = $utility->getNaviStartPosition();
$utility->setNaviStartPosition($offset);

$n_navigation_for_view = $utility->makeNaviInformation($offset, $limit,
    $number_of_all, ['role_id' => $selected_role_id]);

// ビューにわたす選択されたロールが付与されたユーザーを絞り込む
$users_on_logic = [];
if ( ! $not_selected) {
    $users_on_logic = $uum->getRoleUsers($selected_role_id, $offset, $limit);
    if ($users_on_logic === false) {
        cb_throw_error(E_GRN_ROLE_NOT_FOUND);
    }
}

$user_information['users'] = [];
if (is_array($users_on_logic)) {
    foreach (array_keys($users_on_logic) as $user_id) {
        $user =& $users_on_logic[$user_id];
        $user_information['users'][$user_id]
            = [
            'uid'     => $user->getOID(),
            'name'    => $user->get('display_name'),
            'account' => $user->get('foreign_key'),
        ];
    }
}

$t->assign('not_exists', $not_exists);
$t->assign('role_id', $selected_role_id);
$t->assign('not_selected', $not_selected);
$t->assign('order_disabled', $order_disabled);
$t->assign('roles', $roles_for_view);
$t->assign('user_information', $user_information);
$t->assign('view_set', $n_navigation_for_view);

require_once('grn/system_logic.csp');
$system = GRN_System::getInstance();
$t->assign('permission_to_select_role', $system->getPermissionToSelectRole());

// Smartyにページタイトルを割り当てる
$page_title = grn_get_current_page_display_name();
$t->assign('page_title', $page_title);

require_once('grn/controller.csp');

// Smartyにサイトポジションを割り当てる
$page_infos = ['role_list' => null];
$util = new GRN_ControllerUtil();
$site_position = $util->makeSitePosition('system/user/', $page_infos);
$t->assign('site_position', $site_position);

// Smartyを実行する
$t->display(cb_get_pagename() . '.tpl');


