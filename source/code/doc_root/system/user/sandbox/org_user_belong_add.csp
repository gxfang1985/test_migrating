<?php

use grn\system\sandbox\GRN_Uum_Sandbox;
use grn\system\sandbox\GRN_UumUtil_Sandbox;
use grn\system\sandbox\SandboxConstants;

//-- instantiate smarty object
require_once("grn/smarty.csp");
$t = new GRN_Smarty;

global $G_state_set;
$G_state_set->set('copyright_should_be_written', false);
$G_state_set->set('html_should_be_closed', false);

//-- get parameters from URL parameters
global $G_INPUT;
$user_id = @ $G_INPUT['uid'];
$org_ids = @ $G_INPUT['oids'];
$org_id = @ $G_INPUT['oid'];
$current_oid = @ $G_INPUT['poid'];
$selected_id = @ $G_INPUT['sid'];

if ( ! $current_oid) {
    $current_oid = null;
}

$session_name = 'grn.system.sandbox.org_user_belong';
if (array_key_exists('session', $G_INPUT) && strlen($G_INPUT['session']) > 0) {
    $session_name = $G_INPUT['session'];
}

$uum = GRN_Uum_Sandbox::getInstance();
$uum_util = GRN_UumUtil_Sandbox::getInstance();

//-- setup the list of selected groups
require_once('fw/session_manager.csp');
$session_manager = CB_SessionManager::getInstance();
$session =& $session_manager->getSession($session_name);
$org_ids = $session->get('org_ids');
if ( ! is_array($org_ids)) {
    $org_ids = [];
}

//--reset selected organization list
if (@ $G_INPUT['reset']) {
    $org_ids = [];
    $user_groups = $uum->getUserGroupsInfo($user_id);
    if ($user_groups) {
        foreach (array_keys($user_groups) as $gid) {
            $org_ids[$gid] = $gid;
        }
    }
} //--added organization list
elseif (@ $G_INPUT['add'] && $current_oid) {
    $org_ids[$current_oid] = $current_oid;
    $t->assign('add', true);
} //--removed organization list
elseif (@ $G_INPUT['remove']) {
    $sids = @ $G_INPUT['sid'];
    if (is_array($sids) && count($sids)) {
        foreach ($sids as $sid) {
            unset($org_ids[$sid]);
        }
    }
}

//--set selected organization list to session
$session->set('org_ids', $org_ids);

require_once('grn/org_util.csp');

//--construct selected organization list
$org_list = [];
foreach ($org_ids as $id) {
    $group =& $uum->getGroup($id);
    if ( ! $group) {
        continue;
    }
    $org_list[$id] =& grn_get_org_info($group, true, false,
        SandboxConstants::SANDBOX_MODE);
}

require_once('grn/org_tree.csp');

$page_name = cb_get_pagename();

$util = GRN_OrgTreeUtil::getInstance();
$tree = $util->getTree($page_name, 'grn\system\sandbox\GRN_OrgSandboxTree');

if (is_null($current_oid)) {
    $current_oid = $tree->getSelectedNode();
}

if (array_key_exists('top', $G_INPUT) || is_null($tree->getRoot())) {
    $tree->initialize();
    $current_oid = null;
}
$tree->setSelectedNode($current_oid);
$util->setTree($page_name, $tree);
$org = $tree->getRoot();

$t->assign('org_id', $org_id);
$t->assign('page_name', $page_name);
$t->assign('user_id', $user_id);
$t->assign('poid', $current_oid);
$t->assign('org', $org);
$t->assign('org_list', $org_list);
$t->assign('session', $session_name);

//--page title
$page_title = grn_get_current_page_display_name();
$t->assign('page_title', $page_title);
$t->assign('title_of_grn_title',
    cb_msg("grn.system.user", "org_user_belong_add"));

$form_name = cb_get_pagename();
$t->assign('form_name', $form_name);
$t->assign('dir_name', 'system/user/sandbox');
$t->assign('is_sandbox_page', true);

// Smarty実行
$t->display('system/user/org_user_belong_add.tpl');


