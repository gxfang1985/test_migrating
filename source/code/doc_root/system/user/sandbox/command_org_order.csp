<?php

use grn\system\sandbox\GRN_Uum_Sandbox;
use grn\system\sandbox\GroupOperationService;

if (0 == strcasecmp(@ $_SERVER['REQUEST_METHOD'], 'POST')) {
    global $G_INPUT;
    $org_id = @ $G_INPUT['oid'];
    $child_org_ids = @ $G_INPUT['child_ids'];

    if (is_array($child_org_ids) && 0 < count($child_org_ids)) {

        $uum = GRN_Uum_Sandbox::getInstance();

        if (0 == strlen($org_id)) {
            $children = $uum->getRootGroups();
        } else {
            $children = $uum->getChildGroups($org_id);
        }

        if (count($child_org_ids) != count($children)) {
            cb_throw_error(E_GRN_GROUP_NOT_FOUND);
        }

        $order_list = [];
        foreach ($child_org_ids as $list_index => $child_org_id) {
            if ( ! array_key_exists($child_org_id, $children)) {
                cb_throw_error(E_GRN_GROUP_NOT_FOUND);
            }

            $properties = ['list_index' => $list_index];
            $order_list[$child_org_id] = $properties;
        }
        (new GroupOperationService)->updateGroups($order_list);
        foreach ($child_org_ids as $list_index => $child_org_id) {
            $uum->execInspection('sandbox-group', 'order', [
                'pgid'       => $org_id,
                'gid'        => $child_org_id,
                'list_index' => $list_index
            ]);
        }
    }

    grn\system\sandbox\_grn_rebuild_tree();

    cb_redirect('system/user/sandbox/org_list', ['oid' => $org_id]);
}


