<?php

global $G_INPUT;

use grn\system\sandbox\GRN_Uum_Sandbox;
use grn\system\sandbox\GRN_UumUtil_Sandbox;

$charset = mb_preferred_mime_name(cb_get_http_output_encoding());

// 送信するための準備
cb_prepare_download('', 'application/xml; charset=' . $charset, false);
global $G_state_set;
$G_state_set->set('error_page_type', 'xml');

// Smarty をインスタンス化
require_once("grn/smarty.csp");
$t = new GRN_Smarty;

// SmartyValidate should be initialized when an input form is there.
require('SmartyValidate.class.php');
SmartyValidate::connect($t);

$session_name = 'grn.system.sandbox.org_user_belong';
if (array_key_exists('session', $G_INPUT) && strlen($G_INPUT['session']) > 0) {
    $session_name = $G_INPUT['session'];
}

require_once('fw/session_manager.csp');
$session_manager = CB_SessionManager::getInstance();
$session =& $session_manager->getSession($session_name);
$org_ids = $session->get('org_ids');
if ( ! is_array($org_ids)) {
    $org_ids = [];
}

// 組織の取得
if (count($org_ids) > 0) {
    $items = [];
    $uum = GRN_Uum_Sandbox::getInstance();

    $uum_util = GRN_UumUtil_Sandbox::getInstance();

    foreach ($org_ids as $group_id) {
        if ( ! is_numeric($group_id) || $group_id <= 0) {
            continue;
        }

        $group = &$uum->getGroupInfo($group_id);
        if ( ! $group) {
            continue;
        }

        $path = $uum_util->getGroupPathString($group_id, ' > ');
        $items[$group_id] = ['name' => $group['col_name'], 'fullpath' => $path];
    }

    $t->assign('selected_orgs', $items);
}

$t->assign('charset', $charset);

// Smarty実行
$t->display('system/user/select_org_belong_xml.tpl');


