<?php

if ( ! isset($smarty)) {
    require_once('grn/smarty.csp');
    $smarty = new GRN_Smarty();
}

require_once('SmartyValidate.class.php');
$page_name = cb_get_pagename();
if (SmartyValidate::is_registered_form($page_name)) {
    SmartyValidate::unregister_form($page_name);
}
SmartyValidate::connect($smarty);
SmartyValidate::register_form($page_name);


// 現在の設定値を取得
require_once('grn/system_logic.csp');
$system = GRN_System::getInstance();
$schedule = $system->getDeleteUserSchedule();
$start_hour = $schedule['start'];
$end_hour = $schedule['end'];
$disable = $schedule['disable'];

// 時間帯セレクトボックス
$start_hours = [];
$end_hours = [];
for ($i = 0; $i < 24; $i++) {
    $start_hours[$i] = ['value' => $i, 'label' => $i];
    $end_hours[$i] = ['value' => $i, 'label' => $i];
}
$smarty->assign('disable', $disable);

// GRN2-3209
// 削除されるユーザーを取得
require_once('grn/uum.csp');

/** @var GRN_Uum $uum */
$uum = $G_container_base->getInstance('uum');
$login_user = $uum->getLoginUser();

//GRN-3129
require_once('schedule/view_util.csp');
require_once('grn/uum.csp');
$uum = $G_container_base->getInstance('uum');
$login_user = $uum->getLoginUser();
$I18N = CB_I18N::getInstance();
$timezone = $I18N->getUserTimezone($login_user);
$set_date_time = new CB_DateTime();
$today = getdate();
$set_date_time->year = $today['year'];
$set_date_time->month = $today['mon'];
$set_date_time->day = $today['mday'];
$set_date_time->hour = $start_hour;
if (array_key_exists('start_minute', $schedule)
    && $schedule['start_minute'] >= 10
) {
    $start_minute_UTC = $schedule['start_minute'];
} else {
    $start_minute_UTC = "00";
}

if (array_key_exists('end_minute', $schedule)
    && $schedule['end_minute'] >= 10
) {
    $end_minute_UTC = $schedule['end_minute'];
} else {
    $end_minute_UTC = "00";
}
$set_date_time->minute = $start_minute_UTC;
$start_cutover
    = grn_schedule_convert_datetime_tz1_to_tz2($set_date_time,
    "UTC", $timezone);
$set_date_time->hour = $end_hour;
$set_date_time->minute = $end_minute_UTC;
$end_cutover
    = grn_schedule_convert_datetime_tz1_to_tz2($set_date_time,
    "UTC", $timezone);
$start_hours[$start_cutover->hour]['selected'] = true;
$end_hours[$end_cutover->hour]['selected'] = true;
$smarty->assign('start_hours', $start_hours);
$smarty->assign('end_hours', $end_hours);
if ($start_hour < 10) {
    $smarty->assign('start_hour_UTC', '0' . $start_hour);
} else {
    $smarty->assign('start_hour_UTC', $start_hour);
}

if ($end_hour < 10) {
    $smarty->assign('end_hour_UTC', '0' . $end_hour);
} else {
    $smarty->assign('end_hour_UTC', $end_hour);
}
$smarty->assign('start_minute_UTC', $start_minute_UTC);
$smarty->assign('end_minute_UTC', $end_minute_UTC);
$smarty->assign('start_hour', $start_cutover->hour);
$smarty->assign('end_hour', $end_cutover->hour);
//GRN-3129

$users_data = $uum->getUsersInfo(null, [
    'col_deleted',
    'col_display_name',
    'col_foreign_key',
    'col_display_name_language',
    'col_nickname'
], 0, -1, 'ORDER BY col_deleted ASC', 'col_deleted IS NOT NULL', '_id', true);
$total_count = count($users_data);

$users = [];
foreach ($users_data as $user => $key) {
    require_once("grn/controller.csp");
    $group_info = $uum->getManyUserPrimaryGroupInfoList([$key['_id']]);
    if ($group_info) {
        $key['primary_group'] = $group_info[$key['_id']]['col_name'];
    }

    require_once('grn/ui.csp');
    $manager = GRN_UIConfigManager::getInstance();

    $result = $uum->getNameOf($login_user, $key);
    $config = $manager->getUserConfig($login_user);
    if ($config->getShowPriorityGroup()
        && array_key_exists('primary_group', $key)
    ) {
        $result .= '; ' . $key['primary_group'];
    }
    $key['col_display_name'] = $result;
    $users[] = $key;
}
// GRN2-3209
// 一覧に表示する件数を取得
require_once('grn/ui.csp');
$manager = GRN_UIConfigManager::getInstance();
assert('is_object( $manager ) && is_a( $manager, "GRN_UIConfigManager" )');
$config = $manager->getUserConfig($uum->getLoginUser());
assert('is_object( $config ) && is_a( $config, "GRN_UIConfig" )');
$limit = $config->getListMax();


// N件ナビゲーション
require_once('grn/controller.csp');
$utility = new GRN_ControllerUtil();

$offset = $utility->getNaviStartPosition();
$utility->setNaviStartPosition($offset);
$navi_info = $utility->makeNaviInformation($offset, $limit, $total_count);

$page_title = grn_get_current_page_display_name();
$smarty->assign('page_title', $page_title);

$smarty->assign(
    'site_position',
    [
        ['page' => "", 'name' => $page_title],
    ]
);
$smarty->assign('navi_info', $navi_info);


// このページで表示するユーザーのみ、削除日時を整形してassign
$user_list = [];
for ($i = 0; $i < $offset; $i++) {
    array_shift($users);
}
for ($i = 0; $i < $limit; $i++) {
    $user = array_shift($users);
    if (is_null($user)) {
        break;
    }
    $user['col_deleted'] = cb_timestamp_to_datetime($user['col_deleted']);
    $user_list[$user['_id']] = $user;
}
$smarty->assign('user_list', $user_list);

