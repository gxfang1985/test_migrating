<?php

$logic = &_grn_get_privilege_logic();

if (strcasecmp(@ $_SERVER['REQUEST_METHOD'], 'POST') == 0) {
    $org_id = null;
    if (array_key_exists('oid', $G_INPUT)) {
        $org_id = $G_INPUT['oid'];
    }

    global $G_container_base;
    /** @var GRN_Uum $uum */
    $uum =& $G_container_base->getInstance('uum');

    $group = &$uum->getGroup($org_id);
    if ( ! $group) {
        cb_throw_error(E_GRN_GROUP_NOT_FOUND);
    }
    $logged_in_user = $uum->getLoginUser();
    if ( ! $logic->isTransferable($logged_in_user, $group)) {
        cb_throw_error(E_GRN_NO_SYSTEM_PRIVILEGE);
    }

    $item_type = @ $G_INPUT['itype'];
    $item_tid = @ $G_INPUT['itid'];
    if ( ! $item_type || ! $item_tid) {
        cb_throw_error(E_GRN_PREVILEGE_NOT_SELECT_TARGETS);
    }

    $transferable = @ $G_INPUT['authority_transferable'] ? 1 : 0;

    require_once('grn/uum_util.csp');
    $uum_util = GRN_UumUtil::getInstance();
    $dynamic_roles = $uum_util->listDynamicRoles();

    // 監査ログ
    require_once('grn/logger.csp');
    $lm = CB_LoggerManager::getInstance();
    $l =& $lm->getLogger('grn.common');

    $object_id = $group->getOID();
    $object_name = $group->get('name');

    $target_type = '';
    switch ($item_type) {
        case 'user':
            if (($target = &$uum->getUser($item_tid))) {
                $logic->setPrivilege($group, $target, 'user', $transferable);
                $target_type = 'uid';
            }
            break;

        case 'group':
            if (($target = &$uum->getGroup($item_tid))) {
                $logic->setPrivilege($group, $target, 'group', $transferable);
                $target_type = 'priv_gid';
            }
            break;

        case 'static_role':
            if (($target =& $uum->getStaticRole($item_tid))) {
                $logic->setPrivilege($group, $target, 'static_role',
                    $transferable);
                $target_type = 'rid';
            }
            break;

        case 'dynamic_role':
            if (array_key_exists($item_tid, $dynamic_roles)) {
                $logic->setPrivilege($group, $item_tid, 'dynamic_role',
                    $transferable);
                $target_type = 'dynamic_role';
            }
            break;
    }
    // 監査ログ
    if ($target_type != '') {
        $params = [
            'gid'        => $object_id,
            $target_type => $item_tid,
            'name'       => $object_name
        ];

        $l->noticeEx('modify', 'privilege', $params);
    }
    $params = $G_INPUT;
    unset($params['itype']);
    unset($params['itid']);
    unset($params['authority_transferable']);

    cb_redirect('system/user/org_privilege_list', $params);

}


