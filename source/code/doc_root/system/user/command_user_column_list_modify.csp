<?php
if (strcasecmp(@ $_SERVER['REQUEST_METHOD'], 'POST') == 0) {
    // instantiate an Smarty object
    require_once("grn/smarty.csp");
    $t = new GRN_Smarty;

    global $G_container_base;
    /** @var GRN_Uum $uum */
    $uum =& $G_container_base->getInstance('uum');

    $default_columns = @ $G_INPUT['default_columns'];
    $default_items = $uum->getDefaultItemProperties();

    $keys = array_keys($default_items);
    foreach ($keys as $key) {
        $input = [];
        if (is_array($default_columns)
            && array_key_exists($key, $default_columns)
        ) {
            $input =& $default_columns[$key];
        }

        $prop =& $default_items[$key];
        //non boolean property
        $sso_val = @$prop['sso'];
        unset($prop['sso']);
        $prop_keys = array_keys($prop);
        foreach ($prop_keys as $prop_key) {
            if (array_key_exists($prop_key, $input)) {
                $prop[$prop_key] = 1;
            } else {
                $prop[$prop_key] = 0;
            }
        }

        $uum->setDefaultItemProperty($key, $prop);

        $log_prop = [
            'key'          => $key,
            'display_name' => $uum->getRealDefaultItemName($key),
            'use'          => @$prop['use'],
            'necessary'    => @$prop['necessary'],
            'not_modify'   => @$prop['not_modify'],
            'show'         => @$prop['show'],
            'display'      => @$prop['display'],
            'cellular'     => @$prop['cellular'],
            'search'       => @$prop['search'],
            'sso'          => $sso_val
        ];
        $uum->execInspection('user_item_default', 'modify', $log_prop);
    }
    unset($keys);

    $extension_columns = @ $G_INPUT['extension_columns'];
    $extension_items = $uum->listItems();
    $keys = array_keys($extension_items);
    foreach ($keys as $key) {
        $input = [];
        if (is_array($extension_columns)
            && array_key_exists($key, $extension_columns)
        ) {
            $input =& $extension_columns[$key];
        }

        $prop = [];
        $item =& $extension_items[$key];
        $prop['use'] = $item->get('use');
        $prop['necessary'] = $item->get('necessary');
        $prop['not_modify'] = $item->get('not_modify');
        $prop['show'] = $item->get('show');
        $prop['display'] = $item->get('display');
        $prop['cellular'] = $item->get('cellular');
        $prop['search'] = $item->get('search');
        $prop_keys = array_keys($prop);
        foreach ($prop_keys as $prop_key) {
            if (array_key_exists($prop_key, $input)) {
                $prop[$prop_key] = 1;
            } else {
                $prop[$prop_key] = 0;
            }
        }

        $column =& $uum->getItem($key);
        if ( ! $column) {
            cb_throw_error(E_GRN_USER_COLUMN_NOT_FOUND);
        }
        $temp = ['cid' => $key];
        $temp['display_name'] = $column->get('display_name');
        $temp['type'] = $column->get('type');
        $temp['id'] = $column->get('id');

        $uum->setItemProperties($key, $prop);

        $prop = array_merge($temp, $prop);
        $prop['sso'] = $column->get('sso');
        $uum->execInspection('user_item', 'modify', $prop);
    }

    cb_redirect('system/common_list', ['id' => 'user']);
}
