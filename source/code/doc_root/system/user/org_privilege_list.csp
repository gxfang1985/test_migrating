<?php

//-- instantiate Smarty object
require_once('grn/smarty.csp');
$t = new GRN_Smarty;

global $G_INPUT;
$poid = @ $G_INPUT['poid'];

$logic = &_grn_get_privilege_logic();

//--access information

global $G_container_base;
/** @var GRN_Uum $uum */
$uum =& $G_container_base->getInstance('uum');

$org_id = array_key_exists('oid', $G_INPUT) ? $G_INPUT['oid'] : null;
$group = &$uum->getGroup($org_id);
if ( ! $group) {
    cb_throw_error(E_GRN_GROUP_NOT_FOUND);
}
$logged_in_user = $uum->getLoginUser();
if ( ! $logic->isTransferable($logged_in_user, $group)) {
    cb_throw_error(E_GRN_NO_SYSTEM_PRIVILEGE);
}
$t->assign('node', ['name' => $group->get('name')]);

require_once('grn/org_privilege.csp');
$privilege_logic = GRN_OrganizationPrivilegeLogic::getInstance();

$access = ['list' => []];

$privileges = $privilege_logic->getPrivileges($group);

if (is_array($privileges)) {
    require_once('grn/access_resources.csp');

    if (count($privileges['dynamic_role']) > 0) {
        foreach (array_keys($privileges['dynamic_role']) as $tid) {
            $access['list'][] = [
                'type'         => GRN_ACCESS_TARGET_TYPE_DYNAMIC_ROLE,
                'tid'          => $tid,
                'transferable' => $privileges['dynamic_role_transferable'][$tid]
            ];
        }
    }
    if (count($privileges['static_role']) > 0) {
        foreach (array_keys($privileges['static_role']) as $tid) {
            $access['list'][] = [
                'type'         => GRN_ACCESS_TARGET_TYPE_STATIC_ROLE,
                'tid'          => $tid,
                'transferable' => $privileges['static_role_transferable'][$tid]
            ];
        }
    }
    if (count($privileges['group']) > 0) {
        foreach (array_keys($privileges['group']) as $tid) {
            $access['list'][] = [
                'type'         => GRN_ACCESS_TARGET_TYPE_GROUP,
                'tid'          => $tid,
                'transferable' => $privileges['group_transferable'][$tid]
            ];
        }
    }
    if (count($privileges['user']) > 0) {
        foreach (array_keys($privileges['user']) as $tid) {
            $access['list'][] = [
                'type'         => GRN_ACCESS_TARGET_TYPE_USER,
                'tid'          => $tid,
                'transferable' => $privileges['user_transferable'][$tid]
            ];
        }
    }

    $access['count'] = count($access['list']);
    $t->assign('access', $access);
}

//--N-navigation params
$ours_params = $G_INPUT;
unset($ours_params['reset']);

// rhs organization information
require_once('grn/org_util.csp');
$org =& grn_get_user_or_role_list($poid, $ours_params, 10);

$poid = null;
if (isset($G_INPUT['poid'])) {
    $poid = $G_INPUT['poid'];
}
if ($poid === 'role') {
    unset($G_INPUT['poid']);
    $poid = null;
    $t->assign('poid', $poid);
}

$org =& grn_get_user_or_role_list($poid, $ours_params, 10);
if ( ! array_key_exists('user_list', $org)) {
    $org['navi_info'] = grn_get_user_navigation_info(0, $G_INPUT, 10);
}
$t->assign('org', $org);

unset($ours_params['poid']);
unset($ours_params['sp']);

$t->assign('poid', $poid);
$t->assign('ours_params', $ours_params);

//--authority types
require_once('fw/session_manager.csp');
$session_manager = CB_SessionManager::getInstance();
$session
    =& $session_manager->getSession('grn.common.org_privilege_list');
$authorities = $session->get('authorities');
if (array_key_exists('reset', $G_INPUT) || ! is_array($authorities)) {
    $authorities = ['transferable' => 0];
}

$t->assign('authorities', $authorities);

require_once('grn/controller.csp');
$controller_util = new GRN_ControllerUtil();

//-- page title
$page_title = grn_get_current_page_display_name();
$t->assign('page_title', $page_title);

$page_info = [
    'org_list'           => ['oid' => $org_id],
    'org_privilege_list' => null
];
$site_position = $controller_util->makeSitePosition('system/user/', $page_info);
$t->assign('site_position', $site_position);

// exec smarty
$t->display(cb_get_pagename() . '.tpl');


