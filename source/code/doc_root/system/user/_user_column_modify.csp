<?php

//-- get parameters from URL paramters
$column_id = @ $G_INPUT['clid'];

global $G_container_base;
/** @var GRN_Uum $uum */
$uum =& $G_container_base->getInstance('uum');

$issso = false;
$ssoval = 0;
$current_type = null;

//ケータイのライセンスがは場合は表示しない
$cellular_licensed = _isApplicationLicensed('cellular');
$t->assign('cellular_licensed', $cellular_licensed);

$column_for_view = [];
if (is_numeric($column_id)) {
    $column =& $uum->getItem($column_id);
    if ( ! $column) {
        cb_throw_error(E_GRN_USER_COLUMN_NOT_FOUND);
    }
    $current_type = $column->get('type');
    $static_extensions = $uum->staticExtensionProperties([$current_type]);
    $static_extensions = $static_extensions[0];
    $column_for_view = [
        'clid'                => $column_id,
        'is_extension'        => true,
        'display_name'        => $column->get('display_name'),
        'id'                  => $column->get('id'),
        'type'                => $uum->getRealItemTypeName($column->get('type')),
        'use'                 => $column->get('use'),
        'necessary'           => $column->get('necessary'),
        'not_modify'          => $column->get('not_modify'),
        'show'                => $column->get('show'),
        'display'             => $column->get('display'),
        'search'              => $column->get('search'),
        'use_disabled'        => $static_extensions['use_disabled'],
        'necessary_disabled'  => $static_extensions['necessary_disabled'],
        'not_modify_disabled' => $static_extensions['not_modify_disabled'],
        'show_disabled'       => $static_extensions['show_disabled'],
        'display_disabled'    => $static_extensions['display_disabled'],
        'search_disabled'     => $static_extensions['search_disabled']
    ];

    if ($cellular_licensed) {
        $column_for_view['cellular'] = $column->get('cellular');
        $column_for_view['cellular_disabled']
            = $static_extensions['cellular_disabled'];
    }
    $issso = $uum->isSSOType($column->get('type'));
    $ssoval = $column->get('sso');
    unset($column);
} else {
    //$properties =& $uum->getDefaultItemProperty( $column_id );
    $properties = _getDefaultItemProperty($column_id);
    $properties['clid'] = $column_id;
    $properties['is_extension'] = false;
    $properties['display_name'] = $uum->getRealDefaultItemName($column_id);
    $properties['id'] = $column_id;
    $issso = ($properties['sso_disabled'] ? false : true);
    $ssoval = $properties['sso'];
    $column_for_view = $properties;
}

require_once('grn/sso.csp');
$sso_service = GRN_SSO_Service::getInstance();
$ssos = $sso_service->getSSOMethodList('uum');
$sso_for_view = [];
$sso_for_view['0'] = [
    'value'    => 0,
    'label'    => cb_msg('grn.common', 'default_sso'),
    'selected' => ($ssoval == 0)
];
if (is_array($ssos) && 0 < count($ssos)) {
    $sso_for_view['-1'] = [
        'value' => -1,
        'label' => '--'
    ];
    foreach (array_keys($ssos) as $sid) {
        $sso =& $ssos[$sid];
        $label = $sso->get('display_name');
        $sso_for_view[$sid] = [
            'value'    => $sid,
            'label'    => $label,
            'selected' => ($ssoval == $sid)
        ];
    }
}

// process attendee
if ($column_id === 'attendee') {
    $column_for_view['show_disabled'] = 1;
    $column_for_view['show'] = 1;
    $column_for_view['display_disabled'] = 1;
    $column_for_view['display'] = 1;
}

$t->assign('column', $column_for_view);
$t->assign('issso', $issso);
$t->assign('sso_options', $sso_for_view);
$t->assign('current_type', $current_type);

//-- set page title and site position
$page_list = 'system/user/user_column_list';
$page_view = 'system/user/user_column_view';

// use $page_title for both page title and site position
$page_title = grn_get_current_page_display_name();

// set page title
$t->assign('page_title', $page_title);

// set site position
$t->assign(
    'site_position',
    [
        ['page' => $page_list, 'name' => grn_get_page_display_name($page_list)],
        [
            'page' => $page_view,
            'name' => grn_get_page_display_name($page_view),
            'clid' => $column_id
        ],
        ['page' => "", 'name' => $page_title],
    ]
);


