<?php

if (0 != strcasecmp(@ $_SERVER['REQUEST_METHOD'], 'POST')) {
    cb_redirect('system/common_list', ['id' => 'ui']);
}

require_once('grn/ui.csp');
$manager = GRN_UIConfigManager::getInstance();
$config =& $manager->getSystemConfig();


$config->setCanUserChangeHistory(array_key_exists('change', $G_INPUT)
                                 && $G_INPUT['change'] == 1);


// Clear History
if (array_key_exists('clear-group', $G_INPUT) && $G_INPUT['clear-group']) {
    require_once('grn/history.csp');
    $uum_history = GRN_Uum_HistoryManager::getInstance();
    $uum_history->clearGroupHistory();
}

if (array_key_exists('clear-user', $G_INPUT) && $G_INPUT['clear-user']) {
    require_once('grn/history.csp');
    $uum_history = GRN_Uum_HistoryManager::getInstance();
    $uum_history->clearUserHistory();
}

if (array_key_exists('clear-facilitygroup', $G_INPUT)
    && $G_INPUT['clear-facilitygroup']
) {
    require_once('schedule/facility_system_logic.csp');
    $fdim = GRN_Facility_HistoryManager::getInstance();
    $fdim->clearFacilityGroupHistory();
}

if (array_key_exists('clear-facility', $G_INPUT)
    && $G_INPUT['clear-facility']
) {
    require_once('schedule/facility_system_logic.csp');
    $fdim = GRN_Facility_HistoryManager::getInstance();
    $fdim->clearFacilityHistory();
}

if (array_key_exists('count_group', $G_INPUT)) {
    $config->setMaxHistoryGroup($G_INPUT['count_group']);
}

if (array_key_exists('count_user', $G_INPUT)) {
    $config->setMaxHistoryUser($G_INPUT['count_user']);
}

if (array_key_exists('count_facilitygroup', $G_INPUT)) {
    $config->setMaxHistoryFacilityGroup($G_INPUT['count_facilitygroup']);
}

if (array_key_exists('count_facility', $G_INPUT)) {
    $config->setMaxHistoryFacility($G_INPUT['count_facility']);
}

cb_redirect('system/common_list', ['id' => 'ui']);
