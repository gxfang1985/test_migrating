<?php

//Get Smarty Instance
require_once("grn/smarty.csp");
$t = new GRN_Smarty;

//SmartyValidate should be initialized when an input form is there.
require('SmartyValidate.class.php');
SmartyValidate::connect($t);
SmartyValidate::register_form('system/authentication/repository_method_add1',
    true);

//Get Repository Driver List
require_once('grn/authentication.csp');
$authentication_service = GRN_Authentication_Service::getInstance();
$repository_driver_list = $authentication_service->getRepositoryDriverList();

//Create Parameter Translation Map for Repository Driver
$translation_map_repository_driver = [
    'title' => 'name',                 //Driver Name
    'type'  => 'type',                 //Driver Type
];

//Do Parameter Translation for Repository Driver
foreach (array_keys($repository_driver_list) as $repository_driver_index) {
    //Skip Default Driver and Multi Driver
    if ($repository_driver_list[$repository_driver_index]->getType()
        === GRN_AUTH_REPOSITORY_DEFAULT
        || $repository_driver_list[$repository_driver_index]->getType()
           === GRN_AUTH_REPOSITORY_MULTI
    ) {
        continue;
    }

    $repository_driver_for_view = [];
    foreach ($translation_map_repository_driver as $view_name => $model_name) {
        switch ($model_name) {
            case 'name':
                $repository_driver_for_view[$view_name]
                    = $repository_driver_list[$repository_driver_index]->getName();
                break;
            case 'type':
                $repository_driver_for_view[$view_name]
                    = $repository_driver_list[$repository_driver_index]->getType();
                break;
            default:
                break;
        }
    }

    //Add Repository Driver List for View
    $repository_driver_list_for_view[] = $repository_driver_for_view;
}

//Create Selected Repository Driver Type
if (array_key_exists('sf', $G_INPUT)) {
    //Get Driver Type from Session
    $session_manager = CB_SessionManager::getInstance();
    $session
        = $session_manager->getSession(GRN_AUTH_MODULE_ID);
    $selected_repository_driver_type =& $session->get('repository_driver_type');
} else {
    //Clear Session Driver Type
    $session_manager = CB_SessionManager::getInstance();
    $session = $session_manager->getSession(GRN_AUTH_MODULE_ID);
    $session->set('repository_driver_type', null);

    //Get Current Driver Type
    $current_driver = current($repository_driver_list_for_view);
    $selected_repository_driver_type = $current_driver['type'];
}

//Assign Repository Driver Display Infomation
$t->assign('repository_driver', $repository_driver_list_for_view);
$t->assign('selected_repository_driver_type', $selected_repository_driver_type);

//-- set page title and site position

// set page title
$page_title = grn_get_current_page_display_name();
$t->assign('page_title', $page_title);

// site position
$t->assign(
    'site_position', [
        [
            'page' => "system/authentication/repository_method_list",
            'name' => grn_get_page_display_name('system/authentication/repository_method_list')
        ],
        ['page' => "", 'name' => $page_title]
    ]
);

// Display Smarty Template
$doc_name = cb_get_pagename();
$t->display("{$doc_name}.tpl");


