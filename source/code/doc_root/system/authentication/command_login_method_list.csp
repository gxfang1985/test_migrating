<?php


//Check HTTP-POST Method
if (strcasecmp(@ $_SERVER['REQUEST_METHOD'], 'POST') == 0) {
    //Get Parameters
    $lmid = @  $G_INPUT['lmid'];
    $eid_list = @  $G_INPUT['eid'];

    //Check Delete Multi Request
    if ($lmid == '' && is_array($eid_list) && count($eid_list) != 0) {
        require_once('grn/authentication.csp');
        $authentication_service = GRN_Authentication_Service::getInstance();

        //Check Drivers
        foreach ($eid_list as $eid) {
            $login_method = $authentication_service->getLoginMethod($eid);
            \grn\system\authentication\AvailableDriverChecker::getInstanceOfLoginMethod()
                                                             ->canDelete(
                                                                 $login_method->getDriverType()
                                                             );
        }

        //Save Element ID List
        $session_manager = CB_SessionManager::getInstance();
        $session =& $session_manager->getSession(GRN_AUTH_MODULE_ID);
        $session->set('eid_list', $eid_list);

        //Redirect Delete Multi Page
        cb_redirect('system/authentication/login_method_delete_multi');
    }

    //instantiate an Smarty object
    require_once("grn/smarty.csp");
    $t = new GRN_Smarty;

    //Create Parameter Translation Map
    $translation_map = [
        'lmid' => '_id',
    ];

    //Do Parameter Translation
    $properties = [];
    foreach ($translation_map as $view_name => $model_name) {
        $properties[$model_name] = @ $G_INPUT[$view_name];
    }

    //Set Current Login Method
    require_once('grn/authentication.csp');
    $authentication_service = GRN_Authentication_Service::getInstance();
    $authentication_service->setCurrentLoginMethod($properties['_id']);

    //Redirect Next Page
    cb_redirect('system/authentication/login_method_list');

}
