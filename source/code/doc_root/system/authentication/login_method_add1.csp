<?php

//Get Smarty Instance
require_once("grn/smarty.csp");
$t = new GRN_Smarty;

//SmartyValidate should be initialized when an input form is there.
require('SmartyValidate.class.php');
SmartyValidate::connect($t);
SmartyValidate::register_form('system/authentication/login_method_add1', true);

//Get Login Driver List
require_once('grn/authentication.csp');
$authentication_service = GRN_Authentication_Service::getInstance();
$login_driver_list = $authentication_service->getLoginDriverList();

//Create Parameter Translation Map for Login Driver
$translation_map_login_driver = [
    'title' => 'name',                 //Driver Name
    'type'  => 'type',                 //Driver Type
];

//Do Parameter Translation for Login Driver
$loader = new GRN_Authentication_Application_Loader();
foreach (array_keys($login_driver_list) as $login_driver_index) {
    //Skip Default and Special Authentication Driver
    $drivet_type = $login_driver_list[$login_driver_index]->getType();
    $driver_type_elements = explode('.', $drivet_type);
    if ($loader->loadHook($driver_type_elements[4])
        || $driver_type_elements[4] === 'default'
    ) {
        continue;
    }

    $login_driver_for_view = [];
    foreach ($translation_map_login_driver as $view_name => $model_name) {
        switch ($model_name) {
            case 'name':
                $login_driver_for_view[$view_name]
                    = $login_driver_list[$login_driver_index]->getName();
                break;
            case 'type':
                $login_driver_for_view[$view_name]
                    = $login_driver_list[$login_driver_index]->getType();
                break;
            default:
                break;
        }
    }

    //Add Login Driver List for View
    $login_driver_list_for_view[] = $login_driver_for_view;
}

//Create Selected Login Driver Type
if (array_key_exists('sf', $G_INPUT)) {
    //Get Driver Type from Session
    $session_manager = CB_SessionManager::getInstance();
    $session
        = $session_manager->getSession(GRN_AUTH_MODULE_ID);
    $selected_login_driver_type =& $session->get('login_driver_type');
} else {
    //Clear Session Driver Type
    $session_manager = CB_SessionManager::getInstance();
    $session = $session_manager->getSession(GRN_AUTH_MODULE_ID);
    $session->set('login_driver_type', null);

    //Get Current Driver Type
    $current_driver = current($login_driver_list_for_view);
    $selected_login_driver_type = $current_driver['type'];
}

//Assign Login Driver Display Infomation
$t->assign('login_driver', $login_driver_list_for_view);
$t->assign('selected_login_driver_type', $selected_login_driver_type);

//-- set page title and site position

// set page title
$page_title = grn_get_current_page_display_name();
$t->assign('page_title', $page_title);

// site position
$t->assign(
    'site_position', [
        [
            'page' => "system/authentication/login_method_list",
            'name' => grn_get_page_display_name('system/authentication/login_method_list')
        ],
        ['page' => "", 'name' => $page_title]
    ]
);

// Display Smarty Template
$doc_name = cb_get_pagename();
$t->display("{$doc_name}.tpl");


