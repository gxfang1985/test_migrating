<?php

//Get Smarty Instance
require_once("grn/smarty.csp");
$t = new GRN_Smarty;

// SmartyValidate should be initialized when an input form is there.
require_once('SmartyValidate.class.php');
SmartyValidate::connect($t);
SmartyValidate::register_form('system/authentication/login/modify_default',
    true);

//Get Repository Method List
require_once('grn/authentication.csp');
$authentication_service = GRN_Authentication_Service::getInstance();
$repository_method_list = $authentication_service->getRepositoryMethodList();
$default_repository_method
    =& $authentication_service->getDefaultRepositoryMethod();
if ( ! $repository_method_list) {
    $repository_method_list[$default_repository_method->getOID()]
        =& $default_repository_method;
}


//Get Using Multi Repository Flag
$is_validation_error_mode = is_array($method['_input_repository_settings']);
if ( ! $is_validation_error_mode) {
    $current_repository_method
        = $authentication_service->getRepositoryMethod($method['rmid']);
    $use_multi_repository = $current_repository_method->isMultiRepository();
} else {
    $use_multi_repository = $method['_input_repository_settings']['use_multi'];
}


//Get Multi Repository Settings
if ( ! $use_multi_repository) {
    $selected_child_repository_ids = [$default_repository_method->getOID()];
} else {
    if ( ! $is_validation_error_mode) {
        $selected_child_repository_ids = [];
        $child_repositories
            = $authentication_service->getChildRepositoryMethodsByParentId($method['rmid']);
        foreach ($child_repositories as $child_repository) {
            $selected_child_repository_ids[] = $child_repository->getOID();
        }
    } else {
        $selected_child_repository_ids = [];
        foreach (
            $method['_input_repository_settings']['multi_rmid'] as
            $child_repository_id => $selected
        ) {
            if ($selected) {
                $selected_child_repository_ids[] = $child_repository_id;
            }
        }
    }
}


//Create Repository Options (for selecting a repository)
$repository_method_options = [];
foreach ($repository_method_list as $repository_method_id => $repository_method) {
    $repository_method_options[] = [
        'value'    => $repository_method_id,
        'label'    => $repository_method->getName(),
        'selected' => ($repository_method_id == $method['rmid'])
    ];
}


//Create Multi Repository Options (for selecting multi repositories)
$repository_method_multi_options = [];
$repository_method_multi_option_default = null;
foreach ($repository_method_list as $repository_method_id => $repository_method) {
    $driver_type = $repository_method->get(GRN_AUTH_PROPERTY_DRIVER_TYPE);

    $repository_method_multi_option = [
        'value'           => 1,
        'rmid'            => $repository_method_id,
        'display_name'    => $repository_method->getName(),
        'driver_type'     => $driver_type,
        'driver_settings' => cb_unserialize($repository_method->get(GRN_AUTH_PROPERTY_DRIVER_SETTINGS),
            ["allowed_classes" => false]),
        'selected'        => in_array($repository_method_id,
            $selected_child_repository_ids),
    ];

    if ($driver_type === GRN_AUTH_REPOSITORY_DEFAULT) {
        $repository_method_multi_option_default
            = $repository_method_multi_option;
    } else {
        $repository_method_multi_options[] = $repository_method_multi_option;
    }
}
if ($repository_method_multi_option_default) {
    // default repository should be in the bottom
    $repository_method_multi_options[]
        = $repository_method_multi_option_default;
}


$disabled_multi_repository = false;
if (count($repository_method_multi_options)
    == 1
) // if only one repository exits
{
    if ( ! $use_multi_repository)                     // and current repository(or current selected repository) is not multi,
    {
        $disabled_multi_repository
            = true;           // you can't select multi repository
    }
}

//Assign Display Infomation

//Login Driver Display Infomation
$t->assign('login_method', $method);
//Display Infomation
$t->assign('display', $display);
//Repository Method Display Infomation
$t->assign('repository_method_options', $repository_method_options);
$t->assign('use_multi_repository', $use_multi_repository);
$t->assign('disabled_multi_repository', $disabled_multi_repository);
$t->assign('repository_method_multi_options', $repository_method_multi_options);

// Ignore Licence Warnning
$t->skipWarning();

// Display Smarty Template
$doc_name = cb_get_pagename();
$t->display("system/authentication/login/modify_default.tpl");


