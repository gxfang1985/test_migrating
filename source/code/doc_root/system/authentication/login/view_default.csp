<?php

//Get Smarty Instance
require_once("grn/smarty.csp");
$t = new GRN_Smarty;

//Get Login Driver
require_once('grn/authentication.csp');
$authentication_service = GRN_Authentication_Service::getInstance();
$login_driver
    = $authentication_service->getLoginDriver($method['driver_type']);

//Get Repository Method
if ($method['rmid'] === 0) {
    $repository_method = $authentication_service->getDefaultRepositoryMethod();
} else {
    $repository_method
        = $authentication_service->getRepositoryMethod($method['rmid']);
}

//Create Parameter Translation Map for Login Driver
$translation_map_login_driver = [
    'name' => 'name',             //Driver name
];

//Do Parameter Translation for Login Driver
$login_driver_for_view = [];
foreach ($translation_map_login_driver as $view_name => $model_name) {
    switch ($model_name) {
        case 'name':
            $login_driver_for_view[$view_name] = $login_driver->getName();
            break;
        default:
            break;
    }
}


//Create Repository Display Names
if ($repository_method->isMultiRepository()) {
    $repository_methods
        = $authentication_service->getChildRepositoryMethodsByParentId($repository_method->getOID());
} else {
    $repository_methods = [$repository_method];
}
$display_names = [];
foreach ($repository_methods as $repository_method) {
    $display_names[] = $repository_method->getName();
}
$repository_method_for_view = ['display_names' => $display_names];


//Assign Display Infomation

//Display Infomation
$t->assign('display', $display);
//Login Method Display Infomation
$t->assign('login_method', $method);
//Login Driver Display Infomation
$t->assign('login_driver', $login_driver_for_view);
//Repository Method Display Infomation
$t->assign('repository_method', $repository_method_for_view);

// Ignore Licence Warnning
$t->skipWarning();

// Display Smarty Template
$doc_name = cb_get_pagename();
$t->display("system/authentication/login/view_default.tpl");


