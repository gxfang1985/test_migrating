<?php

//Get Smarty Instance
require_once("grn/smarty.csp");
$t = new GRN_Smarty;

//Get Authenticate Driver
require_once('grn/authentication.csp');
$authentication_service = GRN_Authentication_Service::getInstance();
$authenticate_driver
    = $authentication_service->getAuthenticateDriver($method['driver_type']);

//Get Repository Method
$repository_method
    = $authentication_service->getRepositoryMethod($method['rmid']);

//Create Parameter Translation Map for Authenticate Driver
$translation_map_authenticate_driver = [
    'name' => 'name',             //Driver name
];

//Create Parameter Translation Map for Repository
$translation_map_repository_method = [
    'rmid'         => '_rmid',            //Repository Method Id
    'display_name' => 'display_name',     //Display Name
];

//Do Parameter Translation for Authenticate Driver
$authenticate_driver_for_view = [];
foreach ($translation_map_authenticate_driver as $view_name => $model_name) {
    switch ($model_name) {
        case 'name':
            $authenticate_driver_for_view[$view_name]
                = $authenticate_driver->getName();
            break;
        default:
            break;
    }
}

//Do Parameter Translation for Repository Method
$repository_method_for_view = [];
foreach ($translation_map_repository_method as $view_name => $model_name) {
    switch ($model_name) {
        case '_rmid':
            $repository_method_for_view[$view_name]
                = $repository_method->getOID();
            break;
        case 'display_name':
            $display_name
                = $repository_method->get(GRN_AUTH_PROPERTY_DISPLAY_NAME);
            if ( ! $display_name) {
                $driver_type
                    = $repository_method->get(GRN_AUTH_PROPERTY_DRIVER_TYPE);
                $driver_type_elements = explode('.', $driver_type);
                $display_name = cb_msg($driver_type,
                    $driver_type_elements[4]);
            }
            $repository_method_for_view[$view_name] = $display_name;
            break;
        default:
            break;
    }
}

//Replace Expire Time
switch ($method['driver_settings']['expire_time']) {
    case 10:
    case 30:
        $expire_time = $method['driver_settings']['expire_time']
                       . cb_msg(GRN_AUTH_AUTHENTICATE_CYBOZU, 'minute');
        break;
    case 60:
    case 180:
    case 360:
    case 720:
        $expire_time = $method['driver_settings']['expire_time'] / 60
                       . cb_msg(GRN_AUTH_AUTHENTICATE_CYBOZU, 'hour');
        break;
    case 1440:
        $expire_time = $method['driver_settings']['expire_time'] / 1440
                       . cb_msg(GRN_AUTH_AUTHENTICATE_CYBOZU, 'day');
        break;
    default:
        break;
}
$method['driver_settings']['expire_time'] = $expire_time;

//Replace Cookie Domain
if (strlen($method['driver_settings']['cookie_domain']) > 0
    && strlen($method['driver_settings']['cookie_path']) > 0
) {
    $method['driver_settings']['cookie_domain'] .= ";path="
                                                   . $method['driver_settings']['cookie_path']
                                                   . ";";
}

//Assign Display Infomation

//Display Infomation
$t->assign('display', $display);
//Authenticate Method Display Infomation
$t->assign('authenticate_method', $method);
//Authenticate Driver Display Infomation
$t->assign('authenticate_driver', $authenticate_driver_for_view);
//Repository Method Display Infomation
$t->assign('repository_method', $repository_method_for_view);

// Ignore Licence Warnning
$t->skipWarning();

// Display Smarty Template
$doc_name = cb_get_pagename();
$t->display("system/authentication/authenticate/view_cybozu.tpl");


