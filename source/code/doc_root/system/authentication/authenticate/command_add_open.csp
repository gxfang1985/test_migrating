<?php

// Check HTTP-POST Method
if (strcasecmp(@ $_SERVER['REQUEST_METHOD'], 'POST') == 0) {
    // instantiate an Smarty object
    require_once("grn/smarty.csp");
    $t = new GRN_Smarty;

    // Validation check
    require_once('SmartyValidate.class.php');
    SmartyValidate::connect($t);
    $target_name = 'system/authentication/authenticate/add_open';
    SmartyValidate::register_form($target_name);

    // validate after a POST
    if (SmartyValidate::is_valid($G_INPUT, $target_name)) {
        // Create Parameter Translation Map
        $translation_map = [
            'amid'          => '_amid',
            //Authenticate Method ID
            'rmid'          => '_rmid',
            //Repository Method ID
            'display_name'  => 'display_name',
            //Authenticate Method Display Name
            'cookie_domain' => 'cookie_domain',
            //Cookie Domain
            'cookie_path'   => 'cookie_path',
            //Cookie Path
            'password'      => 'password',
            //Passwowrd
            'retype'        => 'retype',
            //Retype Passwowrd
            'expire_time'   => 'expire_time',
            //Expire Time
        ];

        // Do Parameter Translation
        $properties = [];
        foreach ($translation_map as $view_name => $model_name) {
            $properties[$model_name] = @ $G_INPUT[$view_name];
        }

        //Create Infomation Authenticate Driver Settings
        $driver_settings['cookie_domain']
            = $properties['cookie_domain'];   //Cookie Domain
        $driver_settings['cookie_path']
            = $properties['cookie_path'];     //Cookie Path
        $driver_settings['expire_time']
            = $properties['expire_time'];     //Expire Time
        if ($properties['password'] !== '***************'
            && $properties['retype'] !== '---------------'
        ) {
            if ($properties['password'] !== $properties['retype']) {
                cb_throw_error(E_GRN_PASSWORD_NOT_MATCH);
            }
            if ($properties['password'] !== '') {
                $driver_settings['password'] = md5($properties['password']);
            } else {
                $driver_settings['password'] = $properties['password'];
            }
        }

        //Get Repository Method
        require_once('grn/authentication.csp');
        $authentication_service = GRN_Authentication_Service::getInstance();
        $repository_method
            = $authentication_service->getRepositoryMethod($properties['_rmid']);

        //Add Authenticate Method
        $authentication_service->addAuthenticateMethod($properties['display_name'],
            GRN_AUTH_AUTHENTICATE_OPEN,
            $driver_settings, $repository_method);
        // the validation session is finished
        SmartyValidate::unregister_form($target_name);

        //Switch Redirect Page
        cb_redirect('system/authentication/authenticate_method_list');
    } else {
        //Assign Template Name
        $t->setPageInfo('../_authenticate_method_add2');

        //Rewrite Authenticate Method Infomation
        $assign_input_values = [
            'display_name'  => cb_at($G_INPUT, 'display_name'),
            'expire_time'   => cb_at($G_INPUT, 'expire_time'),
            'cookie_domain' => cb_at($G_INPUT, 'cookie_domain'),
            'cookie_path'   => cb_at($G_INPUT, 'cookie_path')
        ];
        $t->assign($assign_input_values);

        //include sharing codes with command_*
        include('../_authenticate_method_add2.csp');

        //Display Previous Page
        $t->display('system/authentication/authenticate_method_add2.tpl');
    }
}


