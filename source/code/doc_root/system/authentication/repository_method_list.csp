<?php

//Get Smarty Instance
require_once("grn/smarty.csp");
$t = new GRN_Smarty;

//Set Base ID for Site Position
$t->assign('id', 'authentication');

//Get Repository Method List
require_once("grn/authentication.csp");
$authentication_service = GRN_Authentication_Service::getInstance();
$repository_method_list = $authentication_service->getRepositoryMethodList();
if ( ! $repository_method_list) {
    $repository_method_list = [];
}

// Create Parameter Translation Map
$translation_map = [
    'rmid'         => '_id',
    'display_name' => 'display_name',
    'is_active'    => 'is_active',
    'is_default'   => 'is_default',
];

// Do Parameter Translation
$no_default_repository_count = 0;
$index = 0;
$repository_method_list_for_view = [];
foreach (array_keys($repository_method_list) as $repository_method_id) {
    $repository_method_for_view = [];
    foreach ($translation_map as $view_name => $model_name) {
        switch ($view_name) {
            case 'rmid':
                $repository_method_for_view[$view_name] = $repository_method_id;
                break;
            case 'is_default':
                $driver_type
                    = $repository_method_list[$repository_method_id]->get('driver_type');
                if ($driver_type === GRN_AUTH_REPOSITORY_DEFAULT) {
                    $repository_method_for_view[$view_name] = 1;
                } else {
                    $repository_method_for_view[$view_name] = 0;
                }
                break;
            case 'display_name':
                $display_name
                    = $repository_method_list[$repository_method_id]->get(GRN_AUTH_PROPERTY_DISPLAY_NAME);
                if ( ! $display_name) {
                    $driver_type
                        = $repository_method_list[$repository_method_id]->get(GRN_AUTH_PROPERTY_DRIVER_TYPE);
                    $driver_type_elements = explode('.', $driver_type);
                    $display_name = cb_msg($driver_type,
                        $driver_type_elements[4]);
                }
                $repository_method_for_view[$view_name] = $display_name;
                break;
            default:
                $repository_method_for_view[$view_name]
                    = $repository_method_list[$repository_method_id]->get($model_name);
                break;
        }
    }
    $index++;
    $repository_method_list_for_view[$index] = $repository_method_for_view;

    $driver_type
        = $repository_method_list[$repository_method_id]->get(GRN_AUTH_PROPERTY_DRIVER_TYPE);
    $no_default_repository_count += ($driver_type
                                     !== GRN_AUTH_REPOSITORY_DEFAULT) ? 1 : 0;
}

// Assign Get Parameter
$repository_method_id = @ $G_INPUT['rmid'];
$t->assign('repository_method_id', $repository_method_id);
$t->assign('repository_method', $repository_method_list_for_view);
$t->assign('disable_link_to_order', $no_default_repository_count < 2);

//-- set page title and site position

// page title
$page_title = grn_get_current_page_display_name();
$t->assign('page_title', $page_title);

// site position
$t->assign('site_position', [['page' => '', 'name' => $page_title]]);

// Display Smarty Template
$doc_name = cb_get_pagename();
$t->display("{$doc_name}.tpl");


