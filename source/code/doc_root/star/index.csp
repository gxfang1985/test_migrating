<?php

use grn\grn\access\service\AppAccess;
use grn\grn\access\utility\AppAvailabilityUtil;

global $G_container_base;
$uum = $G_container_base->getInstance('uum');
$login = $uum->getLoginUser();

require_once('star/logic.csp');
$star_logic = GRN_Star_StarLogic::getInstance();

require_once('grn/smarty.csp');
$t = new GRN_Smarty();

// GTM-529
require_once('star/config.csp');
$logic = GRN_Star_SystemLogic::getInstance();
$limit = $logic->getStarLimit();
$count = $star_logic->getCount($login);
if ($limit != -1 && $count > $limit)   //-1: ������
{
    $t->assign('over_maximum', true);
}
// GTM-529

$selected = null;
if (@$G_INPUT['app_id'] != 'star') {
    $selected = @$G_INPUT['app_id'];
}

require_once('star/application.csp');
$app_locator = GRN_ApplicationLocator::instance();
/** @var GRN_Star_Application $star_app */
$star_app = $app_locator->getInstance(GRN_STAR_APPLICATION_ID);
// update star list
$star_app->updateStarList($login, true);

$supported_apps =& $star_app->getSupportedApplications();
$app_id_available = AppAccess::getAvailableAppIdsByUserId($login->getOID());

$menus = [];
foreach (array_keys($supported_apps) as $app_id) {
    $app = $app_locator->getInstance($app_id);
    if ($app && in_array($app_id, $app_id_available)) {
        $name = $app->getName();
        $menus[$app_id] = ['category' => $app_id, 'title' => $name];
    } else {
        unset($supported_apps[$app_id]);
    }
}

$t->assign('selected', ['category' => $selected]);
$t->assign('menus', $menus);

require_once('star/controller.csp');
$target = 'star/index';
$utility = new GRN_Star_ControllerUtil();

$offset = $utility->getListOffset();
$uconfig = $utility->getUserConfig($login);
$limit = $uconfig->getListMax();

$sort = @$G_INPUT['sort'];
$order_column = $utility->getListOrderColumn($sort, 'ctd');
$t->assign('sort', $order_column['param']);
$module_id = null;
if (strlen($selected) > 0) {
    if (array_key_exists($selected, $supported_apps)) {
        $module_id = $supported_apps[$selected];
    } else {
        cb_throw_error(E_GRN_STAR_INVALID_MODULE_ID);
    }
}

$t->assign('app_id', @$G_INPUT['app_id']);

require_once('star/logic.csp');
$logic = GRN_Star_StarLogic::getInstance();
$star_data = $logic->getList($login, $module_id, $offset, $limit + 1,
    $order_column['column'], $order_column['order'], null, null);


$isExistsNextPage = count($star_data) > $limit;
if ($isExistsNextPage) {
    array_pop($star_data);
}

$t->assign('star_list', $star_data);

$navi_info_for_view = $utility->makeSimpleNaviInformation($offset, $limit,
    count($star_data), $isExistsNextPage,
    ['app_id' => @$G_INPUT['app_id'], 'sf' => 1]);
if ($sort) {
    $navi_info_for_view['navi']['params']['sort'] = $sort;
}

$t->assign('navi_info', $navi_info_for_view);

/** @var GRN_Star_Application $star_app */
$star_app = $app_locator->getInstance(GRN_STAR_APPLICATION_ID);
$page_title
    = grn_get_current_page_display_name(['application_name' => $star_app->getDefaultName()]);
$t->assign('page_title', $page_title);

//--- delete info ---
$delete_multi_info = [
    'title'        => grn_get_page_display_name('star/delete_multi'),
    'page'         => 'star/delete_multi.tpl',
    'data'         => [
        'appid'    => @$G_INPUT['app_id'],
        'category' => array_key_exists(@$G_INPUT['app_id'], $menus)
            ? $menus[@$G_INPUT['app_id']]['title'] : null
    ],
    'handler'      => ['btn_delete_multi1', 'btn_delete_multi2'],
    'multi_target' => 'star[]',
    'form_target'  => 'star/index',
];
$t->assign('delete_multi_info', $delete_multi_info);
//--- delete info ---

$t->assign('subject_with', $uconfig->getSubjectWidth());
$t->assign('truncate_width', $uconfig->getTruncateWidth());
$t->display(cb_get_pagename() . '.tpl');
