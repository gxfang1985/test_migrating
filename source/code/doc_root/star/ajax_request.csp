<?php

use grn\grn\access\service\AppAccess;

global $G_container_base;
$uum = $G_container_base->getInstance('uum');
$user = $uum->getLoginUser();

global $G_INPUT;
$module_id = '';
if (array_key_exists('module', $G_INPUT)) {
    $module_id = $G_INPUT['module'];
    unset($G_INPUT['module']);
}
$cmd = '';
if (array_key_exists('cmd', $G_INPUT)) {
    $cmd = $G_INPUT['cmd'];
    unset($G_INPUT['cmd']);
}

// status   0: star off     1: star on
$status = 0;

$app_locator = GRN_ApplicationLocator::instance();
/** @var GRN_Star_Application $star_app */
$star_app = $app_locator->getInstance(GRN_STAR_APPLICATION_ID);
$application_map =& $star_app->getSupportedApplications();
unset($star_app);
if (($app_id = array_search($module_id, $application_map)) !== false) {
    $app = $app_locator->getInstance($app_id);
    if ( ! $app) {
        cb_throw_error(E_GRN_APPLICATION_NOT_ACTIVE);
    } else {
        AppAccess::checkAccess($app_id, $user->getOID());
        if ( ! method_exists($app, 'getStarData')) {
            cb_throw_error(E_GRN_STAR_INVALID_MODULE_ID); // specified application don't support star.
        }
    }
    require_once('star/logic.csp');
    $logic = GRN_Star_StarLogic::getInstance();

    switch ($cmd) {
        case 'set':
            $data = $app->getStarData($user, $G_INPUT);
            if ( ! $logic->isMarked($user, $module_id, $data->getUniqueId())) {
                $logic->add($user, $data);
            }
            $status = 1;
            break;
        case 'unset':
            $data = $app->getStarData($user, $G_INPUT);
            $logic->remove($user, $module_id, $data->getUniqueId());
            $status = 0;
            break;
        default:
            assert('FALSE');
            break;
    }
} else {
    require_once('star/error_code.csp');
    cb_throw_error(E_GRN_STAR_INVALID_MODULE_ID);
}
$aJson = ["status" => $status];
echo json_encode($aJson,
    JSON_HEX_QUOT | JSON_HEX_TAG | JSON_HEX_AMP | JSON_HEX_APOS);
cb_safe_exit();
