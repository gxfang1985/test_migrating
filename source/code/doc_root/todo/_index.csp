<?php

use grn\grn\access\service\AppAccess;

global $G_INPUT;

require_once('grn/application.csp');
$locator = GRN_ApplicationLocator::instance();
$app = $locator->getInstance('todo');

global $G_container_app;
$uum = $G_container_app->getInstance('uum');
$login = $uum->getLoginUser();

require_once('todo/controller.csp');
$utility = new GRN_ToDo_ControllerUtil();

require_once('grn/ui.csp');
$uicm = GRN_UIConfigManager::getInstance();
$uic = $uicm->getUserConfig($login);


// カテゴリ
$categories = $app->listCategories($login);

$categories_for_view = [];

foreach (array_keys($categories) as $id) {
    $categories_for_view[] = [
        'cid'   => $id,
        'title' => $categories[$id]->get('title')
    ];
}

$t->assign('categories', ['category' => $categories_for_view]);

// 選択カテゴリ
if (($category_id = @ $G_INPUT['cid'])) {
    if (($category =& $app->getCategory($login, $category_id))) {
        $category_for_view = [
            'cid'   => $category_id,
            'title' => $category->get('title')
        ];
        $t->assign('category', $category_for_view);
    }
}
$t->assign('category_id', $category_id);


require_once('todo/list.csp');

$list = new GRN_ToDo_UserList($login);

// ToDo一覧

$offset = $utility->getListOffset();

if ( ! @ $history) {
    $order_column = $utility->getListOrderColumn();

    $t->assign('sort', $order_column['param']);

    if ($order_column['column'] == 'expiration') {
        $list->addSortColumn('limited', $order_column['order'] ? false : true);
        $list->addSortColumn($order_column['column'], $order_column['order']);

    } else {
        $list->addSortColumn($order_column['column'], $order_column['order']);

        $list->addSortColumn('limited', $order_column['order']);
        $list->addSortColumn('expiration',
            $order_column['order'] ? false : true);
    }

    $list->setFinish(false);
} else {
    $list->setOffset($offset);
    $list->setLimit($uic->getListMax());
    $list->addSortColumn('finish', true);
    $list->setFinish(true);
}

//--- k.niizeki add　
require_once('fw/date.csp');

$today = new CB_TimeStampEx();

$dt = $today->getDateTime();
$dt->hour = 0;
$dt->minute = 0;
$dt->second = 0;
$today->setDateTime($dt);

$dt = $today->getDateTime();
$dt->moveDays(-1);
$yesterday = new CB_TimeStampEx();
$yesterday->setDateTime($dt);
//--- k.niizeki add end

$list->setCategory($category_id);

$todo_for_view = [];

while ( ! is_null(($row = $list->iterate()))) {
    //--- k.niizeki add
    $alert = 0;

    //if( ($expiration = $todo->get('expiration')) )
    if (($expiration = $row->get('expiration'))) {
        if ($yesterday->compare($expiration) >= 0) {
            $alert = 2;
        } elseif ($today->compare($expiration) >= 0) {
            $alert = 1;
        }
    }
    //--- k.niizeki add end

    $todo_for_view[$row->getOID()] = $utility->getToDoView($row);
    $todo_for_view[$row->getOID()]['alert'] = $alert;
}

$todo_list_for_view = $utility->makeNaviInformation($offset,
    $uic->getListMax(), $list->count());
$todo_list_for_view['todo'] = $todo_for_view;

$t->assign('todo_list', $todo_list_for_view);
$t->assign('config', $utility->getConfigValues($login));
$t->assign('isActiveSharedTodo', AppAccess::isAppAvailable('space'));

// サイトポジション
$utility->setSitePosition($t, null);

