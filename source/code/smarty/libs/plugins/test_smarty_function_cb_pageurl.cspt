<?php
/**
 * @author HATA,Shinya
 * @date   2004/3/31
 *
 *  Smarty関数の {cb_pageurl} は内部でPHP関数の cb_pageurl() を呼んでいるので、
 *  本テストケースでは、正確に cb_pageurl() を呼べているかどうかをチェックする
 *  引数をいろいろ代えてみての cb_pageurl() 自体のテストについては
 *  cb_pageurl() のテストケースに任せる
 */
require_once 'developer/azunit.csp';
require_once 'developer/test_resource.csp';
require_once 'fw/smarty_bridge.csp';
require_once 'plugins/function.cb_pageurl.php';

/**
 *  smarty_function_cb_pageurl($params, & $smarty)
 */
class test_smarty_function_cb_pageurl extends CB_TestCase
{
    var $_smarty = null;

    function test_smarty_function_cb_pageurl($test_method)
    {
        parent::CB_TestCase($test_method);

        $this->_smarty = new CB_Smarty;
    }

    function test()
    {
        $params = ['page' => 'hoge'];
        $actual = smarty_function_cb_pageurl($params, $this->_smarty);
        $expect = cb_pageurl('hoge');
        $this->assertStringEquals($expect, $actual);
    }

    /*function testNoPage()
    {
        $this->expectError(E_SMARTY_USER_WARNING);
        $params = array();
        $actual = smarty_function_cb_pageurl($params, $this->_smarty);
    }*/

    function testEmptyPage()
    {
        $params = ['page' => ''];
        $actual = smarty_function_cb_pageurl($params, $this->_smarty);
        $expect = cb_pageurl('');
        $this->assertStringEquals($expect, $actual);
    }

    function testFragment()
    {
        $params = ['page' => 'hoge', 'fragment' => 'fuga'];
        $actual = smarty_function_cb_pageurl($params, $this->_smarty);
        $expect = cb_pageurl('hoge', null, 'fuga');
        $this->assertStringEquals($expect, $actual);
    }

    function testPostfix()
    {
        $params = ['page' => 'hoge', 'postfix' => 'hoge.txt'];
        $actual = smarty_function_cb_pageurl($params, $this->_smarty);
        $expect = cb_pageurl('hoge', null, null, 'hoge.txt');
        $this->assertStringEquals($expect, $actual);
    }

    function testFragment_Postfix()
    {
        $params = [
            'page'     => 'hoge',
            'fragment' => 'fuga',
            'postfix'  => 'hoge.txt'
        ];
        $actual = smarty_function_cb_pageurl($params, $this->_smarty);
        $expect = cb_pageurl('hoge', null, 'fuga', 'hoge.txt');
        $this->assertStringEquals($expect, $actual);
    }

    function testVar()
    {
        $params = [
            'page' => 'hoge',
            'arg1' => CB_TEST_ARG1,
            'arg2' => CB_TEST_ARG2
        ];
        $actual = smarty_function_cb_pageurl($params, $this->_smarty);
        $pageurl_params = ['arg1' => CB_TEST_ARG1, 'arg2' => CB_TEST_ARG2];
        $expect = cb_pageurl('hoge', $pageurl_params);
        $this->assertStringEquals($expect, $actual);
    }

    function testAll()
    {
        $params = [
            'page'     => 'hoge',
            'fragment' => 'fuga',
            'postfix'  => 'hoge.txt',
            'arg1'     => CB_TEST_ARG1,
            'arg2'     => CB_TEST_ARG2
        ];
        $actual = smarty_function_cb_pageurl($params, $this->_smarty);
        $pageurl_params = ['arg1' => CB_TEST_ARG1, 'arg2' => CB_TEST_ARG2];
        $expect = cb_pageurl('hoge', $pageurl_params, 'fuga',
            'hoge.txt');
        $this->assertStringEquals($expect, $actual);
    }
}

cb_test_run();

?>
