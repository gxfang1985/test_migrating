<?php
/**
 * @author HATA,Shinya
 */
require_once 'developer/azunit.csp';
require_once 'fw/smarty_bridge.csp';
require_once 'fw/i18n.csp';
require_once 'plugins/function.cb_msg.php';

/**
 *  smarty_function_cb_msg($params, & $smarty)
 */
class test_smarty_function_cb_msg extends CB_TestCase
{
    var $_smarty = null;

    function test_smarty_function_cb_msg($test_method)
    {
        parent::CB_TestCase($test_method);

        $this->_smarty = new CB_Smarty;
    }

    function test_NoParams()
    {
        $i18n = CB_I18N::getInstance();
        $i18n->setCurrentLocale('en');
        $this->expectError(E_SMARTY_USER_WARNING);
        $params = [];
        smarty_function_cb_msg($params, $this->_smarty);
    }

    function test_NoModule()
    {
        $i18n = CB_I18N::getInstance();
        $i18n->setCurrentLocale('en');
        $this->expectError(E_SMARTY_USER_WARNING);
        $params = ['key' => 'caption'];
        smarty_function_cb_msg($params, $this->_smarty);
    }

    function test_NoKey()
    {
        $i18n = CB_I18N::getInstance();
        $i18n->setCurrentLocale('en');
        $this->expectError(E_SMARTY_USER_WARNING);
        $params = ['module' => 'developer.test'];
        smarty_function_cb_msg($params, $this->_smarty);
    }

    function test_Normal()
    {
        $i18n = CB_I18N::getInstance();
        $i18n->setCurrentLocale('en');
        $params = ['module' => 'developer.test', 'key' => 'caption'];
        $actual = smarty_function_cb_msg($params, $this->_smarty);
        $expect = cb_msg('developer.test', 'caption');
        $this->assertStringEquals($expect, $actual);
    }

    function test_ParamsIndirect()
    {
        $i18n = CB_I18N::getInstance();
        $i18n->setCurrentLocale('en');
        $args = [
            'arg1' => 'arg <>&"',
            'arg2' => 'caption',
            'arg3' => '!#$%()=~|-^@`[{;+:*]},./?_\\'
        ];
        $params = [
            'module' => 'developer.test',
            'key'    => 'args',
            'params' => $args
        ];
        $actual = smarty_function_cb_msg($params, $this->_smarty);
        $expect = cb_msg('developer.test', 'args', $args);
        $this->assertStringEquals($expect, $actual);
    }

    function test_ParamsDirect()
    {
        $i18n = CB_I18N::getInstance();
        $i18n->setCurrentLocale('en');
        $params = [
            'module' => 'developer.test',
            'key'    => 'args',
            'arg1'   => 'arg <>&"',
            'arg2'   => 'caption',
            'arg3'   => '!#$%()=~|-^@`[{;+:*]},./?_\\'
        ];
        $actual = smarty_function_cb_msg($params, $this->_smarty);
        unset($params['module']);
        unset($params['key']);
        $expect = cb_msg('developer.test', 'args', $params);
        $this->assertStringEquals($expect, $actual);
    }
}

cb_test_run();

?>
