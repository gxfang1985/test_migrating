[[概要|section:abstract]]
UNIX のビルドシステムでは、自己解凍形式のインストーラーとビルドした製品開発用アーカイブ(''barebone'') の一部(ビルドしたOS用のもの)を作成する。処理内容は GNU make の Makefile により記述されている。

UNIX のビルドシステムではほぼ完全なブートストラップを実現しており、MySQL と PHP4 のスクラッチビルドから始まり、PEAR の取得からインストーラーと barebone の作成まで自動化されている。

[[構成|section:structure]]
[[必要な準備|head:]]
以下のツール類を事前に準備しておく必要がある。
[[html]]
<table border="1">
<tr>
 <td nowrap>GNU make</td>
 <td>
 ビルドシステムは GNU make を必須とする Makefile で記述されている。
 Linux の make は標準で GNU make だが、FreeBSD や Solaris では自力でインストールしておく必要がある。
 </td>
</tr>
<tr>
 <td nowrap>GNU sed</td>
 <td>
 Solaris 標準の sed ではうまく動作しなかった(記憶がある)。もしかしたら不要かも。FreeBSD の sed は大丈夫な様子。
 </td>
</tr>
<tr>
 <td nowrap>ZIP/UNZIP</td>
 <td>
 [[InfoZIP|http://www.info-zip.org/pub/infozip/]] の配布している zip/unzip ユーティリティがビルド作業で必要となる。
 Windows とアーカイブ形式を統一するのに、tar よりも ZIP が適切と判断したため。
 </td>
</tr>
<tr>
 <td nowrap>C/C++ コンパイラ</td>
 <td>
 ビルドスクリプトは各 OS で適切なコンパイラを選択するようになっている。
 gcc を使用する場合、現在動作確認しているのは 3.3.X 系列である。Solaris では Workshop Compiler を使用する。
 </td>
</tr>
</table>
[[/html]]

[[ビルドスクリプト|head:]]
以下の Makefile 群がビルドスクリプトとして機能する。ファイルのパス名は、''azalea_unix'' ディレクトリからの相対パスで表示している。

[[html]]
<table border="1">
<tr>
 <td nowrap>installer/Makefile</td>
 <td>
 ビルドフローを統括するマスタースクリプト。
 </td>
</tr>
<tr>
 <td nowrap>installer/config.make</td>
 <td>
 ツール類のバージョンやビルド中のデプロイメント、OS 毎に異なる設定などを行う。
 </td>
</tr>
<tr>
 <td nowrap>installer/doc_makefile</td>
 <td>
 アゼリア API ドキュメントを PhpDocumentor を使用して生成するスクリプト。
 azalea.corp.cybozu.co.jp でしか動作しないため、本体のビルドスクリプトと分けている。
 </td>
</tr>
<tr>
 <td nowrap>installer/azalea_makefile</td>
 <td>
 installer/Makefileからコールされるazaleaインストーラー作成用makefile
 </td>
</tr>
<tr>
 <td nowrap>installer/idk_makefile</td>
 <td>
 barebone にマスター Makefile としてコピーされる。
 </td>
</tr>
<tr>
 <td nowrap>mysql-X.X.X/cb_makefile</td>
 <td>
 MySQL をビルド、(一時的に)インストール、サイボウズ用にディレクトリ構成などを変更するスクリプト。
 </td>
</tr>
<tr>
 <td nowrap>php-X.X.X/cb_makefile</td>
 <td>
 PHP をビルド、(一時的に)インストール、サイボウズ用にディレクトリ構成を変更、PEAR のダウンロードとセットアップなどを行うスクリプト。
 </td>
</tr>
</table>
[[/html]]

[[ビルドフロー|section:flow]]
"''installer/Makefile''" 中に記述された通りにビルド処理は進むが、下記にコメントをつけて示す。正確な処理内容は Makefile を参照せよ。

#"portscan" ユーティリティをビルドする
#MySQL をビルドして "''/usr/local/cybozu/mysql-4.X''" にインストールする。
#インストールした MySQL を製品インストール用に変更する。具体的には、(1)初期データの配置、(2)不要なファイルの削除、(3)"''mysqld_safe''" スクリプト中で設定ファイル "''my.ini''" を明示的に使用させる、など。
#PHP4 をビルドして、"''/usr/local/cybozu/php-4.X''" にインストールする。
#"/usr/local/cybozu/php-4.X/bin/''pear''" スクリプトにインストールパスを埋め込む。後程インストーラー用に "''%PROGRAM_FILES%''" パラメータに置換するため。
#インストールした "pear" コマンドを用いて、PHP SDK 用の PEAR パッケージをダウンロード・インストールする。
#PEAR パッケージをインストールしたディレクトリの ZIP アーカイブを作成する。この ZIP アーカイブはビルドフローの副産物で、フレームワークプロジェクトが適当な日付の PEAR パッケージのスナップショットを SDK にインポートするために使用される。
#自己解凍後のインストーラーイメージを "''install''" サブディレクトリ以下に作成する。この際インストールした MySQL や PHP の各種スクリプト中の "''/usr/local/cybozu''" パスを、"''%PROGRAM_FILES%''" パラメータに置換する。また、"''mysqld_safe''" スクリプト中の mysqld 実行ユーザー名は "''%HTTPD_USER%''" パラメータに置換する。
#"''install''" サブディレクトリを tar ＆ gzip (もしくは compress) コマンドでアーカイブし、ヘッダスクリプトと連結して自己解凍インストーラーを作成する。
#barebone用のディレクトリを作成し、必要なファイルをコピーする。
#barebone用ディレクトリにコピーした ファイルで製品には不要なものを削除する。具体的には、"''mysql''" 等の開発用ツール、各種ライブラリとインクルードファイル、デモやサンプル、など。
#barebone用ディレクトリを tar で固める。

[[MySQL|section:mysql]]
MySQL は PHP4 とリンクさせるため、PHP4 より先にビルドする必要がある。UNIX では元々 MySQL が備えている "''configure''" スクリプトを利用してビルドするが、生成された Makefile のうち、アセンブリをコンパイルするルールを Solaris の Workshop Compiler を使用するために書換える処理をしている。

UNIX版の MySQL ではサーバーの起動に "''mysqld_safe''" というスクリプトを利用する。サイボウズ専用のデプロイメントを適用するため、ビルド過程でこのスクリプトを変更し、設定ファイルである "''my.ini''" や起動ユーザーなどをパラメータ化している。

[[PHP4|section:php]]
PHP4 の処理で最も手間がかかっているのが、PEAR パッケージをインストーラー用に変更する個所である。"''PEAR/Config.php''" の中を見れば分かる通り、PEAR の各種デプロイメント情報は環境変数として渡っている。そのため、"''php-4.X.X/pear/scripts/pear.sh''" スクリプトを CVS 上で書換えて、"''PHP_PEAR_DATA_DIR''" 等の環境変数をビルド中に適切にパラメータ化できるようにしている。
