[[概要|section:abstraction]]
アゼリアには、PHP実行環境と、PHPで記述されたアプリケーションコード、MySQLが同梱されています。
また、インストールの際にはApache等のWebサーバアプリケーションがインストール済みであることが、
前提になっています。

すなわち、アゼリアはインストール時点では、1つのサーバ機が、
''Webサーバ''、''アプリケーションサーバ''、''DBサーバ''
の3つの機能を兼ねるよう設定されています。

しかしアゼリアは、大規模なシステムを構築する際などには、これらの機能を別々のサーバ機に分離させたり、
それぞれの機能を多重化したりすることによって、スケーラブルな性能向上が得られるように工夫されてもいます。

現在、アゼリアで動作が確認されている構成は、以下のパターンです。

#単体構成(Webサーバ&アプリケーションサーバ&DBサーバ × 1)
#DBサーバ分離構成(Webサーバ&アプリケーションサーバ × 1、DBサーバ × 1)
#Webサーバ多重構成(Webサーバ&アプリケーションサーバ × 1 〜 10、DBサーバ × 1)

これらの構成の実現方法について、次項より説明を行っていきます。

[[DBサーバの分離|section:dividing_dbserver]]
DBサーバの分離は以下の手順で行います。サーバ機AでWebサーバ&アプリケーションサーバを、
サーバ機BでDBサーバを動作させるものとします。

1.サーバ機A,Bにアゼリアをインストールします。このとき、両サーバ機のインストールプレフィックス(cf.'cbfw')きちんと覚えておくようにして下さい。

2.サーバ機AのDBサーバ(MySQL)とサーバ機BのWebサーバを停止させます。

3.サーバ機BのDB設定を確認します。サーバ機Bの
[[html]]
<a href="dev_doc?item=ext%2Fdeployment#structure">my.ini</a>
[[/html]]
を開き、ポート番号を確認して下さい。
[[src]]
\# Cybozu Database Engine configuration file.
\# This is for large system with memory 128M-256M where the system
\# runs mainly MySQL.

[client]
port				= 3770
socket				= C:/Program Files/Cybozu/mysql-4.1/data/mysql.sock

[mysqld]
''port				= 3770''
socket				= C:/Program Files/Cybozu/mysql-4.1/data/mysql.sock
[[/src]]

3.サーバ機AのDB接続先設定を、サーバ機Bのものに変更します。サーバ機Aの[[lwc.ini|doc:dev/base/lwc]]
を開き、データベース接続先をlocalhostのものからサーバ機Bのものへ変更します。

prop:_hostプロパティに、'(ホスト名):(ポート番号)'、あるいは'(IPアドレス):(ポート番号)'の形式でサーバ機Bの情報を指定します。

prop:_dbnameプロパティに、サーバ機Bのインストールプレフィックスを指定します。(AとBでプレフィックスが同じならば変更する必要はありません。)

[[src]]
[dbconn_audit]
class                   = CB_DatabaseConnection
require                 = fw/database.csp
prop:_host              = ''val:localhost''
prop:_dbname            = ''val:cbfw''
;prop:_logfile          = val:C:\cygwin\home\Administrator\cgi-bin\cbfw/query_audit.log

[dbconn]
class                   = CB_DatabaseConnection
require                 = fw/database.csp
prop:_host              = ''val:localhost''
prop:_dbname            = ''val:cbfw''
;prop:_logfile          = val:C:\cygwin\home\Administrator\cgi-bin\cbfw/query.log
[[/src]]

↓

[[src]]
[dbconn_audit]
class                   = CB_DatabaseConnection
require                 = fw/database.csp
prop:_host              = ''val:10.0.0.177:3770''
prop:_dbname            = ''val:cbfw2''
;prop:_logfile          = val:C:\cygwin\home\Administrator\cgi-bin\cbfw/query_audit.log

[dbconn]
class                   = CB_DatabaseConnection
require                 = fw/database.csp
prop:_host              = ''val:10.0.0.177:3770''
prop:_dbname            = ''val:cbfw2''
;prop:_logfile          = val:C:\cygwin\home\Administrator\cgi-bin\cbfw/query.log
[[/src]]

4.アゼリアトップページの「再初期化」にて再初期化を行います。
 これに関しては、片方のみで実行すればかまいません。アゼリアは初期化が終了すると、ローカルの[[common.ini|doc:ext/config/common]]
に初期化済みフラグを立てるので、手作業でそれを設定してもかまいません。

[[Webサーバの多重化|section:multiplexing_webserver]]
アゼリアを用いたシステムでは、Web&アプリケーションサーバの負荷がボトルネックになりがちであり、
これを多重化し負荷を分散させることは、とても有用です。

アゼリアでWeb&アプリケーションサーバを多重化させる際には、以下の項目を全て解決する必要があります。

1.DBリソースの共有

接続するDBを一つの共有のDBに変更する必要があります。

2.CB_ServerFileリソースの共有

アゼリアには、CB_ServerFileクラスというファイルリソースを永続化するためのAPIがありますが、
このAPIは、デフォルトの設定では、ローカルのファイルシステムを使って永続化を行います。
このリソースを共有するために、永続先を一つの共有のネットワークファイルシステムに変更してください。

3.セッションパーシステンス（セッションの同一性保証）

アゼリアは、デフォルトの設定では、ローカルのファイルシステムを使ってセッションデータの管理を行います。
よって、リクエストをラウンドロビンで振り分ける、すなわち、
HTTPリクエストが多重化されたWebサーバのどれに振り分けられても良いようにするためには、
セッションデータの保管先を1.で共有化したDBに変更する必要があります。
セッションデータの共有方法は他にもいくつか方法がありますが、アゼリア標準ではDBに保存することを推奨しています。
（他にはファイルと同様にNFSを使って共有する方法やL7スイッチを使う方法もあります。)

以上の項目を解決するための手順を以下に示します。

[[1.DBリソースの共有|head:]]
[[DBサーバの分離|doc:operation/multiserver#dividing_dbserver]]にならって、
接続先を共有のDBに変更して下さい。

[[2.CB_ServerFileリソースの共有|head:]]
共有のファイルシステムを利用してアップロードされたファイルの共有を行います。

Web&アプリケーションサーバ機のcommon.iniを開き、
[Files]のdirプロパティを、マウントされたNFSのパス、
あるいはWindowsの場合はリモートファイルパスを指定します。

Windowsの場合
[[src]]
[Files]
''dir = "C:/Program Files/Cybozu/mysql-4.1/files/cbfw"''
[[/src]]

↓

[[src]]
[Files]
''dir = "//127.0.0.1/share"''
[[/src]]

[[3.セッションパーシステンス（セッションの同一性保証）|head:]]
以下のa.もしくはb.のどちらかを選択して下さい。

[[a.セッションデータの管理をDBに変更する|head:]]
1.Web&アプリケーションサーバ機のcommon.iniを開き、server_idプロパティに、
Webサーバ毎に固有なID文字列を指定します。

[[src]]
[Session]
check_hijack = "0"
cookie_lifetime = "0"
cookie_path = "/"
file_lifetime = "1"
save_path = "C:\\Program Files\\Cybozu/mysql-4.1/sessiondata/cbfw"

[[/src]]

↓

[[src]]
[Session]
check_hijack = "0"
cookie_lifetime = "0"
cookie_path = "/"
file_lifetime = "1"
save_path = "C:\\Program Files\\Cybozu/mysql-4.1/sessiondata/cbfw"
''server_id = "host1"''
[[/src]]

この変更により、セッションIDの先頭にserver_idで指定された文字列がを埋め込まれるようになります。
これは、複数のWebサーバで重複するセッションIDが作成されるのを防止するため行います。

2.Web&アプリケーションサーバ機のphp.iniを開き、session.save_handlerプロパティの値を
'files'から'user'に変更します。

[[src]]
[Session]
; Handler used to store/retrieve data.
;; Framework
;; Set this to "user" to store session data into database.
session.save_handler = ''files''
[[/src]]

↓

[[src]]
[Session]
; Handler used to store/retrieve data.
;; Framework
;; Set this to "user" to store session data into database.
session.save_handler = ''user''
[[/src]]

この変更により、セッションデータの保管先はファイルシステムからDBに切り替わりますので、
上の1.により、DBが共有されていれば、複数のWebサーバで生成されたセッションデータを共有できます。

[[b.ロードバランサのL7スイッチを使う|head:]]
まず、上の1.を実施し、セッションIDにserver_idを埋め込むように設定します。
次にロードバランサの設定を行います。

PCブラウザからのアクセスの場合、セッションIDはHTTP Cookieを使ってリクエストに付加されます。
''CBSESSID''クッキー変数の値に含まれているserver_idを使用して、
そのserver_idを持つサーバに振り分けるよう設定して下さい。

携帯電話等のブラウザからのアクセスの場合、セッションIDはリクエストURLを使ってリクエストに付加されます。
URLパス中に含まれているserver_idを使用して、そのserver_idを持つサーバに振り分けるよう設定して下さい。
