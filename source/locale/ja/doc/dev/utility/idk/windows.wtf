[[構成|section:deploy]]
構成としては製品開発用アーカイブの [[ファイル構成|doc:dev/utility/product_archive#deploy]] を参照してください。
 尚、windows版IDKは基盤として ''DevStudio9'' を使用しています。

具体的には、以下の部分がIDKにあたる部分です。
[[src]]
((\(製品開発用アーカイブ TOP\)))
   .....
   |
   +-- ''win''
         +--build.xml
         +--build.properties
         +--''license''
         +--''util''
         +--''install''
[[/src]]

*ビルドスクリプト(build.xml, build.properties)
*ライセンス(''license'')
 (インストール時に聞かれるライセンス条項）
*ユーテリティ(''util'')
 (各製品でDLLを作ることはあまり推奨しません。汎用的な処理にしてフレームワークに取り込みます。)
*DevStudioプロジェクトそのもの(''install'')
 (これには、azaleaと同等のカスタマイズ可能なデフォルトのインストールスクリプト、及び[[API|doc:dev/utility/idk/windows/api]] 、[[リソース|doc:dev/utility/idk/windows/resource]] を含みます)

[[使い方|section:use]]
IDKは製品開発用アーカイブの一部ですので、[[製品開発用アーカイブ|doc:dev/utility/product_archive#installer_developer]]
の方で具体的な手順を説明しますので参照してください。

極力プロジェクトファイルを操作しなくてもいいようにしてありますが、インストーラーがある程度完成するまでは、IDEを利用してプロジェクトの開発をすることもあるはずです。その際の手順を説明します。

#環境変数 「''EXPORTCVS''」をCVSからチェックアウトした位置に設定する。
 (DevStudioのプロジェクトは主にファイルパスを絶対パスとして覚えますが、IDKではそれを可変にするためすべて、''EXPORTCVS'' を使用してすべてパラメータ化しています。)
#''win/install/idk.ipr'' を使い、DevStudio上で開発を行う。