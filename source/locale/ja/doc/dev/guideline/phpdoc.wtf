[[概要|section:abstract]]

ソースドキュメンテーションとは、
ソースコード中にコメントの形式で関数やクラスの使用方法を記述することである。
通常のコメントとしてももちろん有用だが、
特定の形式に従うことで API 等の仕様書をツールを使用して自動生成することが可能となる。

ソースドキュメンテーションは、
特に Java の開発環境（JDK）に標準ツールとして提供されたことから広く使われるようになった。
そのツール ''javadoc'' は C スタイルのコメント中に特殊なタグと HTML で、
直後のコード（クラス定義やメソッド定義）を説明する使用になっており、
その後登場した数多くのソースドキュメンテーションツールは多かれ少かれ類似した仕様を持つようになった。

[[src]]
/**
 * このクラスは何とかをほげします.
 *
 * 重要なのは {{<b>}}絶対に動作しない{{</b>}} ことです.
 *
 * **@author**  Yamamoto, Hirotaka  2003/09
 * **@version** 1.0
 */
public class Foo
{
    ...
}
[[/src]]

上が javadoc 形式で記述したコメントの例である。
{{緑色}}に表示されているように、コメント中に HTML タグを埋め込むことが可能である。
このことはつまり、''<'' や ''>'' はそれぞれ &lt; と &gt; として記述する必要があることを意味する。

**赤く**表示されているのが javadoc のタグと呼ばれるもので、様々な情報を提供する。
''@author'' であれば作成者、
''@param'' であれば引数についての情報といったようになる。

[[PhpDocumentor|section:phpdocumentor]]

PHP にも、javadoc ライクなソースドキュメンテーションツールが多数ある。
その中でも最近機能の豊富さから代表的なものとなってきたのが、
[[PhpDocumentor|http://phpdocu.sourceforge.net/]] というツールである。

PhpDocumentor は PEAR に含まれており、SDK であるアゼリアにも標準的に添付されている。
だがコマンドライン用の ''phpdoc'' コマンドは、
現在 PHP SDK を提供している UNIX でしか利用できない。

PhpDocumentor は多彩な整形オプションを提供しているが、
実はその多くは多言語対応していない。
以下では簡易に PhpDocumentor の使用方法を解説している。
詳細については英語で、
しかも読みにくい[[チュートリアル|http://phpdoc.org/docs/HTMLSmartyConverter/default/phpDocumentor/tutorial_phpDocumentor.howto.pkg.html]]を参照せよ。

[[Javadoc との違い|section:diff]]

PhpDocumentor は基本的には Javadoc 同様の文法を持つ。
だが Java と PHP の言語機能の違いにより、下記に挙げるような差異がある。

*PHP は動的な型システムを持つので、
''@param'' や ''@return'' といったタグで型を指定する必要がある。
*PHP には関数や定数があるので、これらにもドキュメントを記述できる。
*PHP4 のクラスにはアクセス指示子(protected, private)などがないため、
これらを ''@private'' といったタグで指示する。
*ドキュメントから短い説明を取り出す仕様が異なる。
Java では最初のピリオド（ . ）までだが、
PhpDocumentor では**最初のピリオドもしくは空行まで**である。
すなわち、以下では「最初の行」が短い説明となる。
[[src]]
/**
 * 最初の行
 *
 * その後の説明を延々と続けてみる. こんな感じに.
 */
[[/src]]

例としては、以下のようになる。
[[ドキュメントを記述できる要素|http://phpdoc.org/docs/HTMLSmartyConverter/default/phpDocumentor/tutorial_elements.pkg.html#procedural.define]]、
および[[PhpDocumentor のタグ一覧|http://phpdoc.org/docs/HTMLSmartyConverter/default/phpDocumentor/tutorial_tags.pkg.html]]についてはチュートリアルで解説されている。

[[src]]
/**
 * 定数にもドキュメントをつけられる.
 */
define( 'CB_FOO', 10 );

/**
 * 関数にもドキュメントをつけられる.
 *
 * ''@param''  string  $arg1  引数1、文字列
 * ''@param''  integer $arg2  引数2、整数
 * ''@return'' CB_Bar|FALSE   返り値は混合型.  CB_Bar クラスか、FALSE.
 */
function cb_foo( $arg1, $arg2 )
{
    ...;
}

class CB_Bar
{
    /**
     * 状態を保持するクラスプロパティ.  これも型を指定可能.
     * ''@var'' integer
     */
    var $status = 0;
}
[[/src]]

[[使用例|section:sample]]

[[グローバル設定ファイルの編集|head:]]

まず phpdoc の設定を、以下のように変更する必要がある。
編集する対象ファイルは、標準では
''/usr/local/cybozu/php-4.3/lib/php/data/PhpDocumentor/phpDocumentor.ini''
としてインストールされている。

#''[_phpDocumentor_phpfile_exts]'' セクションに、"''csp''" を追加する。
アゼリアでは ".csp" を PHP スクリプトの拡張子としているため。
#''[_phpDocumentor_tags_allowed]'' セクションから、"''filesource''" と、
もしあれば "''source''" を削除する。ソースコード漏曳を防止するため。
#''[_phpDocumentor_inline_doc_tags_allowed]'' セクションから "''source''" を削除する。
ソースコード漏曳を防止するため。

[[テンプレートファイルの編集|head:]]

生成した HTML の文字コードを指定するメタタグを挿入しておく。
標準のインストールでは、
''/usr/local/cybozu/php-4.3/lib/php/data/PhpDocumentor/phpDocumentor/Converters'' 以下の、
''HTML/((*))/templates/((*))/templates/header.tpl''
がヘッダとして挿入されるので、
このファイルを編集して下記のようなメタタグを持つようにする。

[[src]]
<!-- スクリプトエンコーディングの UTF-8 に合わせて変更 -->
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<!-- Web サーバーが Apache の時は、httpd.conf 中の AddDefaultCharset
指定も Off にせよ -->
[[/src]]

（実際のファイルとしては、例えば ''HTML:Smarty:PHP'' をコマンドラインの ''-o'' オプションで指定するのであれば、
''HTML/Smarty/templates/PHP/templates/header.tpl'' となるし、
''HTML:frames:phpedit'' を指定するのであれば、
''HTML/frames/templates/phpedit/templates/headers.tpl'' となる。）

[[コマンドラインからの起動|head:]]

PHP SDK に付属している ''phpdoc''
（標準では ''/usr/local/cybozu/php-4.3/bin/phpdoc''）コマンドを使用して、
HTML や PDF 等の各種フォーマットでドキュメントを生成できる。

詳細は[[チュートリアル|http://phpdoc.org/docs/HTMLSmartyConverter/default/phpDocumentor/tutorial_phpDocumentor.howto.pkg.html]]を参照すること。
下記に示す例では、''azalea_api'' ディレクトリにドキュメントを生成している。

[[src]]
''>'' phpdoc -d code/include -o HTML:frames:DOM/earthli -i '*demo*,*test*'
-ti "Cybozu Azalea" -t azalea_api
[[/src]]

[[ウェブインターフェース|head:]]

PhpDocumentor には標準 PHP では動作するらしい、
docbuilder や phpdoc.php, new_phpdoc.php というツールが付属しているのだが、
アゼリアの PHP では動作しない。

''pear/data/PhpDocumentor'' ディレクトリ以下に置かれているので、
もしウェブインターフェースを必要とする場合はこれらのツールの改造を試みよ。

[[Tips|section:tips]]

#''@internal'' タグや ''inline{@internal}'' といったタグを使用すると、
社内用のドキュメントと社外用のドキュメントを一つにまとめることができる。
通常はこのタグに書かれた内容はドキュメントに出力されないが、
''-pp'' オプションで phpdoc を起動すると、出力される。
#<code> ... </code> で括られた間の文字列は PHP ソースとして解釈され、
ハイライト処理などが行われる。
また <pre> ... </pre> で括られた間の改行や空白はそのまま出力される。
 **これらのタグの間には任意の文字が出現して良く、< や > も実体参照とする必要はない。**
#''@package'' タグを使用すると、関数やクラスを「パッケージ」という単位で文書化できる。
パッケージの規約はまだ厳密に決まっていないが、とりあえずフレームワークは ''framework'' パッケージとする。

[[参考資料|section:reference]]

*[[PhpDocumentor 開発元|http://phpdocu.sourceforge.net/]]
*[[チュートリアル|http://phpdoc.org/docs/HTMLSmartyConverter/default/phpDocumentor/tutorial_phpDocumentor.howto.pkg.html]]
*[[ドキュメント可能な PHP 構文|http://phpdoc.org/docs/HTMLSmartyConverter/default/phpDocumentor/tutorial_elements.pkg.html]]
*[[タグマニュアル|http://phpdoc.org/docs/HTMLSmartyConverter/default/phpDocumentor/tutorial_tags.pkg.html]]
