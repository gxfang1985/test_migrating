[[概要|section:abstract]]

この文章は全文検索エンジンに対応するためのガイドラインを提供します。


[[全文検索|section:fulltextindex]]

全文検索とは文書内のすべての文字列を、直接、検索対象とすることが可能な検索方法です。
こうした全文検索機能を提供する商用製品は数多くあり、Microsoft OfficeやPDF、一太郎などの独自フォーマットに対応した製品もあります。
全文検索エンジンは検索対象となるドキュメントの文章だけでなく、日付、作成者、タイトルなどのインデクスも作成しますので、こうした属性を対象として検索することもできます。

[[全文検索エンジンの概要|section:fulltextindex]]

全文検索エンジンといわれるシステムは、実際には様々な機能を持つプログラムの集合体です。
大きくわけると次のようになります。

*リソース収集部
*文書フィルタ部
*インデクサ
*検索エンジン部
*検索クライアント部

処理の流れを簡単に説明すると次のようになります。

''インデックス構築''
#検索対象文書を収集する
#対象文書をフィルタリングし、情報を抽出する
#抽出された情報を元に、インデクサがインデックスを作成する

''検索''
#利用者は検索クライアントを通じて検索要求を出す
#検索エンジンがインデックスを用いて検索を行う
#検索エンジンは検索クライアントに結果を返す

Microsoft OfficeやPDFのような独自フォーマットから情報を抽出する処理は、文書フィルタ部が行います。
この文書フィルタ部が対象のファイルに対応しているか否かで、全文検索できるか否かが決まります。
Microsoft IFilterに代表されるように、多くの検索エンジンが文書フィルタ部を検索エンジンとは別の対処フォーマットの専門家が開発できるようにコンポーネントとして分離しています。

[[ガイドライン|section:guideline]]

アプリケーションが全文検索エンジンに対応する場合のガイドラインを次に示します。

[[ファイル名|head:]]

全文検索の対象となるファイルのファイル名は拡張子をつけるようにしてください。多くの全文検索エンジンが、拡張子を元に文書フィルタを選択しています。拡張子がないファイルはテキストとして扱われるか、対象から除外されます。

[[アクセス権|head:]]

検索結果はアクセス権が評価されている必要があります。そこで問題になるのが、アクセス権の評価を何が行うのか、ということですが、現時点ではアプリケーションで評価してください。それは次の理由によります。

*アクセス権はアプリケーションが実装する
*全文検索エンジンにアクセス権情報を提供するインタフェースがない
*Azaleaはアクセス権に関する機能を提供しない

Microsoft Indexing ServiceやMSSeachはWindowsが提供するアクセスモデルを使って、アクセス権の制御が可能ですが、こうした機能の実現は検索対象のアクセス権に関する情報を検索エンジンに知らせるインタフェースがなければ実現できません。

[[システム構成|head:]]

アプリケーションと全文検索エンジンを同じサーバーで動かす方法と分ける方法が考えられますが、セキュリティ上の問題が起きにくいという点で同じサーバーで動作させることを勧めます。

全文検索エンジンはアプリケーションが保持する全てのファイルにアクセスすることができなければなりません。
全文検索エンジンを別サーバーで稼動させる場合、ファイル情報の通信方法を検討する必要があります。

''オープンインタフェース''

 望ましい方法ですが、検索エンジンだけでは対象となるファイルを取得できません。
 サイボウズ製品が普及することで、オープンインタフェースに対応した製品が開発される可能性はありますが、現時点では検索エンジンをサポートする手段をサイボウズ側で実装する必要があります。

''NFS,共有フォルダなどを使って直接公開する''

 OSのネットワーク機能を使って、全文検索エンジンにファイルの格納場所を知らせる方法です。容易ではありますが、公開している格納場所へのアクセスを適切に制限する必要があります。

''ロボット検索エンジン方式''

 googleに代表されるロボット検索エンジンと同じように、リンクを全てたどる方式です。この方法の場合、次の項目を検討する必要があるでしょう。
*全てのファイルにアクセスできるアカウントが必要
*検索サーバーがアプリケーションにログインできること
*ファイルを一覧にしたページを作成する場合、セキュリティホールとなる可能性がある
*全文検索エンジンにクロールする条件を設定できること

全てのユーザーに全情報を公開するアプリケーションやサイト、または公開部分のみ全文検索可能と割り切った場合はこの方式を検討してみてください。

サーバーを一つにした場合(共有サーバー)と、分けた場合(専用サーバー)の考察を次に示します。

''共有サーバー''
*全文検索エンジンの対応プラットフォームはアプリケーションサーバーと同じかそれ以上でなければならない
*専用サーバーで稼動させる場合よりも高いハードウェア性能が求められる
*インデックス構築の間はHDDアクセスが頻発するため、アプリケーションの動作に影響する
*負荷の問題から、インデックス構築の時間帯が限られる。
*1台のサーバで完結しているため、ネットワークトラヒックが発生しない。

''専用サーバー''
*全文検索エンジンの対応プラットフォームが限定されていても問題ない。
*アプリケーションサーバーの負荷が下がる。
*共有サーバーに比べて、構築に手間がかかる。
*ネットワークトラヒックが発生する。また、ネットワーク状態の影響を受ける。
*サーバーが分離するため、管理コストが高くなる。
*共有サーバーに比べて、インデックス構築の時間帯の制限は緩い。

[[検索結果の表示|head:]]

全文検索エンジンの中にはカスタマイズ可能な検索クライアントを持ち、ユーザー独自のインタフェースで検索結果を表示できるものがあります。こういったものを使った場合、検索結果の表示を全文検索エンジンに任せることができます。

''アプリケーションで結果を表示''

*独自UIを提供できる
*アクセス権やリンクを完全に制御できる
*ある程度工数が必要

''全文検索エンジンで結果を表示''

*カスタマイズに対応していれば、ある程度独自UIを提供できる
*アクセス権やリンクは全文検索エンジンに一任
*場合にもよるが、工数の削減が見込める

全文検索の結果はやはりアプリケーションが実装するべきでしょう。なぜなら、アクセス権や、対象ファイルへのリンクを作成するには、全文検索エンジンに多くの情報を与えなければならないからです。
 しかしながら、ログインを必要とせず、全情報を公開するアプリケーションや、公開部のみの全文検索機能を提供するようなアプリケーションでは結果の表示を全文検索エンジンに任せることもできるでしょう。
