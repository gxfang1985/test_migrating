[[デプロイメントとは|section:whatis]]
その名の通り、インストール直後のイメージとして、「どこに何を置くか」を記述しています。
 Azalea自身、または [[製品開発用アーカイブ|doc:dev/utility/product_archive]] を使用して作成されるアプリケーションが従うべき、配置の形式について説明します。 

尚、配置場所は完全に固定されてはいません。
お客様の環境や OS の違い、複数インストール、
カスタマイズやバージョンアップを考慮して可変な個所が存在します。
Azalea のデプロイメント仕様では、標準的な配置と可変パラメータをについて規定します。 

[[フレームワークの基本構成|section:structure]]

Azalea を使用するアプリケーションは以下のコンポーネントを標準的にインストールします。
 ( インストールの詳細に関しては、[[win版|doc:ext/installer/windows]]、[[unix版|doc:ext/installer/unix]] を参照してください。)

*''MySQL データベースエンジン''（常駐プログラム）
*''CGIプログラム''（PHPバイナリと各種スクリプト）
*''静的リソース''（画像や CSS ファイル）

上記のうち、
MySQL データベースエンジンは複数のサイボウズ製品で共用する場合があります。（[[詳細|#mysql]]）。
CGIプログラムと静的リソースについては、
複数インストールとインストールごとのカスタマイズに対応するために、
インストールごとに別のディレクトリに配置されます。
以下に 3 コンポーネントの配置を示します。UNIX、Windows で大差はありません。
ファイルは重要なものだけ記述しています。 

[[src]]
((%PROGRAM_FILES%))                           CGI以外のプログラム (例 C:\Program Files\Cybozu)
     +-- ''mysql-4.0''                        MySQL (メジャー+マイナーバージョン)
     |    +-- cb_version                  詳細バージョン情報ファイル (内容の例 1401)
     |    +-- ''bin''                         MySQL の各種実行ファイル置場
     |    |    +-- mysqld                 MySQL サーバープログラム
     |    |    +-- mysqld_safe            (UNIXのみ) mysqld の起動用ラッパー
     |    |    +-- mysql                  コマンドラインの MySQL クライアント。(製品には入りません)
     |    +-- ''share''                       MySQL のリソースファイル
     |    +-- ''etc''                         MySQL の設定ファイル等
     |    |    +-- my.ini                 [[MySQL 設定ファイル|doc:ext/config/mysql]]
     |    +-- ''data''                        データベースファイル置場
     |    |    +-- ((ibdata1))                MySQL のデータベースファイル
[[html]]
     |    |    +-- ((ib_logfile1&sim;3))         MySQL データベースログファイル
[[/html]]
     |    +-- ''files''                       アップロードファイルの保存ディレクトリ
     |    |    +-- ''((%APP_NAME%))''             (製品のインストールごとに作成されます)
     |    +-- ''sessiondata''                 セッションデータのディレクトリ
     |    |    +-- ''((%APP_NAME%))''             (製品のインストールごとに作成されます)
     |    +-- ''smarty''                      Smarty のキャッシュディレクトリ
     |    |    +-- ''((%APP_NAME%))''             (製品のインストールごとに作成されます)
     |    +-- ''upload_tmp''                  PHP のアップロードファイルの一時置場
     |    |    +-- ''((%APP_NAME%))''             (製品のインストールごとに作成されます)
     |    +-- ''tmp''                         Smarty のキャッシュディレクトリ
     |    +-- その他                      開発用 SDK。(製品には入りません)
     |
     +-- ''php-4.3''                          PHP SDK (製品には入りません)
          +-- ''bin''
          |    +-- pear                   PEARモジュール管理コマンド
          +-- ''lib''
          |    +-- ''php''                    PEARモジュールのインストールディレクトリ
          +-- ''developer''                   PHPSDK開発用(スケルトン)
          +-- ''include''                     PHPSDK includeファイル

((%CGI_ROOT%/%APP_NAME%))                     ベースディレクトリ (例 C:\Inetpub\scripts\cbfw)
     +-- php.exe(cgi)                     PHP スクリプトエンジン(ファイル名は変更可能)
     +-- php4ts.dll                       PHP 拡張ライブラリ(windowsのみ)
     +-- libmysql.dll                     MySQLとのIF用ライブラリ(windowsのみ)
     +-- php.ini                          [[PHP 設定ファイル|doc:ext/config/php]]
     +-- common.ini                       [[フレームワーク設定ファイル|doc:ext/config/common]]
     +-- common.lic                       [[ライセンス用の初期化日保存ファイル|doc:dev/base/license#explain]]
     +-- *.ini                            common.ini, php.ini以外の[[各種API用設定ファイル|doc:ext/config#config_list]]
     +-- ''code''                             PHPスクリプト置場
     |    +-- ''command''                     コマンドライン用のスクリプト置場
     |    +-- ''doc_root''
     |    |    +-- command_*.csp          HTTPコントローラー
     |    |    +-- *.csp                  HTTPビュー
     |    |    +-- ''fw''                     フレームワークコアスクリプト
     |    |    +-- ''developer''              開発用スクリプト一般 (製品には入りません)
     |    |    +-- ''dev_*''                  開発ツール用スクリプト (製品にはりません)
     |    |    +-- ''demo_*''                 デモ用スクリプト (製品には入りません)
     |    +-- ''include''                      モデルコントロールロジック(コントローラ)置場
     |    |    +-- prepend.csp            リクエスト開始処理コード
     |    |    +-- append.csp             リクエスト終了処理コード
     |    |    +-- ''fw''                     フレームワークのコアモデル実装
     |    |    +-- ''developer''              アゼリア用 SDK のモデル実装。(製品には入りません)
     |    |    +-- ''dev_*''                  開発ツール用モデル実装 (製品には入りません)
     |    |    +-- ''demo_*''                 デモ用モデル実装 (製品には入りません)
     |    +-- ''pear''                        PEAR モジュール置場
     |    +-- ''smarty''                      Smarty テンプレートエンジン
     |    +-- ''plugin''                      プラグインモジュール置場
     +-- ''page''                             Smarty テンプレート置場
     |    +-- error_html.tpl              エラー画面テンプレート
     |    +-- error_plain.tpl             コマンドライン用エラー画面テンプレート
     |    +-- ''fw''                          フレームワークのコアテンプレート
     |    +-- ''developer''                   開発者用テンプレート一般
     |    +-- ''dev_*''                       開発ツールテンプレート
     |    +-- ''demo_*''                      デモ用テンプレート
     +-- ''locale''                           国際化リソース置場
     +-- ''extensions''                       PHP拡張モジュール置場

((%WEB_ROOT%/%APP_NAME%))                     静的リソースのディレクトリ (例 C:\Inetpub\wwwroot\cbfw)
     +-- developer.css                    アゼリア用スタイル定義ファイル
[[/src]]

SysV 系列の UNIX では上記に加え、下記のようにデーモン起動停止スクリプトが配置される。 

[[src]]
/etc/init.d/cyde_4_0                      mysqld デーモン起動停止スクリプト
/etc/rc?.d/S97cyde_4_0                    デーモン起動用リンク
/etc/rc?.d/K03cyde_4_0                    デーモン停止用リンク
[[/src]]

BSD 系列の UNIX では上記の代わりに、下記のようにデーモン起動停止スクリプトが配置される。 

[[src]]
/etc/cyde_4_0                             mysqld デーモン起動停止スクリプト
/etc/rc.local                             最下部に "''/etc/cyde_4_0'' start" を呼び出すコマンドを追加
[[/src]]


[[凡例|head:]]
((%可変パラメータ名%))
 ''ディレクトリ名''
 ファイル名
 ''((%動的に作成されるディレクトリ%))''
 ((動的に作成されるファイル))

[[各構成の内容とその根拠|section:details]]

*[[可変パラメータ|#variables]]
*[[MySQL|#mysql]]
*[[PHPエンジン|#php]]
*[[code/doc_root と page の階層化|#doc_root]]
*[[静的リソース|#static]]
*[[サーバー上のデータ|#server]]

[[可変パラメータ|head:variables]]

下記の表に示す 4 つの可変パラメータを Azalea では使用します。
これらのパラメータは ''my.ini''、''php.ini''、''common.ini''
といった設定ファイル中に記述されており、
インストーラーがインストール時に設定された値で置換します。 

[[html]]
<table class="cb_doc_table">
<tr><th nowrap>パラメータ名</th><th>説明</th></tr>
<tr>
<td nowrap>((%APP_NAME%))</td>
<td>MySQL を共用するアプリケーションの**インストール毎に一意**な識別子。<br>
Azalea のデフォルトは "''cbfw''" です。製品ごとに適切な値を設定してください。
( 製品開発用アーカイブでは簡単に変更できますので、[[インストーラー開発者|doc:dev/utility/product_archive#installer_developer]] は確認してください。)<br><br>

尚、識別子は以下に挙げる非常に重要な役割を果たします。<br>

<dt>複数インストールのサポート</dt>
<dd>インストールごとに異なるこの識別子が、CGI等のインストール位置にも反映されるため、異なる識別子を与えれば複数インストールを実現できます。</dd>
<dt>データベース名</dt>
<dd>この識別子に "''cb_''" というプレフィクスを付加した文字列が、MySQL のデータベース名となります。MySQL サーバーは共用するが、各インストールごとにDBMS内のデータ管理場所が異なるということです。</dd>
<dt>データベースユーザー</dt>
<dd>この識別子に "''cb_''" というプレフィクスを付加した文字列が、MySQL のデータベースユーザー名にもなります。データベース毎にアクセス可能なDBユーザーを一つだけ作成します。</dd>
</dl>
</td>
</tr>
<tr>
<td nowrap>((%PROGRAM_FILES%))</td>
<td>
CGI 以外のプログラムと、それに付随するディレクトリやファイルのインストール場所を決めます。
Windows では "''C:\Program Files\Cybozu''" が標準。
UNIX では "''/usr/local/cybozu''" が標準となります。

CGI と分けるのは、ブラウザから誤ってアクセスされる危険を防止するためと、
Certified for Windows (CfW) 認定のためです。
</td>
</tr>
<tr>
<td nowrap>((%CGI_ROOT%))</td>
<td>
Azalea では PHP は基本的に CGI として動作させるため、
Webサーバーの CGI 実行ディレクトリを指定する必要があります。
このディレクトリ以下には、PHP が直接利用する各種のスクリプトファイルも配置されます。
データについてはセッションデータやテンポラリ以外は MySQL のディレクトリに書き込まれます。
後述するバックアップのためです。</td>
</tr>
<tr>
<td nowrap>((%WEB_ROOT%))</td>
<td>
画像や CSS ファイル等、
PHP で処理する必要のない静的なファイルはWebサーバーのドキュメントルート以下に配置します。
PHP の設定に "''doc_root''" という指定があり、
それと区別するために ((%WEB_ROOT%)) としています。
</td>
</tr>
</table>
[[/html]]

[[MySQL|head:mysql]]

MySQL が常駐プログラムで、大量のキャッシュメモリを使用することから、
MySQL の同一バージョンを使用するサイボウズ製品間で共用します。
ここでいう同一バージョンとは MySQL のバージョンを表す表記のうち、
''major'' と ''minor'' が一致するもののことです。 

MySQL のバージョン番号は、
(''major'').(''minor'').(''patch level'') の 3 つの数字をドットで区切って表記されます。
このうち、3 番目のパッチレベルは機能に影響を与えない修正であるため、
同一バージョンとみなします。
例）mysql-4.0.13 と mysql-4.0.14 は同一バージョンだが、mysql-4.0.14 と mysql-4.1.0 は異なるバージョン。 

インストーラーは同一バージョンを示す文字列で、
常駐サービス名あるいはデーモン起動スクリプトを登録します。
例えば mysql-4.0 であれば、
Windows に "''Cybozu_Database_Engine_4_0''" という名前で MySQL をサービス登録します。
UNIX では "''/etc/init.d/cyde_4_0''" という名前で MySQL デーモン起動スクリプトを登録します。
他のサイボウズ製品が既に MySQL をインストールしているかどうかは、
サービスあるいはデーモン起動スクリプトが存在するかチェックすることで判断可能です。 

同一バージョンとはいっても、
パッチレベルや**サイボウズが変更を施したビルド番号**が異なる場合は、
より新しいものに置き換える必要があります。
パッチレベルとビルド番号を検出するために、
MySQL のインストールディレクトリに ''cb_version'' というファイルを置き、
内容に以下を記述します。 

[[src]]
(パッチレベル)(ビルド番号2桁)
例）mysql-4.0.14, ビルド番号 1 の場合、''1401''。 
[[/src]]

インストーラーはこのファイルに記述されている数値を単純に比較することで、
上書きアップグレードの要不要を判断します。 

[[PHPエンジン|head:php]]

フレームワークプロジェクトが手を加えた PHP エンジンは、
既存のサイボウズ製品同様に直接 CGI プログラムとしてブラウザからアクセス可能です。
現行製品と同様に、"''page''" ディレクトリ以下に各製品の画面テンプレートを配置しています。
これはテンプレートをカスタマイズするお客様や
SIer がなるべく分かりやすいよう配慮した結果です。 

PHPスクリプトは全て "''code''" ディレクトリ以下に配置されています。
PHPエンジンが直接実行するのは、"''code/doc_root''" ディレクトリの PHP スクリプトです。
インクルードして使用するスクリプトは、
"''code/include''" 以下にモジュール毎のサブディレクトリを用意して配置します。
"''code''" ディレクトリ以下の PHP スクリプトは、製品出荷時に全て暗号化の対象となります。 

テンプレート以外にカスタマイズ対象となるものとして、（国際化）文字列リソースがあります。
現在の実装では文字列リソースは PHP の連想配列で定義していますが、
これらを "''code''" 以下に配置して暗号化してしまうとカスタマイズが不可能になってしまいます。
そこで、文字列リソースファイルは "''locale''" ディレクトリ以下に独立して配置されています。

[[code/doc_root と page の階層化|head:doc_root]]

"''code/doc_root''" と "''page''" の下には、
自由にサブディレクトリを作成してその下にファイルを配置することが可能です。
これらを階層化する際には、以下に注意してください。 

*"code/doc_root''/foo/bar''" サブディレクトリに "hoge.csp" スクリプトを配置すると、
アクセスURLは "http://xxx.jp/scripts/cbfw/php.exe''/foo/bar/''hoge" となります。 
*"code/doc_root''/foo/bar/''hoge.csp" に対応する Smarty テンプレートは、
原則 "page''/foo/bar/''hoge.tpl" として配置してください。
 ( こうしておけば、[[code/include/fw/smarty_direct.csp]] の恩恵にもあずかれます。)
*"page" 以下のサブディレクトリ名に、ロケールコードと同一のものは使用できません。
英 1 文字とか、英数 3 文字以上からなるサブディレクトリ名としてください。 

[[静的リソース|head:static]]

現行製品では静的リソースは、
複数インストールしてもウェブサーバーのドキュメントルートの固定位置にあるファイルを共有しています。
Azalea ではこれらのファイルの個別カスタマイズも可能にするために、インストールごとに個別のディレクトリに配置します。 

[[サーバー上のデータ|head:server]]

Azalea ではデータベースの情報は MySQL サーバーによって、
MySQL の "''data''" ディレクトリ以下に保存されます。
そこでデータバックアップの手間とディスク空き容量の確保を容易にするため、
サーバー上に保存するファイルも MySQL の "''files''" ディレクトリに配置しています。 

PHPエンジンはアップロードされたファイルを一時的にファイルとして格納します。
そのディレクトリと上記のサーバー上に保存するファイルのディレクトリは、
同一ドライブ（同一パーティション）に配置しておくべきです。
同一ドライブであれば一時的に格納されたファイルを、
move 操作で保存ディレクトリに移動できるが、
異なる場合はファイルコピーを実行することになり、
パフォーマンスの低下を招くからです。
以上より、PHP の一時ファイル置場である "''upload_tmp''" ディレクトリも MySQL の下に配置しています。 

MySQL が複数の製品/インストールで共用されているため、
これらのディレクトリも複数で共用されます。
そのため、インストール毎に異なる識別子でサブディレクトリを作成し、
そのサブディレクトリを 1 つのインストール実体で使用します。 

Smarty のキャッシュディレクトリおよびセッションデータの保存ディレクトリについても、
同様の考えでディスク容量を確保していると思われる MySQL の下に配置します。 

これら動的にファイルを生成するディレクトリについては、
インストーラーが CGI プログラムが書き込めるように適切なパーミッションを設定しています。
