<?php
/*
 * Created on 2006/01/24
 * Update on 2006/10
 *
 * 社内メール登録機能
 * 
 * ■データ受信仕様
 *
 *   項目名      |説明
 *   ------------+--------------------------------------------------
 *   title       |標題を指定します。
 *   data        |本文を指定します。
 *   receivers[] |宛先変更の許可が無い宛先を指定します。(operators と重複した宛先は、変更の許可有り)
 *   operators[] |宛先変更の許可が有る宛先を指定します。(receivers と重複した宛先は、変更の許可有り)
 *   confirm     |閲覧状況 1:『確認しました』ボタンを付ける。
 *   file(0-n)   |添付ファイルアップロード
 *   registrant  |coopLoginにて使用  登録者を指定します。(→このユーザーでLoginAs)
 *               |パラメータがなければログインユーザーで登録
 *   page        |coopLoginにて使用"_coopMessage_add.csp" 
 *   app         |coopLoginにて使用"message"
 *  2006/5/26 開発 田縁さん確認済み
 *
 *  2006/10 update tsukurimichi
 *  添付ファイル対応他
 *
 *  2010/7 update yoshida
 *  メッセージの管理権限対応
 */
global $G_INPUT;
/////////////////////////////////////////////////////////////////////////////////////////
//20061120修正
//coopファイルが存在しないとFatal Erorrになるためファイル存在チェック
//$nextpage = basename($G_INPUT['page']);
$nextpage = "coopLogin.csp";
if (is_file(cb_basedir() . '/code/doc_root/' . dirname(cb_get_pagename()) . '/'
            . $nextpage)
) {
    //20061120修正
    //require( $nextpage );
} else {
    //コピーライトとHTML閉じタグ出力しない
    global $G_state_set;
    $G_state_set->set('copyright_should_be_written', false);
    $G_state_set->set('html_should_be_closed', false);

    //   2007/03/27 coopLogin.cspがない場合のエラーメッセージ修正 不具合管理(199)
    include_once('error_code.csp');
    header("X-Cybozu-Error:" . E_API_COMMON_COOPLOGIN_NOT_FOUND);
    print("<Header Data><CR><LF>");
    print("1," . E_API_COMMON_COOPLOGIN_NOT_FOUND);
    print("<Footer Data><CR><LF>");
    print("ERROR<CR><LF>");
    cb_safe_exit();
}

//ログイン認証
require('coopLogin.csp');

/////////////////////////////////////////////////////////////////////////////////////////

// 2010/08/01 宛先変更許可に対応 Yoshida Shin
// 宛先変更許可の有るアカウント名からUID取得
$next_key = 0;
$G_INPUT['operators_size'] = 0;
if (array_key_exists('operators', $G_INPUT)) {
    foreach ($G_INPUT['operators'] as $val) {

        $user = $uum->getUserByForeignKey($val);
        if ($user) {
            $G_INPUT['sUID'][$next_key] = $user->getOID();
            if ($next_key == 0) {
                $G_INPUT["selected_users_sUID"][$next_key]
                    = $G_INPUT['sUID'][$next_key];
            }
        } else {
            require_once('grn/error_code.csp');
            cb_throw_error(E_GRN_USER_NOT_FOUND);
        }

        $next_key += 1;
        $G_INPUT['operators_size'] += 1;
    }
}

// 宛先変更許可の無いアカウント名からUID取得
if (array_key_exists('receivers', $G_INPUT)) {
    foreach ($G_INPUT['receivers'] as $val) {
        $user = $uum->getUserByForeignKey($val);
        if ($user) {
            $G_INPUT['sUID'][$next_key] = $user->getOID();
            if ($next_key == 0) {
                $G_INPUT["selected_users_sUID"][$next_key]
                    = $G_INPUT['sUID'][$next_key];
            }
        } else {
            require_once('grn/error_code.csp');
            cb_throw_error(E_GRN_USER_NOT_FOUND);
        }

        $next_key += 1;
    }
}

// 宛先変更許可有り、無しともに存在しない場合はエラー
if ($next_key == 0) {
    require_once('message/error_code.csp');
    cb_throw_error(E_GRN_MESSAGE_ADDRESSEES_NOT_SELECTED);
}


/////////////////////////////////////////////////////////////////////
unset($G_application, $uum);

$sUIDs = @ $G_INPUT['sUID'];
$operators_size = @ $G_INPUT['operators_size'];
$subject = cb_trim(@ $G_INPUT['title']);
$subject = preg_replace('/\x0D\x0A|\x0D|\x0A/', '', $subject);

if (mb_strlen($subject) > 100) {
    $subject = mb_substr($subject, 0, 100);
}

if ($subject === '') {
    require_once('message/error_code.csp');
    cb_throw_error(E_GRN_MESSAGE_SUBJECT_NOT_INPUTTED);
}

if ( ! is_array($sUIDs)) {
    require_once('message/error_code.csp');
    cb_throw_error(E_GRN_MESSAGE_ADDRESSEES_NOT_SELECTED);
}

// create message data
$message = [];
$message['subject'] = $subject;               // 表題

$message['format_type'] = 0;                  // 書式タイプ(テキスト)
$message['data'] = $G_INPUT['data'];   // 本文

if (@ $G_INPUT['confirm'] == '1')           // 閲覧状況
{
    $message['confirm'] = 1;
}             //「確認しました」ボタン有
else {
    $message['confirm'] = 0;
}                //「確認しました」ボタン無

// create addressees data
$addressees = [];
foreach ($sUIDs as $key => $sUID) {
    $addressee = [];
    $addressee['addressee_id'] = $sUID;
    $addressee['addressee_order'] = $key;
    if ($key < $operators_size) {
        $addressee['addressee_is_operator'] = 1;
    } else {
        $addressee['addressee_is_operator'] = 0;
    }
    $addressees[] = $addressee;
}


require_once('message/message_logic.csp');
$message_logic = new GRN_Message_Logic();

// →添付ファイル対応///////////////////////////////
$files = [];
foreach ($_FILES as $key => $file) {
    if ($file['error'] != UPLOAD_ERR_OK) {
        continue;
    }

    $files[$key] = $file;
}
////////////////////////////////////////////////////

// メッセージを送信する
$ret = $message_logic->sendMessage($G_login, $message, $addressees, $files);

if ($ret === false) {
    require_once('message/error_code.csp');
    cb_throw_error(E_GRN_MESSAGE_FAIL_TO_SEND_MESSAGE);
}

$m_id = $ret->getOID();
printf("<Header Data><CR><LF>");
printf("0,%s", $m_id);
printf("<Footer Data><CR><LF>");
printf("NOERROR<CR><LF>");

