<?php
/*
* 
* Updated on 2011-04-28 不要コード部分の削除
* ログイン処理＆共通処理
* 
* ■受信データ仕様 
*
*   項目名    | 説明
*   ----------+--------------------------------------------------
*   _account  |認証用ログインアカウント
*   _password |認証用ログインパスワード
*   version   |JAVA側のバージョン (本cspの$api_version とつき合わせてバージョンチェックする)
*             | version=="0"の場合は、cspのバージョンを返す
*   registrant|更新者(登録者)を指定します。(→認証後、このユーザーでLoginAsする)
*             |パラメータがなければログインユーザーで更新登録
*   page      |それぞれの処理用のcspファイル名(requireされます)
*   app       |アプリケーション系の処理(社内メール登録とか)の場合はアプリケーションID
*             | ("schedule","bulletin","message" など)
*   system    |システム画面系で行う処理(ユーザー情報importやexport etc)の場合に必要
*             | system=="1" … 基本システム管理系で管理権限チェックを行う
*             | system=="2" … アプリケーション管理系の管理権限チェックを行う
*   manage    |権限チェックをする管理項目名(user,message,schedule など)
*             |[system]と併用すること
*/

//20061120修正
//global $G_INPUT;

//コピーライトとHTML閉じタグ出力しない
global $G_state_set;
$G_state_set->set('copyright_should_be_written', false);
$G_state_set->set('html_should_be_closed', false);

//バージョン変更時は、ここを変更のこと
//$api_version = '1.1.0';
//$api_version = '1.2.0';  // 2008/01/15
//$api_version = '1.3.0';  // 2008/12/25
//$api_version = '1.3.1';  // 2009/08/17
//$api_version = '1.3.2';  // 2009/08/18
$api_version = '1.3.2 for Garoon 3.1.0';  // 2011/06/01 不具合GRNJAVAAPI-6の改修


//----------------------------
//  バージョン情報のみを返す
//----------------------------
if (array_key_exists('version', $G_INPUT) && $G_INPUT['version'] == '0') {
    header("X-Cybozu-API-VERSION:" . $api_version);
    cb_safe_exit();
}


//--------------------
//  ユーザー認証
//--------------------
global $G_container_base;
$uum =& $G_container_base->getInstance('uum');

// 不具合管理331 オープン統合認証使用時に API が使用できない事がある 前半
if (array_key_exists('_account', $G_INPUT)
    && array_key_exists('_password', $G_INPUT)
) {
    $stored_account = $G_INPUT['_account'];
    $stored_password = $G_INPUT['_password'];
} else {
    $stored_account = '';
    $stored_password = '';
}

// ログインしてない or 認証要求あり
if ( ! ($G_login = $uum->getLoginUser())
     || (array_key_exists('_account', $G_INPUT)
         && array_key_exists('_password', $G_INPUT))
) {

// 2008/01/15 仕様変更 バージョンチェックしない
//    $java_version = array_key_exists('version',$G_INPUT)?$G_INPUT['version']:"";
//    // javaとcspのバージョンチェック
//    // マッチしなければ、エラーではじく
//    if( !($java_version === $api_version) ){
//        //   2007/03/27 jarとcspファイルのバージョン差異エラーが不適切 不具合番号(179)
//        include_once('error_code.csp' );
//        api_response_data(null,E_API_COMMON_VERSION_WRONG);
//        cb_safe_exit();
//    }

// 不具合管理292 再ログイン且つアカウント名が同一の場合にパスワード不正のエラーが出力されない
// 
//    // 再ログインの場合 且つ アカウント名が同一の場合は、何もしないで終了
//    if($G_login && $G_login->get('foreign_key')==$G_INPUT['_account'])
//    {
//        api_response_data("");
//        cb_safe_exit();
//    }
    // 空パスワードであれば、ログアウト
    if ($G_INPUT['_password'] == '') {
        //   2007/03/27 認証にて，空パスワードがきた場合のエラーメッセージ修正 不具合管理(197)
        include_once('error_code.csp');
        api_response_data(null, E_API_AUTHENTICATION_PASS_EMPTY);
        cb_safe_exit();
    }

    // ログイン済みであれば一旦ログアウト
    if ( ! $G_login == false) {
        $uum->logout();
    }

    // 不具合管理331 オープン統合認証使用時に API が使用できない事がある 後半
    $G_INPUT['_account'] = $stored_account;
    $G_INPUT['_password'] = $stored_password;
    if ( ! $uum->login())                                    // ログイン(失敗)
    {
        require_once('fw/error_code.csp');
        cb_throw_error(E_COMMON_AUTHENTICATION_FAILED);
    } else                                                    // ログイン(成功)
    {
        // 2008/01/15 Grn2.5 csrfの対応
        require_once('fw/csrf.csp');
        $csrf_ticket = cb_csrf_get_token();

        //認証のみ何もしない
        printf("<Header Data><CR><LF>");
        printf("0,%s", $csrf_ticket);
        printf("<Footer Data><CR><LF>");
        printf("NOERROR<CR><LF>");
        cb_safe_exit();
    }
} else                                                        // ログインユーザー情報取得(成功)
{
    // csrfの対応 
    $csrf_ticket = '';
    global $G_INPUT_HIDDEN;
    if (array_key_exists('csrf_ticket', $G_INPUT_HIDDEN)) {
        $csrf_ticket = $G_INPUT_HIDDEN['csrf_ticket'];
    }
    require_once('fw/csrf.csp');
    cb_csrf_validate_token($csrf_ticket);

    if (array_key_exists('system',
        $G_INPUT)
    )                        // ガルーン システム管理
    {
        //----------------------------------------------
        //  ユーザー権限チェックであるかチェック
        //----------------------------------------------
        switch ($G_INPUT['system']) {
            case "1":  //基本システム管理系
                require_once('grn/system_logic.csp');
                $system = GRN_System::getInstance();
                $logged_in_user = $uum->getLoginUser();
                if ( ! $system->adminSubSystem($G_INPUT['manage'],
                    $logged_in_user)
                ) {
                    require_once('fw/error_code.csp');
                    cb_throw_error(E_GRN_NO_SYSTEM_PRIVILEGE);
                }
                break;

            case "2":  //アプリケーション管理系
                require_once('grn/system_logic.csp');
                $system = GRN_System::getInstance();
                $logged_in_user = $uum->getLoginUser();
                if ( ! $system->adminApplication($G_INPUT['manage'],
                    $logged_in_user)
                ) {
                    require_once('fw/error_code.csp');
                    cb_throw_error(E_GRN_NO_SYSTEM_PRIVILEGE);
                }
                break;

            default:
                //特になにもしない
        }
    } else                                                    // ガルーン
    {
        //---------------------------------------------
        //  アプリケーションの使用/停止状態をチェック
        //---------------------------------------------
        require_once('grn/application.csp');
        $locator = GRN_ApplicationLocator::instance();
        if ( ! ($G_application =& $locator->getInstance($G_INPUT['app']))) {
            require_once('grn/error_code.csp');
            cb_throw_error(E_GRN_APPLICATION_NOT_ACTIVE);
        }
        unset($locator);

        //------------------------------------------------------------
        //  登録者が指定されている場合は再度登録者でログインしなおす
        //------------------------------------------------------------

        // **************************************************************************
        //   2007/03/22 -u と -r に同じユーザーを指定 不具合管理(103)
        //   登録者が指定された場合 && loginユーザー異なる場合 
        // **************************************************************************  
        if (array_key_exists('registrant', $G_INPUT)
            && $G_INPUT['registrant'] != ''
            && $G_INPUT['registrant'] != $G_login->get('foreign_key')
        ) {
            // **************************************************************************

            $G_login = $uum->getUserByForeignKey($G_INPUT['registrant']);
            if ( ! $G_login) {
                require_once('grn/error_code.csp');
                cb_throw_error(E_GRN_USER_NOT_FOUND);
            }
            $uum->loginAs($G_login);
//　不具合GRNJAVAAPI-3のため不要のコード部分の削除
//          $G_login = & $uum->getLoginUser();
//          if ( !$G_login )
//          {
//              require_once( 'grn/error_code.csp' );
//              cb_throw_error( E_GRN_USER_NOT_FOUND );
//          }

            // 使用停止中のチェック(loginAs では、評価していないため)
            $valid = $G_login->get('valid');
            if ( ! is_null($valid)) {
                $today = getdate();
                if (($valid->year < $today['year'])
                    || ($valid->year == $today['year']
                        && $valid->month < $today['mon'])
                    || ($valid->year == $today['year']
                        && $valid->month == $today['mon']
                        && $valid->day < $today['mday'])
                ) {
                    cb_throw_error(E_COMMON_ACCOUNT_INVALIDATED);
                }
            }
        }
    }
}
/**
 * API独自レスポンスデータ 出力用
 * レスポンスデータを生成します。
 * $error_msg != null であれば、X-Cybozu-Errorというレスポンスヘッダ 付加します
 * 不正なパラメータエラーの場合，エラー番号+パラメータ名を加えて出力すること
 *
 * @param $msg       正常メッセージ
 * @param $error_msg エラーメッセージ
 *
 * @return errorMsg String
 */
function api_response_data($msg, $error_msg = null)
{
    if ($error_msg) {
        header("X-Cybozu-Error:" . $error_msg);
    }
    print("<Header Data><CR><LF>");
    if ($error_msg) {
        print("1," . $error_msg);
        print("<Footer Data><CR><LF>");
        print("ERROR<CR><LF>");
    } else {
        print("0," . $msg);
        print("<Footer Data><CR><LF>");
        print("NOERROR<CR><LF>");
    }
}

