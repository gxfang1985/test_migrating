掲示板 プログラム仕様書

0.目次
-------------------------------------------------------------------
    0.目次
    1.サンプルプログラム
        1-(ア) 掲示板登録
        1-(イ) 掲示板更新
        1-(ウ) 掲示板削除
        1-(エ) 掲示板フォロー登録
        1-(オ) 掲示板フォロー削除
    2.ガルーン連携（JAVA）用プログラム
        2-(ア) 掲示板登録
        2-(イ) 掲示板更新
        2-(ウ) 掲示板削除
        2-(エ) 掲示板フォロー登録
        2-(オ) 掲示板フォロー削除
    3.ガルーン連携（PHP）用プログラム
        3-(ア) 掲示板登録
        3-(イ) 掲示板更新
        3-(ウ) 掲示板削除
        3-(エ) 掲示板フォロー登録
        3-(オ) 掲示板フォロー削除
    4.その他
-------------------------------------------------------------------

1.サンプルプログラム
    (ア) 掲示板登録
        [ファイル名]
            CmdBulletinAdd.java
        [クラス名]
            CmdBulletinAdd
        [概要]
            コマンドラインよりガルーン２へ掲示板の登録を行う
        [機能]
            コマンドラインよりガルーン２へ掲示板登録を行うことができる
            指定できるオプションのガイダンスを表示することができる
            実行結果を表示することができる
            例外発生時は、エラー内容を表示することができる
        [仕様]
            メソッド
                ・usage        ガイダンスの表示
                    パラメータ    なし
                    戻り値        なし
                    処理          ガイダンスを標準エラー出力に出力する
                ・main         メイン処理
                    パラメータ   String args[]  コマンドライン実行する場合の引数
                        ① -h    （ガイダンスの表示用）
                        ② -o    ガルーン２のURL
                        ③ -u    ガルーン２のログイン名
                        ④ -p    ③のパスワード
                        ⑤ -r    掲示板を登録するユーザのログイン名
                        ⑥ -cc   掲示板を掲示するカテゴリコード
                        ⑦ -t    掲示板のタイトル
                        ⑧ -sd   掲示板の開始日（yyyy-MM-dd形式）
                        ⑨ -ed   掲示板の終了日（yyyy-MM-dd形式）
                        ⑩ -d    掲示板の本文
                        ⑪ -f    掲示板の添付ファイルパス (複数指定可能)
                        ⑫ -uf   (フォローを許可しない)
                        ※②～⑪は、次の要素に値を指定することとする(例.-u sato)
                        ※①～⑫は、順不同とする
                    戻り値        なし
                    処理
                        ① argsの要素数が０の場合は、ガイダンスを表示し処理を抜ける
                        ② args の要素より規定の文字列があった場合は、次の要素を変数に格納する※
                        ③ ガルーン２へ接続、ログイン (クラス   CoopLink コンストラクタ呼び出し)
                        ④ ガルーン２へ掲示情報を送信 (メソッド CoopLink.putBulletinAdd 呼び出し)
                        ⑤ ガルーン２をログアウト     (メソッド CoopLink.logout 呼び出し)
                        ⑥ 登録した掲示板の掲示板IDを標準エラー出力に出力
                    特記事項
                        例外が発生した場合は、エラー内容が標準エラー出力に出力される
                        catchしているエラー
                          ・ParserException
                          ・RemoretException
                          ・IOException
                          ・IllegalArgumentException
                          ・NullPointerException
                        ※URL,ログイン名、パスワード、カテゴリコード、タイトルがそれぞれ指定されて
                          いない場合は、標準入力での再入力を求める
                        ※指定されたパラメータ(①～⑪)以外の引数がargsに渡された場合は、ガイダンス
                          を表示し、処理を抜ける
        [使い方]
            #java CmdBulletinAdd -o http://localhost/cgi-bin/cbgrn/grn.cgi 
                                 -u "Administrator" -p "admin"  -r "user1"
                                 -t "サーバーダウンのおしらせ" -cc "code001"
                                 -d "本日20:00にサーバーを落とします。"
                                 -f "/home/test/test.txt"
            ※実際には１行。
            →[結果] localhostのガルーンに対して、
                     以下の記事か掲示される。
                     ・カテゴリ：お知らせ (カテゴリコード=code001)
                     ・期間    ：なし
                     ・差出人  ：user1
                     ・タイトル：サーバーダウンのおしらせ
                     ・本文    ：本日20:00にサーバーを落とします。
                     ・添付ファイル：test.txt
                     ・フォロー許可：あり
                     登録された掲示板IDが表示される → 55

    (イ) 掲示板更新
        [ファイル名]
            CmdBulletinModify.java
        [クラス名]
            CmdBulletinModify
        [概要]
            コマンドラインよりガルーン２へ掲示板の更新を行う
        [機能]
            コマンドラインよりガルーン２へ掲示板更新を行うことができる
            指定できるオプションのガイダンスを表示することができる
            実行結果(更新した掲示板ID)を表示することができる
            例外発生時は、エラー内容を表示することができる
        [仕様]
            メソッド
                ・usage        ガイダンスの表示
                    パラメータ   なし
                    戻り値       なし
                    処理         ガイダンスを標準エラー出力に出力する
                ・main         メイン処理
                    パラメータ   String args[]  コマンドライン実行する場合の引数
                        ① -h    (ガイダンスの表示用）
                        ② -o    ガルーン２のURL
                        ③ -u    ガルーン２のログイン名
                        ④ -p    ③のパスワード
                        ⑤ -r    掲示板を更新するユーザのログイン名
                        ⑥ -id   更新したい掲示板の掲示板ID
                        ⑦ -t    掲示板のタイトル
                        ⑧ -sd   掲示板の開始日（yyyy-MM-dd形式）
                        ⑨ -ed   掲示板の終了日（yyyy-MM-dd形式）
                        ⑩ -d    掲示板の本文
                        ⑪ -f    掲示板の添付ファイルパス(複数指定可能)
                        ⑫ -uf   (フォローを許可しない)
                        ※②～⑪は、次の要素に値を指定することとする(例.-u sato)
                        ※①～⑫は、順不同とする
                    戻り値       なし
                    処理
                        ① argsの要素数が０の場合は、ガイダンスを表示し処理を抜ける
                        ② args の要素より規定の文字列があった場合は、次の要素を変数に格納する※
                        ③ ガルーン２へ接続、ログイン(クラス   CoopLink コンストラクタ呼び出し)
                        ④ ガルーン２へ掲示情報(更新)を送信
                                                     (メソッド CoopLink.putBulletinModify 呼び出し)
                        ⑤ ガルーン２をログアウト    (メソッド CoopLink.logout 呼び出し)
                        ⑥ 更新した掲示板の掲示板IDを標準エラー出力に出力
                    特記事項
                        例外が発生した場合は、エラー内容が標準エラー出力に出力される
                        catchしているエラー
                          ・ParserException
                          ・RemoretException
                          ・IOException
                          ・IllegalArgumentException
                          ・NullPointerException
                        ※URL,ログイン名、パスワード、掲示板ID、タイトルがそれぞれ指定されて
                          いない場合は、標準入力での再入力を求める
                        ※指定されたパラメータ(①～⑪)以外の引数がargsに渡された場合は、ガイダンス
                          を表示し、処理を抜ける
        [使い方]
            #java CmdBulletinModify -o http://localhost/cgi-bin/cbgrn/grn.cgi 
                                    -u "Administrator" -p "admin"  -r "user1"
                                    -t "サーバーダウンのおしらせ" -id "55"
                                    -d "本日20:30にサーバーを落とします。"
                                    -f "/home/test/test.txt" -f "/home/test/test2.txt" -uf
            ※実際には１行。
            →[結果] localhostのガルーンに対して、
                     掲示ID=55の掲示記事について以下の情報に更新される
                     ・期間    ：なし
                     ・差出人  ：user1
                     ・タイトル：サーバーダウンのおしらせ
                     ・本文    ：本日20:30にサーバーを落とします。
                     ・添付ファイル：test.txt,test2.txt
                     ・フォロー許可：なし
                     更新された掲示板IDが表示される → 55
    (ウ) 掲示板削除
        [ファイル名]
            CmdBulletinDelete.java
        [クラス名]
            CmdBulletinDelete
        [概要]
            コマンドラインよりガルーン２へ掲示板の削除を行う
        [機能]
            コマンドラインよりガルーン２へ掲示板削除を行うことができる
            指定できるオプションのガイダンスを表示することができる
            実行結果(削除した掲示板ID)を表示することができる
            例外発生時は、エラー内容を表示することができる
        [仕様]
            メソッド
                ・usage        ガイダンスの表示
                    パラメータ    なし
                    戻り値        なし
                    処理          ガイダンスを標準エラー出力に出力する
                ・main         メイン処理
                    パラメータ     String args[]  コマンドライン実行する場合の引数
                        ① -h    (ガイダンスの表示用）
                        ② -o    ガルーン２のURL
                        ③ -u    ガルーン２のログイン名
                        ④ -p    ③のパスワード
                        ⑤ -r    掲示板を削除するユーザのログイン名
                        ⑥ -id   削除したい掲示板の掲示板ID
                        ※②～⑥は、次の要素に値を指定することとする(例.-u sato)
                        ※①～⑥は、順不同とする
                    戻り値        なし
                    処理
                        ① argsの要素数が０の場合は、ガイダンスを表示し処理を抜ける
                        ② args の要素より規定の文字列があった場合は、次の要素を変数に格納する※
                        ③ ガルーン２へ接続、ログイン(クラス   CoopLink コンストラクタ呼び出し)
                        ④ ガルーン２へ掲示情報を送信(メソッド CoopLink.putBulletinDelete 呼び出し)
                        ⑤ ガルーン２をログアウト    (メソッド CoopLink.logout 呼び出し)
                        ⑥ 削除した掲示板の掲示板IDを標準エラー出力に出力
                    特記事項
                        例外が発生した場合は、エラー内容が標準エラー出力に出力される
                        catchしているエラー
                          ・RemoretException
                          ・IOException
                          ・IllegalArgumentException
                          ・NullPointerException
                        ※URL,ログイン名、パスワード、掲示板IDがそれぞれ指定されていない場合は、標準
                          入力での再入力を求める
                        ※指定されたパラメータ(①～⑪)以外の引数がargsに渡された場合は、ガイダンス
                          を表示し、処理を抜ける
        [使い方]
            #java CmdBulletinDelete -o http://localhost/cgi-bin/cbgrn/grn.cgi 
                                    -u "Administrator" -p "admin"  -r "user1"
                                    -id "55"
            ※実際には１行。
            →[結果] localhostのガルーンに対して、
                     掲示ID=55(=登録者use1)の掲示記事について、user1名義で削除を行う
                     削除された掲示板IDが表示される → 55

    (エ) 掲示板フォロー登録
        [ファイル名]
            CmdBulletinFollowAdd.java
        [概要]
            コマンドラインよりガルーン２へ掲示板のフォロー登録を行う
        [機能]
            コマンドラインよりガルーン２へ任意の掲示板に対してフォロー登録を行うことができる
            指定できるオプションのガイダンスを表示することができる
            実行結果(登録した掲示板フォローID)を表示することができる
            例外発生時は、エラー内容を表示することができる
        [仕様]
            メソッド
                ・usage        ガイダンスの表示
                    パラメータ    なし
                    戻り値        なし
                    処理          ガイダンスを標準エラー出力に出力する
                ・main          メイン処理
                    パラメータ   String args[]  コマンドライン実行する場合の引数
                        ① -h   （ガイダンスの表示用）
                        ② -o    ガルーン２のURL
                        ③ -u    ガルーン２のログイン名
                        ④ -p    ③のパスワード
                        ⑤ -r    掲示板フォローを登録するユーザのログイン名
                        ⑥ -id   掲示板フォローを登録する掲示板ID
                        ⑦ -d    掲示板フォローの本文
                        ⑧ -f    掲示板フォローの添付ファイル (複数指定可能)
                        ※②～⑧は、次の要素に値を指定することとする(例.-u sato)
                        ※①～⑧は、順不同とする
                    戻り値        なし
                    処理
                        ① argsの要素数が０の場合は、ガイダンスを表示し処理を抜ける
                        ② args の要素より規定の文字列があった場合は、次の要素を変数に格納する※
                        ③ ガルーン２へ接続、ログイン    (クラス   CoopLink コンストラクタ呼び出し)
                        ④ ガルーン２へ掲示情報(フォロー登録)を送信 
                                                  (メソッド CoopLink.putBulletinFollowAdd 呼び出し)
                        ⑤ ガルーン２をログアウト               (メソッド CoopLink.logout 呼び出し)
                        ⑥ 登録した掲示板の掲示板IDを標準エラー出力に出力
                    特記事項
                        例外が発生した場合は、エラー内容が標準エラー出力に出力される
                        catchしているエラー
                          ・RemoretException
                          ・IOException
                          ・IllegalArgumentException
                          ・NullPointerException
                        ※URL,ログイン名、パスワード、掲示板IDがそれぞれ指定されていない場合は、標
                          準入力での再入力を求める
                        ※指定されたパラメータ(①～⑧)以外の引数がargsに渡された場合は、ガイダンス
                          を表示し、処理を抜ける
        [使い方]
            #java CmdBulletinFollowAdd -o http://localhost/cgi-bin/cbgrn/grn.cgi 
                                       -u "Administrator" -p "admin"  -r "user2"
                                       -id 54 -d "パスワードの変更をおねがいします。"
                                       -f "/home/test/policy.txt" -f /home/test/schedule.txt
            ※実際には１行。
            →[結果] localhostのガルーンに対して、
                     掲示ID=54の掲示記事について以下のフォローが登録される
                     ・差出人  ：user2
                     ・本文    ：パスワードの変更をおねがいします。
                     ・添付ファイル：policy.txt,schedule.txt

                     登録された掲示板フォローIDが表示される → 22

    (オ) 掲示板フォロー削除
        [ファイル名]
            CmdBulletinFollowDelete.java
        [クラス名]
            CmdBulletinFollowDelete
        [概要]
            コマンドラインよりガルーン２へ掲示板フォローの削除を行う
        [機能]
            コマンドラインよりガルーン２へ任意の掲示板フォロー削除を行うことができる
            指定できるオプションのガイダンスを表示することができる
            実行結果(削除した掲示板ID)を表示することができる
            例外発生時は、エラー内容を表示することができる
        [仕様]
            メソッド
                ・usage        ガイダンスの表示
                    パラメータ    なし
                    戻り値        なし
                    処理          ガイダンスを標準エラー出力に出力する
                ・main         メイン処理
                    パラメータ    String args[]  コマンドライン実行する場合の引数
                        ① -h    (ガイダンスの表示用）
                        ② -o    ガルーン２のURL
                        ③ -u    ガルーン２のログイン名
                        ④ -p    ③のパスワード
                        ⑤ -r    掲示板を削除するユーザのログイン名
                        ⑥ -id   削除したい掲示板フォローID
                        ※②～⑥は、次の要素に値を指定することとする(例.-u sato)
                        ※①～⑥は、順不同とする
                    戻り値        なし
                    処理
                        ① argsの要素数が０の場合は、ガイダンスを表示し処理を抜ける
                        ② args の要素より規定の文字列があった場合は、次の要素を変数に格納する
                        ③ ガルーン２へ接続、ログイン (クラス   CoopLink コンストラクタ呼び出し)
                        ④ ガルーン２へ掲示情報(フォロー削除)を送信 
                                                     (メソッド CoopLink.putBulletinDelete 呼び出し)
                        ⑤ ガルーン２をログアウト    (メソッド CoopLink.logout 呼び出し)
                        ⑥ 削除した掲示板フォローIDを標準エラー出力に出力
                    特記事項
                        例外が発生した場合は、エラー内容が標準エラー出力に出力される
                        catchしているエラー
                          ・RemoretException
                          ・IOException
                          ・IllegalArgumentException
                          ・NullPointerException
                        ※URL,ログイン名,パスワード,掲示板フォローIDがそれぞれ指定されていない場合
                          は、標準入力での再入力を求める
                        ※指定されたパラメータ(①～⑪)以外の引数がargsに渡された場合は、ガイダンス
                          を表示し、処理を抜ける
        [使い方]
            #java CmdBulletinDelete -o http://localhost/cgi-bin/cbgrn/grn.cgi 
                                    -u "Administrator" -p "admin"  -r "user1"
                                    -id "22"
            ※実際には１行。
            →[結果] localhostのガルーンに対して、
                     掲示板フォローID=22(差出人=user1)の掲示フォローについて、user1名義で削除を行う
                     削除された掲示板フォローIDが表示される → 22

2.ガルーン連携（JAVA）
    (ア) 掲示板登録
        [ファイル名]
            /jp/co/cybozu/CoopLink.java (garoon2.jar)
        [クラス]
            jp.co.cybozu.CoopLink 
        [メソッド]
            putBulletinAdd
        [概要]
            インスタンス作成時に指定されたURLのガルーン２に対し
            掲示板情報(登録)のHTTPリクエスト送信し、ガルーン２からのレスポンスを取得する
        [機能]
            ガルーン２に掲示板情報(登録)のパラメータをHTTPでPOSTすることができる
            ガルーン２からのレスポンスを取得し、結果をリターンすることができる
            正常に登録された場合は、掲示板IDを返す、エラーの場合は、例外をthrowする
        [仕様]
            引数
               String title              … 掲示板の標題
               String categoryCode       … ガルーン２の掲示板カテゴリコード
               Calendar startDate        … 掲示開始日.null指定可能(=掲示開始日未指定)
               Calendar endDate          … 掲示終了日.null指定可能(=掲示終了日未指定)
               String data               … 本文.null指定可能(=本文未入力)
               Collection attachedFiles  … 添付ファイルとなるファイルパスの集合.
                                            null指定可能(=添付ファイルを登録しない)
                                            要素は、String型またはtoString()でファイルパスを取得で
                                            きるObject
                                            要素内にnullがある場合は、NullPointerException発生
               boolean canFollow         … フォロー書込許可フラグ (true:書込可,false:書込不許可)
               String registrant         … 登録者のログイン名.null指定可能
                                            (=登録者はログインユーザ)
            戻り値
               String 登録されたガルーン２の掲示板ID 
            例外
               IOException               … 接続が確立できない等通信上のエラーが発生した場合 
               RemoteException           … ガルーン２連携用プログラム上でエラーが発生した場合
               
            処理
              [リクエスト送信処理]
               送信先   … CoopLinkコンストラクタで指定された
                           ガルーン２のURL + "/coop/coopBulletin_add"
               送信方法 … POST(multipart/form-data)
               送信パラメータ
                    【パラメータ名】   【値】
                    "title"             引数 title           (nullの場合は ""(空文字))
                    "c_code"            引数 categoryCode    (nullの場合は ""(空文字))
                    "sterm_year"        引数 startDateのYear (startDateがnullの場合は""(空文字))
                    "sterm_month"       引数 startDateのMonth(startDateがnullの場合は""(空文字))
                    "sterm_day"         引数 startDateのDay  (startDateがnullの場合は""(空文字))
                    "eterm_year"        引数 endDateのYear   (endDateがnullの場合は""(空文字))
                    "eterm_month"       引数 endDateのMonth  (endDateがnullの場合は""(空文字))
                    "eterm_day"         引数 endDateのDay    (endDateがnullの場合は""(空文字))
                    "data"              引数 data            (nullの場合は ""(空文字))
                    "file(0-n)"         引数 attachedFilesのFileストリーム
                                        (MIMETYPEは、全て application/octet-stream)
                                                             (nullの場合は、パラメータなし)
                    "can_follow"        "1" (引数 canFollow == TRUEの場合のみパラメータあり)
                    "registrant"        引数 registrant      (nullの場合は ""(空文字))
                    "app"               固定値 "bulletin" (アプリケーション名)
                    "editor"            固定値 "0" (本文の書式 ("0":テキスト,"1":HTML有効)
                    "send"              固定値 ""  (必要ないけど。。)
                    "enable_term"       引数 stratDate==null 且つ endDate==null の場合は "0"
                                        引数 stratDate!=null 又は endDate!=null の場合は "1"
              [レスポンス受信処理]
                CoopLink.processResult(java.net.HttpURLConnection hc, String context)参照
                取得したHTMLを解析
                 エラー
                    HTTPヘッダより"X-Cybozu-Error"フィールド取得 → フィールド有の場合は
                    RemortException発生
                    エラー文言 "failed in the registration of the article on the bulletin board 
                                + (ガルーン２エラーNO)"

                    HTML内より"<Header Data><CR><LF>" と "<Footer Data>"に囲まれた文字列取得
                      (文字列の形式…[要素１],[要素２])
                    要素１が1の場合は、RemortException発生
                    エラー文言 "failed in the deletion of the article Follow. 
                                + ([要素２])"
                    
                 正常
                    HTML内より"<Header Data><CR><LF>" と "<Footer Data>"に囲まれた文字列取得
                      (文字列の形式…[要素１],[要素２])
                    →要素１が0の場合正常とする
                      要素２を戻り値にセット (= 登録された掲示板ID)
              [備考]
                 本文の書式は、テキストとする(HTMLを有効にするパラメータは渡さない)

        [呼び出し方]
            ---------------------------------------------------------------------------------------
            String bulletinId = null;
            String url = "http://localhost/cgi-bin/cbgrn/grn.exe"; // GaroonのURL
            String user = "sato";                                 // ログインユーザーアカウント
            String password = "sato";                             // ログインパスワード
            String title = "タイトル";                            // タイトル
            String categoryCode = "code001";                      // カテゴリコード
            String registrant = "matsuda";                        // 差出人
            String data = "本文";                                 // 本文
            boolean canFollow = true;                             // フォロー許可あり
            Collection attachedFiles = new ArrayList();           // 添付ファイル
            attachedFiles.add("/home/test/test.txt");
            SimpleDateFormat sdf = new SimpleDateFormat();      
            sdf.setLenient( false );
            sdf.applyPattern( "yyyy-MM-dd" );
            Calendar sCal = Calendar.getInstance();
            sCal.setTime(sdf.parse("2006-12-25"));                // 開始日
            Calendar eCal = Calendar.getInstance();
            eCal.setTime(sdf.parse("2006-12-31"));                // 終了日

            // Garoonへの接続&認証(ガルーンのURL,ログイン名,パスワード)
            CoopLink bulletinLink = new CoopLink(url, user, password);

            // Garoonに掲示情報を送信
            bulletinId=bulletinLink.putBulletinAdd(title,         // タイトル
                                                   categoryCode,  // カテゴリコード
                                                   sCal,          // 掲示期間開始日
                                                   eCal,          // 掲示期間終了日
                                                   data,          // 本文
                                                   attachedFiles, // 添付ファイル
                                                   canFollow,     // フォロー書込許可
                                                   registrant);   // 差出人
            // ガルーンとの接続終了
            bulletinLink.logout();
            //掲示板IDを表示
            System.out.println(bulletinId);
            ---------------------------------------------------------------------------------------


    (イ) 掲示板更新
        [ファイル名]
            /jp/co/cybozu/CoopLink.java (garoon2.jar)
        [クラス]
            jp.co.cybozu.CoopLink
        [メソッド]
            putBulletinModify
        [概要]
            インスタンス作成時に指定されたURLのガルーン２に対し
            掲示板情報(更新)のHTTPリクエスト送信し、ガルーン２からのレスポンスを取得する
        [機能]
            ガルーン２に掲示板情報(更新)のパラメータをHTTPでPOSTすることができる
            ガルーン２からのレスポンスを取得し、結果をリターンすることができる
            正常に更新された場合は、掲示板IDを返す、エラーの場合は、例外をthrowする
            更新項目としてパラメータとして渡されるのは、標題、開始日、終了日、本文、
            添付ファイル、フォロー許可・不許可とする
            (カテゴリコード以外 → システム管理 掲示の移動にあたるため、別機能扱い)
            更新に必要なパラメータを全て渡すことで置き換えることとする
            (即ち１項目のみを変更、他項目は既存値適用ということはできない)
            
        [仕様]
            引数
               long articleId            … 更新対象の掲示板ID
               String title              … 掲示板の標題
               Calendar startDate        … 掲示開始日.null指定可能(=掲示開始日未指定)
               Calendar endDate          … 掲示終了日.null指定可能(=掲示終了日未指定)
               String data               … 本文.null指定可能(=本文未入力)
               Collection attachedFiles  … 添付ファイルとなるファイルパスの集合.
                                            null指定可能(=添付ファイル登録しない)
                                            要素は、String型またはtoString()でファイルパスを取得で
                                            きるObject
                                            要素内にnullがある場合は、NullPointerException発生
               boolean canFollow         … フォロー書込許可フラグ (true:書込可,false:書込不許可)
               String registrant         … 更新者のログイン名.null指定可能
                                            (=更新者はログインユーザ)
            戻り値
               String 更新されたガルーン２の掲示板ID 
            例外
               IOException               … 接続が確立できない等通信上のエラーが発生した場合 
               RemoteException           … ガルーン２連携用プログラム上でエラーが発生した場合
            処理
              [リクエスト送信処理]
               送信先   … CoopLinkコンストラクタで指定された
                           ガルーン２のURL + "/coop/coopBulletin_modify"
               送信方法 … POST(multipart/form-data)
               送信パラメータ
                    【パラメータ名】   【値】
                    "aid"               引数 articleId
                    "title"             引数 title           (nullの場合は ""(空文字))
                    "sterm_year"        引数 startDateのYear (startDateがnullの場合は""(空文字))
                    "sterm_month"       引数 startDateのMonth(startDateがnullの場合は""(空文字))
                    "sterm_day"         引数 startDateのDay  (startDateがnullの場合は""(空文字))
                    "eterm_year"        引数 endDateのYear   (endDateがnullの場合は""(空文字))
                    "eterm_month"       引数 endDateのMonth  (endDateがnullの場合は""(空文字))
                    "eterm_day"         引数 endDateのDay    (endDateがnullの場合は""(空文字))
                    "data"              引数 data            (nullの場合は ""(空文字))
                    "file(0-n)"         引数 attachedFilesのFileストリーム
                                                             (nullの場合は、パラメータなし)
                                        (MIMETYPEは、全て application/octet-stream)
                    "can_follow"        固定値 "1" (引数 canFollow == TRUEの場合のみパラメータあり)
                    "registrant"        引数 registrant      (nullの場合は ""(空文字))
                    "app"               固定値 "bulletin"    (アプリケーション名)
                    "editor"            固定値 "0"           (書式編集用)
                    "send"              固定値 ""            (必要ないけど。。)
                    "enable_term"       引数 stratDate==null 且つ endDate==null の場合は "0"
                                        引数 stratDate!=null 又は endDate!=null の場合は "1"
              [レスポンス受信処理]
                CoopLink.processResult(java.net.HttpURLConnection hc, String context)参照
                取得したHTMLを解析
                 エラー
                    HTTPヘッダより"X-Cybozu-Error"フィールド取得 → フィールド有の場合は
                    RemortException発生
                    エラー文言 "failed in the modification of the article on the bulletin board. 
                                + (ガルーン２エラーNO)"

                    HTML内より"<Header Data><CR><LF>" と "<Footer Data>"に囲まれた文字列取得
                      (文字列の形式…[要素１],[要素２])
                    要素１が1の場合は、RemortException発生
                    エラー文言 "failed in the deletion of the article Follow. 
                                + ([要素２])"
                    
                 正常
                    HTML内より"<Header Data><CR><LF>" と "<Footer Data>"に囲まれた文字列取得
                      (文字列の形式…[要素１],[要素２])
                    →要素１が0の場合正常とする
                      要素２を戻り値にセット (= 更新された掲示板ID)
              [備考]
                 本文の書式は、テキストとする(HTMLを有効にするパラメータは渡さない)


        [呼び出し方]
            ---------------------------------------------------------------------------------------
            String bulletinId = null;
            String url = "http://localhost/cgi-bin/cbgrn/grn.exe";   // GaroonのURL
            String user = "sato";                                    // ログインユーザーアカウント
            String password = "sato";                                // ログインパスワード
            String title = "タイトル";                               // タイトル
            long aid = 18;                                           // 掲示板ID
            String registrant = "matsuda";                           // 差出人
            String data = "本文";                                    // 本文
            boolean canFollow = true;                                // フォロー許可あり
            Collection attachedFiles = new ArrayList();              // 添付ファイル
            attachedFiles.add("/home/test/test.txt");
            SimpleDateFormat sdf = new SimpleDateFormat();
            sdf.setLenient( false );
            sdf.applyPattern( "yyyy-MM-dd" );
            Calendar sCal = Calendar.getInstance();
            sCal.setTime(sdf.parse("2006-12-25"));                   // 開始日
            Calendar eCal = Calendar.getInstance();
            eCal.setTime(sdf.parse("2006-12-31"));                   // 終了日

            // Garoonへの接続&認証(ガルーンのURL,ログイン名,パスワード)
            CoopLink bulletinLink = new CoopLink(url, user, password);

            // Garoonに掲示情報を送信
            bulletinId=bulletinLink.putBulletinModify(aid,           // 掲示板ID
                                                      title,         // タイトル
                                                      sCal,          // 掲示期間開始日
                                                      eCal,          // 掲示期間終了日
                                                      data,          // 本文
                                                      attachedFiles, // 添付ファイル
                                                      canFollow,     // フォロー書込許可
                                                      registrant);   // 差出人
            // ガルーンとの接続終了
            bulletinLink.logout();
            //掲示板IDを表示
            System.out.println(bulletinId);
            ---------------------------------------------------------------------------------------

    (ウ) 掲示板削除
        [ファイル名]
            /jp/co/cybozu/CoopLink.java (garoon2.jar)
        [クラス]
            jp.co.cybozu.CoopLink
        [メソッド]
            putBulletinDelete
        [概要]
            インスタンス作成時に指定されたURLのガルーン２に対し
            掲示板情報(削除)のHTTPリクエスト送信し、ガルーン２からのレスポンスを取得する
        [機能]
            ガルーン２に掲示板情報(削除)のパラメータをHTTPでPOSTすることができる
            ガルーン２からのレスポンスを取得し、結果をリターンすることができる
            正常に削除された場合は、掲示板IDを返す、エラーの場合は、例外をthrowする
        [仕様]
            引数
               long articleId            … 削除対象の掲示板ID
               String registrant         … 削除者のログイン名.null指定可能
                                            (=削除者はログインユーザ)
            戻り値
               String 削除されたガルーン２の掲示板ID 
            例外
               IOException               … 接続が確立できない等通信上のエラーが発生した場合 
               RemoteException           … ガルーン２連携用プログラム上でエラーが発生した場合
               
            特記事項
              [リクエスト送信処理]
               送信先   … CoopLinkコンストラクタで指定された
                           ガルーン２のURL + "/coop/coopBulletin_delete"
               送信方法 … POST(application/x-www-form-urlencoded)
               送信パラメータ
                    【パラメータ名】   【値】
                    "aid"               引数 articleId
                    "registrant"        引数 registrant(nullの場合は ""(空文字))
                    "app"               固定値 "bulletin" (アプリケーション名)
              [レスポンス受信処理]
                CoopLink.processResult(java.net.HttpURLConnection hc, String context)参照
                取得したHTMLを解析
                 エラー
                    HTTPヘッダより"X-Cybozu-Error"フィールド取得 → フィールド有の場合は
                    RemortException発生
                    エラー文言 "failed in the deletion of the article on the bulletin board. 

                    HTML内より"<Header Data><CR><LF>" と "<Footer Data>"に囲まれた文字列取得
                      (文字列の形式…[要素１],[要素２])
                    要素１が1の場合は、RemortException発生
                    エラー文言 "failed in the deletion of the article Follow. 
                                + ([要素２])"
                    
                 正常
                    HTML内より"<Header Data><CR><LF>" と "<Footer Data>"に囲まれた文字列取得
                      (文字列の形式…[要素１],[要素２])
                    →要素１が0の場合正常とする
                      要素２を戻り値にセット (= 削除された掲示板ID)
        [呼び出し方]
            ---------------------------------------------------------------------------------------
            String bulletinId = null;
            String url = "http://localhost/cgi-bin/cbgrn/grn.exe"; // GaroonのURL
            String user = "sato";                                 // ログインユーザーアカウント
            String password = "sato";                             // ログインパスワード
            long aid = 18;                                        // 掲示板ID
            String registrant = "matsuda";                        // 差出人

            // Garoonへの接続&認証(ガルーンのURL,ログイン名,パスワード)
            CoopLink bulletinLink = new CoopLink(url, user, password);

            // Garoonに掲示情報を送信
            bulletinId=bulletinLink.putBulletinDelete(aid,           // 掲示板ID
                                                      registrant);   // 差出人
            // ガルーンとの接続終了
            bulletinLink.logout();
            //掲示板IDを表示
            System.out.println(bulletinId);
            ---------------------------------------------------------------------------------------

    (エ) 掲示板フォロー登録
        [ファイル名]
            /jp/co/cybozu/CoopLink.java (garoon2.jar)
        [クラス]
            jp.co.cybozu.CoopLink 
        [メソッド]
            putBulletinFollowAdd
        [概要]
            インスタンス作成時に指定されたURLのガルーン２に対し
            掲示板情報(フォロー登録)のHTTPリクエスト送信し、ガルーン２からのレスポンスを取得する
        [機能]
            ガルーン２に掲示板フォロー情報のパラメータをHTTPでPOSTすることができる
            ガルーン２からのレスポンスを取得し、結果をリターンすることができる
            正常に登録された場合は、掲示板フォローIDを返す、エラーの場合は、例外をthrowする
        [仕様]
            引数
               long articleId            … フォロー登録対象の掲示板ID
               String data               … フォロー本文.null指定可能(=本文未入力)
               Collection attachedFiles  … フォロー添付ファイルとなるファイルパスの集合.
                                            null指定可能(=添付ファイル登録しない)
                                            要素は、String型またはtoString()でファイルパスを取得で
                                            きるObject
                                            要素内にnullがある場合は、NullPointerException発生
               String registrant         … フォロー登録者のログイン名.null指定可能
                                            (=フォロー登録者はログインユーザ) 
            戻り値
               String 登録されたガルーン２の掲示板フォローID 
            例外
               IOException               … 接続が確立できない等通信上のエラーが発生した場合 
               RemoteException           … ガルーン２連携用プログラム上でエラーが発生した場合
               
            特記事項
              [リクエスト送信処理]
               送信先   … CoopLinkコンストラクタで指定された
                           ガルーン２のURL + "/coop/coopBulletin_follow_add"
               送信方法 … POST(multipart/form-data)
               送信パラメータ
                    【パラメータ名】   【値】
                    "aid"               引数 articleId
                    "data"              引数 data(=nullの場合は ""(空文字))
                    "file(0-n)"         引数 attachedFilesのFileストリーム
                                        (=nullの場合は、パラメータなし)
                                        (MIMETYPEは、全て application/octet-stream)
                    "registrant"        引数 registrant(nullの場合は ""(空文字))
                    "app"               固定値 "bulletin" (アプリケーション名)
                    "editor"            固定値 "0" (書式編集用)
                    "send"              固定値 "" (必要ないけど。。)
              [レスポンス受信処理]
                CoopLink.processResult(java.net.HttpURLConnection hc, String context)参照
                取得したHTMLを解析
                 エラー
                    HTTPヘッダより"X-Cybozu-Error"フィールド取得 → フィールド有の場合は
                    RemortException発生
                    エラー文言 "failed in the registration of the article Follow. 
                                + (ガルーン２エラーNO)"
                    HTML内より"<Header Data><CR><LF>" と "<Footer Data>"に囲まれた文字列取得
                      (文字列の形式…[要素１],[要素２])
                    要素１が1の場合は、RemortException発生
                    エラー文言 "failed in the deletion of the article Follow. 
                                + ([要素２])"
                    
                 正常
                    HTML内より"<Header Data><CR><LF>" と "<Footer Data>"に囲まれた文字列取得
                      (文字列の形式…[要素１],[要素２])
                    →要素１が0の場合正常とする
                      要素２を戻り値にセット (= 更新された掲示板ID)


        [呼び出し方]
            ---------------------------------------------------------------------------------------
            String bulletinId = null;
            String url = "http://localhost/cgi-bin/cbgrn/grn.exe";    // GaroonのURL
            String user = "sato";                                     // ログインユーザーアカウント
            String password = "sato";                                 // ログインパスワード
            long aid = 18;                                            // 掲示板ID
            String registrant = "matsuda";                            // 差出人
            String data = "フォロー本文";                             // 本文
            Collection attachedFiles = new ArrayList();               // 添付ファイル
            attachedFiles.add("/home/test/test.txt");

            // Garoonへの接続&認証(ガルーンのURL,ログイン名,パスワード)
            CoopLink bulletinLink = new CoopLink(url, user, password);

            // Garoonに掲示情報を送信
            bulletinId=bulletinLink.putBulletinFollowAdd(aid,           // 掲示板ID
                                                         data,          // 本文
                                                         attachedFiles, // 添付ファイル
                                                         registrant);   // 差出人
            // ガルーンとの接続終了
            bulletinLink.logout();
            //掲示板IDを表示
            System.out.println(bulletinId);
            ---------------------------------------------------------------------------------------

    (オ) 掲示板フォロー削除
        [ファイル名]
            /jp/co/cybozu/CoopLink.java (garoon2.jar)
        [クラス]
            jp.co.cybozu.CoopLink
        [メソッド]
            putBulletinFollowDelete
        [概要]
            インスタンス作成時に指定されたURLのガルーン２に対し
            掲示板情報(フォロー削除)のHTTPリクエスト送信し、ガルーン２からのレスポンスを取得する
        [機能]
            ガルーン２に掲示板情報(フォロー削除)のパラメータをHTTPでPOSTすることができる
            ガルーン２からのレスポンスを取得し、結果をリターンすることができる
            正常に削除された場合は、掲示板フォローIDを返す、エラーの場合は、例外をthrowする
        [仕様]
            引数
               long followId             … 削除対象の掲示板フォローID
               String registrant         … 削除者のログイン名.null指定可能
                                            (=削除者はログインユーザ)
            戻り値
               String 削除されたガルーン２の掲示板フォローID 
            例外
               IOException               … 接続が確立できない等通信上のエラーが発生した場合 
               RemoteException           … ガルーン２連携用プログラム上でエラーが発生した場合
               
            特記事項
              [リクエスト送信処理]
               送信先   … CoopLinkコンストラクタで指定された
                           ガルーン２のURL + "/coop/coopBulletin_follow_delete"
               送信方法 … POST(application/x-www-form-urlencoded)
               送信パラメータ
                    【パラメータ名】   【値】
                    "follow_id"         引数 followId
                    "registrant"        引数 registrant(nullの場合は ""(空文字))
                    "app"               固定値 "bulletin" (アプリケーション名)
              [レスポンス受信処理]
                CoopLink.processResult(java.net.HttpURLConnection hc, String context)参照
                取得したHTMLを解析
                 エラー
                    HTTPヘッダより"X-Cybozu-Error"フィールド取得 → フィールド有の場合は
                    RemortException発生
                    エラー文言 "failed in the deletion of the article Follow. 
                                + (ガルーン２エラーNO)"
                    HTML内より"<Header Data><CR><LF>" と "<Footer Data>"に囲まれた文字列取得
                      (文字列の形式…[要素１],[要素２])
                    要素１が1の場合は、RemortException発生
                    エラー文言 "failed in the deletion of the article Follow. 
                                + ([要素２])"
                    
                 正常
                    HTML内より"<Header Data><CR><LF>" と "<Footer Data>"に囲まれた文字列取得
                      (文字列の形式…[要素１],[要素２])
                    →要素１が0の場合正常とする
                      要素２を戻り値にセット  (= 削除された掲示板フォローID)
        [呼び出し方]
            ---------------------------------------------------------------------------------------
            String articlefollow = null;
            String url = "http://localhost/cgi-bin/cbgrn/grn.exe"; // GaroonのURL
            String user = "sato";                                 // ログインユーザーアカウント
            String password = "sato";                             // ログインパスワード
            long articlefollowID = 1;                             // 掲示板ID
            String registrant = "matsuda";                        // 差出人

            // Garoonへの接続&認証(ガルーンのURL,ログイン名,パスワード)
            CoopLink bulletinLink = new CoopLink(url, user, password);

            // Garoonに掲示情報を送信
            articlefollow=bulletinLink.putBulletinDelete(
                                                       articlefollowID, // 掲示板ID
                                                       registrant);     // 差出人
            // ガルーンとの接続終了
            bulletinLink.logout();
            //掲示板IDを表示
            System.out.println(articlefollow);
            ---------------------------------------------------------------------------------------

3.ガルーン連携（PHP）
    (ア) 掲示板登録
        [ファイル名]
            coopBulletin_add.csp
        [概要]
            ガルーン２へ掲示板の登録を行う
        [機能]
            ガルーン２における掲示板登録の機能を有する(下書き保存機能はなし)
            カテゴリの指定については、カテゴリコードを指定する
            正常終了した場合は,登録された掲示板IDを独自形式のHTMLで表示する
        [仕様]
            受信データ仕様
                項目名      |説明
                ------------+--------------------------------------------------
                title       |標題を指定します。
                c_code      |カテゴリコードを指定
                enable_term |期間指定 (0:指定しない,1:指定する)
                sterm_year  |掲示期間開始年 ※期間指定=1の場合のみ有効
                            |有効値 "" または システム日付(年) ～ 2030
                sterm_month |掲示期間開始月 ※期間指定=1の場合のみ有効
                            |有効値 "" または 1 ～ 12
                sterm_day   |掲示期間開始日 ※期間指定=1の場合のみ有効
                            |有効値 "" または 1 ～ 31
                eterm_year  |掲示期間終了年 ※期間指定=1の場合のみ有効
                            |有効値 "" または システム日付(年) ～ 2030
                eterm_month |掲示期間終了月 ※期間指定=1の場合のみ有効
                            |有効値 "" または 1 ～ 12
                eterm_day   |掲示期間終了日 ※期間指定=1の場合のみ有効
                            |有効値 "" または 1 ～ 31
                data        |本文
                editor      |本文の書式 (0:テキスト,1=書式編集)  
                            |現状は 0(テキスト)しかこない
                send        |登録コマンド (valueは空) 未使用のはず
                can_follow  |フォローの許可の場合のみ (1:許可) 
                            |(不許可の場合は、パラメータ自体わたらない)
                file(0-n)   |添付ファイル
                registrant  |coopLoginにて使用 登録者指定(→このユーザーでLoginAs)
                            |パラメータがなければログインユーザーで登録
                app         |coopLoginにて使用"bulletin"
            処理
              同フォルダ内のcoopLogin.csp をincludeする(ログインチェック,アプリケーションチェック)
              →ファイルがなければ "PageNotFound"エラー
              ---coopLogin.csp内処理-------------------------------------------------
                  セッションIDよりログインチェック
                  パラメータ["app"]のアプリケーションの停止チェック
                  パラメータ["registrant"]のチェック(ある場合は、registrantで再Login)
              -----------------------------------------------------------------------
              パラメータ["c_code"]より掲示板のカテゴリIDを取得
              →取得できなければ、"GRN_BLLT_16002"エラー
              パラメータ["title"]について、改行コード(\r\n,\n,\r)削除,101文字以降削除
              パラメータ["enable_term"]が "1"の場合に日付チェック(sterm_xxx,eterm_xxx)
                許容される日付は1972/01/01～2030/12/31
                →範囲外の場合は、エラー(FW00030)
              掲示板アプリケーションクラス→sendArticleで、添付ファイル以外の情報を登録
              sendAricle戻り値の掲示板オブジェクトのaddFileで、掲示板情報に添付ファイル付加
              掲示板オブジェクトより掲示板IDを取得→HTML吐き出し
            備考
              アクセス権のチェック → 画面登録時と同じ
                                      (カテゴリに対する閲覧・書込権限なければエラー)
              日付のチェック → 以下いづれかに該当する場合は、エラー
                                 システム日付 < 開始日
                                 システム日付 < 終了日
                                 開始日 > 終了日
                                 開始日 > 2030/12/31
                                 終了日 > 2030/12/31
                                 日付でない(ex 2006/12/a)
                                以下の場合は、無効(指定が""になる？)
                                 カレンダーにない日付？(ex 200612/33)
              カテゴリチェック → パラメータ["c_code"]がない、カテゴリIDが取得できない場合はエラー
              掲示期間 → パラメータ["enable_term"] = 0 であれば 問答無用で期間設定なし

    (イ) 掲示板更新
        [ファイル名]
            coopBulletin_modify.csp
        [概要]
            ガルーン２へ掲示板の更新を行う
        [機能]
            ガルーン２における掲示板更新機能を有する(下書き保存機能はなし)
            掲示板の指定は、掲示板IDを使用
            正常終了した場合は,更新された掲示板IDを独自形式のHTMLで表示する
        [仕様]
            受信データ仕様
                項目名      |説明
                ------------+--------------------------------------------------
                aid         |更新したい掲示板の掲示板IDを指定
                title       |標題を指定します。
                enable_term |期間指定 0:指定しない,1:指定する
                sterm_year  |掲示期間開始年 ※期間指定=1の場合のみ有効
                            |有効値 "" または システム日付(年) ～ 2030
                sterm_month |掲示期間開始月 ※期間指定=1の場合のみ有効
                            |有効値 "" または 1 ～ 12
                sterm_day   |掲示期間開始日 ※期間指定=1の場合のみ有効
                            |有効値 "" または 1 ～ 31
                eterm_year  |掲示期間終了年 ※期間指定=1の場合のみ有効
                            |有効値 "" または システム日付(年) ～ 2030
                eterm_month |掲示期間終了月 ※期間指定=1の場合のみ有効
                            |有効値 "" または 1 ～ 12
                eterm_day   |掲示期間終了日 ※期間指定=1の場合のみ有効
                            |有効値 "" または 1 ～ 31
                data        |本文
                editor      |本文の書式 (0:テキスト,1=書式編集)  
                            |現状は 0(テキスト)しかこない
                send        |登録コマンド (valueは空) 未使用
                can_follow  |フォローの許可の場合のみ (1:許可) 
                            |(不許可の場合は、パラメータ自体わたらない)
                file(0-n)   |添付ファイル
                registrant  |coopLoginにて使用 登録者指定(→このユーザーでLoginAs)
                            |パラメータがなければログインユーザーで登録
                app         |coopLoginにて使用"bulletin"
            処理
              同フォルダ内のcoopLogin.csp をincludeする(ログインチェック,アプリケーションチェック)
              →ファイルがなければ "PageNotFound"エラー
              ---coopLogin.csp内処理-------------------------------------------------
                  セッションIDよりログインチェック
                  パラメータ["app"]のアプリケーションの停止チェック
                  パラメータ["registrant"]のチェック(ある場合は、registrantで再Login)
              -----------------------------------------------------------------------
              パラメータ["aid"]より該当掲示板IDの掲示板オブジェクト取得
              パラメータが存在しないまたは、テーブルにIDが存在しない場合
              →エラー(GRN_BLLT_16003)
              該当掲示板IDが変更可能かどうかチェック(登録者,アクセス権、掲示期間終了etc)
              →FALSEならエラー(GRN_BLLT_16062)
              パラメータ["title"]について、改行コード(\r\n,\n,\r)削除,101文字以降削除
              パラメータ["enable_term"]が "1"の場合に日付チェック(sterm_xxx,eterm_xxx)
                許容される日付は1972/01/01～2030/12/3
                →範囲外の場合は、エラー(FW00030)
                掲示期間の開始/終了について、許容される関係
                 システム日付 <= 開始日<=終了日
                →許容外の場合は、エラー(GRN_BLLT_16006)
              掲示板オブジェクト→setPropertiesで、添付ファイル以外の情報を更新
              掲示板オブジェクト→getFilesで、現在登録されているファイル取得 → deleteFile
              で、登録されてあるファイルを全部削除※1
              掲示板オブジェクト→addFileで、掲示板情報に添付ファイル付加
              掲示板オブジェクトより掲示板IDを取得→HTML吐き出し
            備考
              アクセス権のチェック → 画面更新時と同じ
                                      (カテゴリに対する閲覧・書込権限なければエラー
                                      登録者==更新者でなければエラー)
              日付のチェック → 以下いづれかに該当する場合は、エラー
                                 システム日付 < 開始日
                                 システム日付 < 終了日
                                 開始日 > 終了日
                                 開始日 > 2030/12/31
                                 終了日 > 2030/12/31
                                 日付でない(ex 2006/12/a)
                                以下の場合は、無効(指定が""になる)
                                 カレンダーにない日付？(ex 200612/33)
              掲示期間 → パラメータ["enable_term"] = 0 であれば 問答無用で期間設定なしとする
                          パラメータ["enable_term"] = 1 且つ ステータスが掲示済みの場合は
                          開始期間用パラメータ(sterm_xxxx)は、無効(現行の開始期間がセットされる)
              ※1登録時に添付ファイルID等返していないため、全ファイルを一旦削除→追加している。
                 このため、更新ごとに添付ファイルのファイルIDが変わってしまう仕様です。
                 ただし、ファイルID用のパラメータを渡せばよいと言うわけではない。
                 →処理抜いてある(元はsession?使ってるのかな多分)
              項目単位毎での更新不可(パラメータなければ ""(クリア)扱い,既存値セットしない)

    (ウ) 掲示板削除
        [ファイル名]
            coopBulletin_delete.csp
        [概要]
            ガルーン２へ掲示板の削除を行う
        [機能]
            ガルーン２における掲示板削除(bulletin/command_delete.csp,)と同等の機能を有する
            掲示板の指定は、掲示板IDを使用
            正常終了した場合は,削除された掲示板IDを独自形式のHTMLで表示する
        [仕様]
            受信データ仕様
                項目名      |説明
                ------------+--------------------------------------------------
                aid         |削除したい掲示板の掲示板IDを指定
                registrant  |coopLoginにて使用 削除者指定(→このユーザーでLoginAs)
                            |パラメータがなければログインユーザーで削除
                app         |coopLoginにて使用"bulletin"
            処理
              同フォルダ内のcoopLogin.csp をincludeする(ログインチェック,アプリケーションチェック)
              →ファイルがなければ "PageNotFound"エラー
              ---coopLogin.csp内処理-------------------------------------------------
                  セッションIDよりログインチェック
                  パラメータ["app"]のアプリケーションの停止チェック
                  パラメータ["registrant"]のチェック(ある場合は、registrantで再Login)
              -----------------------------------------------------------------------
              パラメータ["aid"]より該当掲示板IDの掲示板オブジェクト取得
              パラメータが存在しないまたは、テーブルにIDが存在しない場合
              →エラー(GRN_BLLT_16003)
              該当掲示板IDが削除可能かどうかチェック(登録者、アクセス権、掲示期間終了etc)
              →FALSEならエラー(GRN_BLLT_16059)
              掲示板オブジェクトより掲示板IDを取得
              掲示板オブジェクト→deleteで、掲示板削除
              掲示板IDを戻り値としてHTML吐き出し

            備考
              アクセス権のチェック → 画面削除時と同じ
                                      (カテゴリに対する閲覧・書込権限なければエラー
                                      登録者==更新者でなければエラー)

    (エ) 掲示板フォロー登録
        [ファイル名]
            coopBulletin_follow_add.csp
        [概要]
            ガルーン２へ掲示板フォロー登録を行う
        [機能]
            ガルーン２における掲示板フォロー登録機能を有する
            掲示板の指定は、掲示板IDを使用
            正常終了した場合は,登録された掲示板フォローIDを独自形式のHTMLで表示する
        [仕様]
            受信データ仕様
                項目名      |説明
                ------------+--------------------------------------------------
                aid         |フォロー登録したい掲示板の掲示板IDを指定
                data        |本文
                editor      |本文の書式 (0:テキスト,1=書式編集)  
                            |現状は 0(テキスト)しかこない
                send        |登録コマンド (valueは空)
                file(0-n)   |添付ファイル
                registrant  |coopLoginにて使用 登録者指定(→このユーザーでLoginAs)
                            |パラメータがなければログインユーザーで登録
                app         |coopLoginにて使用"bulletin"
            処理
              同フォルダ内のcoopLogin.csp をincludeする(ログインチェック,アプリケーションチェック)
              →ファイルがなければ "PageNotFound"エラー
              ---coopLogin.csp内処理-------------------------------------------------
                  セッションIDよりログインチェック
                  パラメータ["app"]のアプリケーションの停止チェック
                  パラメータ["registrant"]のチェック(ある場合は、registrantで再Login)
              -----------------------------------------------------------------------
              パラメータ["aid"]より該当掲示板IDの掲示板オブジェクト取得
              パラメータが存在しないまたは、テーブルにIDが存在しない場合
              →エラー(GRN_BLLT_16003)
              該当掲示板IDがフォロー許可有かどうかチェック
              →FALSEならエラー(Not allow writing the follow in the article.)
              パラメータ["data"]及び["file0-n"]が存在しないまたは空の場合
              →エラー(GRN_BLLT_16016)
              掲示板オブジェクト→writeFollowにて掲示板登録
              上記戻り値フォローオブジェクトのフォローIDをHTML
            備考
              アクセス権のチェック → 画面登録時と同じ(カテゴリに対する閲覧・フォロー権限なければエラー)

    (オ) 掲示板フォロー削除
        [ファイル名]
            coopBulletin_follow_delete.csp
        [概要]
            ガルーン２へ掲示板フォロー削除を行う
        [機能]
            ガルーン２における掲示板削除(bulletin/command_follow_delete.csp)と同等の機能を有する
            フォローの指定は、掲示板フォローIDを使用
            正常終了した場合は,削除された掲示板フォローIDを独自形式のHTMLで表示する
        [仕様]
            受信データ仕様
                項目名      |説明
                ------------+--------------------------------------------------
                follow_id   |削除したい掲示板の掲示板フォローIDを指定
                registrant  |coopLoginにて使用 削除者指定(→このユーザーでLoginAs)
                            |パラメータがなければログインユーザーで削除
                app         |coopLoginにて使用"bulletin"
            処理
              同フォルダ内のcoopLogin.csp をincludeする(ログインチェック,アプリケーションチェック)
              →ファイルがなければ "PageNotFound"エラー
              ---coopLogin.csp内処理-------------------------------------------------
                  セッションIDよりログインチェック
                  パラメータ["app"]のアプリケーションの停止チェック
                  パラメータ["registrant"]のチェック(ある場合は、registrantで再Login)
              -----------------------------------------------------------------------
              GRN_Bulletin_FollowManagerのインスタンス取得
              パラメータ["follow_id"]より該当掲示板フォローIDの存在チェック
              パラメータが存在しないまたは、テーブルにIDが存在しない場合
              →エラー(GRN_BLLT_16004)
              上記インスタンスよりパラメータ["follow_id"]のフォローオブジェクト取得
              →FALSEならエラー(GRN_BLLT_16004)
              フォローオブジェクトより掲示板フォローIDを取得
              フォローオブジェクト→deleteで、掲示板フォロー削除
              掲示板フォローIDを戻り値としてHTML吐き出し

            備考
              アクセス権のチェック → 画面削除時と同じ
                                      (カテゴリに対する閲覧・書込権限なければエラー
                                      登録者==更新者でなければエラー)


4.その他
[環境]
・ガルーンサーバー側
  →以下のフォルダにガルーン連携(PHP)用プログラム cspファイル配置
  [ガルーン２インストールディレクトリ]/code/doc_root/coop/coopBulletin_add.csp  (掲示板登録用)
                                                          coopBulletin_delete.csp (掲示板削除用)
                                                          coopBulletin_follow_add.csp (掲示板フォロー登録用)
                                                          coopBulletin_follow_delete.csp (掲示板フォロー削除用)
                                                          coopBulletin_modify.csp (掲示板更新用)
                                                          coopLogin.csp  (全アプリ共通処理)
  ※ガルーン2をバージョンアップした時点でcoopディレクトリは削除されます。
    バージョンアップ作業を実施した場合には、再度、coopディレクトリを配置する必要がある


・連携用マシン(ガルーンサーバと兼ねても可)
  jre1.4以降をインストール
  [jreインストールディレクトリ]/lib/ext/にガルーン連携（JAVA）用プログラムgaroon2.jarをコピー
  もしくは、 実行時にクラスパスを通す
  サンプルプログラムについては、適当なディレクトリにあれば良し

[注意事項]
・サンプルプログラムについて
  →あくまでもガルーン連携（JAVA）用プログラムgaroon2.jarの使い方の一例としてのプログラム

・ガルーン連携（JAVA）用プログラムgaroon2.jar →登録、更新、フォロー登録について
          OutOfMemory 出る可能性あり（20M以上(環境により異なる)大きなファイルを添付登録できない)
→http://agent.corp.cybozu.co.jp/scripts/cbdb/db.exe?page=DBRecord&did=13984&qid=164&vid=54&rid=155&Head=&hid=&sid=5&rev=&ssid=&#comment

以上

作成日  2007/01/15
作成者  tsukurimichi
version 1.0