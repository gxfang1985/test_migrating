スケジュール プログラム仕様書

0.目次
-------------------------------------------------------------------
    0.目次
    1.サンプルプログラム
        1-(ア) スケジュール登録
        1-(イ) スケジュール更新
        1-(ウ) スケジュール削除
    2.ガルーン連携（JAVA）用プログラム
        2-(ア) スケジュール登録
        2-(イ) スケジュール更新
        2-(ウ) スケジュール削除
    3.ガルーン連携（PHP）用プログラム
        3-(ア) スケジュール登録
        3-(イ) スケジュール更新
        3-(ウ) スケジュール削除
    4.その他
-------------------------------------------------------------------

1.サンプルプログラム
    (ア) スケジュール登録
        [ファイル名]
            CmdScheduleAdd.java
        [クラス名]
            CmdScheduleAdd
        [概要]
            コマンドラインよりガルーン２へスケジュールの登録を行う
        [機能]
            コマンドラインより任意のガルーン２へスケジュール(通常・期間予定のみ対応)登録を行うこと
            ができる
            指定できるオプションのガイダンスを表示することができる
            実行結果を表示することができる
            例外発生時は、エラー内容を表示することができる
        [仕様]
            メソッド
                ・usage        ガイダンスの表示
                    パラメータ    なし
                    戻り値        なし
                    処理          ガイダンスを標準エラー出力に出力する
                ・main         メイン処理
                    パラメータ   String args[]  コマンドライン実行する場合の引数
                        ① -h    （ガイダンスの表示用）
                        ② -o    ガルーン２のURL
                        ③ -u    ガルーン２のログイン名
                        ④ -p    ③のパスワード
                        ⑤ -r    スケジュールを登録するユーザのログイン名
                        ⑥ -k    スケジュール区分(0:通常予定,1:期間予定)
                        ⑦ -sd   スケジュールの開始日（yyyy-MM-dd形式）
                        ⑧ -ed   スケジュールの終了日（yyyy-MM-dd形式）
                        ⑨ -st   スケジュールの開始時刻（H:mm形式）
                        ⑩ -et   スケジュールの終了時刻（H:mm形式）
                        ⑪ -tm   スケジュールメニュー
                        ⑫ -t    スケジュールタイトル
                        ⑬ -a    スケジュール参加者のログイン名(複数指定可能)
                        ⑭ -fc   スケジュール施設コード(複数指定可能)
                        ⑮ -pr   (スケジュールを非公開にする)
                        ⑯ -m    スケジュールのメモ

                        ※②～⑭,⑯は、次の要素に値を指定することとする(例.-u sato)
                        ※①～⑯は、順不同とする
                    戻り値        なし
                    処理
                        ① argsの要素数が０の場合は、ガイダンスを表示し処理を抜ける
                        ② args の要素より規定の文字列があった場合は、次の要素を変数に格納する※
                        ③ ガルーン２へ接続、ログイン (クラス   CoopLink コンストラクタ呼び出し)
                        ④ ガルーン２へスケジュール情報(登録)を送信 
                                                     (メソッド CoopLink.putScheduleAdd 呼び出し)
                        ⑤ ガルーン２をログアウト    (メソッド CoopLink.logout 呼び出し)
                        ⑥ 登録したスケジュールのスケジュールIDを標準エラー出力に出力
                    特記事項
                        例外が発生した場合は、エラー内容が標準エラー出力に出力される
                        catchしているエラー
                          ・ParserException
                          ・RemoretException
                          ・IOException
                          ・IllegalArgumentException
                          ・NullPointerException
                        ※スケジュール区分について、初期値=0(通常予定)とする
                          →即ち区分のパラメータが存在しない場合は、通常予定扱い
                        ※参加者が指定されていない場合は、ガイダンスを表示し、処理を抜ける
                        ※URL,ログイン名、パスワード、区分、開始日、終了日がそれぞれ指定されて
                          いない場合は、標準入力での再入力を求める
                          区分については、(0,1)以外の値のときも再度入力を求める
                        ※指定されたパラメータ(①～⑯)以外の引数がargsに渡された場合は、ガイダンス
                          を表示し、処理を抜ける
        [使い方]
            #java CmdScheduleAdd -o http://localhost/scripts/cbgrn/grn.exe 
                                 -u "Administrator" -p "admin" -r user1
                                 -k 1 -sd "2007-1-15" -ed "2007-1-17"
                                 -tm "出張" -t "大阪支社" 
                                 -a "user1" -a "user2" -m "9:00 玄関集合"
                                 -fc car001
            ※実際には１行。
            →[結果] localhostのガルーンに対して、
                     以下のスケジュール(期間予定)が登録される
                     ・登録者  ：A(ログインアカウント=user1)
                     ・更新者  ：A(ログインアカウント=user1)
                     ・日付    ：2007年1月15日～2007年1月17日
                     ・タイトル：出張:大阪支社
                     ・施設    ：軽４-01号 (施設コード=001)
                     ・参加者  ：A(ログインアカウント=user1),
                                 B(ログインアカウント=user2)
                     ・メモ    ：9:00 玄関集合

                     登録されたスケジュールIDが表示される → 100

    (イ) スケジュール更新
        [ファイル名]
            CmdScheduleModify.java
        [クラス名]
            CmdScheduleModify
        [概要]
            コマンドラインよりガルーン２へスケジュールの更新を行う
        [機能]
            コマンドラインより任意のガルーン２へスケジュール(通常・期間予定のみ対応)の更新を行う
            ことができる
            指定できるオプションのガイダンスを表示することができる
            実行結果を表示することができる
            例外発生時は、エラー内容を表示することができる
        [仕様]
            メソッド
                ・usage        ガイダンスの表示
                    パラメータ    なし
                    戻り値        なし
                    処理          ガイダンスを標準エラー出力に出力する
                ・main         メイン処理
                    パラメータ   String args[]  コマンドライン実行する場合の引数
                        ① -h    （ガイダンスの表示用）
                        ② -o    ガルーン２のURL
                        ③ -u    ガルーン２のログイン名
                        ④ -p    ③のパスワード
                        ⑥ -id   更新したいスケジュールのスケジュールID
                        ⑤ -r    スケジュールを更新するユーザのログイン名
                        ⑦ -sd   スケジュールの開始日（yyyy-MM-dd形式）
                        ⑧ -ed   スケジュールの終了日（yyyy-MM-dd形式）
                        ⑨ -st   スケジュールの開始時刻（H:mm形式）
                        ⑩ -et   スケジュールの終了時刻（H:mm形式）
                        ⑪ -tm   スケジュールメニュー
                        ⑫ -t    スケジュールタイトル
                        ⑬ -a    スケジュール参加者のログイン名(複数指定可能)
                        ⑭ -fc   スケジュール施設コード(複数指定可能)
                        ⑮ -pr   (スケジュールを非公開にする)
                        ⑯ -m    スケジュールのメモ
                        ※②～⑭,⑯は、次の要素に値を指定することとする(例.-u sato)
                        ※①～⑯は、順不同とする
                    戻り値        なし
                    処理
                        ① argsの要素数が０の場合は、ガイダンスを表示し処理を抜ける
                        ② args の要素より規定の文字列があった場合は、次の要素を変数に格納する※
                        ③ ガルーン２へ接続、ログイン (クラス   CoopLink コンストラクタ呼び出し)
                        ④ ガルーン２へスケジュール情報を送信 
                                                  (メソッド CoopLink.putScheduleModify 呼び出し)
                        ⑤ ガルーン２をログアウト (メソッド CoopLink.logout 呼び出し)
                        ⑥ 更新したスケジュールのスケジュールIDを標準エラー出力に出力
                    特記事項
                        例外が発生した場合は、エラー内容が標準エラー出力に出力される
                        catchしているエラー
                          ・ParserException
                          ・RemoretException
                          ・IOException
                          ・IllegalArgumentException
                          ・NullPointerException
                        ※参加者が指定されていない場合は、ガイダンスを表示し、処理を抜ける
                        ※URL,ログイン名、パスワード、スケジュールID、開始日、終了日がそれぞれ指定
                          されていない場合は、標準入力での再入力を求める
                        ※指定されたパラメータ(①～⑯)以外の引数がargsに渡された場合は、ガイダンス
                          を表示し、処理を抜ける
        [使い方]
            #java CmdScheduleModify -o http://localhost/scripts/cbgrn/grn.exe
                                    -u "Administrator" -p "admin" -r user2
                                    -id 100 -sd "2007-1-15" -ed "2007-1-17"
                                    -tm "出張" -t "大阪支社" 
                                    -a "user1" -a "user2" -a user3 -m "9:30 玄関集合"
                                    -fc car001

            ※実際には１行。
            →[結果] localhostのガルーンに対して、
                     以下のスケジュール(=スケジュールID 100)が更新される
                     ・登録者  ：A(ログインアカウント=user1)
                     ・更新者  ：B(ログインアカウント=user2)
                     ・日付    ：2007年1月15日～2007年1月17日
                     ・タイトル：出張:大阪支社
                     ・施設    ：軽４-01号 (施設コード=001)
                     ・参加者  ：A(ログインアカウント=user1),
                                 B(ログインアカウント=user2)
                                 C(ログインアカウント=user3)
                     ・メモ    ：9:30 玄関集合
                     登録されたスケジュールIDが表示される → 100

(ウ) スケジュール削除
        [ファイル名]
            CmdScheduleDelete.java
        [クラス名]
            CmdScheduleDelete
        [概要]
            コマンドラインよりガルーン２へスケジュールの削除を行う
        [機能]
            コマンドラインより任意のガルーン２へスケジュール削除(通常・期間予定のみ対応)を行うこと
            ができる
            指定できるオプションのガイダンスを表示することができる
            実行結果(削除したスケジュールID)を表示することができる
            例外発生時は、エラー内容を表示することができる
        [仕様]
            メソッド
                ・usage        ガイダンスの表示
                    パラメータ    なし
                    戻り値        なし
                    処理          ガイダンスを標準エラー出力に出力する
                ・main         メイン処理
                    パラメータ     String args[]  コマンドライン実行する場合の引数
                        ① -h    (ガイダンスの表示用）
                        ② -o    ガルーン２のURL
                        ③ -u    ガルーン２のログイン名
                        ④ -p    ③のパスワード
                        ⑤ -r    スケジュールを削除するユーザのログイン名
                        ⑥ -id   削除したいスケジュールのスケジュールID
                        ※②～⑥は、次の要素に値を指定することとする(例.-u sato)
                        ※①～⑥は、順不同とする
                    戻り値        なし
                    処理
                        ① argsの要素数が０の場合は、ガイダンスを表示し処理を抜ける
                        ② args の要素より規定の文字列があった場合は、次の要素を変数に格納する※
                        ③ ガルーン２へ接続、ログイン (クラス   CoopLink コンストラクタ呼び出し)
                        ④ ガルーン２へスケジュール情報を送信 
                                                  (メソッド CoopLink.putScheduleDelete 呼び出し)
                        ⑤ ガルーン２をログアウト (メソッド CoopLink.logout 呼び出し)
                        ⑥ 削除したスケジュールのスケジュールIDを標準エラー出力に出力
                    特記事項
                        例外が発生した場合は、エラー内容が標準エラー出力に出力される
                        catchしているエラー
                          ・RemoretException
                          ・IOException
                          ・IllegalArgumentException
                          ・NullPointerException
                        ※URL,ログイン名、パスワード、スケジュールIDがそれぞれ指定されていない場合
                          は、標準入力での再入力を求める
                        ※指定されたパラメータ(①～⑥)以外の引数がargsに渡された場合は、ガイダンス
                          を表示し、処理を抜ける
        [使い方]
            #java CmdScheduleModify -o http://localhost/scripts/cbgrn/grn.exe
                                    -u "Administrator" -p "admin" -r user2
                                    -id "100"
            ※実際には１行。
            →[結果] localhostのガルーンに対して、
                     スケジュールID=55のスケジュールについて、user2名義で削除を行う
                     削除されたスケジュールIDが表示される → 100

2.ガルーン連携（JAVA）
    (ア) スケジュール登録
        [ファイル名]
            /jp/co/cybozu/CoopLink.java(garoon2.jar)
        [クラス]
            jp.co.cybozu.CoopLink 
        [メソッド]
            putScheduleAdd
        [概要]
            インスタンス作成時に指定されたURLのガルーン２に対し
            社内スケジュール情報(登録)のHTTPリクエスト送信し、ガルーン２からのレスポンスを取得する
        [機能]
            ガルーン２にスケジュール情報(登録)のパラメータをHTTPでPOSTすることができる
            ガルーン２からのレスポンスを取得し、結果をリターンすることができる
            正常に登録された場合は、スケジュールIDを返す、エラーの場合は、例外をthrowする
        [仕様]
            引数
               int eventKind              … スケジュール区分(1:期間予定,1以外:通常予定 )
                                             null指定可能(=通常予定)
               String titleMenu           … スケジュールのタイトルメニュー.
                                             null指定可能(=タイトルメニュー未入力)
               String title               … スケジュールのタイトル.null指定可能(=タイトル未入力)
               String eventPrivate        … 公開方法(1:非公開 ,1以外:公開 )
                                             null指定可能(=公開)
               String detail              … スケジュールのメモ.null指定可能(=本文未入力)
               Calendar startDate         … スケジュール開始日
               Calendar endDate           … スケジュール終了日
               Calendar startTime         … スケジュール開始時刻.
                                             null指定可能(=スケジュール開始時刻無指定)
               Calendar endTime           … スケジュール終了時刻.
                                             null指定可能(=スケジュール終了時刻無指定)
               Collection userAccounts    … スケジュール参加者となるログイン名の集合.
                                             要素は、String型またはtoString()でログイン名を取得でき
                                             るObject
                                             要素内にnullがある場合は、NullPointerException発生
               Collection facilitiesCodes … 予約するガルーン２の施設コードの集合.
                                             null指定可能(施設予約なし)
                                             要素は、String型またはtoString()で施設コードを取得でき
                                             るObject
                                             要素内にnullがある場合は、NullPointerException発生
               String registrant          … 登録者のログイン名.null指定可能(登録者はログインユーザ) 
            戻り値
               String 登録されたガルーン２のスケジュールID 
            例外
               IOException               … 接続が確立できない等通信上のエラーが発生した場合 
               RemoteException           … ガルーン２連携用プログラム上でエラーが発生した場合
               
            処理
              [リクエスト送信処理]
               送信先   … CoopLinkコンストラクタで指定された
                           ガルーン２のURL + "/coop/coopSchedule_add"
               送信方法 … POST(application/x-www-form-urlencoded)
               送信パラメータ
                   【パラメータ名】   【値】
                    "BN"                固定値"1"     (引数 eventKind==1 の場合のみパラメータあり)
                    "menu"              引数 titleMenu(nullの場合は ""(空文字))
                    "title"             引数 title    (nullの場合は ""(空文字))
                    "private"           引数 eventKind != 1 且つ 引数 eventPrivate == 1の場合は "1" 
                                        引数 eventKind != 1 且つ 引数 eventPrivate != 1の場合は "0" 
                    "memo"              引数 detail   (nullの場合は ""(空文字))
                    "user_account[]"    引数 userAccounts !=nullの場合の各要素.toString()
                                        (条件にマッチしない場合はパラメータなし)
                                        ※同パラメータ名で複数の値を渡す
                                         user_account[] = "user1"
                                         user_account[] = "user2"
                    "sITEM_CODE[]"      引数 eventKind != 1 且つ 引数 facilitiesCodes !=nullの場合
                                        は各要素.toString() (条件にマッチしない場合はパラメータなし)
                                        ※同パラメータ名で複数の値を渡す
                                         sITEM_CODE[] = "code1"
                                         sITEM_CODE[] = "code2"
                    "bdate"             引数 startDateのyyyy/mm/dd形式文字列
                                                             (startDateがnullの場合は ""(空文字))
                    "start_year"        引数 startDateのYear (startDateがnullの場合は""(空文字))
                    "start_month"       引数 startDateのMonth(startDateがnullの場合は""(空文字))
                    "start_day"         引数 startDateのDay  (startDateがnullの場合は""(空文字))
                    "start_hour"        引数 startTimeのHOUR_OF_DAY
                                        (startTime==nullまたはeventKind==1の場合は""(空文字))
                    "start_minute"      引数 startTimeのMINUTE
                                        (startTime==nullまたはeventKind==1の場合は""(空文字))
                    "end_year"          引数 endDateのYear   (endDateがnullの場合は""(空文字))
                    "end_month"         引数 endDateのMonth  (endDateがnullの場合は""(空文字))
                    "end_day"           引数 endDateのDay    (endDateがnullの場合は""(空文字))
                    "end_hour"          引数 endTimeのHOUR_OF_DAY
                                        (endTime==nullまたはeventKind==1の場合は""(空文字))
                    "end_minute"        引数 endTimeのMINUTE
                                        (endTime==nullまたはeventKind==1の場合は""(空文字))
                    "registrant"        引数 registrant(nullの場合は ""(空文字))
                    "app"               固定値 "schedule" (アプリケーション名)
              [レスポンス受信処理]
                CoopLink.processResult(java.net.HttpURLConnection hc, String context)参照
                取得したHTMLを解析
                 エラー
                    HTTPヘッダより"X-Cybozu-Error"フィールド取得 → フィールド有の場合は
                    RemortException発生
                    エラー文言 "failed in the registration of the schedule. 
                                + (ガルーン２エラーNO)"

                    HTML内より"<Header Data><CR><LF>" と "<Footer Data>"に囲まれた文字列取得
                      (文字列の形式…[要素１],[要素２])
                    [要素１]が1の場合は、RemortException発生
                    エラー文言 "failed in the registration of the schedule. 
                                + ([要素２])"
                    
                 正常
                    HTML内より"<Header Data><CR><LF>" と "<Footer Data>"に囲まれた文字列取得
                      (文字列の形式…[要素１],[要素２])
                    →要素１が0の場合正常とする
                      要素２を戻り値にセット (= 登録されたスケジュールID)
              [備考]

        [呼び出し方]
            ---------------------------------------------------------------------------------------
            String eventId = null;
            String url = "http://localhost/cgi-bin/cbgrn/grn.exe"; // GaroonのURL
            String user = "sato";                                 // ログインユーザーアカウント
            String password = "sato";                             // ログインパスワード
            String registrant = "matsuda";                        // 差出人
            String eventKind = "0";                               // 予定区分
            String titleMenu = "出張";                            // 予定メニュー
            String title = "秋葉原";                              // 予定タイトル
            String eventPrivate = "0";                            // 公開/非公開
            String detail = "PCの買い付け";                       // 予定メモ  
            Collection userAccount = new ArrayList();             // 参加者のユーザー名
            userAccount.add("hieda");
            userAccount.add("suzuki");
            Collection facilityCode = new ArrayList();            // 施設コード
            facilityCode.add("car01");
            SimpleDateFormat sdf = new SimpleDateFormat();      
            sdf.setLenient( false );
            sdf.applyPattern( "yyyy-MM-dd" );
            Calendar sDate = Calendar.getInstance();
            sDate.setTime(sdf.parse("2007-1-10"));                // 開始日
            Calendar eDate = Calendar.getInstance();
            eDate.setTime(sdf.parse("2007-1-15"));                // 終了日
            sdf.applyPattern( "H:mm" );
            Calendar sTime = Calendar.getInstance();
            sTime.setTime(sdf.parse("10:00"));                    // 開始時刻
            Calendar eTime = Calendar.getInstance();
            eTime.setTime(sdf.parse("21:00"));                    // 終了時刻

            // Garoonへの接続&認証(ガルーンのURL,ログイン名,パスワード)
            CoopLink scheduleLink = new CoopLink(url, user, password);

            // Garoonへスケジュール登録情報を送信
            eventId = scheduleLink.putScheduleAdd(
                                            Integer.parseInt(eventKind),// 予定区分
                                            titleMenu,                  // 予定タイトルメニュー
                                            title,                      // 予定タイトル
                                            eventPrivate,               // 公開/非公開
                                            detail,                     // 予定メモ
                                            sDate,                      // 開始日
                                            eDate,                      // 終了日
                                            sTime,                      // 開始時刻
                                            eTime,                      // 終了時刻
                                            userAccount,                // 参加者のアカウント名
                                            facilityCode,               // 施設コード
                                            registrant);                // 登録者
            // ガルーンとの接続終了
            scheduleLink.logout();
            //スケジュールIDを表示
            System.out.println(eventId);
            ---------------------------------------------------------------------------------------

    (イ) スケジュール更新
        [ファイル名]
            /jp/co/cybozu/CoopLink.java(garoon2.jar)
        [クラス]
            jp.co.cybozu.CoopLink 
        [メソッド]
            putScheduleModify
        [概要]
            インスタンス作成時に指定されたURLのガルーン２に対し
            社内スケジュール情報(更新)のHTTPリクエスト送信し、ガルーン２からのレスポンスを取得する
        [機能]
            ガルーン２にスケジュール情報(更新)のパラメータをHTTPでPOSTすることができる
            ガルーン２からのレスポンスを取得し、結果をリターンすることができる
            正常に更新された場合は、スケジュールIDを返す、エラーの場合は、例外をthrowする
        [仕様]
            引数
               long eventId               … 更新対象のスケジュールID
               String titleMenu           … スケジュールのタイトルメニュー.
                                             null指定可能(タイトルメニュー無指定)
               String title               … スケジュールのタイトル.null指定可能(タイトル未入力)
               String eventPrivate        … 公開方法(1:非公開 ,1以外:公開 )
                                             null指定可能(公開)
               String detail              … スケジュールのメモ.null指定可能(本文未入力)
               Calendar startDate         … スケジュール開始日
               Calendar endDate           … スケジュール終了日
               Calendar startTime         … スケジュール開始時刻.
                                             null指定可能(スケジュール開始時刻無指定)
               Calendar endTime           … スケジュール終了時刻.
                                             null指定可能(スケジュール終了時刻無指定)
               Collection userAccounts    … スケジュール参加者となるログイン名の集合.
                                             要素は、String型またはtoString()でログイン名を取得でき
                                             るObject
                                             要素内にnullがある場合は、NullPointerException発生
               Collection facilitiesCodes … 予約するガルーン２の施設コードの集合.
                                             null指定可能(施設予約なし)
                                             要素は、String型またはtoString()で施設コードを取得でき
                                             るObject
                                             要素内にnullがある場合は、NullPointerException発生
               String registrant          … 更新者のログイン名.
                                             null指定可能(更新者はログインユーザ)
            戻り値
               String 更新されたガルーン２のスケジュールID 
            例外
               IOException               … 接続が確立できない等通信上のエラーが発生した場合 
               RemoteException           … ガルーン２連携用プログラム上でエラーが発生した場合
               
            処理
              [リクエスト送信処理]
               送信先   … CoopLinkコンストラクタで指定された
                           ガルーン２のURL + "/coop/coopSchedule_modify"
               送信方法 … POST(application/x-www-form-urlencoded)
               送信パラメータ
                   【パラメータ名】   【値】
                    "event"             引数 eventId String変換値
                    "apply"             固定値 "all" 
                    "menu"              引数 titleMenu(nullの場合は ""(空文字))
                    "title"             引数 title    (nullの場合は ""(空文字))
                    "private"           引数 eventPrivate == 1の場合は "1" 
                                        引数 eventPrivate != 1の場合は "0" 
                    "memo"              引数 detail   (nullの場合は ""(空文字))
                    "user_account[]"    引数 userAccounts !=nullの場合の各要素.toString()
                                        (条件にマッチしない場合はパラメータなし)
                                        ※同パラメータ名で複数の値を渡す
                                         user_account[] = "user1"
                                         user_account[] = "user2"
                    "sITEM_CODE[]"      引数 facilitiesCodes !=nullの場合の各要素.toString()
                                        (条件にマッチしない場合はパラメータなし)
                                        ※同パラメータ名で複数の値を渡す
                                         sITEM_CODE[] = "code1"
                                         sITEM_CODE[] = "code2"
                    "start_year"        引数 startDateのYear (startDateがnullの場合は""(空文字))
                    "start_month"       引数 startDateのMonth(startDateがnullの場合は""(空文字))
                    "start_day"         引数 startDateのDay  (startDateがnullの場合は""(空文字))
                    "start_hour"        引数 startTimeのHOUR_OF_DAY
                                                             (startTime==nullの場合は""(空文字))
                    "start_minute"      引数 startTimeのMINUTE
                                                             (startTime==nullの場合は""(空文字))
                    "end_year"          引数 endDateのYear   (endDateがnullの場合は""(空文字))
                    "end_month"         引数 endDateのMonth  (endDateがnullの場合は""(空文字))
                    "end_day"           引数 endDateのDay    (endDateがnullの場合は""(空文字))
                    "end_hour"          引数 endTimeのHOUR_OF_DAY
                                                             (endTime==nullの場合は""(空文字))
                    "end_minute"        引数 endTimeのMINUTE
                                                             (endTime==nullの場合は""(空文字))
                    "registrant"        引数 registrant      (nullの場合は ""(空文字))
                    "app"               固定値 "schedule" (アプリケーション名)
              [レスポンス受信処理]
                CoopLink.processResult(java.net.HttpURLConnection hc, String context)参照
                取得したHTMLを解析
                 エラー
                    HTTPヘッダより"X-Cybozu-Error"フィールド取得 → フィールド有の場合は
                    RemortException発生
                    エラー文言 "failed in the modification of the schedule. 
                                + (ガルーン２エラーNO)"

                    HTML内より"<Header Data><CR><LF>" と "<Footer Data>"に囲まれた文字列取得
                      (文字列の形式…[要素１],[要素２])
                    [要素１]が1の場合は、RemortException発生
                    エラー文言 "failed in the modification of the schedule. 
                                + ([要素２])"
                    
                 正常
                    HTML内より"<Header Data><CR><LF>" と "<Footer Data>"に囲まれた文字列取得
                      (文字列の形式…[要素１],[要素２])
                    →要素１が0の場合正常とする
                      要素２を戻り値にセット (= 更新されたスケジュールID)
              [備考]

        [呼び出し方]
            ---------------------------------------------------------------------------------------
            String eventId = null;
            String url = "http://localhost/cgi-bin/cbgrn/grn.exe";// GaroonのURL
            String user = "sato";                                 // ログインユーザーアカウント
            String password = "sato";                             // ログインパスワード
            String registrant = "matsuda";                        // 差出人
            long updateEventId = 12;                              // スケジュールID
            String titleMenu = "出張";                            // 予定メニュー
            String title = "秋葉原";                              // 予定タイトル
            String eventPrivate = "0";                            // 公開/非公開
            String detail = "PCの買い付け";                       // 予定メモ  
            Collection userAccount = new ArrayList();             // 参加者のアカウント名
            userAccount.add("hieda");
            userAccount.add("sakaue");
            Collection facilityCode = new ArrayList();            // 施設コード
            facilityCode.add("car01");
            SimpleDateFormat sdf = new SimpleDateFormat();      
            sdf.setLenient( false );
            sdf.applyPattern( "yyyy-MM-dd" );
            Calendar sDate = Calendar.getInstance();
            sDate.setTime(sdf.parse("2007-1-10"));                // 開始日
            Calendar eDate = Calendar.getInstance();
            eDate.setTime(sdf.parse("2007-1-15"));                // 終了日
            sdf.applyPattern( "H:mm" );
            Calendar sTime = Calendar.getInstance();
            sTime.setTime(sdf.parse("10:00"));                    // 開始時刻
            Calendar eTime = Calendar.getInstance();
            eTime.setTime(sdf.parse("21:30"));                    // 終了時刻

            // Garoonへの接続&認証(ガルーンのURL,ログイン名,パスワード)
            CoopLink scheduleLink = new CoopLink(url, user, password);

            // Garoonへスケジュール更新情報を送信
            eventId = scheduleLink.putScheduleModify(
                                            updateEventId,              // スケジュールID
                                            titleMenu,                  // 予定タイトルメニュー
                                            title,                      // 予定タイトル
                                            eventPrivate,               // 公開/非公開
                                            detail,                     // 予定メモ
                                            sDate,                      // 開始日
                                            eDate,                      // 終了日
                                            sTime,                      // 開始時刻
                                            eTime,                      // 終了時刻
                                            userAccount,                // 参加者のアカウント名
                                            facilityCode,               // 施設コード
                                            registrant);                // 更新者
            // ガルーンとの接続終了
            scheduleLink.logout();
            //スケジュールIDを表示
            System.out.println(eventId);
            ---------------------------------------------------------------------------------------

    (ウ) スケジュール削除
        [ファイル名]
            /jp/co/cybozu/CoopLink.java(garoon2.jar)
        [クラス]
            jp.co.cybozu.CoopLink
        [メソッド]
            putScheduleDelete
        [概要]
            インスタンス作成時に指定されたURLのガルーン２に対し
            社内スケジュール情報(削除)のHTTPリクエスト送信し、ガルーン２からのレスポンスを取得する
        [機能]
            ガルーン２にスケジュール情報(削除)のパラメータをHTTPでPOSTすることができる
            ガルーン２からのレスポンスを取得し、結果をリターンすることができる
            正常に削除された場合は、スケジュールIDを返す、エラーの場合は、例外をthrowする
        [仕様]
            引数
               long eventId              … 削除対象のスケジュールID
               String registrant         … 削除者のログイン名.null指定可能(削除者はログインユーザ) 
            戻り値
               String 削除されたガルーン２のスケジュールID 
            例外
               IOException               … 接続が確立できない等通信上のエラーが発生した場合 
               RemoteException           … ガルーン２連携用プログラム上でエラーが発生した場合
               
            処理
              [リクエスト送信処理]
               送信先   … CoopLinkコンストラクタで指定された
                           ガルーン２のURL + "/coop/coopSchedule_delete"
               送信方法 … POST(application/x-www-form-urlencoded)
               送信パラメータ
                   【パラメータ名】   【値】
                    "event"             引数 eventId
                    "registrant"        引数 registrant(nullの場合は ""(空文字))
                    "member"            固定値 "0" (削除の対象となる参加者)
                    "apply"             固定値 "1" (削除する範囲)
                    "app"               固定値 "schedule" (アプリケーション名)
              [レスポンス受信処理]
                CoopLink.processResult(java.net.HttpURLConnection hc, String context)参照
                取得したHTMLを解析
                 エラー
                    HTTPヘッダより"X-Cybozu-Error"フィールド取得 → フィールド有の場合は
                    RemortException発生
                    エラー文言 "failed in the deletion of the schedule. 

                    HTML内より"<Header Data><CR><LF>" と "<Footer Data>"に囲まれた文字列取得
                      (文字列の形式…[要素１],[要素２])
                    要素１が1の場合は、RemortException発生
                    エラー文言 "failed in the deletion of the schedule. 
                                + ([要素２])"
                    
                 正常
                    HTML内より"<Header Data><CR><LF>" と "<Footer Data>"に囲まれた文字列取得
                      (文字列の形式…[要素１],[要素２])
                    →要素１が0の場合正常とする
                      要素２を戻り値にセット (= 削除されたスケジュールID)
        [呼び出し方]
            ---------------------------------------------------------------------------------------
            String scheduleId = null;
            String url = "http://localhost/cgi-bin/cbgrn/grn.exe"; // GaroonのURL
            String user = "sato";                                  // ログインユーザーアカウント
            String password = "sato";                              // ログインパスワード
            long eventId = 18;                                     // スケジュールID
            String registrant = "matsuda";                         // 差出人

            // Garoonへの接続&認証(ガルーンのURL,ログイン名,パスワード)
            CoopLink schduleLink = new CoopLink(url, user, password);

            
            // Garoonにスケジュール削除情報を送信
            scheduleId=schduleLink.putBulletinDelete(eventId,      // スケジュールID
                                                     registrant);  // 差出人
            // ガルーンとの接続終了
            schduleLink.logout();
            //スケジュールIDを表示
            System.out.println(scheduleId);
            ---------------------------------------------------------------------------------------

3.ガルーン連携（PHP）
    (ア) スケジュール登録
        [ファイル名]
            coopSchedule_add.csp
        [概要]
            ガルーン２へスケジュールの登録を行う
        [機能]
            ガルーン２におけるスケジュール登録を行う(通常予定・期間予定のみ)
            参加者の指定については、ログイン名を指定する
            施設の指定については、施設コードを指定する
            正常終了した場合は,登録されたスケジュールIDを独自形式のHTMLを返す

        [仕様]
            受信データ仕様
                項目名              |説明
                --------------------+--------------------------------------------------
                "BN"                |期間予定の場合に指定
                "menu"              |タイトルメニューを指定
                "title"             |タイトルを指定
                "private"           |公開方法の指定(0:公開,1:非公開)
                                    |("BN"がない場合のみ有効,即ち通常予定の場合のみ有効)
                "memo"              |メモの指定
                "user_account[]"    |参加者の指定(配列)
                "sITEM_CODE[]"      |施設コードの指定(配列)
                                    |("BN"がない場合のみ有効,即ち通常予定の場合のみ有効)
                "bdate"             |basedateの指定 (start_xxx の yyyy-mm-dd形式)実はいらないのでは？
                "end_year"          |スケジュール終了年 ※有効値 1972 ～ 2030
                "end_month"         |スケジュール終了月 ※有効値 1 ～ 12
                "end_day"           |スケジュール終了日 ※有効値 1 ～ 31
                "end_hour"          |スケジュール終了時間(時) ※有効値 "" または 0 ～ 23
                                    |("BN"がない場合のみ有効,即ち通常予定の場合のみ有効)
                "end_minute"        |スケジュール終了時間(分) ※有効値 "" または 0 ～ 59
                                    |("BN"がない場合のみ有効,即ち通常予定の場合のみ有効)
                "registrant"        |coopLoginにて使用 登録者指定(→このユーザーでLoginAs)
                                    |パラメータがない又は""(空文字)の場合ログインユーザーで登録
                "app"               |coopLoginにて使用"schedule"

            処理
              同フォルダ内のcoopLogin.csp をincludeする(ログインチェック,アプリケーションチェック)
              →ファイルがなければ "PageNotFound"エラー
              ---coopLogin.csp内処理-------------------------------------------------
                  セッションIDよりログインチェック
                  パラメータ["app"]のアプリケーションの停止チェック
                  パラメータ["registrant"]のチェック(ある場合は、registrantで再Login)
              -----------------------------------------------------------------------
              パラメータ["PR"],["temporary"]がないかチェック(繰返し予定、仮予定の区分パラメータ)
              →パラメータ変数["PR"],["temporary"]を削除、通常予定扱いとする
                (本来JAVA CoopLink側からは、わたってこないはず)
              パラメータ["BN"]が存在する場合(=期間予定)に、以下のパラメータ変数を削除
                ・パラメータ["start_hour"] 
                ・パラメータ["start_minute"]
                ・パラメータ["end_hour"]
                ・パラメータ["end_minute"]
                ・パラメータ["private"]
                ・パラメータ["sItem_CODE[]"]
              パラメータ["bdate"]が日付変換できなければ今日の日付をセット
              パラメータ["user_account"]からユーザーIDの取得
                パラメータが存在しない→エラー(GRN_SCHD_13021)
                取得できない          →エラー(GRN_CMMN_00105)
              日付のチェック(start_xxx,end_xxxx)
               スケジュールの開始/終了について許容される日付は1972/01/01～2030/12/3
                →範囲外の場合は、エラー(FW00030)
              一般設定のチェック
               [システム管理>スケジュールの一般設定]にある項目と齟齬が出ないかチェック
                ・時刻単位のチェック
                  パラメータ["start_minite","end_minute"] を
                  項目[予定（予約）を設定する単位(分)]の設定値で割り,剰余が0でない
                  →エラー(FW00030)
                  ※予定（予約）を設定する単位(分)(↑で分母になりうる値)が 0であることはない。
                ・非公開登録のチェック
                  項目[非公開の予定]の設定値がFALSEの場合に、
                  パラメータ["private"]==1(即ち非公開) がある場合
                  →エラー(Not allow registration the private Schedule.)
              パラメータ["sITEM_CODE"]より施設IDの取得
                →取得できない場合はエラー(GRN_SCHD_13203)
              パラメータ["menu"] について、改行コード(\r\n,\n,\r)削除,101文字以降削除
              パラメータ["title"]について、改行コード(\r\n,\n,\r)削除,101文字以降削除
              アクセス権のチェック(→通常画面と同じ)
              スケジュールアプリケーションクラス→entryEventで、スケジュール情報を登録
              予定期間がシステム日付以降にもある場合は、通知処理を行う
              通知相手は、参加者のみ(公開先の指定パラメータ未対応)
              登録されたイベントオブジェクトよりID取得
              スケジュールIDを戻り値としてHTML吐き出し
            備考
              アクセス権のチェック 
                → 画面登録時と同じ
                   (ユーザー,組織、ロール、施設に対する閲覧・書込権限なければエラー)
              日付のチェック → 以下いづれかに該当する場合は、エラー
                                 開始日 > 終了日
                                 開始日 < 1972/01/01
                                 終了日 < 1972/01/01
                                 開始日 > 2030/12/31
                                 終了日 > 2030/12/31
                                 日付でない(ex 2006/12/a)
                                 カレンダーにない日付？(ex 2006/12/33)
                                 パラメータがない(start_xxxx == "",end_xxxx="")
              注意事項
              ・施設予約可能期間の設定無視
              制限事項
              ・繰り返し予定登録不可
              ・予定調整(仮予定)登録不可
              ・公開先(通常予定)項目の設定不可
              ・会社情報項目の設定不可
              ・参加者項目の[組織]の登録不可


    (イ) スケジュール更新
        [ファイル名]
            coopSchedule_modify.csp
        [概要]
            ガルーン２へスケジュールの更新を行う
        [機能]
            ガルーン２における任意のスケジュールに対する更新を行う(通常予定・期間予定のみ)
            参加者の指定については、ログイン名を指定する
            施設の指定については、施設コードを指定する
            正常終了した場合は,更新されたスケジュールIDを独自形式のHTMLを返す

        [仕様]
            受信データ仕様
                項目名              |説明
                --------------------+--------------------------------------------------
                "event"             |更新対象のスケジュールID
                "menu"              |タイトルメニューを指定
                "title"             |タイトルを指定
                "private"           |公開方法の指定(0:公開,1:非公開)
                                    |("BN"がない場合のみ有効,即ち通常予定の場合のみ有効)
                "memo"              |メモの指定
                "user_account[]"    |参加者の指定(配列)
                "sITEM_CODE[]"      |施設コードの指定(配列)
                                    |("BN"がない場合のみ有効,即ち通常予定の場合のみ有効)
                "end_year"          |スケジュール終了年 ※有効値 1972 ～ 2030
                "end_month"         |スケジュール終了月 ※有効値 1 ～ 12
                "end_day"           |スケジュール終了日 ※有効値 1 ～ 31
                "end_hour"          |スケジュール終了時間(時) ※有効値 "" または 0 ～ 23
                                    |("BN"がない場合のみ有効,即ち通常予定の場合のみ有効)
                "end_minute"        |スケジュール終了時間(分) ※有効値 "" または 0 ～ 59
                                    |("BN"がない場合のみ有効,即ち通常予定の場合のみ有効)
                "registrant"        |coopLoginにて使用 更新者指定(→このユーザーでLoginAs)
                                    |パラメータがない又は""(空文字)の場合ログインユーザーで更新
                "app"               |coopLoginにて使用"schedule"
            処理
              同フォルダ内のcoopLogin.csp をincludeする(ログインチェック,アプリケーションチェック)
              →ファイルがなければ "PageNotFound"エラー
              ---coopLogin.csp内処理-------------------------------------------------
                  セッションIDよりログインチェック
                  パラメータ["app"]のアプリケーションの停止チェック
                  パラメータ["registrant"]のチェック(ある場合は、registrantで再Login)
              -----------------------------------------------------------------------
              パラメータ["event"]より該当スケジュールIDのイベントオブジェクト取得 ※①
              パラメータが存在しないまたは、テーブルにIDが存在しない場合
              →エラー(GRN_SCHD_13001)

              取得したイベントオブジェクトの区分が"繰返し予定"
              →エラー(Not allow modification of the repeat schedule.)

              取得したイベントオブジェクトの区分が"仮予定"
              →エラー(Not allow modification of the temporary schedule.)

              取得したイベントオブジェクトの区分が"期間予定"の場合に以下パラメータを加工
                ・パラメータ["start_hour"]   →削除
                ・パラメータ["start_minute"] →削除
                ・パラメータ["end_hour"]     →削除
                ・パラメータ["end_minute"]   →削除
                ・パラメータ["private"]      →削除
                ・パラメータ["sItem_CODE"]   →削除
                ・パラメータ["BN"]=1         →付加

              パラメータ["user_account"]からユーザーIDの取得
                パラメータが存在しない→エラー(GRN_SCHD_13021)
                取得できない          →エラー(GRN_CMMN_00105)

              パラメータ["sITEM_CODE"]より施設IDの取得
                取得できない          →エラー(GRN_SCHD_13203)

              日付のチェック(start_xxx,end_xxxx)
               スケジュールの開始/終了について許容される日付は1972/01/01～2030/12/3
                →範囲外の場合は、エラー(FW00030)

              一般設定のチェック
               [システム管理>スケジュールの一般設定]にある項目と齟齬が出ないかチェック
                ・時刻単位のチェック
                  パラメータ["start_minite","end_minute"] を
                  項目[予定（予約）を設定する単位(分)]の設定値で割り,剰余が0でなければ
                  エラー(FW00030)
                  ※予定（予約）を設定する単位(分)が 0であることはない。
                ・非公開登録のチェック
                  項目[非公開の予定]の設定値がFALSEの場合に、
                  パラメータ["private"]==1(即ち非公開) であれば
                  エラー(Not allow registration the private Schedule.)

               [システム管理>スケジュールの施設予約の設定]にある項目と齟齬が出ないかチェック
                 ・施設予約の登録者以外の変更チェック
                   →登録者しか変更を許可していない 且つ 今回修正するのが登録者以外の場合
                     エラー(GRN_SCHD_13215)

               アクセス権のチェック(→画面と同じ)
               →取得したイベントオブジェクトついて、更新ユーザーが読込・変更の権限があるかチェック
                 読込権限ない場合…GRN_SCHD_13002
                 変更権限ない場合…GRN_SCHD_13044

              パラメータ["menu"] について、改行コード(\r\n,\n,\r)削除,101文字以降削除
              パラメータ["title"]について、改行コード(\r\n,\n,\r)削除,101文字以降削除

              Schedule_View_Utilクラス→createEvent にて、
              パラメータより新しくイベントオブジェクト作成
              →Idは※①で取得したイベントオブジェクトのIDをセットしておく

              作成したイベントオブジェクトのデータチェック
              (参加者がいるかどうか,開始時刻と終了時刻が入っていなければならないetc)

              ※①のイベントオブジェクトと比較し、以下の情報を取得
                ・参加者から外れたメンバー
                ・新規に追加された人・組織・施設

                新規に追加された人・組織・施設についてのアクセス権をチェック
                →読込権限ない場合…GRN_SCHD_13002
                →変更権限ない場合…GRN_SCHD_13044

              スケジュールアプリケーションクラス→modifyEventで、スケジュール情報を更新
              (新しく作成したイベントオブジェクトの値をセット)

              予定期間がシステム日付以降にもある場合は、通知処理を行う(登録・削除・変更分)
              通知相手は、参加者のみ(公開先の指定はできないため)

              更新されたイベントオブジェクトよりID取得
              スケジュールIDを戻り値としてHTML吐き出し

            備考
              アクセス権のチェック 
              → 画面更新時と同じ
                 (ユーザー,組織、ロール、施設に対する閲覧・変更権限なければエラー)
                 (非公開の場合は、登録者及び参加者でなければエラー)
              日付のチェック → 以下いづれかに該当する場合は、エラー
                                 開始日 > 終了日
                                 開始日 < 1972/01/01
                                 終了日 < 1972/01/01
                                 開始日 > 2030/12/31
                                 終了日 > 2030/12/31
                                 日付でない(ex 2006/12/a)
                                 カレンダーにない日付？(ex 2006/12/33)
                                 パラメータがない(start_xxxx ,end_xxxx)
              注意事項
              ・施設予約可能期間の設定無視 →チェック処理抜いてある
              制限事項
              ・繰り返し予定更新不可
              ・予定調整(仮予定)更新不可
              ・公開先(通常予定)項目の設定不可 → 更新前の項目に設定値があってもクリア(空白)される
              ・会社情報項目の設定不可         → 更新前の項目に設定値があってもクリア(空白)される
              ・参加者項目の[組織]の更新不可   → 更新前の項目に設定値があってもクリア(空白)される
              ・項目単位毎での更新不可(パラメータなければ ""(クリア)扱い,既存値セットしない)


    (ウ) スケジュール削除
        [ファイル名]
            coopSchedule_delete.csp
        [概要]
            ガルーン２へスケジュールの削除を行う
        [機能]
            ガルーン２の任意のスケジュール(通常・期間予定のみ)に対して削除を行うことができる
            削除は、全削除(一部削除,自分のみ削除は行わない)
            スケジュールの指定は、スケジュールIDを使用
            正常終了した場合は,削除されたスケジュールIDを独自形式のHTMLを返す
        [仕様]
            受信データ仕様
                項目名      |説明
                ------------+--------------------------------------------------
                event       |削除対象のスケジュールIDを指定
                registrant  |coopLoginにて使用 削除者指定(→このユーザーでLoginAs)
                            |パラメータがない又は""(空文字)の場合ログインユーザー削除
                member      |"0" (削除の対象となる参加者)
                apply       |"1" (削除する範囲)
                app         |coopLoginにて使用"schedule"

            処理
              同フォルダ内のcoopLogin.csp をincludeする(ログインチェック,アプリケーションチェック)
              →ファイルがなければ "PageNotFound"エラー
              ---coopLogin.csp内処理-------------------------------------------------
                  セッションIDよりログインチェック
                  パラメータ["app"]のアプリケーションの停止チェック
                  パラメータ["registrant"]のチェック(ある場合は、registrantで再Login)
              -----------------------------------------------------------------------
              パラメータ["event"]より該当スケジュールIDのイベントオブジェクト取得
              パラメータが存在しないまたは、テーブルにIDが存在しない場合
              →エラー(GRN_SCHD_13022)

              取得したイベントオブジェクトの区分が"繰返し予定"
              →エラー(Not allow deletion of the repeat schedule.)

              取得したイベントオブジェクトの区分が"仮予定"
              →エラー(Not allow deletion of the temporary schedule.)

              アクセス権のチェック(→画面と同じ)
              →取得したイベントオブジェクトついて、削除ユーザーが読込・削除の権限があるかチェック
                読込権限ない場合…GRN_SCHD_13002
                削除権限ない場合…GRN_SCHD_13045

              [システム管理>スケジュールの施設予約の設定]にある項目と齟齬が出ないかチェック
                ・施設予約の登録者以外の変更チェック
                  →登録者しか変更を許可していない 且つ 今回修正するのが登録者以外の場合
                    エラー(GRN_SCHD_13215)

              削除されるイベントオブジェクトよりID取得

              予定期間がシステム日付以降にもある場合は、通知処理を行う
              通知相手は、参加者のみ(公開先の指定はできないため)

              スケジュールアプリケーションクラス→deleteEventで、スケジュール情報を削除

              スケジュールIDを戻り値としてHTML吐き出し

            備考
              アクセス権のチェック 
              → 画面更新時と同じ
                 (ユーザー,組織、ロール、施設に対する閲覧・変更権限なければエラー)
                 (非公開の場合は、登録者及び参加者でなければエラー)

4.その他
[環境]
・ガルーンサーバー側
  →以下のフォルダにガルーン連携(PHP)用プログラム cspファイル配置
  [ガルーン２インストールディレクトリ]/code/doc_root/coop/coopSchedule_add.csp    (登録用)
                                                          coopSchedule_modify.csp (更新用)
                                                          coopSchedule_delete.csp (削除用)
                                                          coopSchedule_follow_add.csp    (フォロー登録用)
                                                          coopSchedule_follow_delete.csp (フォロー削除用)
                                                          coopLogin.csp  (全アプリ共通処理)

  ※ガルーン2をバージョンアップした時点でcoopディレクトリは削除されます。
    バージョンアップ作業を実施した場合には、再度、coopディレクトリを配置する必要がある


・連携用マシン(ガルーンサーバと兼ねても可)
  jre1.4以降をインストール
  [jreインストールディレクトリ]/lib/ext/にガルーン連携（JAVA）用プログラムgaroon2.jarをコピーもしく
  は、  実行時にクラスパスを通す
  サンプルプログラムについては、適当なディレクトリにあれば良し

[注意事項]
・サンプルプログラムについて
  →あくまでもガルーン連携（JAVA）用プログラムgaroon2.jarの使い方の一例としてのプログラム


以上

作成日  2007/01/15
作成者  tsukurimichi
version 1.0